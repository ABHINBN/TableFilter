{"version":3,"sources":["src-es6/date.js"],"names":[],"mappings":"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","file":"src-es6/date.js","sourcesContent":["/**\n * Date utilities\n */\n\nvar DateHelper = {\n    isValid: function(dateStr, format){\n        if(!format) {\n            format = 'DMY';\n        }\n        format = format.toUpperCase();\n        if(format.length != 3) {\n            if(format==='DDMMMYYYY'){\n                var d = this.format(dateStr, format);\n                dateStr = d.getDate() +'/'+ (d.getMonth()+1) +'/'+\n                    d.getFullYear();\n                format = 'DMY';\n            }\n        }\n        if((format.indexOf('M') === -1) || (format.indexOf('D') === -1) ||\n            (format.indexOf('Y') === -1)){\n            format = 'DMY';\n        }\n        var reg1, reg2;\n        // If the year is first\n        if(format.substring(0, 1) == 'Y') {\n              reg1 = /^\\d{2}(\\-|\\/|\\.)\\d{1,2}\\1\\d{1,2}$/;\n              reg2 = /^\\d{4}(\\-|\\/|\\.)\\d{1,2}\\1\\d{1,2}$/;\n        } else if(format.substring(1, 2) == 'Y') { // If the year is second\n              reg1 = /^\\d{1,2}(\\-|\\/|\\.)\\d{2}\\1\\d{1,2}$/;\n              reg2 = /^\\d{1,2}(\\-|\\/|\\.)\\d{4}\\1\\d{1,2}$/;\n        } else { // The year must be third\n              reg1 = /^\\d{1,2}(\\-|\\/|\\.)\\d{1,2}\\1\\d{2}$/;\n              reg2 = /^\\d{1,2}(\\-|\\/|\\.)\\d{1,2}\\1\\d{4}$/;\n        }\n        // If it doesn't conform to the right format (with either a 2 digit year or\n        // 4 digit year), fail\n        if(reg1.test(dateStr) === false && reg2.test(dateStr) === false) {\n            return false;\n        }\n        // Split into 3 parts based on what the divider was\n        var parts = dateStr.split(RegExp.$1);\n        var mm, dd, yy;\n        // Check to see if the 3 parts end up making a valid date\n        if(format.substring(0, 1) === 'M'){\n            mm = parts[0];\n        } else if(format.substring(1, 2) === 'M'){\n            mm = parts[1];\n        } else {\n            mm = parts[2];\n        }\n        if(format.substring(0, 1) === 'D'){\n            dd = parts[0];\n        } else if(format.substring(1, 2) === 'D'){\n            dd = parts[1];\n        } else {\n            dd = parts[2];\n        }\n        if(format.substring(0, 1) === 'Y'){\n            yy = parts[0];\n        } else if(format.substring(1, 2) === 'Y'){\n            yy = parts[1];\n        } else {\n            yy = parts[2];\n        }\n        if(parseInt(yy, 10) <= 50){\n            yy = (parseInt(yy, 10) + 2000).toString();\n        }\n        if(parseInt(yy, 10) <= 99){\n            yy = (parseInt(yy, 10) + 1900).toString();\n        }\n        var dt = new Date(\n            parseInt(yy, 10), parseInt(mm, 10)-1, parseInt(dd, 10),\n            0, 0, 0, 0);\n        if(parseInt(dd, 10) != dt.getDate()){\n            return false;\n        }\n        if(parseInt(mm, 10)-1 != dt.getMonth()){\n            return false;\n        }\n        return true;\n    },\n    format: function(dateStr, format){\n        if(!format){\n            format = 'DMY';\n        }\n        if(!dateStr || dateStr === ''){\n            return new Date(1001, 0, 1);\n        }\n        var oDate, parts;\n\n        function y2kDate(yr){\n            if(yr === undefined){\n                return 0;\n            }\n            if(yr.length>2){\n                return yr;\n            }\n            var y;\n            //>50 belong to 1900\n            if(yr <= 99 && yr>50){\n                y = '19' + yr;\n            }\n            //<50 belong to 2000\n            if(yr<50 || yr === '00'){\n                y = '20' + yr;\n            }\n            return y;\n        }\n\n        function mmm2mm(mmm){\n            if(mmm === undefined){\n                return 0;\n            }\n            var mondigit;\n            var MONTH_NAMES = [\n                'january','february','march','april','may','june','july',\n                'august','september','october','november','december',\n                'jan','feb','mar','apr','may','jun','jul','aug','sep','oct',\n                'nov','dec'\n            ];\n            for(var m_i=0; m_i < MONTH_NAMES.length; m_i++){\n                    var month_name = MONTH_NAMES[m_i];\n                    if (mmm.toLowerCase() === month_name){\n                        mondigit = m_i+1;\n                        break;\n                    }\n            }\n            if(mondigit > 11 || mondigit < 23){\n                mondigit = mondigit - 12;\n            }\n            if(mondigit < 1 || mondigit > 12){\n                return 0;\n            }\n            return mondigit;\n        }\n\n        switch(format.toUpperCase()){\n            case 'DDMMMYYYY':\n                parts = dateStr.replace(/[- \\/.]/g,' ').split(' ');\n                oDate = new Date(y2kDate(parts[2]),mmm2mm(parts[1])-1,parts[0]);\n            break;\n            case 'DMY':\n                parts = dateStr.replace(\n                    /^(0?[1-9]|[12][0-9]|3[01])([- \\/.])(0?[1-9]|1[012])([- \\/.])((\\d\\d)?\\d\\d)$/,'$1 $3 $5').split(' ');\n                oDate = new Date(y2kDate(parts[2]),parts[1]-1,parts[0]);\n            break;\n            case 'MDY':\n                parts = dateStr.replace(\n                    /^(0?[1-9]|1[012])([- \\/.])(0?[1-9]|[12][0-9]|3[01])([- \\/.])((\\d\\d)?\\d\\d)$/,'$1 $3 $5').split(' ');\n                oDate = new Date(y2kDate(parts[2]),parts[0]-1,parts[1]);\n            break;\n            case 'YMD':\n                parts = dateStr.replace(/^((\\d\\d)?\\d\\d)([- \\/.])(0?[1-9]|1[012])([- \\/.])(0?[1-9]|[12][0-9]|3[01])$/,'$1 $4 $6').split(' ');\n                oDate = new Date(y2kDate(parts[0]),parts[1]-1,parts[2]);\n            break;\n            default: //in case format is not correct\n                parts = dateStr.replace(/^(0?[1-9]|[12][0-9]|3[01])([- \\/.])(0?[1-9]|1[012])([- \\/.])((\\d\\d)?\\d\\d)$/,'$1 $3 $5').split(' ');\n                oDate = new Date(y2kDate(parts[2]),parts[1]-1,parts[0]);\n            break;\n        }\n        return oDate;\n    }\n};\n\nexports.DateHelper = DateHelper;\n"]}
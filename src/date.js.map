{"version":3,"sources":["src-es6/date.js"],"names":[],"mappings":"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","file":"src-es6/date.js","sourcesContent":["/**\r\n * Date utilities\r\n */\r\n\r\nvar DateHelper = {\r\n    isValid: function(dateStr, format){\r\n        if(!format) {\r\n            format = 'DMY';\r\n        }\r\n        format = format.toUpperCase();\r\n        if(format.length != 3) {\r\n            if(format==='DDMMMYYYY'){\r\n                var d = this.format(dateStr, format);\r\n                dateStr = d.getDate() +'/'+ (d.getMonth()+1) +'/'+\r\n                    d.getFullYear();\r\n                format = 'DMY';\r\n            }\r\n        }\r\n        if((format.indexOf('M') === -1) || (format.indexOf('D') === -1) ||\r\n            (format.indexOf('Y') === -1)){\r\n            format = 'DMY';\r\n        }\r\n        var reg1, reg2;\r\n        // If the year is first\r\n        if(format.substring(0, 1) == 'Y') {\r\n              reg1 = /^\\d{2}(\\-|\\/|\\.)\\d{1,2}\\1\\d{1,2}$/;\r\n              reg2 = /^\\d{4}(\\-|\\/|\\.)\\d{1,2}\\1\\d{1,2}$/;\r\n        } else if(format.substring(1, 2) == 'Y') { // If the year is second\r\n              reg1 = /^\\d{1,2}(\\-|\\/|\\.)\\d{2}\\1\\d{1,2}$/;\r\n              reg2 = /^\\d{1,2}(\\-|\\/|\\.)\\d{4}\\1\\d{1,2}$/;\r\n        } else { // The year must be third\r\n              reg1 = /^\\d{1,2}(\\-|\\/|\\.)\\d{1,2}\\1\\d{2}$/;\r\n              reg2 = /^\\d{1,2}(\\-|\\/|\\.)\\d{1,2}\\1\\d{4}$/;\r\n        }\r\n        // If it doesn't conform to the right format (with either a 2 digit year or\r\n        // 4 digit year), fail\r\n        if(reg1.test(dateStr) === false && reg2.test(dateStr) === false) {\r\n            return false;\r\n        }\r\n        // Split into 3 parts based on what the divider was\r\n        var parts = dateStr.split(RegExp.$1);\r\n        var mm, dd, yy;\r\n        // Check to see if the 3 parts end up making a valid date\r\n        if(format.substring(0, 1) === 'M'){\r\n            mm = parts[0];\r\n        } else if(format.substring(1, 2) === 'M'){\r\n            mm = parts[1];\r\n        } else {\r\n            mm = parts[2];\r\n        }\r\n        if(format.substring(0, 1) === 'D'){\r\n            dd = parts[0];\r\n        } else if(format.substring(1, 2) === 'D'){\r\n            dd = parts[1];\r\n        } else {\r\n            dd = parts[2];\r\n        }\r\n        if(format.substring(0, 1) === 'Y'){\r\n            yy = parts[0];\r\n        } else if(format.substring(1, 2) === 'Y'){\r\n            yy = parts[1];\r\n        } else {\r\n            yy = parts[2];\r\n        }\r\n        if(parseInt(yy, 10) <= 50){\r\n            yy = (parseInt(yy, 10) + 2000).toString();\r\n        }\r\n        if(parseInt(yy, 10) <= 99){\r\n            yy = (parseInt(yy, 10) + 1900).toString();\r\n        }\r\n        var dt = new Date(\r\n            parseInt(yy, 10), parseInt(mm, 10)-1, parseInt(dd, 10),\r\n            0, 0, 0, 0);\r\n        if(parseInt(dd, 10) != dt.getDate()){\r\n            return false;\r\n        }\r\n        if(parseInt(mm, 10)-1 != dt.getMonth()){\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    format: function(dateStr, format){\r\n        if(!format){\r\n            format = 'DMY';\r\n        }\r\n        if(!dateStr || dateStr === ''){\r\n            return new Date(1001, 0, 1);\r\n        }\r\n        var oDate, parts;\r\n\r\n        function y2kDate(yr){\r\n            if(yr === undefined){\r\n                return 0;\r\n            }\r\n            if(yr.length>2){\r\n                return yr;\r\n            }\r\n            var y;\r\n            //>50 belong to 1900\r\n            if(yr <= 99 && yr>50){\r\n                y = '19' + yr;\r\n            }\r\n            //<50 belong to 2000\r\n            if(yr<50 || yr === '00'){\r\n                y = '20' + yr;\r\n            }\r\n            return y;\r\n        }\r\n\r\n        function mmm2mm(mmm){\r\n            if(mmm === undefined){\r\n                return 0;\r\n            }\r\n            var mondigit;\r\n            var MONTH_NAMES = [\r\n                'january','february','march','april','may','june','july',\r\n                'august','september','october','november','december',\r\n                'jan','feb','mar','apr','may','jun','jul','aug','sep','oct',\r\n                'nov','dec'\r\n            ];\r\n            for(var m_i=0; m_i < MONTH_NAMES.length; m_i++){\r\n                    var month_name = MONTH_NAMES[m_i];\r\n                    if (mmm.toLowerCase() === month_name){\r\n                        mondigit = m_i+1;\r\n                        break;\r\n                    }\r\n            }\r\n            if(mondigit > 11 || mondigit < 23){\r\n                mondigit = mondigit - 12;\r\n            }\r\n            if(mondigit < 1 || mondigit > 12){\r\n                return 0;\r\n            }\r\n            return mondigit;\r\n        }\r\n\r\n        switch(format.toUpperCase()){\r\n            case 'DDMMMYYYY':\r\n                parts = dateStr.replace(/[- \\/.]/g,' ').split(' ');\r\n                oDate = new Date(y2kDate(parts[2]),mmm2mm(parts[1])-1,parts[0]);\r\n            break;\r\n            case 'DMY':\r\n                parts = dateStr.replace(\r\n                    /^(0?[1-9]|[12][0-9]|3[01])([- \\/.])(0?[1-9]|1[012])([- \\/.])((\\d\\d)?\\d\\d)$/,'$1 $3 $5').split(' ');\r\n                oDate = new Date(y2kDate(parts[2]),parts[1]-1,parts[0]);\r\n            break;\r\n            case 'MDY':\r\n                parts = dateStr.replace(\r\n                    /^(0?[1-9]|1[012])([- \\/.])(0?[1-9]|[12][0-9]|3[01])([- \\/.])((\\d\\d)?\\d\\d)$/,'$1 $3 $5').split(' ');\r\n                oDate = new Date(y2kDate(parts[2]),parts[0]-1,parts[1]);\r\n            break;\r\n            case 'YMD':\r\n                parts = dateStr.replace(/^((\\d\\d)?\\d\\d)([- \\/.])(0?[1-9]|1[012])([- \\/.])(0?[1-9]|[12][0-9]|3[01])$/,'$1 $4 $6').split(' ');\r\n                oDate = new Date(y2kDate(parts[0]),parts[1]-1,parts[2]);\r\n            break;\r\n            default: //in case format is not correct\r\n                parts = dateStr.replace(/^(0?[1-9]|[12][0-9]|3[01])([- \\/.])(0?[1-9]|1[012])([- \\/.])((\\d\\d)?\\d\\d)$/,'$1 $3 $5').split(' ');\r\n                oDate = new Date(y2kDate(parts[2]),parts[1]-1,parts[0]);\r\n            break;\r\n        }\r\n        return oDate;\r\n    }\r\n};\r\n\r\nexports.DateHelper = DateHelper;\r\n"]}
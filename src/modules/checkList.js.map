{"version":3,"sources":["src-es6/modules/checkList.js"],"names":[],"mappings":";;;;;;;;MAAQ,GAAG,QAAH,GAAG;MACI,KAAK,UAAZ,GAAG;MACH,GAAG,WAAH,GAAG;MACH,IAAI,SAAJ,IAAI;MACJ,KAAK,UAAL,KAAK;MAEA,SAAS;QAAT,SAAS,GAMP,SANF,SAAS,CAMN,EAAE,EAAC;;AAEX,UAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;;AAEhB,UAAI,CAAC,YAAY,GAAG,EAAE,CAAC;;AAEvB,UAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,uBAAuB,IACjD,eAAe,CAAC;;AAEpB,UAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,mBAAmB,IAAI,eAAe,CAAC;;AAElE,UAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,wBAAwB,IACnD,oBAAoB,CAAC;;AAEzB,UAAI,CAAC,wBAAwB,GAAG,CAAC,CAAC,iCAAiC,IAC/D,wBAAwB,CAAC;;AAE7B,UAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,uBAAuB,IACjD,2BAA2B,CAAC;;AAEhC,UAAI,CAAC,6BAA6B,GAC9B,CAAC,CAAC,iCAAiC,IACnC,6BAA6B,CAAC;AAClC,UAAI,CAAC,0BAA0B,GAC3B,CAAC,CAAC,6BAA6B,KAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;;AAE3D,UAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,UAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;AAEpB,UAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KAChB;;gBArCQ,SAAS;AAwClB,cAAQ;;eAAA,UAAC,GAAG,EAAC;AACT,cAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;SACjC;;AAED,iBAAW;;eAAA,UAAC,GAAG,EAAC;AACZ,cAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpC,cAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACtB;;AAQD,WAAK;;eAAA,UAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAC;AACjC,cAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACjB,YAAE,CAAC,UAAU,CACT,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EACrB,EAAE,QAAQ,EAAC,QAAQ,EAAE,WAAW,EAAC,UAAU,EAAE,KAAK,EAAC,QAAQ,EAAE,CAChE,CAAC;SACL;;AAQD,YAAM;;eAAA,UAAC,QAAQ,EAAE,UAAU,EAAQ,QAAQ,EAAM;;cAAd,QAAQ,gBAAR,QAAQ,GAAC,IAAI;cAA/B,UAAU,gBAAV,UAAU,GAAC,KAAK;AAC7B,cAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACjB,kBAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;;AAElC,cAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACf,cAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;AAElB,cAAI,QAAQ,GAAG,EAAE,CAAC,gBAAgB,GAAC,QAAQ,GAAC,GAAG,GAAC,EAAE,CAAC,EAAE,CAAC;AACtD,cAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IACjC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,EAAC;AAClC,mBAAO;WACV;;AAED,cAAI,GAAG,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;AACvE,cAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CACf,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/D,YAAE,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACtC,eAAK,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAC,GAAG,EAAK;AAAE,kBAAK,QAAQ,CAAC,GAAG,CAAC,CAAC;WAAE,CAAC,CAAC;;AAE1D,cAAI,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;AACvB,cAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,mBAAmB,IAC/B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAEvD,cAAI,SAAS,CAAC;AACd,cAAG,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,cAAc,EAAC;AACtC,qBAAS,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,qBAAS,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;WAC9C;;AAED,cAAI,YAAY,EACZ,eAAe,GAAG,EAAE,CAAC;AACzB,cAAG,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,sBAAsB,EAAC;AAC9C,wBAAY,GAAG,EAAE,CAAC;WACrB;;AAED,eAAI,IAAI,CAAC,GAAC,EAAE,CAAC,MAAM,EAAE,CAAC,GAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;;;AAGlC,gBAAG,EAAE,CAAC,cAAc,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAC;AAC/D,uBAAS;aACZ;;AAED,gBAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC1B,gBAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;;;AAG1B,gBAAG,MAAM,KAAK,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC;;AAEvC,mBAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AACvB,oBAAG,CAAC,QAAQ,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,cAAc,IACnC,CAAC,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAClD,CAAC,QAAQ,KAAG,CAAC,IAAI,EAAE,CAAC,cAAc,IAClC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAC7C,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,SAAS,KAAG,QAAQ,CAAE,IACpD,CAAC,SAAS,IAAE,QAAQ,IAChB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,EAAC;AAC1C,sBAAI,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5C,sBAAI,WAAW,GAAG,GAAG,CAAC,SAAS,CAC3B,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;;AAE7B,sBAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE,CAAC,SAAS,CAAC,EAAC;AAChD,wBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;mBAC7B;AACD,sBAAI,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;AACrC,sBAAG,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,sBAAsB,EAAC;AAC9C,wBAAG,CAAC,WAAW,EAAC;AACZ,qCAAe,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;qBACjD;AACD,wBAAG,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,EACrB,WAAW,EAAE,EAAE,CAAC,SAAS,CAAC,IAC1B,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EACnB,WAAW,EAAE,EAAE,CAAC,SAAS,CAAC,IAC9B,CAAC,EAAE,CAAC,WAAW,EAAC;AAChB,kCAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAChC;mBACJ;iBACJ;eACJ;aACJ;WACJ;;;AAGD,cAAG,IAAI,CAAC,QAAQ,EAAC;AACb,gBAAI,YAAY,GAAG,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AAClD,gBAAI,CAAC,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAC5B,gBAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;WAClC;;AAED,cAAG,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC5B,gBAAI,CAAC,EAAE,CAAC,SAAS,EAAC;AACd,kBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,kBAAG,YAAY,EAAC;AACZ,4BAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;eACtC;aACJ,MAAM;AACH,kBAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACjB,kBAAG,YAAY,EAAC;AACZ,4BAAY,CAAC,IAAI,EAAE,CAAC;eACvB;aACJ;WACJ;;AAED,cAAG,EAAE,CAAC,UAAU,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAC;AACnD,gBAAG;AACC,kBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3B,kBAAG,YAAY,EAAC;AACZ,4BAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;eACjC;AACD,kBAAG,IAAI,CAAC,QAAQ,EAAC;AACb,oBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;eACjC;aACJ,CAAC,OAAM,CAAC,EAAE;AACP,kBAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACjB,kBAAG,YAAY,EAAC;AACZ,4BAAY,CAAC,IAAI,EAAE,CAAC;eACvB;AACD,kBAAG,IAAI,CAAC,QAAQ,EAAC;AACb,oBAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;eACvB;aACJ;AAAA,WACJ;;AAED,cAAG,EAAE,CAAC,WAAW,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,EAAC;AACrD,gBAAG;AACC,kBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5B,kBAAG,YAAY,EAAC;AACZ,4BAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;eAClC;AACD,kBAAG,IAAI,CAAC,QAAQ,EAAC;AACb,oBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;eAClC;aACJ,CAAC,OAAM,CAAC,EAAE;AACP,kBAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACjB,kBAAG,YAAY,EAAC;AACZ,4BAAY,CAAC,IAAI,EAAE,CAAC;eAAE;AAC1B,kBAAG,IAAI,CAAC,QAAQ,EAAC;AACb,oBAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;eACvB;aACJ;AAAA,WACJ;;AAED,cAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;;AAE3C,cAAG,EAAE,CAAC,eAAe,EAAC;AAClB,eAAG,CAAC,SAAS,GAAG,EAAE,CAAC;WACtB;AACD,aAAG,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACpB,aAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SACnC;;AAQD,eAAS;;eAAA,UAAC,QAAQ,EAAE,EAAE,EAAE,SAAS,EAAC;;AAC9B,cAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACjB,cAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC1C,cAAI,WAAW,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,CAAC;AAClC,cAAI,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;AACzB,cAAI,MAAM,GAAG,KAAK,GACV,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AACpE,cAAG,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EAAC;AACrC,gBAAG,EAAE,CAAC,mBAAmB,IACrB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAC;AAC9C,oBAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvB,MAAM;AACH,oBAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE,CAAC,UAAU,GAAC,GAAG,CAAC,CAAC;aAChD;WACJ;;AAED,eAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AACjC,gBAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,gBAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAChD,gBAAI,EAAE,GAAG,GAAG,CAAC,eAAe,CAChB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzD,cAAE,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC;AAC1C,gBAAG,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,sBAAsB,IAC7C,KAAK,CAAC,GAAG,CAAC,YAAY,EACd,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,EAAC;AACpD,iBAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,6BAA6B,CAAC,CAAC;AACrD,gBAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB,gBAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;aAC1B,MAAK;AACF,mBAAK,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,EACvB,UAAC,GAAG,EAAK;AAAE,uBAAK,WAAW,CAAC,GAAG,CAAC,CAAC;eACpC,CAAC,CAAC;aACN;AACD,cAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;AAEnB,gBAAG,GAAG,KAAG,EAAE,EAAC;;AAER,gBAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;aAC7B;;;AAGD,gBAAG,EAAE,CAAC,kBAAkB,EAAC;AACrB,kBAAG,CAAC,EAAE,CAAC,mBAAmB,IACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,IAC7C,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAG,CAAC,CAAC,CAAC,IACpC,KAAK,CAAC,GAAG,CAAC,MAAM,EACZ,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,EAAC;AACpD,kBAAE,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AACxB,oBAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;eACrC;aACJ;WACJ;SACJ;;AAOD,gBAAU;;eAAA,UAAC,QAAQ,EAAE,EAAE,EAAC;;AACpB,cAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACjB,cAAI,KAAK,GAAG,CAAC,CAAC;AACd,cAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CACjB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;AAC7D,aAAG,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC;AAC3C,YAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;AAEpB,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,UAAC,GAAG,EAAK;AACnC,mBAAK,WAAW,CAAC,GAAG,CAAC,CAAC;WACzB,CAAC,CAAC;;AAEH,cAAG,CAAC,IAAI,CAAC,0BAA0B,EAAC;AAChC,eAAG,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;WAC9B;;AAED,cAAG,EAAE,CAAC,iBAAiB,EAAC;AACpB,gBAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CACrB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,IAAI,EAAE,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;AAC/D,eAAG,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC;AAC3C,cAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACpB,iBAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,UAAC,GAAG,EAAK;AACnC,qBAAK,WAAW,CAAC,GAAG,CAAC,CAAC;aACzB,CAAC,CAAC;AACH,iBAAK,EAAE,CAAC;WACX;;AAED,cAAG,EAAE,CAAC,oBAAoB,EAAC;AACvB,gBAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CACzB,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,IAAI,EACxB,EAAE,CAAC,UAAU,EACb,EAAE,CAAC,YAAY,CAClB,CAAC;AACF,eAAG,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC;AAC3C,cAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACpB,iBAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,UAAC,GAAG,EAAK;AACnC,qBAAK,WAAW,CAAC,GAAG,CAAC,CAAC;aACzB,CAAC,CAAC;AACH,iBAAK,EAAE,CAAC;WACX;AACD,iBAAO,KAAK,CAAC;SAChB;;AAMD,wBAAkB;;eAAA,UAAC,CAAC,EAAC;AACjB,cAAG,CAAC,CAAC,EAAC;AACF,mBAAO;WACV;AACD,cAAI,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACjB,cAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC;AACvB,cAAI,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAChD,cAAI,SAAS,GAAG,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC;AACrC,cAAI,CAAC,GAAG,CAAC,CAAC;;;AAGV,iBAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAG,SAAS,EAAC;AACpC,aAAC,GAAG,CAAC,CAAC,UAAU,CAAC;WACpB;;AAED,cAAI,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAChC,cAAI,QAAQ,GAAG,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AAC1C,cAAI,QAAQ,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACvC,cAAI,UAAU,GAAG,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;;AAE3C,cAAG,CAAC,CAAC,OAAO,EAAC;;AAET,gBAAG,QAAQ,KAAG,EAAE,EAAC;AACb,kBAAG,CAAC,UAAU,IAAI,UAAU,KAAG,EAAE,CAAC,EAAC;;AAE/B,oBAAI,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;;AAE9C,qBAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;;AAEhC,sBAAI,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,GAAG,GAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,sBAAG,IAAI,EAAC;AACJ,wBAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,uBAAG,CAAC,WAAW,CACX,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EACzB,IAAI,CAAC,wBAAwB,CAChC,CAAC;mBACL;iBACJ;eACJ;AACD,eAAC,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AAC5B,eAAC,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;aAEjC,MAAM;AACH,sBAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;AACtC,sBAAQ,GAAG,GAAG,CAAC,IAAI,CACf,QAAQ,GAAC,GAAG,GAAC,QAAQ,GAAC,GAAG,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC;AAC7C,sBAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC;AAChD,eAAC,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAE,CAAC;AACnC,eAAC,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;;AAEpC,kBAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC,EAAC;AAChC,mBAAG,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAC,IAAI,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;eACpD;aACJ;;AAED,gBAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,OAAO,EAAC;AAClC,iBAAG,CAAC,WAAW,CACX,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;AACpD,iBAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;aACnD;WACJ,MAAM;;AACH,gBAAG,QAAQ,KAAG,EAAE,EAAC;AACb,kBAAI,YAAY,GAAG,IAAI,MAAM,CACrB,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAC,GAAG,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;AAChD,sBAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC;AAC7C,eAAC,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAE5C,kBAAI,YAAY,GAAG,IAAI,MAAM,CACrB,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AAC7C,wBAAU,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AAClD,eAAC,CAAC,YAAY,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aACzC;AACD,gBAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAG,OAAO,EAAC;AAChC,iBAAG,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;aACtD;WACJ;SACJ;;;;WAxZQ,SAAS;;;UAAT,SAAS,GAAT,SAAS","file":"src-es6/modules/checkList.js","sourcesContent":["import {Dom} from '../dom';\r\nimport {Arr as array} from '../array';\r\nimport {Str} from '../string';\r\nimport {Sort} from '../sort';\r\nimport {Event} from '../event';\r\n\r\nexport class CheckList{\r\n\r\n    /**\r\n     * Checklist UI component\r\n     * @param {Object} tf TableFilter instance\r\n     */\r\n    constructor(tf){\r\n        // Configuration object\r\n        var f = tf.fObj;\r\n\r\n        this.checkListDiv = []; //checklist container div\r\n        //defines css class for div containing checklist filter\r\n        this.checkListDivCssClass = f.div_checklist_css_class ||\r\n            'div_checklist';\r\n        //defines css class for checklist filters\r\n        this.checkListCssClass = f.checklist_css_class || 'flt_checklist';\r\n        //defines css class for checklist item (li)\r\n        this.checkListItemCssClass = f.checklist_item_css_class ||\r\n            'flt_checklist_item';\r\n        //defines css class for selected checklist item (li)\r\n        this.checkListSlcItemCssClass = f.checklist_selected_item_css_class ||\r\n            'flt_checklist_slc_item';\r\n        //Load on demand text\r\n        this.activateCheckListTxt = f.activate_checklist_text ||\r\n            'Click to load filter data';\r\n        //defines css class for checklist filters\r\n        this.checkListItemDisabledCssClass =\r\n            f.checklist_item_disabled_css_class ||\r\n            'flt_checklist_item_disabled';\r\n        this.enableCheckListResetFilter =\r\n            f.enable_checklist_reset_filter===false ? false : true;\r\n\r\n        this.isCustom = null;\r\n        this.opts = null;\r\n        this.optsTxt = null;\r\n\r\n        this.tf = tf;\r\n    }\r\n\r\n    // TODO: add _OnSlcChange event here\r\n    onChange(evt){\r\n        this.tf.Evt._OnSlcChange(evt);\r\n    }\r\n\r\n    optionClick(evt){\r\n        this.setCheckListValues(evt.target);\r\n        this.onChange(evt);\r\n    }\r\n\r\n    /**\r\n     * Build checklist UI asynchronously\r\n     * @param  {Number}  colIndex   Column index\r\n     * @param  {Boolean} isExternal Render in external container\r\n     * @param  {String}  extFltId   External container id\r\n     */\r\n    build(colIndex, isExternal, extFltId){\r\n        var tf = this.tf;\r\n        tf.EvtManager(\r\n            tf.Evt.name.checklist,\r\n            { slcIndex:colIndex, slcExternal:isExternal, slcId:extFltId }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Build checklist UI\r\n     * @param  {Number}  colIndex   Column index\r\n     * @param  {Boolean} isExternal Render in external container\r\n     * @param  {String}  extFltId   External container id\r\n     */\r\n    _build(colIndex, isExternal=false, extFltId=null){\r\n        var tf = this.tf;\r\n        colIndex = parseInt(colIndex, 10);\r\n\r\n        this.opts = [];\r\n        this.optsTxt = [];\r\n\r\n        var divFltId = tf.prfxCheckListDiv+colIndex+'_'+tf.id;\r\n        if((!Dom.id(divFltId) && !isExternal) ||\r\n            (!Dom.id(extFltId) && isExternal)){\r\n            return;\r\n        }\r\n\r\n        var flt = !isExternal ? this.checkListDiv[colIndex] : Dom.id(extFltId);\r\n        var ul = Dom.create(\r\n            'ul', ['id', tf.fltIds[colIndex]], ['colIndex', colIndex]);\r\n        ul.className = this.checkListCssClass;\r\n        Event.add(ul, 'change', (evt) => { this.onChange(evt); });\r\n\r\n        var rows = tf.tbl.rows;\r\n        this.isCustom = (tf.hasCustomSlcOptions &&\r\n                array.has(tf.customSlcOptions.cols, colIndex));\r\n\r\n        var activeFlt;\r\n        if(tf.refreshFilters && tf.activeFilterId){\r\n            activeFlt = tf.activeFilterId.split('_')[0];\r\n            activeFlt = activeFlt.split(tf.prfxFlt)[1];\r\n        }\r\n\r\n        var excludedOpts,\r\n            filteredDataCol = [];\r\n        if(tf.refreshFilters && tf.disableExcludedOptions){\r\n            excludedOpts = [];\r\n        }\r\n\r\n        for(var k=tf.refRow; k<tf.nbRows; k++){\r\n            // always visible rows don't need to appear on selects as always\r\n            // valid\r\n            if(tf.hasVisibleRows && array.has(tf.visibleRows, k) && !tf.paging){\r\n                continue;\r\n            }\r\n\r\n            var cells = rows[k].cells;\r\n            var ncells = cells.length;\r\n\r\n            // checks if row has exact cell #\r\n            if(ncells === tf.nbCells && !this.isCustom){\r\n                // this loop retrieves cell data\r\n                for(var j=0; j<ncells; j++){\r\n                    if((colIndex===j && (!tf.refreshFilters ||\r\n                        (tf.refreshFilters && tf.disableExcludedOptions)))||\r\n                        (colIndex===j && tf.refreshFilters &&\r\n                        ((rows[k].style.display === '' && !tf.paging) ||\r\n                        (tf.paging && ((!activeFlt || activeFlt===colIndex )||\r\n                        (activeFlt!=colIndex &&\r\n                            array.has(tf.validRowsIndex, k))) )))){\r\n                        var cell_data = tf.GetCellData(j, cells[j]);\r\n                        //Vary Peter's patch\r\n                        var cell_string = Str.matchCase(\r\n                            cell_data, tf.matchCase);\r\n                        // checks if celldata is already in array\r\n                        if(!array.has(this.opts, cell_string, tf.matchCase)){\r\n                            this.opts.push(cell_data);\r\n                        }\r\n                        var filteredCol = filteredDataCol[j];\r\n                        if(tf.refreshFilters && tf.disableExcludedOptions){\r\n                            if(!filteredCol){\r\n                                filteredDataCol[j] = tf.GetFilteredDataCol(j);\r\n                            }\r\n                            if(!array.has(filteredCol,\r\n                                cell_string, tf.matchCase) &&\r\n                                !array.has(excludedOpts,\r\n                                    cell_string, tf.matchCase) &&\r\n                                !tf.isFirstLoad){\r\n                                excludedOpts.push(cell_data);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //Retrieves custom values\r\n        if(this.isCustom){\r\n            var customValues = tf.__getCustomValues(colIndex);\r\n            this.opts = customValues[0];\r\n            this.optsTxt = customValues[1];\r\n        }\r\n\r\n        if(tf.sortSlc && !this.isCustom){\r\n            if (!tf.matchCase){\r\n                this.opts.sort(Sort.ignoreCase);\r\n                if(excludedOpts){\r\n                    excludedOpts.sort(Sort.ignoreCase);\r\n                }\r\n            } else {\r\n                this.opts.sort();\r\n                if(excludedOpts){\r\n                    excludedOpts.sort();\r\n                }\r\n            }\r\n        }\r\n        //asc sort\r\n        if(tf.sortNumAsc && array.has(tf.sortNumAsc, colIndex)){\r\n            try{\r\n                this.opts.sort(numSortAsc);\r\n                if(excludedOpts){\r\n                    excludedOpts.sort(numSortAsc);\r\n                }\r\n                if(this.isCustom){\r\n                    this.optsTxt.sort(numSortAsc);\r\n                }\r\n            } catch(e) {\r\n                this.opts.sort();\r\n                if(excludedOpts){\r\n                    excludedOpts.sort();\r\n                }\r\n                if(this.isCustom){\r\n                    this.optsTxt.sort();\r\n                }\r\n            }//in case there are alphanumeric values\r\n        }\r\n        //desc sort\r\n        if(tf.sortNumDesc && array.has(tf.sortNumDesc, colIndex)){\r\n            try{\r\n                this.opts.sort(numSortDesc);\r\n                if(excludedOpts){\r\n                    excludedOpts.sort(numSortDesc);\r\n                }\r\n                if(this.isCustom){\r\n                    this.optsTxt.sort(numSortDesc);\r\n                }\r\n            } catch(e) {\r\n                this.opts.sort();\r\n                if(excludedOpts){\r\n                    excludedOpts.sort(); }\r\n                if(this.isCustom){\r\n                    this.optsTxt.sort();\r\n                }\r\n            }//in case there are alphanumeric values\r\n        }\r\n\r\n        this.addChecks(colIndex, ul, tf.separator);\r\n\r\n        if(tf.fillSlcOnDemand){\r\n            flt.innerHTML = '';\r\n        }\r\n        flt.appendChild(ul);\r\n        flt.setAttribute('filled', '1');\r\n    }\r\n\r\n    /**\r\n     * Add checklist options\r\n     * @param {Number} colIndex  Column index\r\n     * @param {Object} ul        Ul element\r\n     * @param {String} separator Data separator\r\n     */\r\n    addChecks(colIndex, ul, separator){\r\n        var tf = this.tf;\r\n        var chkCt = this.addTChecks(colIndex, ul);\r\n        var flts_values = [], fltArr = []; //remember grid values\r\n        var store = tf.Cpt.store;\r\n        var tmpVal = store ?\r\n                store.getFilterValues(tf.fltsValuesCookie)[colIndex] : null;\r\n        if(tmpVal && Str.trim(tmpVal).length > 0){\r\n            if(tf.hasCustomSlcOptions &&\r\n                array.has(tf.customSlcOptions.cols, colIndex)){\r\n                fltArr.push(tmpVal);\r\n            } else {\r\n                fltArr = tmpVal.split(' '+tf.orOperator+' ');\r\n            }\r\n        }\r\n\r\n        for(var y=0; y<this.opts.length; y++){\r\n            var val = this.opts[y]; //item value\r\n            var lbl = this.isCustom ? this.optsTxt[y] : val; //item text\r\n            var li = Dom.createCheckItem(\r\n                        tf.fltIds[colIndex]+'_'+(y+chkCt), val, lbl);\r\n            li.className = this.checkListItemCssClass;\r\n            if(tf.refreshFilters && tf.disableExcludedOptions &&\r\n                array.has(excludedOpts,\r\n                        Str.matchCase(val, tf.matchCase), tf.matchCase)){\r\n                    Dom.addClass(li, this.checkListItemDisabledCssClass);\r\n                    li.check.disabled = true;\r\n                    li.disabled = true;\r\n            } else{\r\n                Event.add(li.check, 'click',\r\n                    (evt) => { this.optionClick(evt);\r\n                });\r\n            }\r\n            ul.appendChild(li);\r\n\r\n            if(val===''){\r\n                //item is hidden\r\n                li.style.display = 'none';\r\n            }\r\n\r\n            /*** remember grid values ***/\r\n            if(tf.rememberGridValues){\r\n                if((tf.hasCustomSlcOptions &&\r\n                    array.has(tf.customSlcOptions.cols, colIndex) &&\r\n                    fltArr.toString().indexOf(val)!= -1) ||\r\n                    array.has(fltArr,\r\n                        Str.matchCase(val, tf.matchCase), tf.matchCase)){\r\n                    li.check.checked = true;\r\n                    this.setCheckListValues(li.check);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add checklist header option\r\n     * @param {Number} colIndex Column index\r\n     * @param {Object} ul       Ul element\r\n     */\r\n    addTChecks(colIndex, ul){\r\n        var tf = this.tf;\r\n        var chkCt = 1;\r\n        var li0 = Dom.createCheckItem(\r\n                    tf.fltIds[colIndex]+'_0', '', tf.displayAllText);\r\n        li0.className = this.checkListItemCssClass;\r\n        ul.appendChild(li0);\r\n\r\n        Event.add(li0.check, 'click', (evt) => {\r\n            this.optionClick(evt);\r\n        });\r\n\r\n        if(!this.enableCheckListResetFilter){\r\n            li0.style.display = 'none';\r\n        }\r\n\r\n        if(tf.enableEmptyOption){\r\n            var li1 = Dom.createCheckItem(\r\n                    tf.fltIds[colIndex]+'_1', tf.emOperator, tf.emptyText);\r\n            li1.className = this.checkListItemCssClass;\r\n            ul.appendChild(li1);\r\n            Event.add(li1.check, 'click', (evt) => {\r\n                this.optionClick(evt);\r\n            });\r\n            chkCt++;\r\n        }\r\n\r\n        if(tf.enableNonEmptyOption){\r\n            var li2 = Dom.createCheckItem(\r\n                tf.fltIds[colIndex]+'_2',\r\n                tf.nmOperator,\r\n                tf.nonEmptyText\r\n            );\r\n            li2.className = this.checkListItemCssClass;\r\n            ul.appendChild(li2);\r\n            Event.add(li2.check, 'click', (evt) => {\r\n                this.optionClick(evt);\r\n            });\r\n            chkCt++;\r\n        }\r\n        return chkCt;\r\n    }\r\n\r\n    /**\r\n     * Store checked options in DOM element attribute\r\n     * @param {Object} o checklist option DOM element\r\n     */\r\n    setCheckListValues(o){\r\n        if(!o){\r\n            return;\r\n        }\r\n        var tf = this.tf;\r\n        var chkValue = o.value; //checked item value\r\n        var chkIndex = parseInt(o.id.split('_')[2], 10);\r\n        var filterTag = 'ul', itemTag = 'li';\r\n        var n = o;\r\n\r\n        //ul tag search\r\n        while(Str.lower(n.nodeName)!==filterTag){\r\n            n = n.parentNode;\r\n        }\r\n\r\n        var li = n.childNodes[chkIndex];\r\n        var colIndex = n.getAttribute('colIndex');\r\n        var fltValue = n.getAttribute('value'); //filter value (ul tag)\r\n        var fltIndexes = n.getAttribute('indexes'); //selected items (ul tag)\r\n\r\n        if(o.checked){\r\n            //show all item\r\n            if(chkValue===''){\r\n                if((fltIndexes && fltIndexes!=='')){\r\n                    //items indexes\r\n                    var indSplit = fltIndexes.split(tf.separator);\r\n                    //checked items loop\r\n                    for(var u=0; u<indSplit.length; u++){\r\n                        //checked item\r\n                        var cChk = Dom.id(tf.fltIds[colIndex]+'_'+indSplit[u]);\r\n                        if(cChk){\r\n                            cChk.checked = false;\r\n                            Dom.removeClass(\r\n                                n.childNodes[indSplit[u]],\r\n                                this.checkListSlcItemCssClass\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n                n.setAttribute('value', '');\r\n                n.setAttribute('indexes', '');\r\n\r\n            } else {\r\n                fltValue = (fltValue) ? fltValue : '';\r\n                chkValue = Str.trim(\r\n                    fltValue+' '+chkValue+' '+tf.orOperator);\r\n                chkIndex = fltIndexes + chkIndex + tf.separator;\r\n                n.setAttribute('value', chkValue );\r\n                n.setAttribute('indexes', chkIndex);\r\n                //1st option unchecked\r\n                if(Dom.id(tf.fltIds[colIndex]+'_0')){\r\n                    Dom.id(tf.fltIds[colIndex]+'_0').checked = false;\r\n                }\r\n            }\r\n\r\n            if(Str.lower(li.nodeName) === itemTag){\r\n                Dom.removeClass(\r\n                    n.childNodes[0], this.checkListSlcItemCssClass);\r\n                Dom.addClass(li, this.checkListSlcItemCssClass);\r\n            }\r\n        } else { //removes values and indexes\r\n            if(chkValue!==''){\r\n                var replaceValue = new RegExp(\r\n                        Str.rgxEsc(chkValue+' '+tf.orOperator));\r\n                fltValue = fltValue.replace(replaceValue,'');\r\n                n.setAttribute('value', Str.trim(fltValue));\r\n\r\n                var replaceIndex = new RegExp(\r\n                        Str.rgxEsc(chkIndex + tf.separator));\r\n                fltIndexes = fltIndexes.replace(replaceIndex, '');\r\n                n.setAttribute('indexes', fltIndexes);\r\n            }\r\n            if(Str.lower(li.nodeName)===itemTag){\r\n                Dom.removeClass(li, this.checkListSlcItemCssClass);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}
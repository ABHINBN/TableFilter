{"version":3,"sources":["src-es6/modules/rowsCounter.js"],"names":[],"mappings":"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","file":"src-es6/modules/rowsCounter.js","sourcesContent":["import {Dom} from '../dom';\nimport {Types} from '../types';\nimport {Helpers} from '../helpers';\n\nexport class RowsCounter{\n\n    /**\n     * Rows counter\n     * @param {Object} tf TableFilter instance\n     */\n    constructor(tf){\n        // TableFilter configuration\n        var f = tf.fObj;\n\n        //id of custom container element\n        this.rowsCounterTgtId = f.rows_counter_target_id || null;\n        //element containing tot nb rows\n        this.rowsCounterDiv = null;\n        //element containing tot nb rows label\n        this.rowsCounterSpan = null;\n        //defines rows counter text\n        this.rowsCounterText = f.rows_counter_text || 'Rows: ';\n        this.fromToTextSeparator = f.from_to_text_separator || '-';\n        this.overText = f.over_text || ' / ';\n        //defines css class rows counter\n        this.totRowsCssClass = f.tot_rows_css_class || 'tot';\n        //callback raised before counter is refreshed\n        this.onBeforeRefreshCounter = Types.isFn(f.on_before_refresh_counter) ?\n            f.on_before_refresh_counter : null;\n        //callback raised after counter is refreshed\n        this.onAfterRefreshCounter = Types.isFn(f.on_after_refresh_counter) ?\n            f.on_after_refresh_counter : null;\n\n        this.tf = tf;\n    }\n\n    init(){\n        var tf = this.tf;\n\n        if((!tf.hasGrid && !tf.isFirstLoad) || this.rowsCounterSpan){\n            return;\n        }\n\n        //rows counter container\n        var countDiv = Dom.create('div', ['id', tf.prfxCounter+tf.id]);\n        countDiv.className = this.totRowsCssClass;\n        //rows counter label\n        var countSpan = Dom.create('span', ['id', tf.prfxTotRows+tf.id]);\n        var countText = Dom.create('span', ['id', tf.prfxTotRowsTxt+tf.id]);\n        countText.appendChild(Dom.text(this.rowsCounterText));\n\n        // counter is added to defined element\n        if(!this.rowsCounterTgtId){\n            tf.SetTopDiv();\n        }\n        var targetEl = !this.rowsCounterTgtId ?\n                tf.lDiv : Dom.id( this.rowsCounterTgtId );\n\n        //IE only: clears all for sure\n        if(this.rowsCounterDiv && Helpers.isIE()){\n            this.rowsCounterDiv.outerHTML = '';\n        }\n        //default container: 'lDiv'\n        if(!this.rowsCounterTgtId){\n            countDiv.appendChild(countText);\n            countDiv.appendChild(countSpan);\n            targetEl.appendChild(countDiv);\n        }\n        else{\n            //custom container, no need to append statusDiv\n            targetEl.appendChild(countText);\n            targetEl.appendChild(countSpan);\n        }\n        this.rowsCounterDiv = countDiv;\n        this.rowsCounterSpan = countSpan;\n\n        this.refresh();\n    }\n\n    refresh(p){\n        if(!this.rowsCounterSpan){\n            return;\n        }\n\n        var tf = this.tf;\n\n        if(this.onBeforeRefreshCounter){\n            this.onBeforeRefreshCounter.call(null, tf, this.rowsCounterSpan);\n        }\n\n        var totTxt;\n        if(!tf.paging){\n            if(p && p !== ''){\n                totTxt = p;\n            } else{\n                totTxt = tf.nbFilterableRows - tf.nbHiddenRows -\n                    (tf.hasVisibleRows ? tf.visibleRows.length : 0);\n            }\n        } else {\n            //paging start row\n            var paging_start_row = parseInt(tf.startPagingRow, 10) +\n                    ((tf.nbVisibleRows>0) ? 1 : 0);\n            var paging_end_row = (paging_start_row+tf.pagingLength)-1 <=\n                    tf.nbVisibleRows ? paging_start_row+tf.pagingLength-1 :\n                    tf.nbVisibleRows;\n            totTxt = paging_start_row + this.fromToTextSeparator +\n                paging_end_row + this.overText + tf.nbVisibleRows;\n        }\n        this.rowsCounterSpan.innerHTML = totTxt;\n        if(this.onAfterRefreshCounter){\n            this.onAfterRefreshCounter.call(\n                null, tf, this.rowsCounterSpan, totTxt);\n        }\n    }\n\n    destroy(){\n        var tf = this.tf;\n        if(!tf.hasGrid){\n            return;\n        }\n        if(!this.rowsCounterSpan){\n            return;\n        }\n\n        if(!this.rowsCounterTgtId && this.rowsCounterDiv){\n            //IE only: clears all for sure\n            if(Helpers.isIE()){\n                this.rowsCounterDiv.outerHTML = '';\n            } else {\n                this.rowsCounterDiv.parentNode.removeChild(this.rowsCounterDiv);\n            }\n        } else {\n            Dom.id( this.rowsCounterTgtId ).innerHTML = '';\n        }\n        this.rowsCounterSpan = null;\n        this.rowsCounterDiv = null;\n    }\n}"]}
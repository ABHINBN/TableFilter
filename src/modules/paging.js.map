{"version":3,"sources":["src-es6/modules/paging.js"],"names":[],"mappings":"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","file":"src-es6/modules/paging.js","sourcesContent":["import {Dom} from '../dom';\r\nimport {Types} from '../types';\r\nimport {Str} from '../string';\r\nimport {Helpers} from '../helpers';\r\nimport {Event} from '../event';\r\n\r\nexport class Paging{\r\n\r\n    /**\r\n     * Pagination component\r\n     * @param {Object} tf TableFilter instance\r\n     */\r\n    constructor(tf){\r\n        // Configuration object\r\n        var f = tf.fObj;\r\n\r\n        //css class for paging buttons (previous,next,etc.)\r\n        this.btnPageCssClass = f.paging_btn_css_class || 'pgInp';\r\n        //stores paging select element\r\n        this.pagingSlc = null;\r\n        //results per page select element\r\n        this.resultsPerPageSlc = null;\r\n        //id of container element\r\n        this.pagingTgtId = f.paging_target_id || null;\r\n        //defines table paging length\r\n        this.pagingLength = !isNaN(f.paging_length) ? f.paging_length : 10;\r\n        //id of container element\r\n        this.resultsPerPageTgtId = f.results_per_page_target_id || null;\r\n        //css class for paging select element\r\n        this.pgSlcCssClass = f.paging_slc_css_class || 'pgSlc';\r\n        //css class for paging input element\r\n        this.pgInpCssClass = f.paging_inp_css_class || 'pgNbInp';\r\n        //stores results per page text and values\r\n        this.resultsPerPage = f.results_per_page || null;\r\n        //enables/disables results per page drop-down\r\n        this.hasResultsPerPage = Types.isArray(this.resultsPerPage);\r\n        //defines css class for results per page select\r\n        this.resultsSlcCssClass = f.results_slc_css_class || 'rspg';\r\n        //css class for label preceding results per page select\r\n        this.resultsSpanCssClass = f.results_span_css_class || 'rspgSpan';\r\n        //1st row index of current page\r\n        this.startPagingRow = 0;\r\n        //total nb of pages\r\n        this.nbPages = 0;\r\n        //current page nb\r\n        this.currentPageNb = 1;\r\n        //defines next page button text\r\n        this.btnNextPageText = f.btn_next_page_text || '>';\r\n        //defines previous page button text\r\n        this.btnPrevPageText = f.btn_prev_page_text || '<';\r\n        //defines last page button text\r\n        this.btnLastPageText = f.btn_last_page_text || '>|';\r\n        //defines first page button text\r\n        this.btnFirstPageText = f.btn_first_page_text || '|<';\r\n        //defines next page button html\r\n        this.btnNextPageHtml = f.btn_next_page_html ||\r\n            (!tf.enableIcons ? null :\r\n            '<input type=\"button\" value=\"\" class=\"'+this.btnPageCssClass +\r\n            ' nextPage\" title=\"Next page\" />');\r\n        //defines previous page button html\r\n        this.btnPrevPageHtml = f.btn_prev_page_html ||\r\n            (!tf.enableIcons ? null :\r\n            '<input type=\"button\" value=\"\" class=\"'+this.btnPageCssClass +\r\n            ' previousPage\" title=\"Previous page\" />');\r\n        //defines last page button html\r\n        this.btnFirstPageHtml = f.btn_first_page_html ||\r\n            (!tf.enableIcons ? null :\r\n            '<input type=\"button\" value=\"\" class=\"'+this.btnPageCssClass +\r\n            ' firstPage\" title=\"First page\" />');\r\n        //defines previous page button html\r\n        this.btnLastPageHtml = f.btn_last_page_html ||\r\n            (!tf.enableIcons ? null :\r\n            '<input type=\"button\" value=\"\" class=\"'+this.btnPageCssClass +\r\n            ' lastPage\" title=\"Last page\" />');\r\n        //defines text preceeding page selector drop-down\r\n        this.pageText = f.page_text || ' Page ';\r\n        //defines text after page selector drop-down\r\n        this.ofText = f.of_text || ' of ';\r\n        //css class for span containing tot nb of pages\r\n        this.nbPgSpanCssClass = f.nb_pages_css_class || 'nbpg';\r\n        //enables/disables paging buttons\r\n        this.hasPagingBtns = f.paging_btns===false ? false : true;\r\n        //defines previous page button html\r\n        this.pageSelectorType = f.page_selector_type || tf.fltTypeSlc;\r\n        //calls function before page is changed\r\n        this.onBeforeChangePage = Types.isFn(f.on_before_change_page) ?\r\n            f.on_before_change_page : null;\r\n        //calls function before page is changed\r\n        this.onAfterChangePage = Types.isFn(f.on_after_change_page) ?\r\n            f.on_after_change_page : null;\r\n        var start_row = this.refRow;\r\n        var nrows = this.nbRows;\r\n        //calculates page nb\r\n        this.nbPages = Math.ceil((nrows-start_row)/this.pagingLength);\r\n\r\n        //Paging elements events\r\n        var o = this;\r\n        // Paging DOM events\r\n        this.evt = {\r\n            slcIndex(){\r\n                return (o.pageSelectorType===tf.fltTypeSlc) ?\r\n                    o.pagingSlc.options.selectedIndex :\r\n                    parseInt(o.pagingSlc.value, 10)-1;\r\n            },\r\n            nbOpts(){\r\n                return (o.pageSelectorType===tf.fltTypeSlc) ?\r\n                    parseInt(o.pagingSlc.options.length, 10)-1 :\r\n                    (o.nbPages-1);\r\n            },\r\n            next(){\r\n                var nextIndex = o.evt.slcIndex() < o.evt.nbOpts() ?\r\n                    o.evt.slcIndex()+1 : 0;\r\n                o.changePage(nextIndex);\r\n            },\r\n            prev(){\r\n                var prevIndex = o.evt.slcIndex()>0 ?\r\n                    o.evt.slcIndex()-1 : o.evt.nbOpts();\r\n                o.changePage(prevIndex);\r\n            },\r\n            last(){\r\n                o.changePage(o.evt.nbOpts());\r\n            },\r\n            first(){\r\n                o.changePage(0);\r\n            },\r\n            _detectKey(e){\r\n                var key = tf.Evt.getKeyCode(e);\r\n                if(key===13){\r\n                    if(tf.sorted){\r\n                        tf.Filter();\r\n                        o.changePage(o.evt.slcIndex());\r\n                    } else{\r\n                        o.changePage();\r\n                    }\r\n                    this.blur();\r\n                }\r\n            },\r\n            slcPagesChange: null,\r\n            nextEvt: null,\r\n            prevEvt: null,\r\n            lastEvt: null,\r\n            firstEvt: null\r\n        };\r\n\r\n        this.tf = tf;\r\n    }\r\n\r\n    /**\r\n     * Initialize DOM elements\r\n     */\r\n    init(){\r\n        var slcPages;\r\n        var tf = this.tf;\r\n        var evt = this.evt;\r\n\r\n        // Check resultsPerPage is in expected format and initialise the\r\n        // results per page component\r\n        if(this.hasResultsPerPage){\r\n            if(this.resultsPerPage.length<2){\r\n                this.hasResultsPerPage = false;\r\n            } else {\r\n                this.pagingLength = this.resultsPerPage[1][0];\r\n                this.setResultsPerPage();\r\n            }\r\n        }\r\n\r\n        /*====================================================\r\n            - onchange event for paging select\r\n        =====================================================*/\r\n        evt.slcPagesChange = (event) => {\r\n            // if(evt._Paging._OnSlcPagesChangeEvt){\r\n            //     evt._Paging._OnSlcPagesChangeEvt();\r\n            // }\r\n            this.changePage();\r\n            event.target.blur();\r\n        };\r\n\r\n        // Paging drop-down list selector\r\n        if(this.pageSelectorType === tf.fltTypeSlc){\r\n            slcPages = Dom.create(\r\n                tf.fltTypeSlc, ['id', tf.prfxSlcPages+tf.id]);\r\n            slcPages.className = this.pgSlcCssClass;\r\n            Event.add(slcPages, 'change', evt.slcPagesChange);\r\n        }\r\n\r\n        // Paging input selector\r\n        if(this.pageSelectorType === tf.fltTypeInp){\r\n            slcPages = Dom.create(\r\n                tf.fltTypeInp,\r\n                ['id', tf.prfxSlcPages+tf.id],\r\n                ['value', this.currentPageNb]\r\n            );\r\n            slcPages.className = this.pgInpCssClass;\r\n            Event.add(slcPages, 'keypress', evt._detectKey);\r\n        }\r\n\r\n        // btns containers\r\n        var btnNextSpan = Dom.create(\r\n            'span',['id', tf.prfxBtnNextSpan+tf.id]);\r\n        var btnPrevSpan = Dom.create(\r\n            'span',['id', tf.prfxBtnPrevSpan+tf.id]);\r\n        var btnLastSpan = Dom.create(\r\n            'span',['id', tf.prfxBtnLastSpan+tf.id]);\r\n        var btnFirstSpan = Dom.create(\r\n            'span',['id', tf.prfxBtnFirstSpan+tf.id]);\r\n\r\n        if(this.hasPagingBtns){\r\n            // Next button\r\n            if(!this.btnNextPageHtml){\r\n                var btn_next = Dom.create(\r\n                    tf.fltTypeInp,\r\n                    ['id', tf.prfxBtnNext+tf.id],\r\n                    ['type', 'button'],\r\n                    ['value', this.btnNextPageText],\r\n                    ['title', 'Next']\r\n                );\r\n                btn_next.className = this.btnPageCssClass;\r\n                Event.add(btn_next, 'click', evt.next);\r\n                btnNextSpan.appendChild(btn_next);\r\n            } else {\r\n                btnNextSpan.innerHTML = this.btnNextPageHtml;\r\n                Event.add(btnNextSpan, 'click', evt.next);\r\n            }\r\n            // Previous button\r\n            if(!this.btnPrevPageHtml){\r\n                var btn_prev = Dom.create(\r\n                    tf.fltTypeInp,\r\n                    ['id',tf.prfxBtnPrev+tf.id],\r\n                    ['type','button'],\r\n                    ['value',this.btnPrevPageText],\r\n                    ['title','Previous']\r\n                );\r\n                btn_prev.className = this.btnPageCssClass;\r\n                Event.add(btn_prev, 'click', evt.prev);\r\n                btnPrevSpan.appendChild(btn_prev);\r\n            } else {\r\n                btnPrevSpan.innerHTML = this.btnPrevPageHtml;\r\n                Event.add(btnPrevSpan, 'click', evt.prev);\r\n            }\r\n            // Last button\r\n            if(!this.btnLastPageHtml){\r\n                var btn_last = Dom.create(\r\n                    tf.fltTypeInp,\r\n                    ['id',tf.prfxBtnLast+tf.id],\r\n                    ['type','button'],\r\n                    ['value',this.btnLastPageText],\r\n                    ['title','Last']\r\n                );\r\n                btn_last.className = this.btnPageCssClass;\r\n                Event.add(btn_last, 'click', evt.last);\r\n                btnLastSpan.appendChild(btn_last);\r\n            } else {\r\n                btnLastSpan.innerHTML = this.btnLastPageHtml;\r\n                Event.add(btnLastSpan, 'click', evt.last);\r\n            }\r\n            // First button\r\n            if(!this.btnFirstPageHtml){\r\n                var btn_first = Dom.create(\r\n                    tf.fltTypeInp,\r\n                    ['id',tf.prfxBtnFirst+tf.id],\r\n                    ['type','button'],\r\n                    ['value',this.btnFirstPageText],\r\n                    ['title','First']\r\n                );\r\n                btn_first.className = this.btnPageCssClass;\r\n                Event.add(btn_first, 'click', evt.first);\r\n                btnFirstSpan.appendChild(btn_first);\r\n            } else {\r\n                btnFirstSpan.innerHTML = this.btnFirstPageHtml;\r\n                Event.add(btnFirstSpan, 'click', evt.first);\r\n            }\r\n        }\r\n\r\n        // paging elements (buttons+drop-down list) are added to defined element\r\n        if(!this.pagingTgtId){\r\n            tf.SetTopDiv();\r\n        }\r\n        var targetEl = !this.pagingTgtId ? tf.mDiv : Dom.id(this.pagingTgtId);\r\n        targetEl.appendChild(btnFirstSpan);\r\n        targetEl.appendChild(btnPrevSpan);\r\n\r\n        var pgBeforeSpan = Dom.create(\r\n            'span',['id', tf.prfxPgBeforeSpan+tf.id] );\r\n        pgBeforeSpan.appendChild( Dom.text(this.pageText) );\r\n        pgBeforeSpan.className = this.nbPgSpanCssClass;\r\n        targetEl.appendChild(pgBeforeSpan);\r\n        targetEl.appendChild(slcPages);\r\n        var pgAfterSpan = Dom.create(\r\n            'span',['id', tf.prfxPgAfterSpan+tf.id]);\r\n        pgAfterSpan.appendChild( Dom.text(this.ofText) );\r\n        pgAfterSpan.className = this.nbPgSpanCssClass;\r\n        targetEl.appendChild(pgAfterSpan);\r\n        var pgspan = Dom.create( 'span',['id', tf.prfxPgSpan+tf.id] );\r\n        pgspan.className = this.nbPgSpanCssClass;\r\n        pgspan.appendChild( Dom.text(' '+this.nbPages+' ') );\r\n        targetEl.appendChild(pgspan);\r\n        targetEl.appendChild(btnNextSpan);\r\n        targetEl.appendChild(btnLastSpan);\r\n        this.pagingSlc = Dom.id(tf.prfxSlcPages+tf.id);\r\n\r\n        // if this.rememberGridValues==true this.setPagingInfo() is called\r\n        // in ResetGridValues() method\r\n        if(!tf.rememberGridValues || this.isPagingRemoved){\r\n            this.setPagingInfo();\r\n        }\r\n        if(!tf.fltGrid){\r\n            tf.ValidateAllRows();\r\n            this.setPagingInfo(tf.validRowsIndex);\r\n        }\r\n\r\n        this.isPagingRemoved = false;\r\n    }\r\n\r\n    /**\r\n     * Add paging when filters are already instanciated\r\n     * @param {Boolean} filterTable Execute filtering once paging instanciated\r\n     */\r\n    addPaging(filterTable=false){\r\n        var tf = this.tf;\r\n        if(!tf.hasGrid || tf.paging){\r\n            return;\r\n        }\r\n        tf.paging = true;\r\n        this.isPagingRemoved = true;\r\n        this.init();\r\n        tf.ResetValues();\r\n        if(filterTable){\r\n            tf.Filter();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculate number of pages based on valid rows\r\n     * Refresh paging select according to number of pages\r\n     * @param {Array} validRows Collection of valid rows\r\n     */\r\n    setPagingInfo(validRows){\r\n        var tf = this.tf;\r\n        var rows = tf.tbl.rows;\r\n        var mdiv = !this.pagingTgtId ? tf.mDiv : Dom.id(this.pagingTgtId);\r\n        var pgspan = Dom.id(tf.prfxPgSpan+tf.id);\r\n        //stores valid rows indexes\r\n        if(validRows && validRows.length>0){\r\n            tf.validRowsIndex = validRows;\r\n        } else {\r\n            //re-sets valid rows indexes array\r\n            tf.validRowsIndex = [];\r\n\r\n            //counts rows to be grouped\r\n            for(var j=tf.refRow; j<tf.nbRows; j++){\r\n                var row = rows[j];\r\n                if(!row){\r\n                    continue;\r\n                }\r\n                var isRowValid = row.getAttribute('validRow');\r\n                if(isRowValid==='true' || !isRowValid){\r\n                    tf.validRowsIndex.push(j);\r\n                }\r\n            }\r\n        }\r\n\r\n        //calculate nb of pages\r\n        this.nbPages = Math.ceil(tf.validRowsIndex.length/this.pagingLength);\r\n        //refresh page nb span\r\n        pgspan.innerHTML = this.nbPages;\r\n        //select clearing shortcut\r\n        if(this.pageSelectorType === tf.fltTypeSlc){\r\n            this.pagingSlc.innerHTML = '';\r\n        }\r\n\r\n        if(this.nbPages>0){\r\n            mdiv.style.visibility = 'visible';\r\n            if(this.pageSelectorType === tf.fltTypeSlc){\r\n                for(var z=0; z<this.nbPages; z++){\r\n                    var currOpt = new Option(\r\n                        (z+1),\r\n                        z*this.pagingLength,\r\n                        false,\r\n                        false\r\n                    );\r\n                    this.pagingSlc.options[z] = currOpt;\r\n                }\r\n            } else{\r\n                //input type\r\n                this.pagingSlc.value = this.currentPageNb;\r\n            }\r\n\r\n        } else {\r\n            /*** if no results paging select and buttons are hidden ***/\r\n            mdiv.style.visibility = 'hidden';\r\n        }\r\n        this.groupByPage(tf.validRowsIndex);\r\n    }\r\n\r\n    /**\r\n     * Group table rows by page and display valid rows\r\n     * @param  {Array} validRows Collection of valid rows\r\n     */\r\n    groupByPage(validRows){\r\n        var tf = this.tf;\r\n        var rows = tf.tbl.rows;\r\n        var paging_end_row = parseInt(this.startPagingRow, 10) +\r\n            parseInt(this.pagingLength, 10);\r\n\r\n        //store valid rows indexes\r\n        if(validRows){\r\n            tf.validRowsIndex = validRows;\r\n        }\r\n\r\n        //this loop shows valid rows of current page\r\n        for(var h=0; h<tf.validRowsIndex.length; h++){\r\n            var r = rows[tf.validRowsIndex[h]];\r\n            if(h>=this.startPagingRow && h<paging_end_row){\r\n                if(r.getAttribute('validRow')==='true' ||\r\n                    !r.getAttribute('validRow')){\r\n                    r.style.display = '';\r\n                }\r\n                if(tf.alternateBgs && tf.Cpt.alternateRows){\r\n                    tf.Cpt.alternateRows.setRowBg(tf.validRowsIndex[h], h);\r\n                }\r\n            } else {\r\n                r.style.display = 'none';\r\n                if(tf.alternateBgs && tf.Cpt.alternateRows){\r\n                    tf.Cpt.alternateRows.removeRowBg(tf.validRowsIndex[h]);\r\n                }\r\n            }\r\n        }\r\n\r\n        tf.nbVisibleRows = tf.validRowsIndex.length;\r\n        tf.isStartBgAlternate = false;\r\n        //re-applies filter behaviours after filtering process\r\n        tf.ApplyGridProps();\r\n    }\r\n\r\n    /**\r\n     * Show page based param value (string or number):\r\n     * @param {String} or {Number} cmd possible string values: 'next',\r\n     * 'previous', 'last', 'first' or page number as per param\r\n     */\r\n    setPage(cmd){\r\n        var tf = this.tf;\r\n        if(!tf.hasGrid || !this.paging){\r\n            return;\r\n        }\r\n        var btnEvt = this.evt,\r\n            cmdtype = typeof cmd;\r\n        if(cmdtype==='string'){\r\n            switch(Str.lower(cmd)){\r\n                case 'next':\r\n                    btnEvt.next();\r\n                break;\r\n                case 'previous':\r\n                    btnEvt.prev();\r\n                break;\r\n                case 'last':\r\n                    btnEvt.last();\r\n                break;\r\n                case 'first':\r\n                    btnEvt.first();\r\n                break;\r\n                default:\r\n                    btnEvt.next();\r\n                break;\r\n            }\r\n        }\r\n        if(cmdtype==='number'){\r\n            this.changePage(cmd-1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates UI elements of the number of results per page drop-down\r\n     */\r\n    setResultsPerPage(){\r\n        var tf = this.tf;\r\n        var evt = this.evt;\r\n\r\n        if(!tf.hasGrid && !tf.isFirstLoad){\r\n            return;\r\n        }\r\n        if(this.resultsPerPageSlc || !this.resultsPerPage){\r\n            return;\r\n        }\r\n\r\n        /*====================================================\r\n            - onchange event for results per page select\r\n        =====================================================*/\r\n        evt.slcResultsChange = (ev) => {\r\n            this.changeResultsPerPage();\r\n            ev.target.blur();\r\n        };\r\n\r\n        var slcR = Dom.create(\r\n            tf.fltTypeSlc, ['id', tf.prfxSlcResults+tf.id]);\r\n        slcR.className = tf.resultsSlcCssClass;\r\n        var slcRText = this.resultsPerPage[0],\r\n            slcROpts = this.resultsPerPage[1];\r\n        var slcRSpan = Dom.create(\r\n            'span',['id', tf.prfxSlcResultsTxt+tf.id]);\r\n        slcRSpan.className = this.resultsSpanCssClass;\r\n\r\n        // results per page select is added to external element\r\n        if(!this.resultsPerPageTgtId){\r\n            tf.SetTopDiv();\r\n        }\r\n        var targetEl = !this.resultsPerPageTgtId ?\r\n            tf.rDiv : Dom.id(this.resultsPerPageTgtId);\r\n        slcRSpan.appendChild(Dom.text(slcRText));\r\n        targetEl.appendChild(slcRSpan);\r\n        targetEl.appendChild(slcR);\r\n\r\n        this.resultsPerPageSlc = Dom.id(tf.prfxSlcResults+tf.id);\r\n\r\n        for(var r=0; r<slcROpts.length; r++){\r\n            var currOpt = new Option(slcROpts[r], slcROpts[r], false, false);\r\n            this.resultsPerPageSlc.options[r] = currOpt;\r\n        }\r\n        Event.add(slcR, 'change', evt.slcResultsChange);\r\n    }\r\n\r\n    /**\r\n     * Remove number of results per page UI elements\r\n     */\r\n    removeResultsPerPage(){\r\n        var tf = this.tf;\r\n        if(!tf.hasGrid || !this.resultsPerPageSlc || !this.resultsPerPage){\r\n            return;\r\n        }\r\n        var slcR = this.resultsPerPageSlc,\r\n            slcRSpan = Dom.id(tf.prfxSlcResultsTxt+tf.id);\r\n        if(slcR){\r\n            slcR.parentNode.removeChild(slcR);\r\n        }\r\n        if(slcRSpan){\r\n            slcRSpan.parentNode.removeChild(slcRSpan);\r\n        }\r\n        this.resultsPerPageSlc = null;\r\n    }\r\n\r\n    /**\r\n     * Change the page asynchronously according to passed index\r\n     * @param  {Number} index Index of the page (0-n)\r\n     */\r\n    changePage(index){\r\n        var tf = this.tf;\r\n        var evt = tf.Evt;\r\n        tf.EvtManager(evt.name.changepage, { pgIndex:index });\r\n    }\r\n\r\n    /**\r\n     * Change rows asynchronously according to page results\r\n     */\r\n    changeResultsPerPage(){\r\n        var tf = this.tf;\r\n        var evt = tf.Evt;\r\n        tf.EvtManager(evt.name.changeresultsperpage);\r\n    }\r\n\r\n    /**\r\n     * Re-set asynchronously page nb at page re-load\r\n     */\r\n    resetPage(){\r\n        var tf = this.tf;\r\n        var evt = tf.Evt;\r\n        tf.EvtManager(evt.name.resetpage);\r\n    }\r\n\r\n    /**\r\n     * Re-set asynchronously page length at page re-load\r\n     */\r\n    resetPageLength(){\r\n        var tf = this.tf;\r\n        var evt = tf.Evt;\r\n        tf.EvtManager(evt.name.resetpagelength);\r\n    }\r\n\r\n    /**\r\n     * Change the page according to passed index\r\n     * @param  {Number} index Index of the page (0-n)\r\n     */\r\n    _changePage(index){\r\n        var tf = this.tf;\r\n\r\n        if(!tf.paging){\r\n            return;\r\n        }\r\n        if(index === null){\r\n            index = this.pageSelectorType===tf.fltTypeSlc ?\r\n                this.pagingSlc.options.selectedIndex : (this.pagingSlc.value-1);\r\n        }\r\n        if( index>=0 && index<=(this.nbPages-1) ){\r\n            if(this.onBeforeChangePage){\r\n                this.onBeforeChangePage.call(null, this, index);\r\n            }\r\n            this.currentPageNb = parseInt(index, 10)+1;\r\n            if(this.pageSelectorType===tf.fltTypeSlc){\r\n                this.pagingSlc.options[index].selected = true;\r\n            } else {\r\n                this.pagingSlc.value = this.currentPageNb;\r\n            }\r\n\r\n            if(tf.rememberPageNb){\r\n                tf.Cpt.store.savePageNb(tf.pgNbCookie);\r\n            }\r\n            this.startPagingRow = (this.pageSelectorType===tf.fltTypeSlc) ?\r\n                this.pagingSlc.value : (index*this.pagingLength);\r\n\r\n            this.groupByPage();\r\n\r\n            if(this.onAfterChangePage){\r\n                this.onAfterChangePage.call(null, this, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change rows according to page results\r\n     */\r\n    _changeResultsPerPage(){\r\n        var tf = this.tf;\r\n\r\n        if(!tf.paging){\r\n            return;\r\n        }\r\n        var slcR = this.resultsPerPageSlc;\r\n        var slcPagesSelIndex = (this.pageSelectorType===tf.fltTypeSlc) ?\r\n                this.pagingSlc.selectedIndex :\r\n                parseInt(this.pagingSlc.value-1, 10);\r\n        this.pagingLength = parseInt(slcR.options[slcR.selectedIndex].value,10);\r\n        this.startPagingRow = this.pagingLength*slcPagesSelIndex;\r\n\r\n        if(!isNaN(this.pagingLength)){\r\n            if(this.startPagingRow >= tf.nbFilterableRows){\r\n                this.startPagingRow = (tf.nbFilterableRows-this.pagingLength);\r\n            }\r\n            this.setPagingInfo();\r\n\r\n            if(this.pageSelectorType===tf.fltTypeSlc){\r\n                var slcIndex =\r\n                    (this.pagingSlc.options.length-1<=slcPagesSelIndex ) ?\r\n                    (this.pagingSlc.options.length-1) : slcPagesSelIndex;\r\n                this.pagingSlc.options[slcIndex].selected = true;\r\n            }\r\n            if(tf.rememberPageLen){\r\n                tf.Cpt.store.savePageLength(tf.pgLenCookie);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Re-set page nb at page re-load\r\n     */\r\n    _resetPage(name){\r\n        var tf = this.tf;\r\n        var pgnb = tf.Cpt.store.getPageNb(name);\r\n        if(pgnb!==''){\r\n            this.changePage((pgnb-1));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Re-set page length at page re-load\r\n     */\r\n    _resetPageLength(name){\r\n        var tf = this.tf;\r\n        if(!tf.paging){\r\n            return;\r\n        }\r\n        var pglenIndex = tf.Cpt.store.getPageLength(name);\r\n\r\n        if(pglenIndex!==''){\r\n            this.resultsPerPageSlc.options[pglenIndex].selected = true;\r\n            this.changeResultsPerPage();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove paging feature\r\n     */\r\n    destroy(){\r\n        var tf = this.tf;\r\n\r\n        if(!tf.hasGrid){\r\n            return;\r\n        }\r\n        // btns containers\r\n        var btnNextSpan, btnPrevSpan, btnLastSpan, btnFirstSpan;\r\n        var pgBeforeSpan, pgAfterSpan, pgspan;\r\n        btnNextSpan = Dom.id(tf.prfxBtnNextSpan+tf.id);\r\n        btnPrevSpan = Dom.id(tf.prfxBtnPrevSpan+tf.id);\r\n        btnLastSpan = Dom.id(tf.prfxBtnLastSpan+tf.id);\r\n        btnFirstSpan = Dom.id(tf.prfxBtnFirstSpan+tf.id);\r\n        //span containing 'Page' text\r\n        pgBeforeSpan = Dom.id(tf.prfxPgBeforeSpan+tf.id);\r\n        //span containing 'of' text\r\n        pgAfterSpan = Dom.id(tf.prfxPgAfterSpan+tf.id);\r\n        //span containing nb of pages\r\n        pgspan = Dom.id(tf.prfxPgSpan+tf.id);\r\n\r\n        var evt = this.evt;\r\n\r\n        if(this.pagingSlc){\r\n            if(this.pageSelectorType === tf.fltTypeSlc){\r\n                Event.remove(this.pagingSlc, 'change', evt.slcPagesChange);\r\n            }\r\n            else if(this.pageSelectorType === tf.fltTypeInp){\r\n                Event.remove(this.pagingSlc, 'keypress', evt._detectKey);\r\n            }\r\n            this.pagingSlc.parentNode.removeChild(this.pagingSlc);\r\n        }\r\n\r\n        if(btnNextSpan){\r\n            Event.remove(btnNextSpan, 'click', evt.next);\r\n            btnNextSpan.parentNode.removeChild(btnNextSpan);\r\n        }\r\n\r\n        if(btnPrevSpan){\r\n            Event.remove(btnPrevSpan, 'click', evt.prev);\r\n            btnPrevSpan.parentNode.removeChild(btnPrevSpan);\r\n        }\r\n\r\n        if(btnLastSpan){\r\n            Event.remove(btnLastSpan, 'click', evt.last);\r\n            btnLastSpan.parentNode.removeChild(btnLastSpan);\r\n        }\r\n\r\n        if(btnFirstSpan){\r\n            Event.remove(btnFirstSpan, 'click', evt.first);\r\n            btnFirstSpan.parentNode.removeChild(btnFirstSpan);\r\n        }\r\n\r\n        if(pgBeforeSpan){\r\n            pgBeforeSpan.parentNode.removeChild(pgBeforeSpan);\r\n        }\r\n\r\n        if(pgAfterSpan){\r\n            pgAfterSpan.parentNode.removeChild(pgAfterSpan);\r\n        }\r\n\r\n        if(pgspan){\r\n            pgspan.parentNode.removeChild(pgspan);\r\n        }\r\n\r\n        if(this.hasResultsPerPage){\r\n            this.removeResultsPerPage();\r\n        }\r\n\r\n        this.pagingSlc = null;\r\n        this.nbPages = 0;\r\n        this.isPagingRemoved = true;\r\n        tf.paging = false;\r\n    }\r\n}\r\n"]}
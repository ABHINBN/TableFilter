{"version":3,"sources":["src-es6/modules/alternateRows.js"],"names":[],"mappings":"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","file":"src-es6/modules/alternateRows.js","sourcesContent":["import {Dom} from '../dom';\n\nexport class AlternateRows{\n\n    /**\n     * Alternating rows color\n     * @param {Object} tf TableFilter instance\n     */\n    constructor(tf) {\n        var f = tf.fObj;\n        //defines css class for even rows\n        this.evenCss = f.even_row_css_class || 'even';\n        //defines css class for odd rows\n        this.oddCss = f.odd_row_css_class || 'odd';\n\n        this.tf = tf;\n    }\n\n    /**\n     * Sets alternating rows color\n     */\n    init() {\n        if(!this.tf.hasGrid && !this.tf.isFirstLoad){\n            return;\n        }\n        var rows = this.tf.tbl.rows;\n        var noValidRowsIndex = this.tf.validRowsIndex===null;\n        //1st index\n        var beginIndex = noValidRowsIndex ? this.tf.refRow : 0;\n        // nb indexes\n        var indexLen = noValidRowsIndex ?\n                this.tf.nbFilterableRows+beginIndex :\n                this.tf.validRowsIndex.length;\n        var idx = 0;\n\n        //alternates bg color\n        for(var j=beginIndex; j<indexLen; j++){\n            var rowIdx = noValidRowsIndex ? j : this.tf.validRowsIndex[j];\n            this.setRowBg(rowIdx, idx);\n            idx++;\n        }\n    }\n\n    /**\n     * Sets row background color\n     * @param {Number} rowIdx Row index\n     * @param {Number} idx    Valid rows collection index needed to calculate bg\n     * color\n     */\n    setRowBg(rowIdx, idx) {\n        if(!this.tf.alternateBgs || isNaN(rowIdx)){\n            return;\n        }\n        var rows = this.tf.tbl.rows;\n        var i = !idx ? rowIdx : idx;\n        this.removeRowBg(rowIdx);\n        Dom.addClass(\n            rows[rowIdx],\n            (i%2) ? this.evenCss : this.oddCss\n        );\n    }\n\n    /**\n     * Removes row background color\n     * @param  {Number} idx Row index\n     */\n    removeRowBg(idx) {\n        if(isNaN(idx)){\n            return;\n        }\n        var rows = this.tf.tbl.rows;\n        Dom.removeClass(rows[idx], this.oddCss);\n        Dom.removeClass(rows[idx], this.evenCss);\n    }\n\n    /**\n     * Removes all row background color\n     */\n    remove() {\n        if(!this.tf.hasGrid){\n            return;\n        }\n        var row = this.tf.tbl.rows;\n        for(var i=this.tf.refRow; i<this.tf.nbRows; i++){\n            this.removeRowBg(i);\n        }\n        this.tf.isStartBgAlternate = true;\n    }\n\n    enable() {\n        this.tf.alternateBgs = true;\n    }\n\n    disable() {\n        this.tf.alternateBgs = false;\n    }\n\n}\n\n"]}
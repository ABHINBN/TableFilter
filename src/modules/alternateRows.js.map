{"version":3,"sources":["src-es6/modules/alternateRows.js"],"names":[],"mappings":"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","file":"src-es6/modules/alternateRows.js","sourcesContent":["import {Dom} from '../dom';\r\n\r\nexport class AlternateRows{\r\n\r\n    /**\r\n     * Alternating rows color\r\n     * @param {Object} tf TableFilter instance\r\n     */\r\n    constructor(tf) {\r\n        var f = tf.fObj;\r\n        //defines css class for even rows\r\n        this.evenCss = f.even_row_css_class || 'even';\r\n        //defines css class for odd rows\r\n        this.oddCss = f.odd_row_css_class || 'odd';\r\n\r\n        this.tf = tf;\r\n    }\r\n\r\n    /**\r\n     * Sets alternating rows color\r\n     */\r\n    init() {\r\n        if(!this.tf.hasGrid && !this.tf.isFirstLoad){\r\n            return;\r\n        }\r\n        var rows = this.tf.tbl.rows;\r\n        var noValidRowsIndex = this.tf.validRowsIndex===null;\r\n        //1st index\r\n        var beginIndex = noValidRowsIndex ? this.tf.refRow : 0;\r\n        // nb indexes\r\n        var indexLen = noValidRowsIndex ?\r\n                this.tf.nbFilterableRows+beginIndex :\r\n                this.tf.validRowsIndex.length;\r\n        var idx = 0;\r\n\r\n        //alternates bg color\r\n        for(var j=beginIndex; j<indexLen; j++){\r\n            var rowIdx = noValidRowsIndex ? j : this.tf.validRowsIndex[j];\r\n            this.setRowBg(rowIdx, idx);\r\n            idx++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets row background color\r\n     * @param {Number} rowIdx Row index\r\n     * @param {Number} idx    Valid rows collection index needed to calculate bg\r\n     * color\r\n     */\r\n    setRowBg(rowIdx, idx) {\r\n        if(!this.tf.alternateBgs || isNaN(rowIdx)){\r\n            return;\r\n        }\r\n        var rows = this.tf.tbl.rows;\r\n        var i = !idx ? rowIdx : idx;\r\n        this.removeRowBg(rowIdx);\r\n        Dom.addClass(\r\n            rows[rowIdx],\r\n            (i%2) ? this.evenCss : this.oddCss\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Removes row background color\r\n     * @param  {Number} idx Row index\r\n     */\r\n    removeRowBg(idx) {\r\n        if(isNaN(idx)){\r\n            return;\r\n        }\r\n        var rows = this.tf.tbl.rows;\r\n        Dom.removeClass(rows[idx], this.oddCss);\r\n        Dom.removeClass(rows[idx], this.evenCss);\r\n    }\r\n\r\n    /**\r\n     * Removes all row background color\r\n     */\r\n    remove() {\r\n        if(!this.tf.hasGrid){\r\n            return;\r\n        }\r\n        var row = this.tf.tbl.rows;\r\n        for(var i=this.tf.refRow; i<this.tf.nbRows; i++){\r\n            this.removeRowBg(i);\r\n        }\r\n        this.tf.isStartBgAlternate = true;\r\n    }\r\n\r\n    enable() {\r\n        this.tf.alternateBgs = true;\r\n    }\r\n\r\n    disable() {\r\n        this.tf.alternateBgs = false;\r\n    }\r\n\r\n}\r\n\r\n"]}
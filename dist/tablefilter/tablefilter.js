(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "tf-" + ({}[chunkId]||chunkId) + "-" + {"1":"314ee811808042173ebb"}[chunkId] + ".js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_OZNmcyNdW1BMU9Wdzqdf4g = Function('return this')();
	if (!__cov_OZNmcyNdW1BMU9Wdzqdf4g.__coverage__) {
	   __cov_OZNmcyNdW1BMU9Wdzqdf4g.__coverage__ = {};
	}
	__cov_OZNmcyNdW1BMU9Wdzqdf4g = __cov_OZNmcyNdW1BMU9Wdzqdf4g.__coverage__;
	if (!__cov_OZNmcyNdW1BMU9Wdzqdf4g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\tablefilter.js']) {
	   __cov_OZNmcyNdW1BMU9Wdzqdf4g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\tablefilter.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\tablefilter.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 1, "30": 0, "31": 0, "32": 0, "33": 0, "34": 1, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "212": 0, "213": 0, "214": 0, "215": 0, "216": 0, "217": 0, "218": 0, "219": 0, "220": 0, "221": 0, "222": 0, "223": 0, "224": 0, "225": 0, "226": 0, "227": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "234": 0, "235": 0, "236": 0, "237": 0, "238": 0, "239": 0, "240": 0, "241": 0, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "250": 0, "251": 0, "252": 0, "253": 0, "254": 0, "255": 0, "256": 0, "257": 0, "258": 0, "259": 0, "260": 0, "261": 0, "262": 0, "263": 0, "264": 0, "265": 0, "266": 0, "267": 0, "268": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "277": 0, "278": 0, "279": 0, "280": 0, "281": 0, "282": 0, "283": 0, "284": 0, "285": 0, "286": 0, "287": 0, "288": 0, "289": 0, "290": 0, "291": 0, "292": 0, "293": 0, "294": 0, "295": 0, "296": 0, "297": 0, "298": 0, "299": 0, "300": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "307": 0, "308": 0, "309": 0, "310": 0, "311": 0, "312": 0, "313": 1, "314": 0, "315": 0, "316": 0, "317": 0, "318": 0, "319": 0, "320": 0, "321": 0, "322": 0, "323": 0, "324": 0, "325": 0, "326": 0, "327": 0, "328": 0, "329": 0, "330": 0, "331": 0, "332": 0, "333": 0, "334": 0, "335": 0, "336": 0, "337": 0, "338": 0, "339": 0, "340": 0, "341": 0, "342": 0, "343": 0, "344": 0, "345": 0, "346": 0, "347": 0, "348": 0, "349": 0, "350": 0, "351": 0, "352": 0, "353": 0, "354": 0, "355": 0, "356": 0, "357": 0, "358": 0, "359": 0, "360": 0, "361": 0, "362": 0, "363": 0, "364": 0, "365": 0, "366": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "387": 0, "388": 0, "389": 0, "390": 0, "391": 0, "392": 0, "393": 0, "394": 0, "395": 0, "396": 0, "397": 0, "398": 0, "399": 0, "400": 0, "401": 0, "402": 0, "403": 0, "404": 0, "405": 0, "406": 0, "407": 0, "408": 0, "409": 0, "410": 0, "411": 0, "412": 0, "413": 0, "414": 0, "415": 0, "416": 0, "417": 0, "418": 0, "419": 0, "420": 0, "421": 0, "422": 0, "423": 0, "424": 0, "425": 0, "426": 0, "427": 0, "428": 0, "429": 0, "430": 0, "431": 0, "432": 0, "433": 0, "434": 0, "435": 0, "436": 0, "437": 0, "438": 0, "439": 0, "440": 0, "441": 0, "442": 0, "443": 0, "444": 0, "445": 0, "446": 0, "447": 0, "448": 0, "449": 0, "450": 0, "451": 0, "452": 0, "453": 0, "454": 0, "455": 0, "456": 0, "457": 0, "458": 0, "459": 0, "460": 0, "461": 0, "462": 0, "463": 0, "464": 0, "465": 0, "466": 0, "467": 0, "468": 0, "469": 0, "470": 0, "471": 0, "472": 0, "473": 0, "474": 0, "475": 0, "476": 0, "477": 0, "478": 0, "479": 0, "480": 0, "481": 0, "482": 0, "483": 0, "484": 0, "485": 0, "486": 0, "487": 0, "488": 0, "489": 0, "490": 0, "491": 0, "492": 0, "493": 0, "494": 0, "495": 0, "496": 0, "497": 0, "498": 0, "499": 0, "500": 0, "501": 0, "502": 0, "503": 0, "504": 0, "505": 0, "506": 0, "507": 0, "508": 0, "509": 0, "510": 0, "511": 0, "512": 0, "513": 0, "514": 0, "515": 0, "516": 0, "517": 0, "518": 0, "519": 0, "520": 0, "521": 0, "522": 0, "523": 0, "524": 0, "525": 0, "526": 0, "527": 0, "528": 0, "529": 0, "530": 0, "531": 0, "532": 0, "533": 0, "534": 0, "535": 0, "536": 0, "537": 0, "538": 0, "539": 0, "540": 0, "541": 0, "542": 0, "543": 0, "544": 0, "545": 0, "546": 0, "547": 0, "548": 0, "549": 0, "550": 0, "551": 0, "552": 0, "553": 0, "554": 0, "555": 0, "556": 0, "557": 0, "558": 0, "559": 0, "560": 0, "561": 0, "562": 0, "563": 0, "564": 0, "565": 0, "566": 0, "567": 0, "568": 0, "569": 0, "570": 0, "571": 0, "572": 0, "573": 0, "574": 0, "575": 0, "576": 0, "577": 0, "578": 0, "579": 0, "580": 0, "581": 0, "582": 0, "583": 0, "584": 0, "585": 0, "586": 0, "587": 0, "588": 0, "589": 0, "590": 0, "591": 0, "592": 0, "593": 0, "594": 0, "595": 0, "596": 0, "597": 0, "598": 0, "599": 0, "600": 0, "601": 0, "602": 0, "603": 0, "604": 0, "605": 0, "606": 0, "607": 0, "608": 0, "609": 0, "610": 0, "611": 0, "612": 0, "613": 0, "614": 0, "615": 0, "616": 0, "617": 0, "618": 0, "619": 0, "620": 0, "621": 0, "622": 0, "623": 0, "624": 0, "625": 0, "626": 0, "627": 0, "628": 0, "629": 0, "630": 0, "631": 0, "632": 0, "633": 0, "634": 0, "635": 0, "636": 0, "637": 0, "638": 0, "639": 0, "640": 0, "641": 0, "642": 0, "643": 0, "644": 0, "645": 0, "646": 0, "647": 0, "648": 0, "649": 0, "650": 0, "651": 0, "652": 0, "653": 0, "654": 0, "655": 0, "656": 0, "657": 0, "658": 0, "659": 0, "660": 0, "661": 0, "662": 0, "663": 0, "664": 0, "665": 0, "666": 0, "667": 0, "668": 0, "669": 0, "670": 0, "671": 0, "672": 0, "673": 0, "674": 0, "675": 0, "676": 0, "677": 0, "678": 0, "679": 0, "680": 0, "681": 0, "682": 0, "683": 0, "684": 0, "685": 0, "686": 0, "687": 0, "688": 0, "689": 0, "690": 0, "691": 0, "692": 0, "693": 0, "694": 0, "695": 0, "696": 0, "697": 0, "698": 0, "699": 0, "700": 0, "701": 0, "702": 0, "703": 0, "704": 0, "705": 0, "706": 0, "707": 0, "708": 0, "709": 0, "710": 0, "711": 0, "712": 0, "713": 0, "714": 0, "715": 0, "716": 0, "717": 0, "718": 0, "719": 0, "720": 0, "721": 0, "722": 0, "723": 0, "724": 0, "725": 0, "726": 0, "727": 0, "728": 0, "729": 0, "730": 0, "731": 0, "732": 0, "733": 0, "734": 0, "735": 0, "736": 0, "737": 0, "738": 0, "739": 0, "740": 0, "741": 0, "742": 0, "743": 0, "744": 0, "745": 0, "746": 0, "747": 0, "748": 0, "749": 0, "750": 0, "751": 0, "752": 0, "753": 0, "754": 0, "755": 0, "756": 0, "757": 0, "758": 0, "759": 0, "760": 0, "761": 0, "762": 0, "763": 0, "764": 0, "765": 0, "766": 0, "767": 0, "768": 0, "769": 0, "770": 0, "771": 0, "772": 0, "773": 0, "774": 0, "775": 0, "776": 0, "777": 0, "778": 0, "779": 0, "780": 0, "781": 0, "782": 0, "783": 0, "784": 0, "785": 0, "786": 0, "787": 0, "788": 0, "789": 0, "790": 0, "791": 0, "792": 0, "793": 0, "794": 0, "795": 0, "796": 0, "797": 0, "798": 0, "799": 0, "800": 0, "801": 0, "802": 0, "803": 0, "804": 0, "805": 0, "806": 0, "807": 0, "808": 0, "809": 0, "810": 0, "811": 0, "812": 0, "813": 0, "814": 0, "815": 0, "816": 0, "817": 0, "818": 0, "819": 0, "820": 0, "821": 0, "822": 0, "823": 0, "824": 0, "825": 0, "826": 0, "827": 0, "828": 0, "829": 0, "830": 0, "831": 0, "832": 0, "833": 0, "834": 0, "835": 0, "836": 0, "837": 0, "838": 0, "839": 0, "840": 0, "841": 0, "842": 0, "843": 0, "844": 0, "845": 0, "846": 0, "847": 0, "848": 0, "849": 0, "850": 0, "851": 0, "852": 0, "853": 0, "854": 0, "855": 0, "856": 0, "857": 0, "858": 0, "859": 0, "860": 0, "861": 0, "862": 0, "863": 0, "864": 0, "865": 0, "866": 0, "867": 0, "868": 0, "869": 0, "870": 0, "871": 0, "872": 0, "873": 0, "874": 0, "875": 0, "876": 0, "877": 0, "878": 0, "879": 0, "880": 0, "881": 0, "882": 0, "883": 0, "884": 0, "885": 0, "886": 0, "887": 0, "888": 0, "889": 0, "890": 0, "891": 0, "892": 0, "893": 0, "894": 0, "895": 0, "896": 0, "897": 0, "898": 0, "899": 0, "900": 0, "901": 0, "902": 0, "903": 0, "904": 0, "905": 0, "906": 0, "907": 0, "908": 0, "909": 0, "910": 0, "911": 0, "912": 0, "913": 0, "914": 0, "915": 0, "916": 0, "917": 0, "918": 0, "919": 0, "920": 0, "921": 0, "922": 0, "923": 0, "924": 0, "925": 0, "926": 0, "927": 0, "928": 0, "929": 0, "930": 0, "931": 0, "932": 0, "933": 0, "934": 0, "935": 0, "936": 0, "937": 0, "938": 0, "939": 0, "940": 0, "941": 0, "942": 0, "943": 0, "944": 0, "945": 0, "946": 0, "947": 0, "948": 0, "949": 0, "950": 0, "951": 0, "952": 0, "953": 0, "954": 0, "955": 0, "956": 0, "957": 0, "958": 0, "959": 0, "960": 0, "961": 0, "962": 0, "963": 0, "964": 0, "965": 0, "966": 0, "967": 0, "968": 0, "969": 0, "970": 0, "971": 0, "972": 0, "973": 0, "974": 0, "975": 0, "976": 0, "977": 0, "978": 0, "979": 0, "980": 0, "981": 0, "982": 0, "983": 0, "984": 0, "985": 0, "986": 0, "987": 0, "988": 0, "989": 0, "990": 0, "991": 0, "992": 0, "993": 0, "994": 0, "995": 0, "996": 0, "997": 0, "998": 0, "999": 0, "1000": 0, "1001": 0, "1002": 0, "1003": 0, "1004": 0, "1005": 0, "1006": 0, "1007": 0, "1008": 0, "1009": 0, "1010": 0, "1011": 0, "1012": 0, "1013": 0, "1014": 0, "1015": 0, "1016": 0, "1017": 0, "1018": 0, "1019": 0, "1020": 0, "1021": 0, "1022": 0, "1023": 0, "1024": 0, "1025": 0, "1026": 0, "1027": 0, "1028": 0, "1029": 0, "1030": 0, "1031": 0, "1032": 0, "1033": 0, "1034": 0, "1035": 0, "1036": 0, "1037": 0, "1038": 0, "1039": 0, "1040": 0, "1041": 0, "1042": 0, "1043": 0, "1044": 0, "1045": 0, "1046": 0, "1047": 0, "1048": 0, "1049": 0, "1050": 0, "1051": 0, "1052": 0, "1053": 0, "1054": 0, "1055": 0, "1056": 0, "1057": 0, "1058": 0, "1059": 0, "1060": 0, "1061": 0, "1062": 0, "1063": 0, "1064": 0, "1065": 0, "1066": 0, "1067": 0, "1068": 0, "1069": 0, "1070": 0, "1071": 0, "1072": 0, "1073": 0, "1074": 0, "1075": 0, "1076": 0, "1077": 0, "1078": 0, "1079": 0, "1080": 0, "1081": 0, "1082": 0, "1083": 0, "1084": 0, "1085": 0, "1086": 0, "1087": 0, "1088": 0, "1089": 0, "1090": 0, "1091": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0], "45": [0, 0], "46": [0, 0], "47": [0, 0], "48": [0, 0], "49": [0, 0], "50": [0, 0], "51": [0, 0], "52": [0, 0], "53": [0, 0], "54": [0, 0], "55": [0, 0], "56": [0, 0], "57": [0, 0], "58": [0, 0], "59": [0, 0], "60": [0, 0], "61": [0, 0], "62": [0, 0], "63": [0, 0], "64": [0, 0], "65": [0, 0], "66": [0, 0], "67": [0, 0], "68": [0, 0], "69": [0, 0], "70": [0, 0], "71": [0, 0], "72": [0, 0], "73": [0, 0], "74": [0, 0], "75": [0, 0], "76": [0, 0], "77": [0, 0], "78": [0, 0], "79": [0, 0], "80": [0, 0], "81": [0, 0], "82": [0, 0], "83": [0, 0], "84": [0, 0], "85": [0, 0], "86": [0, 0], "87": [0, 0], "88": [0, 0], "89": [0, 0], "90": [0, 0], "91": [0, 0], "92": [0, 0], "93": [0, 0], "94": [0, 0], "95": [0, 0], "96": [0, 0], "97": [0, 0], "98": [0, 0], "99": [0, 0], "100": [0, 0], "101": [0, 0], "102": [0, 0], "103": [0, 0], "104": [0, 0], "105": [0, 0], "106": [0, 0], "107": [0, 0], "108": [0, 0], "109": [0, 0], "110": [0, 0], "111": [0, 0], "112": [0, 0], "113": [0, 0], "114": [0, 0], "115": [0, 0], "116": [0, 0], "117": [0, 0], "118": [0, 0], "119": [0, 0], "120": [0, 0], "121": [0, 0], "122": [0, 0], "123": [0, 0], "124": [0, 0], "125": [0, 0], "126": [0, 0], "127": [0, 0], "128": [0, 0], "129": [0, 0], "130": [0, 0], "131": [0, 0], "132": [0, 0], "133": [0, 0], "134": [0, 0], "135": [0, 0], "136": [0, 0], "137": [0, 0], "138": [0, 0], "139": [0, 0], "140": [0, 0, 0, 0, 0], "141": [0, 0], "142": [0, 0], "143": [0, 0], "144": [0, 0], "145": [0, 0], "146": [0, 0], "147": [0, 0], "148": [0, 0], "149": [0, 0], "150": [0, 0], "151": [0, 0], "152": [0, 0], "153": [0, 0], "154": [0, 0], "155": [0, 0], "156": [0, 0], "157": [0, 0], "158": [0, 0], "159": [0, 0], "160": [0, 0], "161": [0, 0], "162": [0, 0], "163": [0, 0], "164": [0, 0], "165": [0, 0], "166": [0, 0], "167": [0, 0], "168": [0, 0], "169": [0, 0], "170": [0, 0], "171": [0, 0], "172": [0, 0], "173": [0, 0], "174": [0, 0], "175": [0, 0], "176": [0, 0], "177": [0, 0], "178": [0, 0], "179": [0, 0], "180": [0, 0], "181": [0, 0], "182": [0, 0], "183": [0, 0], "184": [0, 0], "185": [0, 0], "186": [0, 0], "187": [0, 0], "188": [0, 0], "189": [0, 0], "190": [0, 0], "191": [0, 0], "192": [0, 0], "193": [0, 0], "194": [0, 0], "195": [0, 0], "196": [0, 0], "197": [0, 0], "198": [0, 0], "199": [0, 0], "200": [0, 0], "201": [0, 0], "202": [0, 0], "203": [0, 0, 0], "204": [0, 0], "205": [0, 0], "206": [0, 0], "207": [0, 0], "208": [0, 0, 0, 0], "209": [0, 0], "210": [0, 0], "211": [0, 0], "212": [0, 0], "213": [0, 0], "214": [0, 0], "215": [0, 0], "216": [0, 0], "217": [0, 0], "218": [0, 0], "219": [0, 0], "220": [0, 0], "221": [0, 0], "222": [0, 0], "223": [0, 0], "224": [0, 0], "225": [0, 0], "226": [0, 0], "227": [0, 0], "228": [0, 0], "229": [0, 0], "230": [0, 0], "231": [0, 0], "232": [0, 0], "233": [0, 0], "234": [0, 0], "235": [0, 0], "236": [0, 0], "237": [0, 0], "238": [0, 0], "239": [0, 0], "240": [0, 0], "241": [0, 0], "242": [0, 0], "243": [0, 0], "244": [0, 0], "245": [0, 0], "246": [0, 0], "247": [0, 0], "248": [0, 0], "249": [0, 0], "250": [0, 0], "251": [0, 0], "252": [0, 0], "253": [0, 0], "254": [0, 0], "255": [0, 0], "256": [0, 0, 0], "257": [0, 0], "258": [0, 0], "259": [0, 0], "260": [0, 0], "261": [0, 0], "262": [0, 0], "263": [0, 0], "264": [0, 0], "265": [0, 0], "266": [0, 0], "267": [0, 0], "268": [0, 0], "269": [0, 0], "270": [0, 0], "271": [0, 0], "272": [0, 0], "273": [0, 0], "274": [0, 0], "275": [0, 0], "276": [0, 0], "277": [0, 0], "278": [0, 0], "279": [0, 0, 0, 0], "280": [0, 0], "281": [0, 0], "282": [0, 0], "283": [0, 0], "284": [0, 0], "285": [0, 0], "286": [0, 0], "287": [0, 0], "288": [0, 0], "289": [0, 0], "290": [0, 0], "291": [0, 0], "292": [0, 0], "293": [0, 0], "294": [0, 0], "295": [0, 0], "296": [0, 0], "297": [0, 0], "298": [0, 0], "299": [0, 0], "300": [0, 0], "301": [0, 0], "302": [0, 0], "303": [0, 0], "304": [0, 0], "305": [0, 0], "306": [0, 0], "307": [0, 0], "308": [0, 0], "309": [0, 0], "310": [0, 0], "311": [0, 0], "312": [0, 0], "313": [0, 0], "314": [0, 0], "315": [0, 0], "316": [0, 0], "317": [0, 0], "318": [0, 0], "319": [0, 0], "320": [0, 0], "321": [0, 0], "322": [0, 0], "323": [0, 0], "324": [0, 0], "325": [0, 0], "326": [0, 0], "327": [0, 0], "328": [0, 0], "329": [0, 0], "330": [0, 0], "331": [0, 0], "332": [0, 0], "333": [0, 0], "334": [0, 0], "335": [0, 0], "336": [0, 0], "337": [0, 0], "338": [0, 0], "339": [0, 0], "340": [0, 0], "341": [0, 0], "342": [0, 0], "343": [0, 0], "344": [0, 0], "345": [0, 0], "346": [0, 0], "347": [0, 0], "348": [0, 0], "349": [0, 0], "350": [0, 0], "351": [0, 0], "352": [0, 0], "353": [0, 0], "354": [0, 0], "355": [0, 0], "356": [0, 0], "357": [0, 0], "358": [0, 0], "359": [0, 0], "360": [0, 0], "361": [0, 0], "362": [0, 0], "363": [0, 0], "364": [0, 0], "365": [0, 0], "366": [0, 0], "367": [0, 0], "368": [0, 0], "369": [0, 0], "370": [0, 0], "371": [0, 0], "372": [0, 0], "373": [0, 0], "374": [0, 0, 0, 0, 0, 0, 0, 0], "375": [0, 0], "376": [0, 0], "377": [0, 0, 0], "378": [0, 0], "379": [0, 0], "380": [0, 0], "381": [0, 0], "382": [0, 0], "383": [0, 0], "384": [0, 0], "385": [0, 0], "386": [0, 0], "387": [0, 0], "388": [0, 0], "389": [0, 0], "390": [0, 0, 0, 0], "391": [0, 0], "392": [0, 0], "393": [0, 0], "394": [0, 0], "395": [0, 0], "396": [0, 0], "397": [0, 0], "398": [0, 0], "399": [0, 0], "400": [0, 0], "401": [0, 0], "402": [0, 0], "403": [0, 0], "404": [0, 0], "405": [0, 0], "406": [0, 0], "407": [0, 0], "408": [0, 0], "409": [0, 0], "410": [0, 0], "411": [0, 0], "412": [0, 0], "413": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0 }, "fnMap": { "1": { "line": 8, "name": "(anonymous_1)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 8, "name": "(anonymous_2)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 56, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 67, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 77, "name": "TableFilter", "loc": { "start": { "line": 55, "column": 4 }, "end": { "line": 55, "column": 25 } } }, "6": { "line": 151, "name": "(anonymous_6)", "loc": { "start": { "line": 120, "column": 21 }, "end": { "line": 120, "column": 30 } } }, "7": { "line": 1022, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 1131, "name": "(anonymous_8)", "loc": { "start": { "line": 1119, "column": 16 }, "end": { "line": 1119, "column": 16 } } }, "9": { "line": 1138, "name": "(anonymous_9)", "loc": { "start": { "line": 1126, "column": 16 }, "end": { "line": 1126, "column": 16 } } }, "10": { "line": 1191, "name": "(anonymous_10)", "loc": { "start": { "line": 1178, "column": 16 }, "end": { "line": 1178, "column": 16 } } }, "11": { "line": 1194, "name": "(anonymous_11)", "loc": { "start": { "line": 1180, "column": 16 }, "end": { "line": 1180, "column": 16 } } }, "12": { "line": 1199, "name": "(anonymous_12)", "loc": { "start": { "line": 1183, "column": 49 }, "end": { "line": 1183, "column": 49 } } }, "13": { "line": 1218, "name": "detectKey", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "14": { "line": 1243, "name": "onKeyUp", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "15": { "line": 1250, "name": "filter", "loc": { "start": { "line": 1228, "column": 8 }, "end": { "line": 1228, "column": 26 } } }, "16": { "line": 1274, "name": "onKeyDown", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "17": { "line": 1286, "name": "onInpFocus", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "18": { "line": 1296, "name": "onInpBlur", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "19": { "line": 1309, "name": "_insertFiltersRow", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "20": { "line": 1340, "name": "_initNoFilters", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "21": { "line": 1356, "name": "_buildInputFilter", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "22": { "line": 1368, "name": "(anonymous_22)", "loc": { "start": { "line": 1340, "column": 29 }, "end": { "line": 1340, "column": 29 } } }, "23": { "line": 1381, "name": "(anonymous_23)", "loc": { "start": { "line": 1351, "column": 32 }, "end": { "line": 1351, "column": 32 } } }, "24": { "line": 1384, "name": "(anonymous_24)", "loc": { "start": { "line": 1352, "column": 31 }, "end": { "line": 1352, "column": 31 } } }, "25": { "line": 1387, "name": "(anonymous_25)", "loc": { "start": { "line": 1353, "column": 29 }, "end": { "line": 1353, "column": 29 } } }, "26": { "line": 1390, "name": "(anonymous_26)", "loc": { "start": { "line": 1354, "column": 28 }, "end": { "line": 1354, "column": 28 } } }, "27": { "line": 1402, "name": "_buildSubmitButton", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "28": { "line": 1416, "name": "(anonymous_28)", "loc": { "start": { "line": 1378, "column": 29 }, "end": { "line": 1378, "column": 29 } } }, "29": { "line": 1428, "name": "feature", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "30": { "line": 1437, "name": "initExtensions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "31": { "line": 1458, "name": "loadExtension", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "32": { "line": 1477, "name": "(anonymous_32)", "loc": { "start": { "line": 1429, "column": 37 }, "end": { "line": 1429, "column": 46 } } }, "33": { "line": 1493, "name": "extension", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "34": { "line": 1504, "name": "hasExtension", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "35": { "line": 1513, "name": "destroyExtensions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "36": { "line": 1531, "name": "loadThemes", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "37": { "line": 1570, "name": "getStylesheet", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "38": { "line": 1581, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "39": { "line": 1598, "name": "(anonymous_39)", "loc": { "start": { "line": 1535, "column": 46 }, "end": { "line": 1535, "column": 46 } } }, "40": { "line": 1601, "name": "(anonymous_40)", "loc": { "start": { "line": 1537, "column": 16 }, "end": { "line": 1537, "column": 16 } } }, "41": { "line": 1620, "name": "(anonymous_41)", "loc": { "start": { "line": 1554, "column": 45 }, "end": { "line": 1554, "column": 45 } } }, "42": { "line": 1625, "name": "(anonymous_42)", "loc": { "start": { "line": 1557, "column": 45 }, "end": { "line": 1557, "column": 45 } } }, "43": { "line": 1629, "name": "(anonymous_43)", "loc": { "start": { "line": 1560, "column": 12 }, "end": { "line": 1560, "column": 12 } } }, "44": { "line": 1647, "name": "setToolbar", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "45": { "line": 1707, "name": "removeToolbar", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "46": { "line": 1717, "name": "(anonymous_46)", "loc": { "start": { "line": 1642, "column": 38 }, "end": { "line": 1642, "column": 38 } } }, "47": { "line": 1728, "name": "removeExternalFlts", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "48": { "line": 1750, "name": "isCustomOptions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "49": { "line": 1762, "name": "getCustomOptions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "50": { "line": 1798, "name": "filter", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "51": { "line": 1929, "name": "_testTerm", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "52": { "line": 2134, "name": "getColValues", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "53": { "line": 2182, "name": "getFilterValue", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "54": { "line": 2219, "name": "getFiltersValue", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "55": { "line": 2242, "name": "getFilterId", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "56": { "line": 2260, "name": "getFiltersByType", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "57": { "line": 2282, "name": "getFilterElement", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "58": { "line": 2294, "name": "getCellsNb", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "59": { "line": 2309, "name": "getRowsNb", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "60": { "line": 2318, "name": "getCellValue", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "61": { "line": 2335, "name": "getCellData", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "62": { "line": 2372, "name": "getTableData", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "63": { "line": 2418, "name": "getFilteredData", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "64": { "line": 2467, "name": "getFilteredDataCol", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "65": { "line": 2485, "name": "(anonymous_65)", "loc": { "start": { "line": 2419, "column": 55 }, "end": { "line": 2419, "column": 67 } } }, "66": { "line": 2490, "name": "(anonymous_66)", "loc": { "start": { "line": 2427, "column": 43 }, "end": { "line": 2427, "column": 55 } } }, "67": { "line": 2508, "name": "getRowDisplay", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "68": { "line": 2519, "name": "validateRow", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "69": { "line": 2554, "name": "validateAllRows", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "70": { "line": 2571, "name": "setFilterValue", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "71": { "line": 2619, "name": "setColWidths", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "72": { "line": 2650, "name": "enforceVisibility", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "73": { "line": 2669, "name": "clearFilters", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "74": { "line": 2692, "name": "clearActiveColumns", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "75": { "line": 2704, "name": "markActiveColumn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "76": { "line": 2722, "name": "getActiveFilterId", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "77": { "line": 2732, "name": "setActiveFilterId", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "78": { "line": 2743, "name": "getColumnIndexFromFilterId", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "79": { "line": 2759, "name": "buildFilterId", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "80": { "line": 2769, "name": "activateFilter", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "81": { "line": 2782, "name": "linkFilters", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "82": { "line": 2828, "name": "isExactMatch", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "83": { "line": 2840, "name": "isRowValid", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "84": { "line": 2851, "name": "isRowDisplayed", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "85": { "line": 2864, "name": "ignoresDiacritics", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "86": { "line": 2879, "name": "getClearFilterText", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "87": { "line": 2895, "name": "isImported", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "88": { "line": 2922, "name": "_import", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "89": { "line": 2942, "name": "(anonymous_89)", "loc": { "start": { "line": 2843, "column": 48 }, "end": { "line": 2843, "column": 54 } } }, "90": { "line": 2950, "name": "(anonymous_90)", "loc": { "start": { "line": 2853, "column": 23 }, "end": { "line": 2853, "column": 35 } } }, "91": { "line": 2962, "name": "isInitialized", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "92": { "line": 2972, "name": "getFiltersId", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "93": { "line": 2983, "name": "getValidRows", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "94": { "line": 3011, "name": "getFiltersRowIndex", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "95": { "line": 3021, "name": "getHeadersRowIndex", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "96": { "line": 3032, "name": "getStartRowIndex", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "97": { "line": 3042, "name": "getLastRowIndex", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "98": { "line": 3055, "name": "hasType", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "99": { "line": 3075, "name": "getHeaderElement", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "100": { "line": 3102, "name": "getHeadersText", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "101": { "line": 3126, "name": "getFilterType", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "102": { "line": 3137, "name": "getFilterableRowsNb", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "103": { "line": 3148, "name": "getValidRowsNb", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "104": { "line": 3160, "name": "config", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "6": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "7": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "8": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "9": { "end": { "line": 8, "column": 0 }, "start": { "line": 8, "column": 0 } }, "10": { "end": { "line": 11, "column": 0 }, "start": { "line": 11, "column": 0 } }, "11": { "end": { "line": 13, "column": 0 }, "start": { "line": 13, "column": 0 } }, "12": { "end": { "line": 14, "column": 0 }, "start": { "line": 14, "column": 0 } }, "13": { "end": { "line": 15, "column": 0 }, "start": { "line": 15, "column": 0 } }, "14": { "end": { "line": 16, "column": 0 }, "start": { "line": 16, "column": 0 } }, "15": { "end": { "line": 17, "column": 0 }, "start": { "line": 17, "column": 0 } }, "16": { "end": { "line": 18, "column": 0 }, "start": { "line": 18, "column": 0 } }, "17": { "end": { "line": 19, "column": 0 }, "start": { "line": 19, "column": 0 } }, "18": { "end": { "line": 20, "column": 0 }, "start": { "line": 20, "column": 0 } }, "19": { "end": { "line": 21, "column": 0 }, "start": { "line": 21, "column": 0 } }, "20": { "end": { "line": 22, "column": 0 }, "start": { "line": 22, "column": 0 } }, "21": { "end": { "line": 23, "column": 0 }, "start": { "line": 23, "column": 0 } }, "22": { "end": { "line": 24, "column": 0 }, "start": { "line": 24, "column": 0 } }, "23": { "end": { "line": 25, "column": 0 }, "start": { "line": 25, "column": 0 } }, "24": { "end": { "line": 26, "column": 0 }, "start": { "line": 26, "column": 0 } }, "25": { "end": { "line": 27, "column": 0 }, "start": { "line": 27, "column": 0 } }, "26": { "end": { "line": 28, "column": 0 }, "start": { "line": 28, "column": 0 } }, "27": { "end": { "line": 29, "column": 0 }, "start": { "line": 29, "column": 0 } }, "28": { "end": { "line": 31, "column": 0 }, "start": { "line": 31, "column": 0 } }, "29": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "30": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "31": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "32": { "end": { "line": 37, "column": 0 }, "start": { "line": 37, "column": 0 } }, "33": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "34": { "end": { "line": 1005, "column": 5 }, "start": { "line": 55, "column": 4 } }, "35": { "end": { "line": 55, "column": 25 }, "start": { "line": 55, "column": 25 } }, "36": { "end": { "line": 55, "column": 25 }, "start": { "line": 55, "column": 25 } }, "37": { "end": { "line": 61, "column": 8 }, "start": { "line": 61, "column": 8 } }, "38": { "end": { "line": 67, "column": 8 }, "start": { "line": 67, "column": 8 } }, "39": { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 8 } }, "40": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "41": { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 8 } }, "42": { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }, "43": { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 8 } }, "44": { "end": { "line": 108, "column": 8 }, "start": { "line": 108, "column": 8 } }, "45": { "end": { "line": 115, "column": 8 }, "start": { "line": 115, "column": 8 } }, "46": { "end": { "line": 117, "column": 8 }, "start": { "line": 117, "column": 8 } }, "47": { "end": { "line": 55, "column": 25 }, "start": { "line": 55, "column": 25 } }, "48": { "end": { "line": 55, "column": 25 }, "start": { "line": 55, "column": 19 } }, "49": { "end": { "line": 120, "column": 8 }, "start": { "line": 120, "column": 8 } }, "50": { "end": { "line": 131, "column": 13 }, "start": { "line": 121, "column": 12 } }, "51": { "end": { "line": 122, "column": 16 }, "start": { "line": 122, "column": 16 } }, "52": { "end": { "line": 123, "column": 16 }, "start": { "line": 123, "column": 16 } }, "53": { "end": { "line": 131, "column": 13 }, "start": { "line": 124, "column": 19 } }, "54": { "end": { "line": 125, "column": 16 }, "start": { "line": 125, "column": 16 } }, "55": { "end": { "line": 126, "column": 16 }, "start": { "line": 126, "column": 16 } }, "56": { "end": { "line": 131, "column": 13 }, "start": { "line": 127, "column": 19 } }, "57": { "end": { "line": 128, "column": 16 }, "start": { "line": 128, "column": 16 } }, "58": { "end": { "line": 131, "column": 13 }, "start": { "line": 129, "column": 19 } }, "59": { "end": { "line": 130, "column": 16 }, "start": { "line": 130, "column": 16 } }, "60": { "end": { "line": 137, "column": 9 }, "start": { "line": 134, "column": 8 } }, "61": { "end": { "line": 135, "column": 12 }, "start": { "line": 135, "column": 12 } }, "62": { "end": { "line": 142, "column": 9 }, "start": { "line": 139, "column": 8 } }, "63": { "end": { "line": 140, "column": 12 }, "start": { "line": 140, "column": 12 } }, "64": { "end": { "line": 145, "column": 8 }, "start": { "line": 145, "column": 8 } }, "65": { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 8 } }, "66": { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }, "67": { "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 8 } }, "68": { "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 8 } }, "69": { "end": { "line": 174, "column": 8 }, "start": { "line": 174, "column": 8 } }, "70": { "end": { "line": 180, "column": 8 }, "start": { "line": 180, "column": 8 } }, "71": { "end": { "line": 187, "column": 8 }, "start": { "line": 187, "column": 8 } }, "72": { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 8 } }, "73": { "end": { "line": 202, "column": 8 }, "start": { "line": 202, "column": 8 } }, "74": { "end": { "line": 209, "column": 8 }, "start": { "line": 209, "column": 8 } }, "75": { "end": { "line": 216, "column": 8 }, "start": { "line": 216, "column": 8 } }, "76": { "end": { "line": 223, "column": 8 }, "start": { "line": 223, "column": 8 } }, "77": { "end": { "line": 231, "column": 8 }, "start": { "line": 231, "column": 8 } }, "78": { "end": { "line": 238, "column": 8 }, "start": { "line": 238, "column": 8 } }, "79": { "end": { "line": 244, "column": 8 }, "start": { "line": 244, "column": 8 } }, "80": { "end": { "line": 250, "column": 8 }, "start": { "line": 250, "column": 8 } }, "81": { "end": { "line": 256, "column": 8 }, "start": { "line": 256, "column": 8 } }, "82": { "end": { "line": 262, "column": 8 }, "start": { "line": 262, "column": 8 } }, "83": { "end": { "line": 269, "column": 8 }, "start": { "line": 269, "column": 8 } }, "84": { "end": { "line": 275, "column": 8 }, "start": { "line": 275, "column": 8 } }, "85": { "end": { "line": 282, "column": 8 }, "start": { "line": 282, "column": 8 } }, "86": { "end": { "line": 288, "column": 8 }, "start": { "line": 288, "column": 8 } }, "87": { "end": { "line": 294, "column": 8 }, "start": { "line": 294, "column": 8 } }, "88": { "end": { "line": 300, "column": 8 }, "start": { "line": 300, "column": 8 } }, "89": { "end": { "line": 307, "column": 8 }, "start": { "line": 307, "column": 8 } }, "90": { "end": { "line": 313, "column": 8 }, "start": { "line": 313, "column": 8 } }, "91": { "end": { "line": 319, "column": 8 }, "start": { "line": 319, "column": 8 } }, "92": { "end": { "line": 325, "column": 8 }, "start": { "line": 325, "column": 8 } }, "93": { "end": { "line": 331, "column": 8 }, "start": { "line": 331, "column": 8 } }, "94": { "end": { "line": 337, "column": 8 }, "start": { "line": 337, "column": 8 } }, "95": { "end": { "line": 345, "column": 8 }, "start": { "line": 345, "column": 8 } }, "96": { "end": { "line": 351, "column": 8 }, "start": { "line": 351, "column": 8 } }, "97": { "end": { "line": 358, "column": 8 }, "start": { "line": 358, "column": 8 } }, "98": { "end": { "line": 365, "column": 8 }, "start": { "line": 365, "column": 8 } }, "99": { "end": { "line": 373, "column": 8 }, "start": { "line": 373, "column": 8 } }, "100": { "end": { "line": 379, "column": 8 }, "start": { "line": 379, "column": 8 } }, "101": { "end": { "line": 386, "column": 8 }, "start": { "line": 386, "column": 8 } }, "102": { "end": { "line": 392, "column": 8 }, "start": { "line": 392, "column": 8 } }, "103": { "end": { "line": 398, "column": 8 }, "start": { "line": 398, "column": 8 } }, "104": { "end": { "line": 405, "column": 8 }, "start": { "line": 405, "column": 8 } }, "105": { "end": { "line": 412, "column": 8 }, "start": { "line": 412, "column": 8 } }, "106": { "end": { "line": 418, "column": 8 }, "start": { "line": 418, "column": 8 } }, "107": { "end": { "line": 424, "column": 8 }, "start": { "line": 424, "column": 8 } }, "108": { "end": { "line": 430, "column": 8 }, "start": { "line": 430, "column": 8 } }, "109": { "end": { "line": 436, "column": 8 }, "start": { "line": 436, "column": 8 } }, "110": { "end": { "line": 442, "column": 8 }, "start": { "line": 442, "column": 8 } }, "111": { "end": { "line": 449, "column": 8 }, "start": { "line": 449, "column": 8 } }, "112": { "end": { "line": 455, "column": 8 }, "start": { "line": 455, "column": 8 } }, "113": { "end": { "line": 462, "column": 8 }, "start": { "line": 462, "column": 8 } }, "114": { "end": { "line": 469, "column": 8 }, "start": { "line": 469, "column": 8 } }, "115": { "end": { "line": 477, "column": 8 }, "start": { "line": 477, "column": 8 } }, "116": { "end": { "line": 484, "column": 8 }, "start": { "line": 484, "column": 8 } }, "117": { "end": { "line": 490, "column": 8 }, "start": { "line": 490, "column": 8 } }, "118": { "end": { "line": 496, "column": 8 }, "start": { "line": 496, "column": 8 } }, "119": { "end": { "line": 503, "column": 8 }, "start": { "line": 503, "column": 8 } }, "120": { "end": { "line": 509, "column": 8 }, "start": { "line": 509, "column": 8 } }, "121": { "end": { "line": 515, "column": 8 }, "start": { "line": 515, "column": 8 } }, "122": { "end": { "line": 522, "column": 8 }, "start": { "line": 522, "column": 8 } }, "123": { "end": { "line": 529, "column": 8 }, "start": { "line": 529, "column": 8 } }, "124": { "end": { "line": 537, "column": 8 }, "start": { "line": 537, "column": 8 } }, "125": { "end": { "line": 543, "column": 8 }, "start": { "line": 543, "column": 8 } }, "126": { "end": { "line": 549, "column": 8 }, "start": { "line": 549, "column": 8 } }, "127": { "end": { "line": 556, "column": 8 }, "start": { "line": 556, "column": 8 } }, "128": { "end": { "line": 562, "column": 8 }, "start": { "line": 562, "column": 8 } }, "129": { "end": { "line": 569, "column": 8 }, "start": { "line": 569, "column": 8 } }, "130": { "end": { "line": 576, "column": 8 }, "start": { "line": 576, "column": 8 } }, "131": { "end": { "line": 584, "column": 8 }, "start": { "line": 584, "column": 8 } }, "132": { "end": { "line": 591, "column": 8 }, "start": { "line": 591, "column": 8 } }, "133": { "end": { "line": 599, "column": 8 }, "start": { "line": 599, "column": 8 } }, "134": { "end": { "line": 606, "column": 8 }, "start": { "line": 606, "column": 8 } }, "135": { "end": { "line": 613, "column": 8 }, "start": { "line": 613, "column": 8 } }, "136": { "end": { "line": 619, "column": 8 }, "start": { "line": 619, "column": 8 } }, "137": { "end": { "line": 638, "column": 8 }, "start": { "line": 638, "column": 8 } }, "138": { "end": { "line": 645, "column": 8 }, "start": { "line": 645, "column": 8 } }, "139": { "end": { "line": 651, "column": 8 }, "start": { "line": 651, "column": 8 } }, "140": { "end": { "line": 657, "column": 8 }, "start": { "line": 657, "column": 8 } }, "141": { "end": { "line": 663, "column": 8 }, "start": { "line": 663, "column": 8 } }, "142": { "end": { "line": 669, "column": 8 }, "start": { "line": 669, "column": 8 } }, "143": { "end": { "line": 675, "column": 8 }, "start": { "line": 675, "column": 8 } }, "144": { "end": { "line": 681, "column": 8 }, "start": { "line": 681, "column": 8 } }, "145": { "end": { "line": 687, "column": 8 }, "start": { "line": 687, "column": 8 } }, "146": { "end": { "line": 693, "column": 8 }, "start": { "line": 693, "column": 8 } }, "147": { "end": { "line": 699, "column": 8 }, "start": { "line": 699, "column": 8 } }, "148": { "end": { "line": 705, "column": 8 }, "start": { "line": 705, "column": 8 } }, "149": { "end": { "line": 711, "column": 8 }, "start": { "line": 711, "column": 8 } }, "150": { "end": { "line": 717, "column": 8 }, "start": { "line": 717, "column": 8 } }, "151": { "end": { "line": 723, "column": 8 }, "start": { "line": 723, "column": 8 } }, "152": { "end": { "line": 731, "column": 8 }, "start": { "line": 731, "column": 8 } }, "153": { "end": { "line": 737, "column": 8 }, "start": { "line": 737, "column": 8 } }, "154": { "end": { "line": 743, "column": 8 }, "start": { "line": 743, "column": 8 } }, "155": { "end": { "line": 749, "column": 8 }, "start": { "line": 749, "column": 8 } }, "156": { "end": { "line": 756, "column": 8 }, "start": { "line": 756, "column": 8 } }, "157": { "end": { "line": 762, "column": 8 }, "start": { "line": 762, "column": 8 } }, "158": { "end": { "line": 768, "column": 8 }, "start": { "line": 768, "column": 8 } }, "159": { "end": { "line": 775, "column": 8 }, "start": { "line": 775, "column": 8 } }, "160": { "end": { "line": 781, "column": 8 }, "start": { "line": 781, "column": 8 } }, "161": { "end": { "line": 788, "column": 8 }, "start": { "line": 788, "column": 8 } }, "162": { "end": { "line": 795, "column": 8 }, "start": { "line": 795, "column": 8 } }, "163": { "end": { "line": 802, "column": 8 }, "start": { "line": 802, "column": 8 } }, "164": { "end": { "line": 809, "column": 8 }, "start": { "line": 809, "column": 8 } }, "165": { "end": { "line": 815, "column": 8 }, "start": { "line": 815, "column": 8 } }, "166": { "end": { "line": 823, "column": 8 }, "start": { "line": 823, "column": 8 } }, "167": { "end": { "line": 830, "column": 8 }, "start": { "line": 830, "column": 8 } }, "168": { "end": { "line": 836, "column": 8 }, "start": { "line": 836, "column": 8 } }, "169": { "end": { "line": 842, "column": 8 }, "start": { "line": 842, "column": 8 } }, "170": { "end": { "line": 849, "column": 8 }, "start": { "line": 849, "column": 8 } }, "171": { "end": { "line": 858, "column": 8 }, "start": { "line": 858, "column": 8 } }, "172": { "end": { "line": 864, "column": 8 }, "start": { "line": 864, "column": 8 } }, "173": { "end": { "line": 870, "column": 8 }, "start": { "line": 870, "column": 8 } }, "174": { "end": { "line": 877, "column": 8 }, "start": { "line": 877, "column": 8 } }, "175": { "end": { "line": 893, "column": 8 }, "start": { "line": 893, "column": 8 } }, "176": { "end": { "line": 900, "column": 8 }, "start": { "line": 900, "column": 8 } }, "177": { "end": { "line": 906, "column": 8 }, "start": { "line": 906, "column": 8 } }, "178": { "end": { "line": 912, "column": 8 }, "start": { "line": 912, "column": 8 } }, "179": { "end": { "line": 918, "column": 8 }, "start": { "line": 918, "column": 8 } }, "180": { "end": { "line": 924, "column": 8 }, "start": { "line": 924, "column": 8 } }, "181": { "end": { "line": 930, "column": 8 }, "start": { "line": 930, "column": 8 } }, "182": { "end": { "line": 936, "column": 8 }, "start": { "line": 936, "column": 8 } }, "183": { "end": { "line": 942, "column": 8 }, "start": { "line": 942, "column": 8 } }, "184": { "end": { "line": 950, "column": 8 }, "start": { "line": 950, "column": 8 } }, "185": { "end": { "line": 957, "column": 8 }, "start": { "line": 957, "column": 8 } }, "186": { "end": { "line": 964, "column": 8 }, "start": { "line": 964, "column": 8 } }, "187": { "end": { "line": 971, "column": 8 }, "start": { "line": 971, "column": 8 } }, "188": { "end": { "line": 978, "column": 8 }, "start": { "line": 978, "column": 8 } }, "189": { "end": { "line": 986, "column": 8 }, "start": { "line": 986, "column": 8 } }, "190": { "end": { "line": 992, "column": 8 }, "start": { "line": 992, "column": 8 } }, "191": { "end": { "line": 998, "column": 8 }, "start": { "line": 998, "column": 8 } }, "192": { "end": { "line": 1004, "column": 8 }, "start": { "line": 1004, "column": 8 } }, "193": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "194": { "end": { "line": 1010, "column": 11 }, "start": { "line": 1010, "column": 11 } }, "195": { "end": { "line": 1013, "column": 9 }, "start": { "line": 1011, "column": 8 } }, "196": { "end": { "line": 1012, "column": 12 }, "start": { "line": 1012, "column": 12 } }, "197": { "end": { "line": 1015, "column": 8 }, "start": { "line": 1015, "column": 8 } }, "198": { "end": { "line": 1016, "column": 8 }, "start": { "line": 1016, "column": 8 } }, "199": { "end": { "line": 1017, "column": 8 }, "start": { "line": 1017, "column": 8 } }, "200": { "end": { "line": 1018, "column": 8 }, "start": { "line": 1018, "column": 8 } }, "201": { "end": { "line": 1021, "column": 8 }, "start": { "line": 1021, "column": 8 } }, "202": { "end": { "line": 1026, "column": 9 }, "start": { "line": 1024, "column": 8 } }, "203": { "end": { "line": 1025, "column": 12 }, "start": { "line": 1025, "column": 12 } }, "204": { "end": { "line": 1029, "column": 8 }, "start": { "line": 1029, "column": 8 } }, "205": { "end": { "line": 1030, "column": 8 }, "start": { "line": 1030, "column": 8 } }, "206": { "end": { "line": 1033, "column": 8 }, "start": { "line": 1033, "column": 8 } }, "207": { "end": { "line": 1036, "column": 9 }, "start": { "line": 1034, "column": 8 } }, "208": { "end": { "line": 1035, "column": 12 }, "start": { "line": 1035, "column": 12 } }, "209": { "end": { "line": 1041, "column": 9 }, "start": { "line": 1038, "column": 8 } }, "210": { "end": { "line": 1039, "column": 12 }, "start": { "line": 1039, "column": 12 } }, "211": { "end": { "line": 1040, "column": 12 }, "start": { "line": 1040, "column": 12 } }, "212": { "end": { "line": 1046, "column": 9 }, "start": { "line": 1043, "column": 8 } }, "213": { "end": { "line": 1044, "column": 12 }, "start": { "line": 1044, "column": 12 } }, "214": { "end": { "line": 1045, "column": 12 }, "start": { "line": 1045, "column": 12 } }, "215": { "end": { "line": 1051, "column": 9 }, "start": { "line": 1048, "column": 8 } }, "216": { "end": { "line": 1049, "column": 12 }, "start": { "line": 1049, "column": 12 } }, "217": { "end": { "line": 1050, "column": 12 }, "start": { "line": 1050, "column": 12 } }, "218": { "end": { "line": 1056, "column": 9 }, "start": { "line": 1053, "column": 8 } }, "219": { "end": { "line": 1054, "column": 12 }, "start": { "line": 1054, "column": 12 } }, "220": { "end": { "line": 1055, "column": 12 }, "start": { "line": 1055, "column": 12 } }, "221": { "end": { "line": 1061, "column": 9 }, "start": { "line": 1058, "column": 8 } }, "222": { "end": { "line": 1059, "column": 12 }, "start": { "line": 1059, "column": 12 } }, "223": { "end": { "line": 1060, "column": 12 }, "start": { "line": 1060, "column": 12 } }, "224": { "end": { "line": 1010, "column": 11 }, "start": { "line": 1064, "column": 8 } }, "225": { "end": { "line": 1065, "column": 12 }, "start": { "line": 1065, "column": 12 } }, "226": { "end": { "line": 1067, "column": 12 }, "start": { "line": 1067, "column": 12 } }, "227": { "end": { "line": 1069, "column": 12 }, "start": { "line": 1069, "column": 12 } }, "228": { "end": { "line": 1116, "column": 13 }, "start": { "line": 1072, "column": 12 } }, "229": { "end": { "line": 1073, "column": 16 }, "start": { "line": 1073, "column": 16 } }, "230": { "end": { "line": 1075, "column": 16 }, "start": { "line": 1075, "column": 16 } }, "231": { "end": { "line": 1080, "column": 17 }, "start": { "line": 1078, "column": 16 } }, "232": { "end": { "line": 1079, "column": 20 }, "start": { "line": 1079, "column": 20 } }, "233": { "end": { "line": 1083, "column": 17 }, "start": { "line": 1081, "column": 16 } }, "234": { "end": { "line": 1082, "column": 20 }, "start": { "line": 1082, "column": 20 } }, "235": { "end": { "line": 1084, "column": 16 }, "start": { "line": 1084, "column": 16 } }, "236": { "end": { "line": 1091, "column": 17 }, "start": { "line": 1088, "column": 16 } }, "237": { "end": { "line": 1089, "column": 20 }, "start": { "line": 1089, "column": 20 } }, "238": { "end": { "line": 1090, "column": 20 }, "start": { "line": 1090, "column": 20 } }, "239": { "end": { "line": 1108, "column": 17 }, "start": { "line": 1094, "column": 16 } }, "240": { "end": { "line": 1097, "column": 21 }, "start": { "line": 1095, "column": 20 } }, "241": { "end": { "line": 1096, "column": 24 }, "start": { "line": 1096, "column": 24 } }, "242": { "end": { "line": 1098, "column": 20 }, "start": { "line": 1098, "column": 20 } }, "243": { "end": { "line": 1108, "column": 17 }, "start": { "line": 1101, "column": 21 } }, "244": { "end": { "line": 1104, "column": 21 }, "start": { "line": 1102, "column": 20 } }, "245": { "end": { "line": 1103, "column": 24 }, "start": { "line": 1103, "column": 24 } }, "246": { "end": { "line": 1105, "column": 20 }, "start": { "line": 1105, "column": 20 } }, "247": { "end": { "line": 1107, "column": 20 }, "start": { "line": 1107, "column": 20 } }, "248": { "end": { "line": 1113, "column": 17 }, "start": { "line": 1111, "column": 16 } }, "249": { "end": { "line": 1112, "column": 20 }, "start": { "line": 1112, "column": 20 } }, "250": { "end": { "line": 1115, "column": 16 }, "start": { "line": 1115, "column": 16 } }, "251": { "end": { "line": 1118, "column": 12 }, "start": { "line": 1118, "column": 12 } }, "252": { "end": { "line": 1119, "column": 16 }, "start": { "line": 1119, "column": 16 } }, "253": { "end": { "line": 1128, "column": 9 }, "start": { "line": 1124, "column": 8 } }, "254": { "end": { "line": 1125, "column": 12 }, "start": { "line": 1125, "column": 12 } }, "255": { "end": { "line": 1126, "column": 16 }, "start": { "line": 1126, "column": 16 } }, "256": { "end": { "line": 1127, "column": 12 }, "start": { "line": 1127, "column": 12 } }, "257": { "end": { "line": 1132, "column": 9 }, "start": { "line": 1129, "column": 8 } }, "258": { "end": { "line": 1130, "column": 12 }, "start": { "line": 1130, "column": 12 } }, "259": { "end": { "line": 1131, "column": 12 }, "start": { "line": 1131, "column": 12 } }, "260": { "end": { "line": 1136, "column": 9 }, "start": { "line": 1133, "column": 8 } }, "261": { "end": { "line": 1134, "column": 12 }, "start": { "line": 1134, "column": 12 } }, "262": { "end": { "line": 1135, "column": 12 }, "start": { "line": 1135, "column": 12 } }, "263": { "end": { "line": 1144, "column": 9 }, "start": { "line": 1137, "column": 8 } }, "264": { "end": { "line": 1143, "column": 13 }, "start": { "line": 1138, "column": 12 } }, "265": { "end": { "line": 1139, "column": 16 }, "start": { "line": 1139, "column": 16 } }, "266": { "end": { "line": 1140, "column": 16 }, "start": { "line": 1140, "column": 16 } }, "267": { "end": { "line": 1142, "column": 16 }, "start": { "line": 1142, "column": 16 } }, "268": { "end": { "line": 1148, "column": 9 }, "start": { "line": 1145, "column": 8 } }, "269": { "end": { "line": 1146, "column": 12 }, "start": { "line": 1146, "column": 12 } }, "270": { "end": { "line": 1147, "column": 12 }, "start": { "line": 1147, "column": 12 } }, "271": { "end": { "line": 1152, "column": 9 }, "start": { "line": 1150, "column": 8 } }, "272": { "end": { "line": 1151, "column": 12 }, "start": { "line": 1151, "column": 12 } }, "273": { "end": { "line": 1156, "column": 9 }, "start": { "line": 1153, "column": 8 } }, "274": { "end": { "line": 1154, "column": 12 }, "start": { "line": 1154, "column": 12 } }, "275": { "end": { "line": 1155, "column": 12 }, "start": { "line": 1155, "column": 12 } }, "276": { "end": { "line": 1160, "column": 9 }, "start": { "line": 1157, "column": 8 } }, "277": { "end": { "line": 1158, "column": 12 }, "start": { "line": 1158, "column": 12 } }, "278": { "end": { "line": 1159, "column": 12 }, "start": { "line": 1159, "column": 12 } }, "279": { "end": { "line": 1168, "column": 9 }, "start": { "line": 1163, "column": 8 } }, "280": { "end": { "line": 1164, "column": 12 }, "start": { "line": 1164, "column": 12 } }, "281": { "end": { "line": 1167, "column": 13 }, "start": { "line": 1165, "column": 12 } }, "282": { "end": { "line": 1166, "column": 16 }, "start": { "line": 1166, "column": 16 } }, "283": { "end": { "line": 1173, "column": 9 }, "start": { "line": 1171, "column": 8 } }, "284": { "end": { "line": 1172, "column": 12 }, "start": { "line": 1172, "column": 12 } }, "285": { "end": { "line": 1181, "column": 9 }, "start": { "line": 1176, "column": 8 } }, "286": { "end": { "line": 1177, "column": 12 }, "start": { "line": 1177, "column": 12 } }, "287": { "end": { "line": 1178, "column": 16 }, "start": { "line": 1178, "column": 16 } }, "288": { "end": { "line": 1179, "column": 12 }, "start": { "line": 1179, "column": 12 } }, "289": { "end": { "line": 1180, "column": 16 }, "start": { "line": 1180, "column": 16 } }, "290": { "end": { "line": 1184, "column": 9 }, "start": { "line": 1182, "column": 8 } }, "291": { "end": { "line": 1183, "column": 12 }, "start": { "line": 1183, "column": 12 } }, "292": { "end": { "line": 1183, "column": 49 }, "start": { "line": 1183, "column": 49 } }, "293": { "end": { "line": 1187, "column": 8 }, "start": { "line": 1187, "column": 8 } }, "294": { "end": { "line": 1189, "column": 8 }, "start": { "line": 1189, "column": 8 } }, "295": { "end": { "line": 1191, "column": 8 }, "start": { "line": 1191, "column": 8 } }, "296": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "297": { "end": { "line": 1201, "column": 9 }, "start": { "line": 1199, "column": 8 } }, "298": { "end": { "line": 1200, "column": 12 }, "start": { "line": 1200, "column": 12 } }, "299": { "end": { "line": 1213, "column": 9 }, "start": { "line": 1202, "column": 8 } }, "300": { "end": { "line": 1203, "column": 12 }, "start": { "line": 1203, "column": 12 } }, "301": { "end": { "line": 1212, "column": 13 }, "start": { "line": 1204, "column": 12 } }, "302": { "end": { "line": 1205, "column": 16 }, "start": { "line": 1205, "column": 16 } }, "303": { "end": { "line": 1206, "column": 16 }, "start": { "line": 1206, "column": 16 } }, "304": { "end": { "line": 1207, "column": 16 }, "start": { "line": 1207, "column": 16 } }, "305": { "end": { "line": 1209, "column": 16 }, "start": { "line": 1209, "column": 16 } }, "306": { "end": { "line": 1210, "column": 16 }, "start": { "line": 1210, "column": 16 } }, "307": { "end": { "line": 1211, "column": 16 }, "start": { "line": 1211, "column": 16 } }, "308": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "309": { "end": { "line": 1224, "column": 9 }, "start": { "line": 1222, "column": 8 } }, "310": { "end": { "line": 1223, "column": 12 }, "start": { "line": 1223, "column": 12 } }, "311": { "end": { "line": 1225, "column": 8 }, "start": { "line": 1225, "column": 8 } }, "312": { "end": { "line": 1226, "column": 8 }, "start": { "line": 1226, "column": 8 } }, "313": { "end": { "line": 1235, "column": 9 }, "start": { "line": 1228, "column": 8 } }, "314": { "end": { "line": 1229, "column": 12 }, "start": { "line": 1229, "column": 12 } }, "315": { "end": { "line": 1230, "column": 12 }, "start": { "line": 1230, "column": 12 } }, "316": { "end": { "line": 1234, "column": 13 }, "start": { "line": 1231, "column": 12 } }, "317": { "end": { "line": 1232, "column": 16 }, "start": { "line": 1232, "column": 16 } }, "318": { "end": { "line": 1233, "column": 16 }, "start": { "line": 1233, "column": 16 } }, "319": { "end": { "line": 1246, "column": 9 }, "start": { "line": 1237, "column": 8 } }, "320": { "end": { "line": 1242, "column": 13 }, "start": { "line": 1239, "column": 12 } }, "321": { "end": { "line": 1240, "column": 16 }, "start": { "line": 1240, "column": 16 } }, "322": { "end": { "line": 1244, "column": 12 }, "start": { "line": 1244, "column": 12 } }, "323": { "end": { "line": 1245, "column": 12 }, "start": { "line": 1245, "column": 12 } }, "324": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "325": { "end": { "line": 1255, "column": 9 }, "start": { "line": 1253, "column": 8 } }, "326": { "end": { "line": 1254, "column": 12 }, "start": { "line": 1254, "column": 12 } }, "327": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "328": { "end": { "line": 1263, "column": 8 }, "start": { "line": 1263, "column": 8 } }, "329": { "end": { "line": 1264, "column": 8 }, "start": { "line": 1264, "column": 8 } }, "330": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "331": { "end": { "line": 1274, "column": 9 }, "start": { "line": 1271, "column": 8 } }, "332": { "end": { "line": 1272, "column": 12 }, "start": { "line": 1272, "column": 12 } }, "333": { "end": { "line": 1273, "column": 12 }, "start": { "line": 1273, "column": 12 } }, "334": { "end": { "line": 1275, "column": 8 }, "start": { "line": 1275, "column": 8 } }, "335": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "336": { "end": { "line": 1287, "column": 9 }, "start": { "line": 1285, "column": 8 } }, "337": { "end": { "line": 1286, "column": 12 }, "start": { "line": 1286, "column": 12 } }, "338": { "end": { "line": 1288, "column": 8 }, "start": { "line": 1288, "column": 8 } }, "339": { "end": { "line": 1290, "column": 8 }, "start": { "line": 1290, "column": 8 } }, "340": { "end": { "line": 1295, "column": 9 }, "start": { "line": 1291, "column": 8 } }, "341": { "end": { "line": 1292, "column": 12 }, "start": { "line": 1292, "column": 12 } }, "342": { "end": { "line": 1294, "column": 12 }, "start": { "line": 1294, "column": 12 } }, "343": { "end": { "line": 1297, "column": 8 }, "start": { "line": 1297, "column": 8 } }, "344": { "end": { "line": 1301, "column": 9 }, "start": { "line": 1299, "column": 8 } }, "345": { "end": { "line": 1300, "column": 12 }, "start": { "line": 1300, "column": 12 } }, "346": { "end": { "line": 1303, "column": 8 }, "start": { "line": 1303, "column": 8 } }, "347": { "end": { "line": 1304, "column": 8 }, "start": { "line": 1304, "column": 8 } }, "348": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "349": { "end": { "line": 1313, "column": 9 }, "start": { "line": 1311, "column": 8 } }, "350": { "end": { "line": 1312, "column": 12 }, "start": { "line": 1312, "column": 12 } }, "351": { "end": { "line": 1314, "column": 8 }, "start": { "line": 1314, "column": 8 } }, "352": { "end": { "line": 1315, "column": 8 }, "start": { "line": 1315, "column": 8 } }, "353": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "354": { "end": { "line": 1324, "column": 53 }, "start": { "line": 1324, "column": 53 } }, "355": { "end": { "line": 1325, "column": 8 }, "start": { "line": 1325, "column": 8 } }, "356": { "end": { "line": 1326, "column": 8 }, "start": { "line": 1326, "column": 8 } }, "357": { "end": { "line": 1328, "column": 8 }, "start": { "line": 1328, "column": 8 } }, "358": { "end": { "line": 1329, "column": 8 }, "start": { "line": 1329, "column": 8 } }, "359": { "end": { "line": 1338, "column": 9 }, "start": { "line": 1333, "column": 8 } }, "360": { "end": { "line": 1334, "column": 12 }, "start": { "line": 1334, "column": 12 } }, "361": { "end": { "line": 1339, "column": 8 }, "start": { "line": 1339, "column": 8 } }, "362": { "end": { "line": 1340, "column": 8 }, "start": { "line": 1340, "column": 8 } }, "363": { "end": { "line": 1340, "column": 29 }, "start": { "line": 1340, "column": 29 } }, "364": { "end": { "line": 1347, "column": 9 }, "start": { "line": 1343, "column": 8 } }, "365": { "end": { "line": 1344, "column": 12 }, "start": { "line": 1344, "column": 12 } }, "366": { "end": { "line": 1346, "column": 12 }, "start": { "line": 1346, "column": 12 } }, "367": { "end": { "line": 1349, "column": 8 }, "start": { "line": 1349, "column": 8 } }, "368": { "end": { "line": 1351, "column": 8 }, "start": { "line": 1351, "column": 8 } }, "369": { "end": { "line": 1351, "column": 32 }, "start": { "line": 1351, "column": 32 } }, "370": { "end": { "line": 1352, "column": 8 }, "start": { "line": 1352, "column": 8 } }, "371": { "end": { "line": 1352, "column": 31 }, "start": { "line": 1352, "column": 31 } }, "372": { "end": { "line": 1353, "column": 8 }, "start": { "line": 1353, "column": 8 } }, "373": { "end": { "line": 1353, "column": 29 }, "start": { "line": 1353, "column": 29 } }, "374": { "end": { "line": 1354, "column": 8 }, "start": { "line": 1354, "column": 8 } }, "375": { "end": { "line": 1354, "column": 28 }, "start": { "line": 1354, "column": 28 } }, "376": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "377": { "end": { "line": 1362, "column": 44 }, "start": { "line": 1362, "column": 44 } }, "378": { "end": { "line": 1363, "column": 8 }, "start": { "line": 1363, "column": 8 } }, "379": { "end": { "line": 1365, "column": 8 }, "start": { "line": 1365, "column": 8 } }, "380": { "end": { "line": 1369, "column": 8 }, "start": { "line": 1369, "column": 8 } }, "381": { "end": { "line": 1376, "column": 9 }, "start": { "line": 1372, "column": 8 } }, "382": { "end": { "line": 1373, "column": 12 }, "start": { "line": 1373, "column": 12 } }, "383": { "end": { "line": 1375, "column": 12 }, "start": { "line": 1375, "column": 12 } }, "384": { "end": { "line": 1378, "column": 8 }, "start": { "line": 1378, "column": 8 } }, "385": { "end": { "line": 1378, "column": 29 }, "start": { "line": 1378, "column": 29 } }, "386": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "387": { "end": { "line": 1387, "column": 8 }, "start": { "line": 1387, "column": 8 } }, "388": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "389": { "end": { "line": 1394, "column": 8 }, "start": { "line": 1394, "column": 8 } }, "390": { "end": { "line": 1396, "column": 8 }, "start": { "line": 1396, "column": 8 } }, "391": { "end": { "line": 1398, "column": 8 }, "start": { "line": 1398, "column": 8 } }, "392": { "end": { "line": 1404, "column": 9 }, "start": { "line": 1399, "column": 8 } }, "393": { "end": { "line": 1400, "column": 12 }, "start": { "line": 1400, "column": 12 } }, "394": { "end": { "line": 1403, "column": 13 }, "start": { "line": 1401, "column": 12 } }, "395": { "end": { "line": 1402, "column": 16 }, "start": { "line": 1402, "column": 16 } }, "396": { "end": { "line": 1405, "column": 8 }, "start": { "line": 1405, "column": 8 } }, "397": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "398": { "end": { "line": 1412, "column": 23 }, "start": { "line": 1412, "column": 23 } }, "399": { "end": { "line": 1415, "column": 9 }, "start": { "line": 1413, "column": 8 } }, "400": { "end": { "line": 1414, "column": 12 }, "start": { "line": 1414, "column": 12 } }, "401": { "end": { "line": 1417, "column": 8 }, "start": { "line": 1417, "column": 8 } }, "402": { "end": { "line": 1418, "column": 8 }, "start": { "line": 1418, "column": 8 } }, "403": { "end": { "line": 1419, "column": 8 }, "start": { "line": 1419, "column": 8 } }, "404": { "end": { "line": 1426, "column": 9 }, "start": { "line": 1421, "column": 8 } }, "405": { "end": { "line": 1422, "column": 12 }, "start": { "line": 1422, "column": 12 } }, "406": { "end": { "line": 1424, "column": 12 }, "start": { "line": 1424, "column": 12 } }, "407": { "end": { "line": 1425, "column": 12 }, "start": { "line": 1425, "column": 12 } }, "408": { "end": { "line": 1429, "column": 8 }, "start": { "line": 1429, "column": 8 } }, "409": { "end": { "line": 1431, "column": 12 }, "start": { "line": 1431, "column": 12 } }, "410": { "end": { "line": 1433, "column": 12 }, "start": { "line": 1433, "column": 12 } }, "411": { "end": { "line": 1434, "column": 12 }, "start": { "line": 1434, "column": 12 } }, "412": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "413": { "end": { "line": 1444, "column": 8 }, "start": { "line": 1444, "column": 8 } }, "414": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "415": { "end": { "line": 1453, "column": 8 }, "start": { "line": 1453, "column": 8 } }, "416": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "417": { "end": { "line": 1460, "column": 8 }, "start": { "line": 1460, "column": 8 } }, "418": { "end": { "line": 1469, "column": 9 }, "start": { "line": 1462, "column": 8 } }, "419": { "end": { "line": 1463, "column": 12 }, "start": { "line": 1463, "column": 12 } }, "420": { "end": { "line": 1464, "column": 12 }, "start": { "line": 1464, "column": 12 } }, "421": { "end": { "line": 1468, "column": 13 }, "start": { "line": 1465, "column": 12 } }, "422": { "end": { "line": 1466, "column": 16 }, "start": { "line": 1466, "column": 16 } }, "423": { "end": { "line": 1467, "column": 16 }, "start": { "line": 1467, "column": 16 } }, "424": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "425": { "end": { "line": 1476, "column": 8 }, "start": { "line": 1476, "column": 8 } }, "426": { "end": { "line": 1477, "column": 8 }, "start": { "line": 1477, "column": 8 } }, "427": { "end": { "line": 1483, "column": 9 }, "start": { "line": 1480, "column": 8 } }, "428": { "end": { "line": 1481, "column": 12 }, "start": { "line": 1481, "column": 12 } }, "429": { "end": { "line": 1482, "column": 12 }, "start": { "line": 1482, "column": 12 } }, "430": { "end": { "line": 1501, "column": 9 }, "start": { "line": 1484, "column": 8 } }, "431": { "end": { "line": 1500, "column": 13 }, "start": { "line": 1485, "column": 12 } }, "432": { "end": { "line": 1486, "column": 16 }, "start": { "line": 1486, "column": 16 } }, "433": { "end": { "line": 1487, "column": 16 }, "start": { "line": 1487, "column": 16 } }, "434": { "end": { "line": 1488, "column": 16 }, "start": { "line": 1488, "column": 16 } }, "435": { "end": { "line": 1489, "column": 16 }, "start": { "line": 1489, "column": 16 } }, "436": { "end": { "line": 1495, "column": 17 }, "start": { "line": 1490, "column": 16 } }, "437": { "end": { "line": 1491, "column": 20 }, "start": { "line": 1491, "column": 20 } }, "438": { "end": { "line": 1495, "column": 17 }, "start": { "line": 1493, "column": 21 } }, "439": { "end": { "line": 1494, "column": 20 }, "start": { "line": 1494, "column": 20 } }, "440": { "end": { "line": 1499, "column": 17 }, "start": { "line": 1497, "column": 16 } }, "441": { "end": { "line": 1498, "column": 20 }, "start": { "line": 1498, "column": 20 } }, "442": { "end": { "line": 1504, "column": 8 }, "start": { "line": 1504, "column": 8 } }, "443": { "end": { "line": 1506, "column": 8 }, "start": { "line": 1506, "column": 8 } }, "444": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "445": { "end": { "line": 1513, "column": 36 }, "start": { "line": 1513, "column": 36 } }, "446": { "end": { "line": 1514, "column": 8 }, "start": { "line": 1514, "column": 8 } }, "447": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "448": { "end": { "line": 1520, "column": 14 }, "start": { "line": 1520, "column": 14 } }, "449": { "end": { "line": 1523, "column": 9 }, "start": { "line": 1521, "column": 8 } }, "450": { "end": { "line": 1522, "column": 12 }, "start": { "line": 1522, "column": 12 } }, "451": { "end": { "line": 1525, "column": 8 }, "start": { "line": 1525, "column": 8 } }, "452": { "end": { "line": 1529, "column": 9 }, "start": { "line": 1527, "column": 8 } }, "453": { "end": { "line": 1528, "column": 12 }, "start": { "line": 1528, "column": 12 } }, "454": { "end": { "line": 1532, "column": 9 }, "start": { "line": 1530, "column": 8 } }, "455": { "end": { "line": 1531, "column": 12 }, "start": { "line": 1531, "column": 12 } }, "456": { "end": { "line": 1538, "column": 9 }, "start": { "line": 1533, "column": 8 } }, "457": { "end": { "line": 1534, "column": 12 }, "start": { "line": 1534, "column": 12 } }, "458": { "end": { "line": 1535, "column": 12 }, "start": { "line": 1535, "column": 12 } }, "459": { "end": { "line": 1535, "column": 46 }, "start": { "line": 1535, "column": 46 } }, "460": { "end": { "line": 1536, "column": 12 }, "start": { "line": 1536, "column": 12 } }, "461": { "end": { "line": 1537, "column": 16 }, "start": { "line": 1537, "column": 16 } }, "462": { "end": { "line": 1541, "column": 9 }, "start": { "line": 1539, "column": 8 } }, "463": { "end": { "line": 1540, "column": 12 }, "start": { "line": 1540, "column": 12 } }, "464": { "end": { "line": 1543, "column": 8 }, "start": { "line": 1543, "column": 8 } }, "465": { "end": { "line": 1547, "column": 9 }, "start": { "line": 1545, "column": 8 } }, "466": { "end": { "line": 1546, "column": 12 }, "start": { "line": 1546, "column": 12 } }, "467": { "end": { "line": 1550, "column": 8 }, "start": { "line": 1550, "column": 8 } }, "468": { "end": { "line": 1555, "column": 9 }, "start": { "line": 1553, "column": 8 } }, "469": { "end": { "line": 1554, "column": 12 }, "start": { "line": 1554, "column": 12 } }, "470": { "end": { "line": 1554, "column": 45 }, "start": { "line": 1554, "column": 45 } }, "471": { "end": { "line": 1558, "column": 9 }, "start": { "line": 1556, "column": 8 } }, "472": { "end": { "line": 1557, "column": 12 }, "start": { "line": 1557, "column": 12 } }, "473": { "end": { "line": 1557, "column": 45 }, "start": { "line": 1557, "column": 45 } }, "474": { "end": { "line": 1559, "column": 8 }, "start": { "line": 1559, "column": 8 } }, "475": { "end": { "line": 1560, "column": 12 }, "start": { "line": 1560, "column": 12 } }, "476": { "end": { "line": 1562, "column": 8 }, "start": { "line": 1562, "column": 8 } }, "477": { "end": { "line": 1563, "column": 8 }, "start": { "line": 1563, "column": 8 } }, "478": { "end": { "line": 1565, "column": 8 }, "start": { "line": 1565, "column": 8 } }, "479": { "end": { "line": 1566, "column": 8 }, "start": { "line": 1566, "column": 8 } }, "480": { "end": { "line": 1567, "column": 8 }, "start": { "line": 1567, "column": 8 } }, "481": { "end": { "line": 1568, "column": 8 }, "start": { "line": 1568, "column": 8 } }, "482": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "483": { "end": { "line": 1577, "column": 9 }, "start": { "line": 1575, "column": 8 } }, "484": { "end": { "line": 1576, "column": 12 }, "start": { "line": 1576, "column": 12 } }, "485": { "end": { "line": 1580, "column": 8 }, "start": { "line": 1580, "column": 8 } }, "486": { "end": { "line": 1581, "column": 8 }, "start": { "line": 1581, "column": 8 } }, "487": { "end": { "line": 1598, "column": 9 }, "start": { "line": 1584, "column": 8 } }, "488": { "end": { "line": 1585, "column": 12 }, "start": { "line": 1585, "column": 12 } }, "489": { "end": { "line": 1598, "column": 9 }, "start": { "line": 1588, "column": 13 } }, "490": { "end": { "line": 1589, "column": 12 }, "start": { "line": 1589, "column": 12 } }, "491": { "end": { "line": 1590, "column": 12 }, "start": { "line": 1590, "column": 12 } }, "492": { "end": { "line": 1591, "column": 12 }, "start": { "line": 1591, "column": 12 } }, "493": { "end": { "line": 1595, "column": 12 }, "start": { "line": 1595, "column": 12 } }, "494": { "end": { "line": 1596, "column": 12 }, "start": { "line": 1596, "column": 12 } }, "495": { "end": { "line": 1597, "column": 12 }, "start": { "line": 1597, "column": 12 } }, "496": { "end": { "line": 1599, "column": 8 }, "start": { "line": 1599, "column": 8 } }, "497": { "end": { "line": 1602, "column": 8 }, "start": { "line": 1602, "column": 8 } }, "498": { "end": { "line": 1603, "column": 8 }, "start": { "line": 1603, "column": 8 } }, "499": { "end": { "line": 1604, "column": 8 }, "start": { "line": 1604, "column": 8 } }, "500": { "end": { "line": 1605, "column": 8 }, "start": { "line": 1605, "column": 8 } }, "501": { "end": { "line": 1609, "column": 8 }, "start": { "line": 1609, "column": 8 } }, "502": { "end": { "line": 1610, "column": 8 }, "start": { "line": 1610, "column": 8 } }, "503": { "end": { "line": 1611, "column": 8 }, "start": { "line": 1611, "column": 8 } }, "504": { "end": { "line": 1612, "column": 8 }, "start": { "line": 1612, "column": 8 } }, "505": { "end": { "line": 1615, "column": 8 }, "start": { "line": 1615, "column": 8 } }, "506": { "end": { "line": 1616, "column": 8 }, "start": { "line": 1616, "column": 8 } }, "507": { "end": { "line": 1617, "column": 8 }, "start": { "line": 1617, "column": 8 } }, "508": { "end": { "line": 1618, "column": 8 }, "start": { "line": 1618, "column": 8 } }, "509": { "end": { "line": 1626, "column": 9 }, "start": { "line": 1621, "column": 8 } }, "510": { "end": { "line": 1624, "column": 12 }, "start": { "line": 1624, "column": 12 } }, "511": { "end": { "line": 1625, "column": 12 }, "start": { "line": 1625, "column": 12 } }, "512": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "513": { "end": { "line": 1635, "column": 9 }, "start": { "line": 1633, "column": 8 } }, "514": { "end": { "line": 1634, "column": 12 }, "start": { "line": 1634, "column": 12 } }, "515": { "end": { "line": 1636, "column": 8 }, "start": { "line": 1636, "column": 8 } }, "516": { "end": { "line": 1637, "column": 8 }, "start": { "line": 1637, "column": 8 } }, "517": { "end": { "line": 1639, "column": 8 }, "start": { "line": 1639, "column": 8 } }, "518": { "end": { "line": 1640, "column": 8 }, "start": { "line": 1640, "column": 8 } }, "519": { "end": { "line": 1643, "column": 9 }, "start": { "line": 1641, "column": 8 } }, "520": { "end": { "line": 1642, "column": 12 }, "start": { "line": 1642, "column": 12 } }, "521": { "end": { "line": 1642, "column": 38 }, "start": { "line": 1642, "column": 38 } }, "522": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "523": { "end": { "line": 1652, "column": 9 }, "start": { "line": 1650, "column": 8 } }, "524": { "end": { "line": 1651, "column": 12 }, "start": { "line": 1651, "column": 12 } }, "525": { "end": { "line": 1653, "column": 8 }, "start": { "line": 1653, "column": 8 } }, "526": { "end": { "line": 1661, "column": 9 }, "start": { "line": 1655, "column": 8 } }, "527": { "end": { "line": 1656, "column": 12 }, "start": { "line": 1656, "column": 12 } }, "528": { "end": { "line": 1660, "column": 13 }, "start": { "line": 1658, "column": 12 } }, "529": { "end": { "line": 1659, "column": 16 }, "start": { "line": 1659, "column": 16 } }, "530": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "531": { "end": { "line": 1670, "column": 8 }, "start": { "line": 1670, "column": 8 } }, "532": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "533": { "end": { "line": 1683, "column": 9 }, "start": { "line": 1681, "column": 8 } }, "534": { "end": { "line": 1682, "column": 12 }, "start": { "line": 1682, "column": 12 } }, "535": { "end": { "line": 1685, "column": 8 }, "start": { "line": 1685, "column": 8 } }, "536": { "end": { "line": 1686, "column": 8 }, "start": { "line": 1686, "column": 8 } }, "537": { "end": { "line": 1687, "column": 8 }, "start": { "line": 1687, "column": 8 } }, "538": { "end": { "line": 1688, "column": 8 }, "start": { "line": 1688, "column": 8 } }, "539": { "end": { "line": 1689, "column": 8 }, "start": { "line": 1689, "column": 8 } }, "540": { "end": { "line": 1690, "column": 8 }, "start": { "line": 1690, "column": 8 } }, "541": { "end": { "line": 1691, "column": 8 }, "start": { "line": 1691, "column": 8 } }, "542": { "end": { "line": 1700, "column": 9 }, "start": { "line": 1693, "column": 8 } }, "543": { "end": { "line": 1694, "column": 12 }, "start": { "line": 1694, "column": 12 } }, "544": { "end": { "line": 1699, "column": 13 }, "start": { "line": 1695, "column": 12 } }, "545": { "end": { "line": 1696, "column": 16 }, "start": { "line": 1696, "column": 16 } }, "546": { "end": { "line": 1698, "column": 16 }, "start": { "line": 1698, "column": 16 } }, "547": { "end": { "line": 1704, "column": 9 }, "start": { "line": 1701, "column": 8 } }, "548": { "end": { "line": 1702, "column": 12 }, "start": { "line": 1702, "column": 12 } }, "549": { "end": { "line": 1703, "column": 12 }, "start": { "line": 1703, "column": 12 } }, "550": { "end": { "line": 1705, "column": 8 }, "start": { "line": 1705, "column": 8 } }, "551": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "552": { "end": { "line": 1716, "column": 9 }, "start": { "line": 1714, "column": 8 } }, "553": { "end": { "line": 1715, "column": 12 }, "start": { "line": 1715, "column": 12 } }, "554": { "end": { "line": 1718, "column": 8 }, "start": { "line": 1718, "column": 8 } }, "555": { "end": { "line": 1719, "column": 8 }, "start": { "line": 1719, "column": 8 } }, "556": { "end": { "line": 1721, "column": 8 }, "start": { "line": 1721, "column": 8 } }, "557": { "end": { "line": 1725, "column": 8 }, "start": { "line": 1725, "column": 8 } }, "558": { "end": { "line": 1727, "column": 8 }, "start": { "line": 1727, "column": 8 } }, "559": { "end": { "line": 1713, "column": 13 }, "start": { "line": 1729, "column": 8 } }, "560": { "end": { "line": 1731, "column": 12 }, "start": { "line": 1731, "column": 12 } }, "561": { "end": { "line": 1733, "column": 12 }, "start": { "line": 1733, "column": 12 } }, "562": { "end": { "line": 1734, "column": 12 }, "start": { "line": 1734, "column": 12 } }, "563": { "end": { "line": 1739, "column": 13 }, "start": { "line": 1737, "column": 12 } }, "564": { "end": { "line": 1738, "column": 16 }, "start": { "line": 1738, "column": 16 } }, "565": { "end": { "line": 1741, "column": 12 }, "start": { "line": 1741, "column": 12 } }, "566": { "end": { "line": 1729, "column": 51 }, "start": { "line": 1747, "column": 12 } }, "567": { "end": { "line": 1749, "column": 16 }, "start": { "line": 1749, "column": 16 } }, "568": { "end": { "line": 1753, "column": 17 }, "start": { "line": 1751, "column": 16 } }, "569": { "end": { "line": 1752, "column": 20 }, "start": { "line": 1752, "column": 20 } }, "570": { "end": { "line": 1755, "column": 16 }, "start": { "line": 1755, "column": 16 } }, "571": { "end": { "line": 1759, "column": 16 }, "start": { "line": 1759, "column": 16 } }, "572": { "end": { "line": 1747, "column": 46 }, "start": { "line": 1768, "column": 16 } }, "573": { "end": { "line": 1769, "column": 20 }, "start": { "line": 1769, "column": 20 } }, "574": { "end": { "line": 1776, "column": 21 }, "start": { "line": 1772, "column": 20 } }, "575": { "end": { "line": 1773, "column": 24 }, "start": { "line": 1773, "column": 24 } }, "576": { "end": { "line": 1775, "column": 24 }, "start": { "line": 1775, "column": 24 } }, "577": { "end": { "line": 1793, "column": 21 }, "start": { "line": 1778, "column": 20 } }, "578": { "end": { "line": 1779, "column": 24 }, "start": { "line": 1779, "column": 24 } }, "579": { "end": { "line": 1780, "column": 24 }, "start": { "line": 1780, "column": 24 } }, "580": { "end": { "line": 1785, "column": 25 }, "start": { "line": 1782, "column": 24 } }, "581": { "end": { "line": 1783, "column": 28 }, "start": { "line": 1783, "column": 28 } }, "582": { "end": { "line": 1789, "column": 25 }, "start": { "line": 1786, "column": 24 } }, "583": { "end": { "line": 1788, "column": 28 }, "start": { "line": 1788, "column": 28 } }, "584": { "end": { "line": 1792, "column": 25 }, "start": { "line": 1790, "column": 24 } }, "585": { "end": { "line": 1791, "column": 28 }, "start": { "line": 1791, "column": 28 } }, "586": { "end": { "line": 1794, "column": 20 }, "start": { "line": 1794, "column": 20 } }, "587": { "end": { "line": 1799, "column": 20 }, "start": { "line": 1799, "column": 20 } }, "588": { "end": { "line": 1803, "column": 21 }, "start": { "line": 1800, "column": 20 } }, "589": { "end": { "line": 1801, "column": 24 }, "start": { "line": 1801, "column": 24 } }, "590": { "end": { "line": 1808, "column": 17 }, "start": { "line": 1806, "column": 16 } }, "591": { "end": { "line": 1807, "column": 20 }, "start": { "line": 1807, "column": 20 } }, "592": { "end": { "line": 1811, "column": 17 }, "start": { "line": 1809, "column": 16 } }, "593": { "end": { "line": 1810, "column": 20 }, "start": { "line": 1810, "column": 20 } }, "594": { "end": { "line": 1813, "column": 16 }, "start": { "line": 1813, "column": 16 } }, "595": { "end": { "line": 1818, "column": 13 }, "start": { "line": 1816, "column": 12 } }, "596": { "end": { "line": 1817, "column": 16 }, "start": { "line": 1817, "column": 16 } }, "597": { "end": { "line": 1820, "column": 12 }, "start": { "line": 1820, "column": 12 } }, "598": { "end": { "line": 1823, "column": 13 }, "start": { "line": 1821, "column": 12 } }, "599": { "end": { "line": 1822, "column": 16 }, "start": { "line": 1822, "column": 16 } }, "600": { "end": { "line": 1825, "column": 12 }, "start": { "line": 1825, "column": 12 } }, "601": { "end": { "line": 1829, "column": 8 }, "start": { "line": 1829, "column": 8 } }, "602": { "end": { "line": 1832, "column": 8 }, "start": { "line": 1832, "column": 8 } }, "603": { "end": { "line": 1834, "column": 8 }, "start": { "line": 1834, "column": 8 } }, "604": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "605": { "end": { "line": 1845, "column": 8 }, "start": { "line": 1845, "column": 8 } }, "606": { "end": { "line": 1846, "column": 8 }, "start": { "line": 1846, "column": 8 } }, "607": { "end": { "line": 1847, "column": 8 }, "start": { "line": 1847, "column": 8 } }, "608": { "end": { "line": 1862, "column": 8 }, "start": { "line": 1862, "column": 8 } }, "609": { "end": { "line": 1864, "column": 8 }, "start": { "line": 1864, "column": 8 } }, "610": { "end": { "line": 1867, "column": 8 }, "start": { "line": 1867, "column": 8 } }, "611": { "end": { "line": 1844, "column": 39 }, "start": { "line": 1882, "column": 8 } }, "612": { "end": { "line": 1883, "column": 12 }, "start": { "line": 1883, "column": 12 } }, "613": { "end": { "line": 1885, "column": 12 }, "start": { "line": 1885, "column": 12 } }, "614": { "end": { "line": 1886, "column": 12 }, "start": { "line": 1886, "column": 12 } }, "615": { "end": { "line": 1887, "column": 12 }, "start": { "line": 1887, "column": 12 } }, "616": { "end": { "line": 1888, "column": 12 }, "start": { "line": 1888, "column": 12 } }, "617": { "end": { "line": 1891, "column": 12 }, "start": { "line": 1891, "column": 12 } }, "618": { "end": { "line": 1893, "column": 12 }, "start": { "line": 1893, "column": 12 } }, "619": { "end": { "line": 1895, "column": 12 }, "start": { "line": 1895, "column": 12 } }, "620": { "end": { "line": 1897, "column": 12 }, "start": { "line": 1897, "column": 12 } }, "621": { "end": { "line": 1899, "column": 12 }, "start": { "line": 1899, "column": 12 } }, "622": { "end": { "line": 1901, "column": 12 }, "start": { "line": 1901, "column": 12 } }, "623": { "end": { "line": 1904, "column": 12 }, "start": { "line": 1904, "column": 12 } }, "624": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1907, "column": 12 } }, "625": { "end": { "line": 1908, "column": 16 }, "start": { "line": 1908, "column": 16 } }, "626": { "end": { "line": 1909, "column": 16 }, "start": { "line": 1909, "column": 16 } }, "627": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1912, "column": 17 } }, "628": { "end": { "line": 1913, "column": 16 }, "start": { "line": 1913, "column": 16 } }, "629": { "end": { "line": 1914, "column": 16 }, "start": { "line": 1914, "column": 16 } }, "630": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1917, "column": 17 } }, "631": { "end": { "line": 1918, "column": 16 }, "start": { "line": 1918, "column": 16 } }, "632": { "end": { "line": 1919, "column": 16 }, "start": { "line": 1919, "column": 16 } }, "633": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1922, "column": 17 } }, "634": { "end": { "line": 1923, "column": 16 }, "start": { "line": 1923, "column": 16 } }, "635": { "end": { "line": 1924, "column": 16 }, "start": { "line": 1924, "column": 16 } }, "636": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1927, "column": 17 } }, "637": { "end": { "line": 1928, "column": 16 }, "start": { "line": 1928, "column": 16 } }, "638": { "end": { "line": 1929, "column": 16 }, "start": { "line": 1929, "column": 16 } }, "639": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1932, "column": 17 } }, "640": { "end": { "line": 1933, "column": 16 }, "start": { "line": 1933, "column": 16 } }, "641": { "end": { "line": 1934, "column": 16 }, "start": { "line": 1934, "column": 16 } }, "642": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1937, "column": 17 } }, "643": { "end": { "line": 1938, "column": 16 }, "start": { "line": 1938, "column": 16 } }, "644": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1941, "column": 17 } }, "645": { "end": { "line": 1942, "column": 16 }, "start": { "line": 1942, "column": 16 } }, "646": { "end": { "line": 1943, "column": 16 }, "start": { "line": 1943, "column": 16 } }, "647": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1946, "column": 17 } }, "648": { "end": { "line": 1947, "column": 16 }, "start": { "line": 1947, "column": 16 } }, "649": { "end": { "line": 1955, "column": 13 }, "start": { "line": 1950, "column": 17 } }, "650": { "end": { "line": 1951, "column": 16 }, "start": { "line": 1951, "column": 16 } }, "651": { "end": { "line": 1953, "column": 16 }, "start": { "line": 1953, "column": 16 } }, "652": { "end": { "line": 1964, "column": 13 }, "start": { "line": 1959, "column": 12 } }, "653": { "end": { "line": 1960, "column": 16 }, "start": { "line": 1960, "column": 16 } }, "654": { "end": { "line": 1963, "column": 17 }, "start": { "line": 1961, "column": 16 } }, "655": { "end": { "line": 1962, "column": 20 }, "start": { "line": 1962, "column": 20 } }, "656": { "end": { "line": 1967, "column": 12 }, "start": { "line": 1967, "column": 12 } }, "657": { "end": { "line": 2070, "column": 13 }, "start": { "line": 1972, "column": 12 } }, "658": { "end": { "line": 1973, "column": 16 }, "start": { "line": 1973, "column": 16 } }, "659": { "end": { "line": 2070, "column": 13 }, "start": { "line": 1979, "column": 17 } }, "660": { "end": { "line": 1980, "column": 16 }, "start": { "line": 1980, "column": 16 } }, "661": { "end": { "line": 2070, "column": 13 }, "start": { "line": 1986, "column": 17 } }, "662": { "end": { "line": 1987, "column": 16 }, "start": { "line": 1987, "column": 16 } }, "663": { "end": { "line": 2070, "column": 13 }, "start": { "line": 1993, "column": 17 } }, "664": { "end": { "line": 1994, "column": 16 }, "start": { "line": 1994, "column": 16 } }, "665": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2000, "column": 17 } }, "666": { "end": { "line": 2001, "column": 16 }, "start": { "line": 2001, "column": 16 } }, "667": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2005, "column": 17 } }, "668": { "end": { "line": 2006, "column": 16 }, "start": { "line": 2006, "column": 16 } }, "669": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2010, "column": 17 } }, "670": { "end": { "line": 2011, "column": 16 }, "start": { "line": 2011, "column": 16 } }, "671": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2015, "column": 17 } }, "672": { "end": { "line": 2016, "column": 16 }, "start": { "line": 2016, "column": 16 } }, "673": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2020, "column": 17 } }, "674": { "end": { "line": 2021, "column": 16 }, "start": { "line": 2021, "column": 16 } }, "675": { "end": { "line": 2022, "column": 16 }, "start": { "line": 2022, "column": 16 } }, "676": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2029, "column": 17 } }, "677": { "end": { "line": 2030, "column": 16 }, "start": { "line": 2030, "column": 16 } }, "678": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2033, "column": 17 } }, "679": { "end": { "line": 2034, "column": 16 }, "start": { "line": 2034, "column": 16 } }, "680": { "end": { "line": 2070, "column": 13 }, "start": { "line": 2037, "column": 17 } }, "681": { "end": { "line": 2046, "column": 17 }, "start": { "line": 2039, "column": 16 } }, "682": { "end": { "line": 2041, "column": 20 }, "start": { "line": 2041, "column": 20 } }, "683": { "end": { "line": 2042, "column": 20 }, "start": { "line": 2042, "column": 20 } }, "684": { "end": { "line": 2043, "column": 20 }, "start": { "line": 2043, "column": 20 } }, "685": { "end": { "line": 2045, "column": 20 }, "start": { "line": 2045, "column": 20 } }, "686": { "end": { "line": 2069, "column": 17 }, "start": { "line": 2050, "column": 16 } }, "687": { "end": { "line": 2056, "column": 20 }, "start": { "line": 2056, "column": 20 } }, "688": { "end": { "line": 2057, "column": 20 }, "start": { "line": 2057, "column": 20 } }, "689": { "end": { "line": 2062, "column": 20 }, "start": { "line": 2062, "column": 20 } }, "690": { "end": { "line": 2074, "column": 8 }, "start": { "line": 2074, "column": 8 } }, "691": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "692": { "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, "693": { "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, "694": { "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, "695": { "end": { "line": 2093, "column": 9 }, "start": { "line": 2091, "column": 8 } }, "696": { "end": { "line": 2092, "column": 12 }, "start": { "line": 2092, "column": 12 } }, "697": { "end": { "line": 2094, "column": 8 }, "start": { "line": 2094, "column": 8 } }, "698": { "end": { "line": 2095, "column": 8 }, "start": { "line": 2095, "column": 8 } }, "699": { "end": { "line": 2096, "column": 8 }, "start": { "line": 2096, "column": 8 } }, "700": { "end": { "line": 2097, "column": 8 }, "start": { "line": 2097, "column": 8 } }, "701": { "end": { "line": 2102, "column": 9 }, "start": { "line": 2100, "column": 8 } }, "702": { "end": { "line": 2101, "column": 12 }, "start": { "line": 2101, "column": 12 } }, "703": { "end": { "line": 2124, "column": 9 }, "start": { "line": 2104, "column": 8 } }, "704": { "end": { "line": 2105, "column": 12 }, "start": { "line": 2105, "column": 12 } }, "705": { "end": { "line": 2109, "column": 13 }, "start": { "line": 2107, "column": 12 } }, "706": { "end": { "line": 2108, "column": 16 }, "start": { "line": 2108, "column": 16 } }, "707": { "end": { "line": 2110, "column": 12 }, "start": { "line": 2110, "column": 12 } }, "708": { "end": { "line": 2123, "column": 13 }, "start": { "line": 2114, "column": 12 } }, "709": { "end": { "line": 2122, "column": 17 }, "start": { "line": 2116, "column": 16 } }, "710": { "end": { "line": 2119, "column": 21 }, "start": { "line": 2117, "column": 20 } }, "711": { "end": { "line": 2118, "column": 24 }, "start": { "line": 2118, "column": 24 } }, "712": { "end": { "line": 2120, "column": 20 }, "start": { "line": 2120, "column": 20 } }, "713": { "end": { "line": 2121, "column": 20 }, "start": { "line": 2121, "column": 20 } }, "714": { "end": { "line": 2125, "column": 8 }, "start": { "line": 2125, "column": 8 } }, "715": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "716": { "end": { "line": 2136, "column": 9 }, "start": { "line": 2134, "column": 8 } }, "717": { "end": { "line": 2135, "column": 12 }, "start": { "line": 2135, "column": 12 } }, "718": { "end": { "line": 2137, "column": 8 }, "start": { "line": 2137, "column": 8 } }, "719": { "end": { "line": 2138, "column": 8 }, "start": { "line": 2138, "column": 8 } }, "720": { "end": { "line": 2141, "column": 9 }, "start": { "line": 2139, "column": 8 } }, "721": { "end": { "line": 2140, "column": 12 }, "start": { "line": 2140, "column": 12 } }, "722": { "end": { "line": 2143, "column": 8 }, "start": { "line": 2143, "column": 8 } }, "723": { "end": { "line": 2154, "column": 9 }, "start": { "line": 2144, "column": 8 } }, "724": { "end": { "line": 2145, "column": 12 }, "start": { "line": 2145, "column": 12 } }, "725": { "end": { "line": 2154, "column": 9 }, "start": { "line": 2148, "column": 13 } }, "726": { "end": { "line": 2149, "column": 12 }, "start": { "line": 2149, "column": 12 } }, "727": { "end": { "line": 2154, "column": 9 }, "start": { "line": 2152, "column": 13 } }, "728": { "end": { "line": 2153, "column": 12 }, "start": { "line": 2153, "column": 12 } }, "729": { "end": { "line": 2160, "column": 9 }, "start": { "line": 2157, "column": 8 } }, "730": { "end": { "line": 2159, "column": 12 }, "start": { "line": 2159, "column": 12 } }, "731": { "end": { "line": 2162, "column": 8 }, "start": { "line": 2162, "column": 8 } }, "732": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "733": { "end": { "line": 2172, "column": 9 }, "start": { "line": 2170, "column": 8 } }, "734": { "end": { "line": 2171, "column": 12 }, "start": { "line": 2171, "column": 12 } }, "735": { "end": { "line": 2173, "column": 8 }, "start": { "line": 2173, "column": 8 } }, "736": { "end": { "line": 2181, "column": 9 }, "start": { "line": 2174, "column": 8 } }, "737": { "end": { "line": 2175, "column": 12 }, "start": { "line": 2175, "column": 12 } }, "738": { "end": { "line": 2180, "column": 13 }, "start": { "line": 2176, "column": 12 } }, "739": { "end": { "line": 2177, "column": 16 }, "start": { "line": 2177, "column": 16 } }, "740": { "end": { "line": 2179, "column": 16 }, "start": { "line": 2179, "column": 16 } }, "741": { "end": { "line": 2182, "column": 8 }, "start": { "line": 2182, "column": 8 } }, "742": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "743": { "end": { "line": 2193, "column": 9 }, "start": { "line": 2191, "column": 8 } }, "744": { "end": { "line": 2192, "column": 12 }, "start": { "line": 2192, "column": 12 } }, "745": { "end": { "line": 2194, "column": 8 }, "start": { "line": 2194, "column": 8 } }, "746": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "747": { "end": { "line": 2209, "column": 9 }, "start": { "line": 2207, "column": 8 } }, "748": { "end": { "line": 2208, "column": 12 }, "start": { "line": 2208, "column": 12 } }, "749": { "end": { "line": 2210, "column": 8 }, "start": { "line": 2210, "column": 8 } }, "750": { "end": { "line": 2217, "column": 9 }, "start": { "line": 2211, "column": 8 } }, "751": { "end": { "line": 2212, "column": 12 }, "start": { "line": 2212, "column": 12 } }, "752": { "end": { "line": 2216, "column": 13 }, "start": { "line": 2213, "column": 12 } }, "753": { "end": { "line": 2214, "column": 16 }, "start": { "line": 2214, "column": 16 } }, "754": { "end": { "line": 2215, "column": 16 }, "start": { "line": 2215, "column": 16 } }, "755": { "end": { "line": 2218, "column": 8 }, "start": { "line": 2218, "column": 8 } }, "756": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "757": { "end": { "line": 2227, "column": 8 }, "start": { "line": 2227, "column": 8 } }, "758": { "end": { "line": 2228, "column": 8 }, "start": { "line": 2228, "column": 8 } }, "759": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "760": { "end": { "line": 2236, "column": 29 }, "start": { "line": 2236, "column": 29 } }, "761": { "end": { "line": 2237, "column": 8 }, "start": { "line": 2237, "column": 8 } }, "762": { "end": { "line": 2238, "column": 8 }, "start": { "line": 2238, "column": 8 } }, "763": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "764": { "end": { "line": 2248, "column": 8 }, "start": { "line": 2248, "column": 8 } }, "765": { "end": { "line": 2249, "column": 8 }, "start": { "line": 2249, "column": 8 } }, "766": { "end": { "line": 2252, "column": 9 }, "start": { "line": 2250, "column": 8 } }, "767": { "end": { "line": 2251, "column": 12 }, "start": { "line": 2251, "column": 12 } }, "768": { "end": { "line": 2253, "column": 8 }, "start": { "line": 2253, "column": 8 } }, "769": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "770": { "end": { "line": 2258, "column": 8 }, "start": { "line": 2258, "column": 8 } }, "771": { "end": { "line": 2264, "column": 9 }, "start": { "line": 2260, "column": 8 } }, "772": { "end": { "line": 2261, "column": 12 }, "start": { "line": 2261, "column": 12 } }, "773": { "end": { "line": 2263, "column": 12 }, "start": { "line": 2263, "column": 12 } }, "774": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "775": { "end": { "line": 2273, "column": 8 }, "start": { "line": 2273, "column": 8 } }, "776": { "end": { "line": 2274, "column": 8 }, "start": { "line": 2274, "column": 8 } }, "777": { "end": { "line": 2291, "column": 9 }, "start": { "line": 2276, "column": 8 } }, "778": { "end": { "line": 2277, "column": 12 }, "start": { "line": 2277, "column": 12 } }, "779": { "end": { "line": 2278, "column": 12 }, "start": { "line": 2278, "column": 12 } }, "780": { "end": { "line": 2281, "column": 13 }, "start": { "line": 2279, "column": 12 } }, "781": { "end": { "line": 2280, "column": 16 }, "start": { "line": 2280, "column": 16 } }, "782": { "end": { "line": 2282, "column": 12 }, "start": { "line": 2282, "column": 12 } }, "783": { "end": { "line": 2291, "column": 9 }, "start": { "line": 2284, "column": 13 } }, "784": { "end": { "line": 2285, "column": 12 }, "start": { "line": 2285, "column": 12 } }, "785": { "end": { "line": 2291, "column": 9 }, "start": { "line": 2287, "column": 13 } }, "786": { "end": { "line": 2288, "column": 12 }, "start": { "line": 2288, "column": 12 } }, "787": { "end": { "line": 2289, "column": 12 }, "start": { "line": 2289, "column": 12 } }, "788": { "end": { "line": 2290, "column": 12 }, "start": { "line": 2290, "column": 12 } }, "789": { "end": { "line": 2293, "column": 8 }, "start": { "line": 2293, "column": 8 } }, "790": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "791": { "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, "792": { "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, "793": { "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, "794": { "end": { "line": 2314, "column": 8 }, "start": { "line": 2314, "column": 8 } }, "795": { "end": { "line": 2315, "column": 8 }, "start": { "line": 2315, "column": 8 } }, "796": { "end": { "line": 2316, "column": 8 }, "start": { "line": 2316, "column": 8 } }, "797": { "end": { "line": 2317, "column": 8 }, "start": { "line": 2317, "column": 8 } }, "798": { "end": { "line": 2323, "column": 9 }, "start": { "line": 2320, "column": 8 } }, "799": { "end": { "line": 2321, "column": 12 }, "start": { "line": 2321, "column": 12 } }, "800": { "end": { "line": 2322, "column": 12 }, "start": { "line": 2322, "column": 12 } }, "801": { "end": { "line": 2337, "column": 9 }, "start": { "line": 2324, "column": 8 } }, "802": { "end": { "line": 2325, "column": 12 }, "start": { "line": 2325, "column": 12 } }, "803": { "end": { "line": 2326, "column": 12 }, "start": { "line": 2326, "column": 12 } }, "804": { "end": { "line": 2335, "column": 13 }, "start": { "line": 2327, "column": 12 } }, "805": { "end": { "line": 2332, "column": 17 }, "start": { "line": 2328, "column": 16 } }, "806": { "end": { "line": 2331, "column": 21 }, "start": { "line": 2329, "column": 20 } }, "807": { "end": { "line": 2330, "column": 24 }, "start": { "line": 2330, "column": 24 } }, "808": { "end": { "line": 2333, "column": 16 }, "start": { "line": 2333, "column": 16 } }, "809": { "end": { "line": 2334, "column": 16 }, "start": { "line": 2334, "column": 16 } }, "810": { "end": { "line": 2336, "column": 12 }, "start": { "line": 2336, "column": 12 } }, "811": { "end": { "line": 2338, "column": 8 }, "start": { "line": 2338, "column": 8 } }, "812": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "813": { "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, "814": { "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, "815": { "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, "816": { "end": { "line": 2361, "column": 9 }, "start": { "line": 2359, "column": 8 } }, "817": { "end": { "line": 2360, "column": 12 }, "start": { "line": 2360, "column": 12 } }, "818": { "end": { "line": 2362, "column": 8 }, "start": { "line": 2362, "column": 8 } }, "819": { "end": { "line": 2364, "column": 8 }, "start": { "line": 2364, "column": 8 } }, "820": { "end": { "line": 2370, "column": 9 }, "start": { "line": 2367, "column": 8 } }, "821": { "end": { "line": 2368, "column": 12 }, "start": { "line": 2368, "column": 12 } }, "822": { "end": { "line": 2369, "column": 12 }, "start": { "line": 2369, "column": 12 } }, "823": { "end": { "line": 2372, "column": 8 }, "start": { "line": 2372, "column": 8 } }, "824": { "end": { "line": 2386, "column": 9 }, "start": { "line": 2373, "column": 8 } }, "825": { "end": { "line": 2374, "column": 12 }, "start": { "line": 2374, "column": 12 } }, "826": { "end": { "line": 2384, "column": 13 }, "start": { "line": 2376, "column": 12 } }, "827": { "end": { "line": 2381, "column": 17 }, "start": { "line": 2377, "column": 16 } }, "828": { "end": { "line": 2380, "column": 21 }, "start": { "line": 2378, "column": 20 } }, "829": { "end": { "line": 2379, "column": 24 }, "start": { "line": 2379, "column": 24 } }, "830": { "end": { "line": 2382, "column": 16 }, "start": { "line": 2382, "column": 16 } }, "831": { "end": { "line": 2383, "column": 16 }, "start": { "line": 2383, "column": 16 } }, "832": { "end": { "line": 2385, "column": 12 }, "start": { "line": 2385, "column": 12 } }, "833": { "end": { "line": 2387, "column": 8 }, "start": { "line": 2387, "column": 8 } }, "834": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "835": { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, "836": { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, "837": { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, "838": { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, "839": { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, "840": { "end": { "line": 2411, "column": 9 }, "start": { "line": 2409, "column": 8 } }, "841": { "end": { "line": 2410, "column": 12 }, "start": { "line": 2410, "column": 12 } }, "842": { "end": { "line": 2413, "column": 8 }, "start": { "line": 2413, "column": 8 } }, "843": { "end": { "line": 2414, "column": 8 }, "start": { "line": 2414, "column": 8 } }, "844": { "end": { "line": 2419, "column": 8 }, "start": { "line": 2419, "column": 8 } }, "845": { "end": { "line": 2420, "column": 12 }, "start": { "line": 2420, "column": 12 } }, "846": { "end": { "line": 2427, "column": 8 }, "start": { "line": 2427, "column": 8 } }, "847": { "end": { "line": 2428, "column": 12 }, "start": { "line": 2428, "column": 12 } }, "848": { "end": { "line": 2433, "column": 9 }, "start": { "line": 2431, "column": 8 } }, "849": { "end": { "line": 2432, "column": 12 }, "start": { "line": 2432, "column": 12 } }, "850": { "end": { "line": 2435, "column": 8 }, "start": { "line": 2435, "column": 8 } }, "851": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "852": { "end": { "line": 2444, "column": 8 }, "start": { "line": 2444, "column": 8 } }, "853": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "854": { "end": { "line": 2453, "column": 8 }, "start": { "line": 2453, "column": 8 } }, "855": { "end": { "line": 2456, "column": 9 }, "start": { "line": 2454, "column": 8 } }, "856": { "end": { "line": 2455, "column": 12 }, "start": { "line": 2455, "column": 12 } }, "857": { "end": { "line": 2461, "column": 9 }, "start": { "line": 2459, "column": 8 } }, "858": { "end": { "line": 2460, "column": 12 }, "start": { "line": 2460, "column": 12 } }, "859": { "end": { "line": 2463, "column": 8 }, "start": { "line": 2463, "column": 8 } }, "860": { "end": { "line": 2465, "column": 8 }, "start": { "line": 2465, "column": 8 } }, "861": { "end": { "line": 2469, "column": 9 }, "start": { "line": 2467, "column": 8 } }, "862": { "end": { "line": 2468, "column": 12 }, "start": { "line": 2468, "column": 12 } }, "863": { "end": { "line": 2479, "column": 9 }, "start": { "line": 2471, "column": 8 } }, "864": { "end": { "line": 2474, "column": 13 }, "start": { "line": 2472, "column": 12 } }, "865": { "end": { "line": 2473, "column": 16 }, "start": { "line": 2473, "column": 16 } }, "866": { "end": { "line": 2476, "column": 12 }, "start": { "line": 2476, "column": 12 } }, "867": { "end": { "line": 2478, "column": 12 }, "start": { "line": 2478, "column": 12 } }, "868": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "869": { "end": { "line": 2488, "column": 9 }, "start": { "line": 2486, "column": 8 } }, "870": { "end": { "line": 2487, "column": 12 }, "start": { "line": 2487, "column": 12 } }, "871": { "end": { "line": 2489, "column": 8 }, "start": { "line": 2489, "column": 8 } }, "872": { "end": { "line": 2492, "column": 9 }, "start": { "line": 2490, "column": 8 } }, "873": { "end": { "line": 2491, "column": 12 }, "start": { "line": 2491, "column": 12 } }, "874": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "875": { "end": { "line": 2500, "column": 38 }, "start": { "line": 2500, "column": 38 } }, "876": { "end": { "line": 2503, "column": 9 }, "start": { "line": 2501, "column": 8 } }, "877": { "end": { "line": 2502, "column": 12 }, "start": { "line": 2502, "column": 12 } }, "878": { "end": { "line": 2504, "column": 8 }, "start": { "line": 2504, "column": 8 } }, "879": { "end": { "line": 2541, "column": 9 }, "start": { "line": 2507, "column": 8 } }, "880": { "end": { "line": 2511, "column": 13 }, "start": { "line": 2508, "column": 12 } }, "881": { "end": { "line": 2509, "column": 16 }, "start": { "line": 2509, "column": 16 } }, "882": { "end": { "line": 2512, "column": 12 }, "start": { "line": 2512, "column": 12 } }, "883": { "end": { "line": 2541, "column": 9 }, "start": { "line": 2515, "column": 13 } }, "884": { "end": { "line": 2516, "column": 12 }, "start": { "line": 2516, "column": 12 } }, "885": { "end": { "line": 2522, "column": 13 }, "start": { "line": 2519, "column": 12 } }, "886": { "end": { "line": 2520, "column": 16 }, "start": { "line": 2520, "column": 16 } }, "887": { "end": { "line": 2524, "column": 12 }, "start": { "line": 2524, "column": 12 } }, "888": { "end": { "line": 2541, "column": 9 }, "start": { "line": 2527, "column": 13 } }, "889": { "end": { "line": 2528, "column": 12 }, "start": { "line": 2528, "column": 12 } }, "890": { "end": { "line": 2532, "column": 13 }, "start": { "line": 2529, "column": 12 } }, "891": { "end": { "line": 2530, "column": 16 }, "start": { "line": 2530, "column": 16 } }, "892": { "end": { "line": 2538, "column": 13 }, "start": { "line": 2533, "column": 12 } }, "893": { "end": { "line": 2534, "column": 16 }, "start": { "line": 2534, "column": 16 } }, "894": { "end": { "line": 2536, "column": 16 }, "start": { "line": 2536, "column": 16 } }, "895": { "end": { "line": 2537, "column": 16 }, "start": { "line": 2537, "column": 16 } }, "896": { "end": { "line": 2540, "column": 12 }, "start": { "line": 2540, "column": 12 } }, "897": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "898": { "end": { "line": 2551, "column": 9 }, "start": { "line": 2549, "column": 8 } }, "899": { "end": { "line": 2550, "column": 12 }, "start": { "line": 2550, "column": 12 } }, "900": { "end": { "line": 2552, "column": 8 }, "start": { "line": 2552, "column": 8 } }, "901": { "end": { "line": 2554, "column": 8 }, "start": { "line": 2554, "column": 8 } }, "902": { "end": { "line": 2555, "column": 8 }, "start": { "line": 2555, "column": 8 } }, "903": { "end": { "line": 2556, "column": 8 }, "start": { "line": 2556, "column": 8 } }, "904": { "end": { "line": 2557, "column": 8 }, "start": { "line": 2557, "column": 8 } }, "905": { "end": { "line": 2558, "column": 8 }, "start": { "line": 2558, "column": 8 } }, "906": { "end": { "line": 2568, "column": 9 }, "start": { "line": 2559, "column": 8 } }, "907": { "end": { "line": 2560, "column": 12 }, "start": { "line": 2560, "column": 12 } }, "908": { "end": { "line": 2566, "column": 13 }, "start": { "line": 2561, "column": 12 } }, "909": { "end": { "line": 2562, "column": 16 }, "start": { "line": 2562, "column": 16 } }, "910": { "end": { "line": 2564, "column": 16 }, "start": { "line": 2564, "column": 16 } }, "911": { "end": { "line": 2565, "column": 16 }, "start": { "line": 2565, "column": 16 } }, "912": { "end": { "line": 2567, "column": 12 }, "start": { "line": 2567, "column": 12 } }, "913": { "end": { "line": 2571, "column": 9 }, "start": { "line": 2569, "column": 8 } }, "914": { "end": { "line": 2570, "column": 12 }, "start": { "line": 2570, "column": 12 } }, "915": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "916": { "end": { "line": 2580, "column": 9 }, "start": { "line": 2578, "column": 8 } }, "917": { "end": { "line": 2579, "column": 12 }, "start": { "line": 2579, "column": 12 } }, "918": { "end": { "line": 2581, "column": 8 }, "start": { "line": 2581, "column": 8 } }, "919": { "end": { "line": 2588, "column": 9 }, "start": { "line": 2582, "column": 8 } }, "920": { "end": { "line": 2583, "column": 12 }, "start": { "line": 2583, "column": 12 } }, "921": { "end": { "line": 2587, "column": 13 }, "start": { "line": 2585, "column": 12 } }, "922": { "end": { "line": 2586, "column": 16 }, "start": { "line": 2586, "column": 16 } }, "923": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "924": { "end": { "line": 2597, "column": 9 }, "start": { "line": 2595, "column": 8 } }, "925": { "end": { "line": 2596, "column": 12 }, "start": { "line": 2596, "column": 12 } }, "926": { "end": { "line": 2599, "column": 8 }, "start": { "line": 2599, "column": 8 } }, "927": { "end": { "line": 2600, "column": 8 }, "start": { "line": 2600, "column": 8 } }, "928": { "end": { "line": 2604, "column": 9 }, "start": { "line": 2602, "column": 8 } }, "929": { "end": { "line": 2603, "column": 12 }, "start": { "line": 2603, "column": 12 } }, "930": { "end": { "line": 2606, "column": 8 }, "start": { "line": 2606, "column": 8 } }, "931": { "end": { "line": 2608, "column": 8 }, "start": { "line": 2608, "column": 8 } }, "932": { "end": { "line": 2609, "column": 8 }, "start": { "line": 2609, "column": 8 } }, "933": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "934": { "end": { "line": 2618, "column": 9 }, "start": { "line": 2616, "column": 8 } }, "935": { "end": { "line": 2617, "column": 12 }, "start": { "line": 2617, "column": 12 } }, "936": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "937": { "end": { "line": 2626, "column": 8 }, "start": { "line": 2626, "column": 8 } }, "938": { "end": { "line": 2629, "column": 9 }, "start": { "line": 2627, "column": 8 } }, "939": { "end": { "line": 2628, "column": 12 }, "start": { "line": 2628, "column": 12 } }, "940": { "end": { "line": 2630, "column": 8 }, "start": { "line": 2630, "column": 8 } }, "941": { "end": { "line": 2632, "column": 8 }, "start": { "line": 2632, "column": 8 } }, "942": { "end": { "line": 2634, "column": 8 }, "start": { "line": 2634, "column": 8 } }, "943": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "944": { "end": { "line": 2642, "column": 8 }, "start": { "line": 2642, "column": 8 } }, "945": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "946": { "end": { "line": 2650, "column": 8 }, "start": { "line": 2650, "column": 8 } }, "947": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "948": { "end": { "line": 2658, "column": 46 }, "start": { "line": 2658, "column": 46 } }, "949": { "end": { "line": 2659, "column": 8 }, "start": { "line": 2659, "column": 8 } }, "950": { "end": { "line": 2660, "column": 8 }, "start": { "line": 2660, "column": 8 } }, "951": { "end": { "line": 2661, "column": 8 }, "start": { "line": 2661, "column": 8 } }, "952": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "953": { "end": { "line": 2671, "column": 8 }, "start": { "line": 2671, "column": 8 } }, "954": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "955": { "end": { "line": 2681, "column": 9 }, "start": { "line": 2679, "column": 8 } }, "956": { "end": { "line": 2680, "column": 12 }, "start": { "line": 2680, "column": 12 } }, "957": { "end": { "line": 2682, "column": 8 }, "start": { "line": 2682, "column": 8 } }, "958": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "959": { "end": { "line": 2692, "column": 9 }, "start": { "line": 2690, "column": 8 } }, "960": { "end": { "line": 2691, "column": 12 }, "start": { "line": 2691, "column": 12 } }, "961": { "end": { "line": 2693, "column": 8 }, "start": { "line": 2693, "column": 8 } }, "962": { "end": { "line": 2697, "column": 8 }, "start": { "line": 2697, "column": 8 } }, "963": { "end": { "line": 2699, "column": 8 }, "start": { "line": 2699, "column": 8 } }, "964": { "end": { "line": 2732, "column": 9 }, "start": { "line": 2701, "column": 8 } }, "965": { "end": { "line": 2702, "column": 12 }, "start": { "line": 2702, "column": 12 } }, "966": { "end": { "line": 2703, "column": 12 }, "start": { "line": 2703, "column": 12 } }, "967": { "end": { "line": 2704, "column": 12 }, "start": { "line": 2704, "column": 12 } }, "968": { "end": { "line": 2731, "column": 13 }, "start": { "line": 2708, "column": 12 } }, "969": { "end": { "line": 2720, "column": 17 }, "start": { "line": 2716, "column": 16 } }, "970": { "end": { "line": 2717, "column": 20 }, "start": { "line": 2717, "column": 20 } }, "971": { "end": { "line": 2718, "column": 20 }, "start": { "line": 2718, "column": 20 } }, "972": { "end": { "line": 2719, "column": 20 }, "start": { "line": 2719, "column": 20 } }, "973": { "end": { "line": 2728, "column": 17 }, "start": { "line": 2722, "column": 16 } }, "974": { "end": { "line": 2723, "column": 20 }, "start": { "line": 2723, "column": 20 } }, "975": { "end": { "line": 2726, "column": 20 }, "start": { "line": 2726, "column": 20 } }, "976": { "end": { "line": 2730, "column": 16 }, "start": { "line": 2730, "column": 16 } }, "977": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "978": { "end": { "line": 2741, "column": 8 }, "start": { "line": 2741, "column": 8 } }, "979": { "end": { "line": 2742, "column": 8 }, "start": { "line": 2742, "column": 8 } }, "980": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "981": { "end": { "line": 2752, "column": 8 }, "start": { "line": 2752, "column": 8 } }, "982": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "983": { "end": { "line": 2761, "column": 8 }, "start": { "line": 2761, "column": 8 } }, "984": { "end": { "line": 2762, "column": 8 }, "start": { "line": 2762, "column": 8 } }, "985": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "986": { "end": { "line": 2772, "column": 8 }, "start": { "line": 2772, "column": 8 } }, "987": { "end": { "line": 2775, "column": 9 }, "start": { "line": 2773, "column": 8 } }, "988": { "end": { "line": 2774, "column": 12 }, "start": { "line": 2774, "column": 12 } }, "989": { "end": { "line": 2776, "column": 8 }, "start": { "line": 2776, "column": 8 } }, "990": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "991": { "end": { "line": 2785, "column": 8 }, "start": { "line": 2785, "column": 8 } }, "992": { "end": { "line": 2788, "column": 9 }, "start": { "line": 2786, "column": 8 } }, "993": { "end": { "line": 2787, "column": 12 }, "start": { "line": 2787, "column": 12 } }, "994": { "end": { "line": 2789, "column": 8 }, "start": { "line": 2789, "column": 8 } }, "995": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "996": { "end": { "line": 2798, "column": 42 }, "start": { "line": 2798, "column": 42 } }, "997": { "end": { "line": 2799, "column": 8 }, "start": { "line": 2799, "column": 8 } }, "998": { "end": { "line": 2810, "column": 9 }, "start": { "line": 2802, "column": 8 } }, "999": { "end": { "line": 2805, "column": 13 }, "start": { "line": 2803, "column": 12 } }, "1000": { "end": { "line": 2804, "column": 16 }, "start": { "line": 2804, "column": 16 } }, "1001": { "end": { "line": 2809, "column": 13 }, "start": { "line": 2806, "column": 12 } }, "1002": { "end": { "line": 2807, "column": 16 }, "start": { "line": 2807, "column": 16 } }, "1003": { "end": { "line": 2808, "column": 16 }, "start": { "line": 2808, "column": 16 } }, "1004": { "end": { "line": 2811, "column": 8 }, "start": { "line": 2811, "column": 8 } }, "1005": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1006": { "end": { "line": 2821, "column": 56 }, "start": { "line": 2821, "column": 56 } }, "1007": { "end": { "line": 2821, "column": 56 }, "start": { "line": 2821, "column": 56 } }, "1008": { "end": { "line": 2824, "column": 9 }, "start": { "line": 2822, "column": 8 } }, "1009": { "end": { "line": 2823, "column": 12 }, "start": { "line": 2823, "column": 12 } }, "1010": { "end": { "line": 2825, "column": 8 }, "start": { "line": 2825, "column": 8 } }, "1011": { "end": { "line": 2840, "column": 9 }, "start": { "line": 2830, "column": 8 } }, "1012": { "end": { "line": 2831, "column": 12 }, "start": { "line": 2831, "column": 12 } }, "1013": { "end": { "line": 2836, "column": 12 }, "start": { "line": 2836, "column": 12 } }, "1014": { "end": { "line": 2843, "column": 8 }, "start": { "line": 2843, "column": 8 } }, "1015": { "end": { "line": 2851, "column": 13 }, "start": { "line": 2844, "column": 12 } }, "1016": { "end": { "line": 2847, "column": 16 }, "start": { "line": 2847, "column": 16 } }, "1017": { "end": { "line": 2850, "column": 17 }, "start": { "line": 2848, "column": 16 } }, "1018": { "end": { "line": 2849, "column": 20 }, "start": { "line": 2849, "column": 20 } }, "1019": { "end": { "line": 2853, "column": 8 }, "start": { "line": 2853, "column": 8 } }, "1020": { "end": { "line": 2854, "column": 12 }, "start": { "line": 2854, "column": 12 } }, "1021": { "end": { "line": 2856, "column": 8 }, "start": { "line": 2856, "column": 8 } }, "1022": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1023": { "end": { "line": 2864, "column": 8 }, "start": { "line": 2864, "column": 8 } }, "1024": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1025": { "end": { "line": 2872, "column": 8 }, "start": { "line": 2872, "column": 8 } }, "1026": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1027": { "end": { "line": 2883, "column": 9 }, "start": { "line": 2881, "column": 8 } }, "1028": { "end": { "line": 2882, "column": 12 }, "start": { "line": 2882, "column": 12 } }, "1029": { "end": { "line": 2885, "column": 8 }, "start": { "line": 2885, "column": 8 } }, "1030": { "end": { "line": 2886, "column": 8 }, "start": { "line": 2886, "column": 8 } }, "1031": { "end": { "line": 2899, "column": 9 }, "start": { "line": 2887, "column": 8 } }, "1032": { "end": { "line": 2888, "column": 12 }, "start": { "line": 2888, "column": 12 } }, "1033": { "end": { "line": 2898, "column": 13 }, "start": { "line": 2889, "column": 12 } }, "1034": { "end": { "line": 2892, "column": 17 }, "start": { "line": 2890, "column": 16 } }, "1035": { "end": { "line": 2891, "column": 20 }, "start": { "line": 2891, "column": 20 } }, "1036": { "end": { "line": 2897, "column": 17 }, "start": { "line": 2894, "column": 16 } }, "1037": { "end": { "line": 2896, "column": 20 }, "start": { "line": 2896, "column": 20 } }, "1038": { "end": { "line": 2900, "column": 8 }, "start": { "line": 2900, "column": 8 } }, "1039": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1040": { "end": { "line": 2908, "column": 8 }, "start": { "line": 2908, "column": 8 } }, "1041": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1042": { "end": { "line": 2916, "column": 8 }, "start": { "line": 2916, "column": 8 } }, "1043": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1044": { "end": { "line": 2925, "column": 8 }, "start": { "line": 2925, "column": 8 } }, "1045": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1046": { "end": { "line": 2933, "column": 8 }, "start": { "line": 2933, "column": 8 } }, "1047": { "end": { "line": 2934, "column": 8 }, "start": { "line": 2934, "column": 8 } }, "1048": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1049": { "end": { "line": 2943, "column": 34 }, "start": { "line": 2943, "column": 34 } }, "1050": { "end": { "line": 2946, "column": 9 }, "start": { "line": 2944, "column": 8 } }, "1051": { "end": { "line": 2945, "column": 12 }, "start": { "line": 2945, "column": 12 } }, "1052": { "end": { "line": 2947, "column": 8 }, "start": { "line": 2947, "column": 8 } }, "1053": { "end": { "line": 2950, "column": 9 }, "start": { "line": 2948, "column": 8 } }, "1054": { "end": { "line": 2949, "column": 12 }, "start": { "line": 2949, "column": 12 } }, "1055": { "end": { "line": 2951, "column": 8 }, "start": { "line": 2951, "column": 8 } }, "1056": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1057": { "end": { "line": 2960, "column": 8 }, "start": { "line": 2960, "column": 8 } }, "1058": { "end": { "line": 2961, "column": 8 }, "start": { "line": 2961, "column": 8 } }, "1059": { "end": { "line": 2962, "column": 8 }, "start": { "line": 2962, "column": 8 } }, "1060": { "end": { "line": 2963, "column": 8 }, "start": { "line": 2963, "column": 8 } }, "1061": { "end": { "line": 2975, "column": 9 }, "start": { "line": 2964, "column": 8 } }, "1062": { "end": { "line": 2967, "column": 13 }, "start": { "line": 2965, "column": 12 } }, "1063": { "end": { "line": 2966, "column": 16 }, "start": { "line": 2966, "column": 16 } }, "1064": { "end": { "line": 2970, "column": 13 }, "start": { "line": 2968, "column": 12 } }, "1065": { "end": { "line": 2969, "column": 16 }, "start": { "line": 2969, "column": 16 } }, "1066": { "end": { "line": 2973, "column": 13 }, "start": { "line": 2971, "column": 12 } }, "1067": { "end": { "line": 2972, "column": 16 }, "start": { "line": 2972, "column": 16 } }, "1068": { "end": { "line": 2974, "column": 12 }, "start": { "line": 2974, "column": 12 } }, "1069": { "end": { "line": 2976, "column": 8 }, "start": { "line": 2976, "column": 8 } }, "1070": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1071": { "end": { "line": 2984, "column": 46 }, "start": { "line": 2984, "column": 46 } }, "1072": { "end": { "line": 2985, "column": 8 }, "start": { "line": 2985, "column": 8 } }, "1073": { "end": { "line": 2995, "column": 9 }, "start": { "line": 2986, "column": 8 } }, "1074": { "end": { "line": 2991, "column": 13 }, "start": { "line": 2987, "column": 12 } }, "1075": { "end": { "line": 2990, "column": 17 }, "start": { "line": 2988, "column": 16 } }, "1076": { "end": { "line": 2989, "column": 20 }, "start": { "line": 2989, "column": 20 } }, "1077": { "end": { "line": 2992, "column": 12 }, "start": { "line": 2992, "column": 12 } }, "1078": { "end": { "line": 2993, "column": 12 }, "start": { "line": 2993, "column": 12 } }, "1079": { "end": { "line": 2994, "column": 12 }, "start": { "line": 2994, "column": 12 } }, "1080": { "end": { "line": 2996, "column": 8 }, "start": { "line": 2996, "column": 8 } }, "1081": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1082": { "end": { "line": 3005, "column": 8 }, "start": { "line": 3005, "column": 8 } }, "1083": { "end": { "line": 3006, "column": 8 }, "start": { "line": 3006, "column": 8 } }, "1084": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1085": { "end": { "line": 3014, "column": 8 }, "start": { "line": 3014, "column": 8 } }, "1086": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1087": { "end": { "line": 3022, "column": 35 }, "start": { "line": 3022, "column": 35 } }, "1088": { "end": { "line": 3023, "column": 8 }, "start": { "line": 3023, "column": 8 } }, "1089": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "1090": { "end": { "line": 3031, "column": 8 }, "start": { "line": 3031, "column": 8 } }, "1091": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 8, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 8, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 8, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 8, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 56, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 152, "type": "if", "locations": [{ "end": { "line": 121, "column": 12 }, "start": { "line": 121, "column": 12 } }, { "end": { "line": 121, "column": 12 }, "start": { "line": 121, "column": 12 } }] }, "7": { "line": 152, "type": "binary-expr", "locations": [{ "end": { "line": 121, "column": 16 }, "start": { "line": 121, "column": 16 } }, { "end": { "line": 121, "column": 12 }, "start": { "line": 121, "column": 43 } }] }, "8": { "line": 152, "type": "cond-expr", "locations": [{ "end": { "line": 121, "column": 16 }, "start": { "line": 121, "column": 16 } }, { "end": { "line": 121, "column": 16 }, "start": { "line": 121, "column": 16 } }] }, "9": { "line": 154, "type": "binary-expr", "locations": [{ "end": { "line": 123, "column": 26 }, "start": { "line": 123, "column": 26 } }, { "end": { "line": 123, "column": 16 }, "start": { "line": 123, "column": 26 } }] }, "10": { "line": 155, "type": "if", "locations": [{ "end": { "line": 124, "column": 19 }, "start": { "line": 124, "column": 19 } }, { "end": { "line": 124, "column": 19 }, "start": { "line": 124, "column": 19 } }] }, "11": { "line": 158, "type": "if", "locations": [{ "end": { "line": 127, "column": 19 }, "start": { "line": 127, "column": 19 } }, { "end": { "line": 127, "column": 19 }, "start": { "line": 127, "column": 19 } }] }, "12": { "line": 160, "type": "if", "locations": [{ "end": { "line": 129, "column": 19 }, "start": { "line": 129, "column": 19 } }, { "end": { "line": 129, "column": 19 }, "start": { "line": 129, "column": 19 } }] }, "13": { "line": 165, "type": "if", "locations": [{ "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 8 } }, { "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 8 } }] }, "14": { "line": 165, "type": "binary-expr", "locations": [{ "end": { "line": 134, "column": 12 }, "start": { "line": 134, "column": 12 } }, { "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 25 } }] }, "15": { "line": 169, "type": "if", "locations": [{ "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 8 } }, { "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 8 } }] }, "16": { "line": 183, "type": "cond-expr", "locations": [{ "end": { "line": 154, "column": 22 }, "start": { "line": 154, "column": 42 } }, { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 47 } }] }, "17": { "line": 189, "type": "binary-expr", "locations": [{ "end": { "line": 160, "column": 24 }, "start": { "line": 160, "column": 24 } }, { "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 39 } }] }, "18": { "line": 197, "type": "cond-expr", "locations": [{ "end": { "line": 168, "column": 23 }, "start": { "line": 168, "column": 42 } }, { "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 50 } }] }, "19": { "line": 209, "type": "cond-expr", "locations": [{ "end": { "line": 180, "column": 31 }, "start": { "line": 181, "column": 12 } }, { "end": { "line": 180, "column": 8 }, "start": { "line": 181, "column": 16 } }] }, "20": { "line": 215, "type": "cond-expr", "locations": [{ "end": { "line": 187, "column": 26 }, "start": { "line": 188, "column": 13 } }, { "end": { "line": 187, "column": 8 }, "start": { "line": 188, "column": 51 } }] }, "21": { "line": 215, "type": "cond-expr", "locations": [{ "end": { "line": 188, "column": 13 }, "start": { "line": 188, "column": 42 } }, { "end": { "line": 187, "column": 26 }, "start": { "line": 188, "column": 46 } }] }, "22": { "line": 221, "type": "cond-expr", "locations": [{ "end": { "line": 194, "column": 26 }, "start": { "line": 195, "column": 12 } }, { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 26 } }] }, "23": { "line": 270, "type": "binary-expr", "locations": [{ "end": { "line": 244, "column": 30 }, "start": { "line": 244, "column": 30 } }, { "end": { "line": 244, "column": 8 }, "start": { "line": 244, "column": 53 } }] }, "24": { "line": 276, "type": "binary-expr", "locations": [{ "end": { "line": 250, "column": 28 }, "start": { "line": 250, "column": 28 } }, { "end": { "line": 250, "column": 8 }, "start": { "line": 250, "column": 52 } }] }, "25": { "line": 282, "type": "binary-expr", "locations": [{ "end": { "line": 256, "column": 28 }, "start": { "line": 256, "column": 28 } }, { "end": { "line": 256, "column": 8 }, "start": { "line": 256, "column": 53 } }] }, "26": { "line": 288, "type": "binary-expr", "locations": [{ "end": { "line": 262, "column": 28 }, "start": { "line": 262, "column": 28 } }, { "end": { "line": 262, "column": 8 }, "start": { "line": 262, "column": 54 } }] }, "27": { "line": 295, "type": "binary-expr", "locations": [{ "end": { "line": 269, "column": 25 }, "start": { "line": 269, "column": 25 } }, { "end": { "line": 269, "column": 8 }, "start": { "line": 269, "column": 41 } }] }, "28": { "line": 301, "type": "binary-expr", "locations": [{ "end": { "line": 275, "column": 26 }, "start": { "line": 275, "column": 26 } }, { "end": { "line": 275, "column": 8 }, "start": { "line": 275, "column": 42 } }] }, "29": { "line": 314, "type": "binary-expr", "locations": [{ "end": { "line": 288, "column": 31 }, "start": { "line": 288, "column": 31 } }, { "end": { "line": 288, "column": 8 }, "start": { "line": 288, "column": 55 } }] }, "30": { "line": 320, "type": "cond-expr", "locations": [{ "end": { "line": 294, "column": 27 }, "start": { "line": 294, "column": 54 } }, { "end": { "line": 294, "column": 8 }, "start": { "line": 294, "column": 62 } }] }, "31": { "line": 339, "type": "cond-expr", "locations": [{ "end": { "line": 313, "column": 25 }, "start": { "line": 313, "column": 45 } }, { "end": { "line": 313, "column": 8 }, "start": { "line": 313, "column": 60 } }] }, "32": { "line": 345, "type": "binary-expr", "locations": [{ "end": { "line": 319, "column": 27 }, "start": { "line": 319, "column": 27 } }, { "end": { "line": 319, "column": 8 }, "start": { "line": 319, "column": 46 } }] }, "33": { "line": 351, "type": "binary-expr", "locations": [{ "end": { "line": 325, "column": 32 }, "start": { "line": 325, "column": 32 } }, { "end": { "line": 325, "column": 8 }, "start": { "line": 325, "column": 57 } }] }, "34": { "line": 357, "type": "binary-expr", "locations": [{ "end": { "line": 331, "column": 32 }, "start": { "line": 331, "column": 32 } }, { "end": { "line": 331, "column": 8 }, "start": { "line": 331, "column": 57 } }] }, "35": { "line": 363, "type": "binary-expr", "locations": [{ "end": { "line": 337, "column": 33 }, "start": { "line": 337, "column": 33 } }, { "end": { "line": 337, "column": 8 }, "start": { "line": 337, "column": 59 } }] }, "36": { "line": 371, "type": "cond-expr", "locations": [{ "end": { "line": 345, "column": 24 }, "start": { "line": 345, "column": 48 } }, { "end": { "line": 345, "column": 8 }, "start": { "line": 345, "column": 56 } }] }, "37": { "line": 377, "type": "cond-expr", "locations": [{ "end": { "line": 351, "column": 30 }, "start": { "line": 352, "column": 12 } }, { "end": { "line": 351, "column": 8 }, "start": { "line": 351, "column": 30 } }] }, "38": { "line": 383, "type": "cond-expr", "locations": [{ "end": { "line": 358, "column": 29 }, "start": { "line": 359, "column": 12 } }, { "end": { "line": 358, "column": 8 }, "start": { "line": 358, "column": 29 } }] }, "39": { "line": 403, "type": "cond-expr", "locations": [{ "end": { "line": 379, "column": 31 }, "start": { "line": 380, "column": 12 } }, { "end": { "line": 379, "column": 8 }, "start": { "line": 380, "column": 36 } }] }, "40": { "line": 447, "type": "cond-expr", "locations": [{ "end": { "line": 424, "column": 27 }, "start": { "line": 424, "column": 49 } }, { "end": { "line": 424, "column": 8 }, "start": { "line": 424, "column": 73 } }] }, "41": { "line": 459, "type": "binary-expr", "locations": [{ "end": { "line": 436, "column": 33 }, "start": { "line": 436, "column": 33 } }, { "end": { "line": 436, "column": 8 }, "start": { "line": 436, "column": 60 } }] }, "42": { "line": 465, "type": "cond-expr", "locations": [{ "end": { "line": 442, "column": 31 }, "start": { "line": 443, "column": 12 } }, { "end": { "line": 442, "column": 8 }, "start": { "line": 442, "column": 31 } }] }, "43": { "line": 477, "type": "cond-expr", "locations": [{ "end": { "line": 455, "column": 30 }, "start": { "line": 456, "column": 12 } }, { "end": { "line": 455, "column": 8 }, "start": { "line": 455, "column": 30 } }] }, "44": { "line": 483, "type": "cond-expr", "locations": [{ "end": { "line": 462, "column": 34 }, "start": { "line": 463, "column": 12 } }, { "end": { "line": 462, "column": 8 }, "start": { "line": 463, "column": 38 } }] }, "45": { "line": 489, "type": "cond-expr", "locations": [{ "end": { "line": 469, "column": 30 }, "start": { "line": 470, "column": 12 } }, { "end": { "line": 469, "column": 8 }, "start": { "line": 469, "column": 30 } }] }, "46": { "line": 496, "type": "binary-expr", "locations": [{ "end": { "line": 477, "column": 25 }, "start": { "line": 477, "column": 25 } }, { "end": { "line": 477, "column": 8 }, "start": { "line": 477, "column": 40 } }] }, "47": { "line": 509, "type": "binary-expr", "locations": [{ "end": { "line": 490, "column": 28 }, "start": { "line": 490, "column": 28 } }, { "end": { "line": 490, "column": 8 }, "start": { "line": 490, "column": 51 } }] }, "48": { "line": 515, "type": "cond-expr", "locations": [{ "end": { "line": 496, "column": 20 }, "start": { "line": 497, "column": 12 } }, { "end": { "line": 496, "column": 8 }, "start": { "line": 497, "column": 24 } }] }, "49": { "line": 533, "type": "binary-expr", "locations": [{ "end": { "line": 515, "column": 37 }, "start": { "line": 515, "column": 37 } }, { "end": { "line": 515, "column": 8 }, "start": { "line": 516, "column": 12 } }] }, "50": { "line": 539, "type": "cond-expr", "locations": [{ "end": { "line": 522, "column": 36 }, "start": { "line": 523, "column": 12 } }, { "end": { "line": 522, "column": 8 }, "start": { "line": 522, "column": 36 } }] }, "51": { "line": 545, "type": "cond-expr", "locations": [{ "end": { "line": 529, "column": 35 }, "start": { "line": 530, "column": 12 } }, { "end": { "line": 529, "column": 8 }, "start": { "line": 529, "column": 35 } }] }, "52": { "line": 552, "type": "binary-expr", "locations": [{ "end": { "line": 537, "column": 31 }, "start": { "line": 537, "column": 31 } }, { "end": { "line": 537, "column": 8 }, "start": { "line": 537, "column": 54 } }] }, "53": { "line": 564, "type": "binary-expr", "locations": [{ "end": { "line": 549, "column": 25 }, "start": { "line": 549, "column": 25 } }, { "end": { "line": 549, "column": 8 }, "start": { "line": 549, "column": 41 } }] }, "54": { "line": 577, "type": "binary-expr", "locations": [{ "end": { "line": 562, "column": 28 }, "start": { "line": 562, "column": 28 } }, { "end": { "line": 562, "column": 8 }, "start": { "line": 562, "column": 48 } }] }, "55": { "line": 584, "type": "cond-expr", "locations": [{ "end": { "line": 569, "column": 27 }, "start": { "line": 569, "column": 51 } }, { "end": { "line": 569, "column": 8 }, "start": { "line": 569, "column": 59 } }] }, "56": { "line": 591, "type": "cond-expr", "locations": [{ "end": { "line": 576, "column": 23 }, "start": { "line": 576, "column": 49 } }, { "end": { "line": 576, "column": 8 }, "start": { "line": 576, "column": 57 } }] }, "57": { "line": 606, "type": "cond-expr", "locations": [{ "end": { "line": 591, "column": 26 }, "start": { "line": 591, "column": 46 } }, { "end": { "line": 591, "column": 8 }, "start": { "line": 591, "column": 63 } }] }, "58": { "line": 621, "type": "cond-expr", "locations": [{ "end": { "line": 606, "column": 27 }, "start": { "line": 606, "column": 48 } }, { "end": { "line": 606, "column": 8 }, "start": { "line": 606, "column": 66 } }] }, "59": { "line": 660, "type": "binary-expr", "locations": [{ "end": { "line": 645, "column": 27 }, "start": { "line": 645, "column": 27 } }, { "end": { "line": 645, "column": 8 }, "start": { "line": 645, "column": 48 } }] }, "60": { "line": 666, "type": "binary-expr", "locations": [{ "end": { "line": 651, "column": 26 }, "start": { "line": 651, "column": 26 } }, { "end": { "line": 651, "column": 8 }, "start": { "line": 651, "column": 46 } }] }, "61": { "line": 672, "type": "binary-expr", "locations": [{ "end": { "line": 657, "column": 26 }, "start": { "line": 657, "column": 26 } }, { "end": { "line": 657, "column": 8 }, "start": { "line": 657, "column": 49 } }] }, "62": { "line": 678, "type": "binary-expr", "locations": [{ "end": { "line": 663, "column": 26 }, "start": { "line": 663, "column": 26 } }, { "end": { "line": 663, "column": 8 }, "start": { "line": 663, "column": 43 } }] }, "63": { "line": 684, "type": "binary-expr", "locations": [{ "end": { "line": 669, "column": 26 }, "start": { "line": 669, "column": 26 } }, { "end": { "line": 669, "column": 8 }, "start": { "line": 669, "column": 44 } }] }, "64": { "line": 690, "type": "binary-expr", "locations": [{ "end": { "line": 675, "column": 26 }, "start": { "line": 675, "column": 26 } }, { "end": { "line": 675, "column": 8 }, "start": { "line": 675, "column": 48 } }] }, "65": { "line": 696, "type": "binary-expr", "locations": [{ "end": { "line": 681, "column": 26 }, "start": { "line": 681, "column": 26 } }, { "end": { "line": 681, "column": 8 }, "start": { "line": 681, "column": 46 } }] }, "66": { "line": 702, "type": "binary-expr", "locations": [{ "end": { "line": 687, "column": 26 }, "start": { "line": 687, "column": 26 } }, { "end": { "line": 687, "column": 8 }, "start": { "line": 687, "column": 52 } }] }, "67": { "line": 708, "type": "binary-expr", "locations": [{ "end": { "line": 693, "column": 26 }, "start": { "line": 693, "column": 26 } }, { "end": { "line": 693, "column": 8 }, "start": { "line": 693, "column": 54 } }] }, "68": { "line": 714, "type": "binary-expr", "locations": [{ "end": { "line": 699, "column": 26 }, "start": { "line": 699, "column": 26 } }, { "end": { "line": 699, "column": 8 }, "start": { "line": 699, "column": 50 } }] }, "69": { "line": 720, "type": "binary-expr", "locations": [{ "end": { "line": 705, "column": 26 }, "start": { "line": 705, "column": 26 } }, { "end": { "line": 705, "column": 8 }, "start": { "line": 705, "column": 45 } }] }, "70": { "line": 726, "type": "binary-expr", "locations": [{ "end": { "line": 711, "column": 26 }, "start": { "line": 711, "column": 26 } }, { "end": { "line": 711, "column": 8 }, "start": { "line": 711, "column": 46 } }] }, "71": { "line": 732, "type": "binary-expr", "locations": [{ "end": { "line": 717, "column": 26 }, "start": { "line": 717, "column": 26 } }, { "end": { "line": 717, "column": 8 }, "start": { "line": 717, "column": 51 } }] }, "72": { "line": 738, "type": "binary-expr", "locations": [{ "end": { "line": 723, "column": 26 }, "start": { "line": 723, "column": 26 } }, { "end": { "line": 723, "column": 8 }, "start": { "line": 723, "column": 49 } }] }, "73": { "line": 746, "type": "binary-expr", "locations": [{ "end": { "line": 731, "column": 25 }, "start": { "line": 731, "column": 25 } }, { "end": { "line": 731, "column": 8 }, "start": { "line": 731, "column": 40 } }] }, "74": { "line": 777, "type": "binary-expr", "locations": [{ "end": { "line": 762, "column": 23 }, "start": { "line": 762, "column": 23 } }, { "end": { "line": 762, "column": 23 }, "start": { "line": 762, "column": 38 } }] }, "75": { "line": 777, "type": "cond-expr", "locations": [{ "end": { "line": 762, "column": 38 }, "start": { "line": 762, "column": 58 } }, { "end": { "line": 762, "column": 23 }, "start": { "line": 762, "column": 65 } }] }, "76": { "line": 783, "type": "binary-expr", "locations": [{ "end": { "line": 768, "column": 27 }, "start": { "line": 768, "column": 27 } }, { "end": { "line": 768, "column": 27 }, "start": { "line": 769, "column": 13 } }] }, "77": { "line": 783, "type": "cond-expr", "locations": [{ "end": { "line": 769, "column": 13 }, "start": { "line": 769, "column": 33 } }, { "end": { "line": 768, "column": 27 }, "start": { "line": 769, "column": 44 } }] }, "78": { "line": 795, "type": "cond-expr", "locations": [{ "end": { "line": 781, "column": 29 }, "start": { "line": 782, "column": 12 } }, { "end": { "line": 781, "column": 8 }, "start": { "line": 781, "column": 29 } }] }, "79": { "line": 801, "type": "cond-expr", "locations": [{ "end": { "line": 788, "column": 28 }, "start": { "line": 789, "column": 12 } }, { "end": { "line": 788, "column": 8 }, "start": { "line": 788, "column": 28 } }] }, "80": { "line": 827, "type": "cond-expr", "locations": [{ "end": { "line": 815, "column": 31 }, "start": { "line": 816, "column": 12 } }, { "end": { "line": 815, "column": 8 }, "start": { "line": 815, "column": 31 } }] }, "81": { "line": 853, "type": "binary-expr", "locations": [{ "end": { "line": 842, "column": 25 }, "start": { "line": 842, "column": 25 } }, { "end": { "line": 842, "column": 8 }, "start": { "line": 843, "column": 12 } }] }, "82": { "line": 859, "type": "binary-expr", "locations": [{ "end": { "line": 849, "column": 21 }, "start": { "line": 849, "column": 21 } }, { "end": { "line": 849, "column": 8 }, "start": { "line": 849, "column": 39 } }] }, "83": { "line": 868, "type": "binary-expr", "locations": [{ "end": { "line": 858, "column": 22 }, "start": { "line": 858, "column": 22 } }, { "end": { "line": 858, "column": 8 }, "start": { "line": 858, "column": 34 } }] }, "84": { "line": 874, "type": "binary-expr", "locations": [{ "end": { "line": 864, "column": 34 }, "start": { "line": 864, "column": 34 } }, { "end": { "line": 864, "column": 8 }, "start": { "line": 864, "column": 59 } }] }, "85": { "line": 880, "type": "binary-expr", "locations": [{ "end": { "line": 870, "column": 32 }, "start": { "line": 870, "column": 32 } }, { "end": { "line": 870, "column": 8 }, "start": { "line": 870, "column": 55 } }] }, "86": { "line": 903, "type": "cond-expr", "locations": [{ "end": { "line": 893, "column": 24 }, "start": { "line": 893, "column": 43 } }, { "end": { "line": 893, "column": 8 }, "start": { "line": 893, "column": 57 } }] }, "87": { "line": 981, "type": "binary-expr", "locations": [{ "end": { "line": 971, "column": 26 }, "start": { "line": 971, "column": 26 } }, { "end": { "line": 971, "column": 8 }, "start": { "line": 971, "column": 53 } }] }, "88": { "line": 988, "type": "binary-expr", "locations": [{ "end": { "line": 978, "column": 22 }, "start": { "line": 978, "column": 22 } }, { "end": { "line": 978, "column": 8 }, "start": { "line": 978, "column": 34 } }] }, "89": { "line": 996, "type": "binary-expr", "locations": [{ "end": { "line": 986, "column": 26 }, "start": { "line": 986, "column": 26 } }, { "end": { "line": 986, "column": 8 }, "start": { "line": 986, "column": 43 } }] }, "90": { "line": 1025, "type": "if", "locations": [{ "end": { "line": 1011, "column": 8 }, "start": { "line": 1011, "column": 8 } }, { "end": { "line": 1011, "column": 8 }, "start": { "line": 1011, "column": 8 } }] }, "91": { "line": 1031, "type": "cond-expr", "locations": [{ "end": { "line": 1017, "column": 16 }, "start": { "line": 1017, "column": 39 } }, { "end": { "line": 1017, "column": 8 }, "start": { "line": 1017, "column": 43 } }] }, "92": { "line": 1038, "type": "if", "locations": [{ "end": { "line": 1024, "column": 8 }, "start": { "line": 1024, "column": 8 } }, { "end": { "line": 1024, "column": 8 }, "start": { "line": 1024, "column": 8 } }] }, "93": { "line": 1043, "type": "binary-expr", "locations": [{ "end": { "line": 1029, "column": 23 }, "start": { "line": 1029, "column": 23 } }, { "end": { "line": 1029, "column": 8 }, "start": { "line": 1029, "column": 39 } }] }, "94": { "line": 1047, "type": "binary-expr", "locations": [{ "end": { "line": 1033, "column": 19 }, "start": { "line": 1033, "column": 19 } }, { "end": { "line": 1033, "column": 8 }, "start": { "line": 1033, "column": 31 } }] }, "95": { "line": 1048, "type": "if", "locations": [{ "end": { "line": 1034, "column": 8 }, "start": { "line": 1034, "column": 8 } }, { "end": { "line": 1034, "column": 8 }, "start": { "line": 1034, "column": 8 } }] }, "96": { "line": 1052, "type": "if", "locations": [{ "end": { "line": 1038, "column": 8 }, "start": { "line": 1038, "column": 8 } }, { "end": { "line": 1038, "column": 8 }, "start": { "line": 1038, "column": 8 } }] }, "97": { "line": 1053, "type": "binary-expr", "locations": [{ "end": { "line": 1039, "column": 24 }, "start": { "line": 1039, "column": 24 } }, { "end": { "line": 1039, "column": 12 }, "start": { "line": 1039, "column": 37 } }] }, "98": { "line": 1057, "type": "if", "locations": [{ "end": { "line": 1043, "column": 8 }, "start": { "line": 1043, "column": 8 } }, { "end": { "line": 1043, "column": 8 }, "start": { "line": 1043, "column": 8 } }] }, "99": { "line": 1058, "type": "binary-expr", "locations": [{ "end": { "line": 1044, "column": 29 }, "start": { "line": 1044, "column": 29 } }, { "end": { "line": 1044, "column": 12 }, "start": { "line": 1044, "column": 47 } }] }, "100": { "line": 1062, "type": "if", "locations": [{ "end": { "line": 1048, "column": 8 }, "start": { "line": 1048, "column": 8 } }, { "end": { "line": 1048, "column": 8 }, "start": { "line": 1048, "column": 8 } }] }, "101": { "line": 1063, "type": "binary-expr", "locations": [{ "end": { "line": 1049, "column": 25 }, "start": { "line": 1049, "column": 25 } }, { "end": { "line": 1049, "column": 12 }, "start": { "line": 1049, "column": 39 } }] }, "102": { "line": 1067, "type": "if", "locations": [{ "end": { "line": 1053, "column": 8 }, "start": { "line": 1053, "column": 8 } }, { "end": { "line": 1053, "column": 8 }, "start": { "line": 1053, "column": 8 } }] }, "103": { "line": 1072, "type": "if", "locations": [{ "end": { "line": 1058, "column": 8 }, "start": { "line": 1058, "column": 8 } }, { "end": { "line": 1058, "column": 8 }, "start": { "line": 1058, "column": 8 } }] }, "104": { "line": 1073, "type": "binary-expr", "locations": [{ "end": { "line": 1059, "column": 30 }, "start": { "line": 1059, "column": 30 } }, { "end": { "line": 1059, "column": 12 }, "start": { "line": 1059, "column": 49 } }] }, "105": { "line": 1078, "type": "if", "locations": [{ "end": { "line": 1064, "column": 8 }, "start": { "line": 1064, "column": 8 } }, { "end": { "line": 1064, "column": 8 }, "start": { "line": 1064, "column": 8 } }] }, "106": { "line": 1092, "type": "if", "locations": [{ "end": { "line": 1078, "column": 16 }, "start": { "line": 1078, "column": 16 } }, { "end": { "line": 1078, "column": 16 }, "start": { "line": 1078, "column": 16 } }] }, "107": { "line": 1095, "type": "if", "locations": [{ "end": { "line": 1081, "column": 16 }, "start": { "line": 1081, "column": 16 } }, { "end": { "line": 1081, "column": 16 }, "start": { "line": 1081, "column": 16 } }] }, "108": { "line": 1098, "type": "cond-expr", "locations": [{ "end": { "line": 1084, "column": 27 }, "start": { "line": 1085, "column": 20 } }, { "end": { "line": 1084, "column": 16 }, "start": { "line": 1085, "column": 44 } }] }, "109": { "line": 1098, "type": "binary-expr", "locations": [{ "end": { "line": 1084, "column": 28 }, "start": { "line": 1084, "column": 28 } }, { "end": { "line": 1084, "column": 27 }, "start": { "line": 1084, "column": 43 } }] }, "110": { "line": 1101, "type": "if", "locations": [{ "end": { "line": 1088, "column": 16 }, "start": { "line": 1088, "column": 16 } }, { "end": { "line": 1088, "column": 16 }, "start": { "line": 1088, "column": 16 } }] }, "111": { "line": 1107, "type": "if", "locations": [{ "end": { "line": 1094, "column": 16 }, "start": { "line": 1094, "column": 16 } }, { "end": { "line": 1094, "column": 16 }, "start": { "line": 1094, "column": 16 } }] }, "112": { "line": 1107, "type": "binary-expr", "locations": [{ "end": { "line": 1094, "column": 20 }, "start": { "line": 1094, "column": 20 } }, { "end": { "line": 1094, "column": 16 }, "start": { "line": 1094, "column": 38 } }] }, "113": { "line": 1108, "type": "if", "locations": [{ "end": { "line": 1095, "column": 20 }, "start": { "line": 1095, "column": 20 } }, { "end": { "line": 1095, "column": 20 }, "start": { "line": 1095, "column": 20 } }] }, "114": { "line": 1114, "type": "if", "locations": [{ "end": { "line": 1101, "column": 21 }, "start": { "line": 1101, "column": 21 } }, { "end": { "line": 1101, "column": 21 }, "start": { "line": 1101, "column": 21 } }] }, "115": { "line": 1115, "type": "if", "locations": [{ "end": { "line": 1102, "column": 20 }, "start": { "line": 1102, "column": 20 } }, { "end": { "line": 1102, "column": 20 }, "start": { "line": 1102, "column": 20 } }] }, "116": { "line": 1124, "type": "if", "locations": [{ "end": { "line": 1111, "column": 16 }, "start": { "line": 1111, "column": 16 } }, { "end": { "line": 1111, "column": 16 }, "start": { "line": 1111, "column": 16 } }] }, "117": { "line": 1124, "type": "binary-expr", "locations": [{ "end": { "line": 1111, "column": 20 }, "start": { "line": 1111, "column": 20 } }, { "end": { "line": 1111, "column": 16 }, "start": { "line": 1111, "column": 35 } }] }, "118": { "line": 1137, "type": "if", "locations": [{ "end": { "line": 1124, "column": 8 }, "start": { "line": 1124, "column": 8 } }, { "end": { "line": 1124, "column": 8 }, "start": { "line": 1124, "column": 8 } }] }, "119": { "line": 1143, "type": "if", "locations": [{ "end": { "line": 1129, "column": 8 }, "start": { "line": 1129, "column": 8 } }, { "end": { "line": 1129, "column": 8 }, "start": { "line": 1129, "column": 8 } }] }, "120": { "line": 1147, "type": "if", "locations": [{ "end": { "line": 1133, "column": 8 }, "start": { "line": 1133, "column": 8 } }, { "end": { "line": 1133, "column": 8 }, "start": { "line": 1133, "column": 8 } }] }, "121": { "line": 1151, "type": "if", "locations": [{ "end": { "line": 1137, "column": 8 }, "start": { "line": 1137, "column": 8 } }, { "end": { "line": 1137, "column": 8 }, "start": { "line": 1137, "column": 8 } }] }, "122": { "line": 1152, "type": "if", "locations": [{ "end": { "line": 1138, "column": 12 }, "start": { "line": 1138, "column": 12 } }, { "end": { "line": 1138, "column": 12 }, "start": { "line": 1138, "column": 12 } }] }, "123": { "line": 1159, "type": "if", "locations": [{ "end": { "line": 1145, "column": 8 }, "start": { "line": 1145, "column": 8 } }, { "end": { "line": 1145, "column": 8 }, "start": { "line": 1145, "column": 8 } }] }, "124": { "line": 1164, "type": "if", "locations": [{ "end": { "line": 1150, "column": 8 }, "start": { "line": 1150, "column": 8 } }, { "end": { "line": 1150, "column": 8 }, "start": { "line": 1150, "column": 8 } }] }, "125": { "line": 1164, "type": "binary-expr", "locations": [{ "end": { "line": 1150, "column": 12 }, "start": { "line": 1150, "column": 12 } }, { "end": { "line": 1150, "column": 8 }, "start": { "line": 1150, "column": 33 } }] }, "126": { "line": 1167, "type": "if", "locations": [{ "end": { "line": 1153, "column": 8 }, "start": { "line": 1153, "column": 8 } }, { "end": { "line": 1153, "column": 8 }, "start": { "line": 1153, "column": 8 } }] }, "127": { "line": 1171, "type": "if", "locations": [{ "end": { "line": 1157, "column": 8 }, "start": { "line": 1157, "column": 8 } }, { "end": { "line": 1157, "column": 8 }, "start": { "line": 1157, "column": 8 } }] }, "128": { "line": 1172, "type": "binary-expr", "locations": [{ "end": { "line": 1158, "column": 28 }, "start": { "line": 1158, "column": 28 } }, { "end": { "line": 1158, "column": 12 }, "start": { "line": 1158, "column": 45 } }] }, "129": { "line": 1177, "type": "if", "locations": [{ "end": { "line": 1163, "column": 8 }, "start": { "line": 1163, "column": 8 } }, { "end": { "line": 1163, "column": 8 }, "start": { "line": 1163, "column": 8 } }] }, "130": { "line": 1179, "type": "if", "locations": [{ "end": { "line": 1165, "column": 12 }, "start": { "line": 1165, "column": 12 } }, { "end": { "line": 1165, "column": 12 }, "start": { "line": 1165, "column": 12 } }] }, "131": { "line": 1185, "type": "if", "locations": [{ "end": { "line": 1171, "column": 8 }, "start": { "line": 1171, "column": 8 } }, { "end": { "line": 1171, "column": 8 }, "start": { "line": 1171, "column": 8 } }] }, "132": { "line": 1190, "type": "if", "locations": [{ "end": { "line": 1176, "column": 8 }, "start": { "line": 1176, "column": 8 } }, { "end": { "line": 1176, "column": 8 }, "start": { "line": 1176, "column": 8 } }] }, "133": { "line": 1198, "type": "if", "locations": [{ "end": { "line": 1182, "column": 8 }, "start": { "line": 1182, "column": 8 } }, { "end": { "line": 1182, "column": 8 }, "start": { "line": 1182, "column": 8 } }] }, "134": { "line": 1219, "type": "if", "locations": [{ "end": { "line": 1199, "column": 8 }, "start": { "line": 1199, "column": 8 } }, { "end": { "line": 1199, "column": 8 }, "start": { "line": 1199, "column": 8 } }] }, "135": { "line": 1222, "type": "if", "locations": [{ "end": { "line": 1202, "column": 8 }, "start": { "line": 1202, "column": 8 } }, { "end": { "line": 1202, "column": 8 }, "start": { "line": 1202, "column": 8 } }] }, "136": { "line": 1224, "type": "if", "locations": [{ "end": { "line": 1204, "column": 12 }, "start": { "line": 1204, "column": 12 } }, { "end": { "line": 1204, "column": 12 }, "start": { "line": 1204, "column": 12 } }] }, "137": { "line": 1244, "type": "if", "locations": [{ "end": { "line": 1222, "column": 8 }, "start": { "line": 1222, "column": 8 } }, { "end": { "line": 1222, "column": 8 }, "start": { "line": 1222, "column": 8 } }] }, "138": { "line": 1253, "type": "if", "locations": [{ "end": { "line": 1231, "column": 12 }, "start": { "line": 1231, "column": 12 } }, { "end": { "line": 1231, "column": 12 }, "start": { "line": 1231, "column": 12 } }] }, "139": { "line": 1259, "type": "if", "locations": [{ "end": { "line": 1237, "column": 8 }, "start": { "line": 1237, "column": 8 } }, { "end": { "line": 1237, "column": 8 }, "start": { "line": 1237, "column": 8 } }] }, "140": { "line": 1259, "type": "binary-expr", "locations": [{ "end": { "line": 1237, "column": 12 }, "start": { "line": 1237, "column": 12 } }, { "end": { "line": 1237, "column": 12 }, "start": { "line": 1237, "column": 33 } }, { "end": { "line": 1237, "column": 12 }, "start": { "line": 1237, "column": 52 } }, { "end": { "line": 1237, "column": 12 }, "start": { "line": 1238, "column": 12 } }, { "end": { "line": 1237, "column": 8 }, "start": { "line": 1238, "column": 36 } }] }, "141": { "line": 1260, "type": "if", "locations": [{ "end": { "line": 1239, "column": 12 }, "start": { "line": 1239, "column": 12 } }, { "end": { "line": 1239, "column": 12 }, "start": { "line": 1239, "column": 12 } }] }, "142": { "line": 1275, "type": "if", "locations": [{ "end": { "line": 1253, "column": 8 }, "start": { "line": 1253, "column": 8 } }, { "end": { "line": 1253, "column": 8 }, "start": { "line": 1253, "column": 8 } }] }, "143": { "line": 1297, "type": "if", "locations": [{ "end": { "line": 1271, "column": 8 }, "start": { "line": 1271, "column": 8 } }, { "end": { "line": 1271, "column": 8 }, "start": { "line": 1271, "column": 8 } }] }, "144": { "line": 1313, "type": "if", "locations": [{ "end": { "line": 1285, "column": 8 }, "start": { "line": 1285, "column": 8 } }, { "end": { "line": 1285, "column": 8 }, "start": { "line": 1285, "column": 8 } }] }, "145": { "line": 1319, "type": "if", "locations": [{ "end": { "line": 1291, "column": 8 }, "start": { "line": 1291, "column": 8 } }, { "end": { "line": 1291, "column": 8 }, "start": { "line": 1291, "column": 8 } }] }, "146": { "line": 1327, "type": "if", "locations": [{ "end": { "line": 1299, "column": 8 }, "start": { "line": 1299, "column": 8 } }, { "end": { "line": 1299, "column": 8 }, "start": { "line": 1299, "column": 8 } }] }, "147": { "line": 1341, "type": "if", "locations": [{ "end": { "line": 1311, "column": 8 }, "start": { "line": 1311, "column": 8 } }, { "end": { "line": 1311, "column": 8 }, "start": { "line": 1311, "column": 8 } }] }, "148": { "line": 1344, "type": "cond-expr", "locations": [{ "end": { "line": 1314, "column": 22 }, "start": { "line": 1314, "column": 40 } }, { "end": { "line": 1314, "column": 8 }, "start": { "line": 1314, "column": 58 } }] }, "149": { "line": 1360, "type": "cond-expr", "locations": [{ "end": { "line": 1326, "column": 31 }, "start": { "line": 1327, "column": 12 } }, { "end": { "line": 1326, "column": 8 }, "start": { "line": 1327, "column": 47 } }] }, "150": { "line": 1361, "type": "cond-expr", "locations": [{ "end": { "line": 1328, "column": 22 }, "start": { "line": 1328, "column": 38 } }, { "end": { "line": 1328, "column": 8 }, "start": { "line": 1328, "column": 47 } }] }, "151": { "line": 1364, "type": "if", "locations": [{ "end": { "line": 1333, "column": 8 }, "start": { "line": 1333, "column": 8 } }, { "end": { "line": 1333, "column": 8 }, "start": { "line": 1333, "column": 8 } }] }, "152": { "line": 1364, "type": "binary-expr", "locations": [{ "end": { "line": 1333, "column": 12 }, "start": { "line": 1333, "column": 12 } }, { "end": { "line": 1333, "column": 8 }, "start": { "line": 1333, "column": 36 } }] }, "153": { "line": 1365, "type": "cond-expr", "locations": [{ "end": { "line": 1335, "column": 16 }, "start": { "line": 1335, "column": 41 } }, { "end": { "line": 1334, "column": 12 }, "start": { "line": 1336, "column": 20 } }] }, "154": { "line": 1365, "type": "binary-expr", "locations": [{ "end": { "line": 1335, "column": 41 }, "start": { "line": 1335, "column": 41 } }, { "end": { "line": 1335, "column": 16 }, "start": { "line": 1335, "column": 69 } }] }, "155": { "line": 1367, "type": "binary-expr", "locations": [{ "end": { "line": 1339, "column": 24 }, "start": { "line": 1339, "column": 24 } }, { "end": { "line": 1339, "column": 8 }, "start": { "line": 1339, "column": 36 } }] }, "156": { "line": 1373, "type": "if", "locations": [{ "end": { "line": 1343, "column": 8 }, "start": { "line": 1343, "column": 8 } }, { "end": { "line": 1343, "column": 8 }, "start": { "line": 1343, "column": 8 } }] }, "157": { "line": 1405, "type": "cond-expr", "locations": [{ "end": { "line": 1363, "column": 31 }, "start": { "line": 1364, "column": 12 } }, { "end": { "line": 1363, "column": 8 }, "start": { "line": 1364, "column": 47 } }] }, "158": { "line": 1410, "type": "if", "locations": [{ "end": { "line": 1372, "column": 8 }, "start": { "line": 1372, "column": 8 } }, { "end": { "line": 1372, "column": 8 }, "start": { "line": 1372, "column": 8 } }] }, "159": { "line": 1445, "type": "if", "locations": [{ "end": { "line": 1401, "column": 12 }, "start": { "line": 1401, "column": 12 } }, { "end": { "line": 1401, "column": 12 }, "start": { "line": 1401, "column": 12 } }] }, "160": { "line": 1461, "type": "if", "locations": [{ "end": { "line": 1413, "column": 8 }, "start": { "line": 1413, "column": 8 } }, { "end": { "line": 1413, "column": 8 }, "start": { "line": 1413, "column": 8 } }] }, "161": { "line": 1461, "type": "binary-expr", "locations": [{ "end": { "line": 1413, "column": 12 }, "start": { "line": 1413, "column": 12 } }, { "end": { "line": 1413, "column": 8 }, "start": { "line": 1413, "column": 20 } }] }, "162": { "line": 1469, "type": "if", "locations": [{ "end": { "line": 1421, "column": 8 }, "start": { "line": 1421, "column": 8 } }, { "end": { "line": 1421, "column": 8 }, "start": { "line": 1421, "column": 8 } }] }, "163": { "line": 1469, "type": "binary-expr", "locations": [{ "end": { "line": 1421, "column": 12 }, "start": { "line": 1421, "column": 12 } }, { "end": { "line": 1421, "column": 8 }, "start": { "line": 1421, "column": 20 } }] }, "164": { "line": 1519, "type": "if", "locations": [{ "end": { "line": 1465, "column": 12 }, "start": { "line": 1465, "column": 12 } }, { "end": { "line": 1465, "column": 12 }, "start": { "line": 1465, "column": 12 } }] }, "165": { "line": 1536, "type": "if", "locations": [{ "end": { "line": 1480, "column": 8 }, "start": { "line": 1480, "column": 8 } }, { "end": { "line": 1480, "column": 8 }, "start": { "line": 1480, "column": 8 } }] }, "166": { "line": 1540, "type": "if", "locations": [{ "end": { "line": 1484, "column": 8 }, "start": { "line": 1484, "column": 8 } }, { "end": { "line": 1484, "column": 8 }, "start": { "line": 1484, "column": 8 } }] }, "167": { "line": 1546, "type": "if", "locations": [{ "end": { "line": 1490, "column": 16 }, "start": { "line": 1490, "column": 16 } }, { "end": { "line": 1490, "column": 16 }, "start": { "line": 1490, "column": 16 } }] }, "168": { "line": 1546, "type": "binary-expr", "locations": [{ "end": { "line": 1490, "column": 20 }, "start": { "line": 1490, "column": 20 } }, { "end": { "line": 1490, "column": 16 }, "start": { "line": 1490, "column": 28 } }] }, "169": { "line": 1548, "type": "if", "locations": [{ "end": { "line": 1493, "column": 21 }, "start": { "line": 1493, "column": 21 } }, { "end": { "line": 1493, "column": 21 }, "start": { "line": 1493, "column": 21 } }] }, "170": { "line": 1548, "type": "binary-expr", "locations": [{ "end": { "line": 1493, "column": 25 }, "start": { "line": 1493, "column": 25 } }, { "end": { "line": 1493, "column": 21 }, "start": { "line": 1493, "column": 34 } }] }, "171": { "line": 1552, "type": "if", "locations": [{ "end": { "line": 1497, "column": 16 }, "start": { "line": 1497, "column": 16 } }, { "end": { "line": 1497, "column": 16 }, "start": { "line": 1497, "column": 16 } }] }, "172": { "line": 1571, "type": "cond-expr", "locations": [{ "end": { "line": 1513, "column": 36 }, "start": { "line": 1513, "column": 36 } }, { "end": { "line": 1513, "column": 36 }, "start": { "line": 1513, "column": 25 } }] }, "173": { "line": 1571, "type": "binary-expr", "locations": [{ "end": { "line": 1513, "column": 36 }, "start": { "line": 1513, "column": 36 } }, { "end": { "line": 1513, "column": 36 }, "start": { "line": 1513, "column": 36 } }] }, "174": { "line": 1584, "type": "if", "locations": [{ "end": { "line": 1521, "column": 8 }, "start": { "line": 1521, "column": 8 } }, { "end": { "line": 1521, "column": 8 }, "start": { "line": 1521, "column": 8 } }] }, "175": { "line": 1590, "type": "if", "locations": [{ "end": { "line": 1527, "column": 8 }, "start": { "line": 1527, "column": 8 } }, { "end": { "line": 1527, "column": 8 }, "start": { "line": 1527, "column": 8 } }] }, "176": { "line": 1590, "type": "binary-expr", "locations": [{ "end": { "line": 1527, "column": 12 }, "start": { "line": 1527, "column": 12 } }, { "end": { "line": 1527, "column": 8 }, "start": { "line": 1527, "column": 34 } }] }, "177": { "line": 1593, "type": "if", "locations": [{ "end": { "line": 1530, "column": 8 }, "start": { "line": 1530, "column": 8 } }, { "end": { "line": 1530, "column": 8 }, "start": { "line": 1530, "column": 8 } }] }, "178": { "line": 1596, "type": "if", "locations": [{ "end": { "line": 1533, "column": 8 }, "start": { "line": 1533, "column": 8 } }, { "end": { "line": 1533, "column": 8 }, "start": { "line": 1533, "column": 8 } }] }, "179": { "line": 1605, "type": "if", "locations": [{ "end": { "line": 1539, "column": 8 }, "start": { "line": 1539, "column": 8 } }, { "end": { "line": 1539, "column": 8 }, "start": { "line": 1539, "column": 8 } }] }, "180": { "line": 1611, "type": "if", "locations": [{ "end": { "line": 1545, "column": 8 }, "start": { "line": 1545, "column": 8 } }, { "end": { "line": 1545, "column": 8 }, "start": { "line": 1545, "column": 8 } }] }, "181": { "line": 1611, "type": "binary-expr", "locations": [{ "end": { "line": 1545, "column": 12 }, "start": { "line": 1545, "column": 12 } }, { "end": { "line": 1545, "column": 8 }, "start": { "line": 1545, "column": 28 } }] }, "182": { "line": 1619, "type": "if", "locations": [{ "end": { "line": 1553, "column": 8 }, "start": { "line": 1553, "column": 8 } }, { "end": { "line": 1553, "column": 8 }, "start": { "line": 1553, "column": 8 } }] }, "183": { "line": 1624, "type": "if", "locations": [{ "end": { "line": 1556, "column": 8 }, "start": { "line": 1556, "column": 8 } }, { "end": { "line": 1556, "column": 8 }, "start": { "line": 1556, "column": 8 } }] }, "184": { "line": 1648, "type": "if", "locations": [{ "end": { "line": 1575, "column": 8 }, "start": { "line": 1575, "column": 8 } }, { "end": { "line": 1575, "column": 8 }, "start": { "line": 1575, "column": 8 } }] }, "185": { "line": 1657, "type": "if", "locations": [{ "end": { "line": 1584, "column": 8 }, "start": { "line": 1584, "column": 8 } }, { "end": { "line": 1584, "column": 8 }, "start": { "line": 1584, "column": 8 } }] }, "186": { "line": 1661, "type": "if", "locations": [{ "end": { "line": 1588, "column": 13 }, "start": { "line": 1588, "column": 13 } }, { "end": { "line": 1588, "column": 13 }, "start": { "line": 1588, "column": 13 } }] }, "187": { "line": 1694, "type": "if", "locations": [{ "end": { "line": 1621, "column": 8 }, "start": { "line": 1621, "column": 8 } }, { "end": { "line": 1621, "column": 8 }, "start": { "line": 1621, "column": 8 } }] }, "188": { "line": 1708, "type": "if", "locations": [{ "end": { "line": 1633, "column": 8 }, "start": { "line": 1633, "column": 8 } }, { "end": { "line": 1633, "column": 8 }, "start": { "line": 1633, "column": 8 } }] }, "189": { "line": 1716, "type": "if", "locations": [{ "end": { "line": 1641, "column": 8 }, "start": { "line": 1641, "column": 8 } }, { "end": { "line": 1641, "column": 8 }, "start": { "line": 1641, "column": 8 } }] }, "190": { "line": 1729, "type": "if", "locations": [{ "end": { "line": 1650, "column": 8 }, "start": { "line": 1650, "column": 8 } }, { "end": { "line": 1650, "column": 8 }, "start": { "line": 1650, "column": 8 } }] }, "191": { "line": 1737, "type": "if", "locations": [{ "end": { "line": 1658, "column": 12 }, "start": { "line": 1658, "column": 12 } }, { "end": { "line": 1658, "column": 12 }, "start": { "line": 1658, "column": 12 } }] }, "192": { "line": 1751, "type": "binary-expr", "locations": [{ "end": { "line": 1670, "column": 15 }, "start": { "line": 1670, "column": 15 } }, { "end": { "line": 1670, "column": 8 }, "start": { "line": 1671, "column": 12 } }] }, "193": { "line": 1763, "type": "if", "locations": [{ "end": { "line": 1681, "column": 8 }, "start": { "line": 1681, "column": 8 } }, { "end": { "line": 1681, "column": 8 }, "start": { "line": 1681, "column": 8 } }] }, "194": { "line": 1763, "type": "binary-expr", "locations": [{ "end": { "line": 1681, "column": 12 }, "start": { "line": 1681, "column": 12 } }, { "end": { "line": 1681, "column": 8 }, "start": { "line": 1681, "column": 33 } }] }, "195": { "line": 1778, "type": "if", "locations": [{ "end": { "line": 1695, "column": 12 }, "start": { "line": 1695, "column": 12 } }, { "end": { "line": 1695, "column": 12 }, "start": { "line": 1695, "column": 12 } }] }, "196": { "line": 1784, "type": "if", "locations": [{ "end": { "line": 1701, "column": 8 }, "start": { "line": 1701, "column": 8 } }, { "end": { "line": 1701, "column": 8 }, "start": { "line": 1701, "column": 8 } }] }, "197": { "line": 1799, "type": "if", "locations": [{ "end": { "line": 1714, "column": 8 }, "start": { "line": 1714, "column": 8 } }, { "end": { "line": 1714, "column": 8 }, "start": { "line": 1714, "column": 8 } }] }, "198": { "line": 1799, "type": "binary-expr", "locations": [{ "end": { "line": 1714, "column": 12 }, "start": { "line": 1714, "column": 12 } }, { "end": { "line": 1714, "column": 8 }, "start": { "line": 1714, "column": 29 } }] }, "199": { "line": 1822, "type": "if", "locations": [{ "end": { "line": 1737, "column": 12 }, "start": { "line": 1737, "column": 12 } }, { "end": { "line": 1737, "column": 12 }, "start": { "line": 1737, "column": 12 } }] }, "200": { "line": 1835, "type": "cond-expr", "locations": [{ "end": { "line": 1749, "column": 36 }, "start": { "line": 1749, "column": 59 } }, { "end": { "line": 1749, "column": 25 }, "start": { "line": 1749, "column": 63 } }] }, "201": { "line": 1837, "type": "if", "locations": [{ "end": { "line": 1751, "column": 16 }, "start": { "line": 1751, "column": 16 } }, { "end": { "line": 1751, "column": 16 }, "start": { "line": 1751, "column": 16 } }] }, "202": { "line": 1856, "type": "if", "locations": [{ "end": { "line": 1768, "column": 16 }, "start": { "line": 1768, "column": 16 } }, { "end": { "line": 1768, "column": 16 }, "start": { "line": 1768, "column": 16 } }] }, "203": { "line": 1856, "type": "binary-expr", "locations": [{ "end": { "line": 1768, "column": 20 }, "start": { "line": 1768, "column": 20 } }, { "end": { "line": 1768, "column": 20 }, "start": { "line": 1768, "column": 35 } }, { "end": { "line": 1768, "column": 16 }, "start": { "line": 1768, "column": 51 } }] }, "204": { "line": 1860, "type": "if", "locations": [{ "end": { "line": 1772, "column": 20 }, "start": { "line": 1772, "column": 20 } }, { "end": { "line": 1772, "column": 20 }, "start": { "line": 1772, "column": 20 } }] }, "205": { "line": 1863, "type": "cond-expr", "locations": [{ "end": { "line": 1775, "column": 28 }, "start": { "line": 1775, "column": 43 } }, { "end": { "line": 1775, "column": 24 }, "start": { "line": 1775, "column": 55 } }] }, "206": { "line": 1870, "type": "if", "locations": [{ "end": { "line": 1782, "column": 24 }, "start": { "line": 1782, "column": 24 } }, { "end": { "line": 1782, "column": 24 }, "start": { "line": 1782, "column": 24 } }] }, "207": { "line": 1873, "type": "if", "locations": [{ "end": { "line": 1786, "column": 24 }, "start": { "line": 1786, "column": 24 } }, { "end": { "line": 1786, "column": 24 }, "start": { "line": 1786, "column": 24 } }] }, "208": { "line": 1873, "type": "binary-expr", "locations": [{ "end": { "line": 1786, "column": 29 }, "start": { "line": 1786, "column": 29 } }, { "end": { "line": 1786, "column": 28 }, "start": { "line": 1786, "column": 45 } }, { "end": { "line": 1787, "column": 29 }, "start": { "line": 1787, "column": 29 } }, { "end": { "line": 1786, "column": 24 }, "start": { "line": 1787, "column": 46 } }] }, "209": { "line": 1876, "type": "if", "locations": [{ "end": { "line": 1790, "column": 24 }, "start": { "line": 1790, "column": 24 } }, { "end": { "line": 1790, "column": 24 }, "start": { "line": 1790, "column": 24 } }] }, "210": { "line": 1876, "type": "binary-expr", "locations": [{ "end": { "line": 1790, "column": 28 }, "start": { "line": 1790, "column": 28 } }, { "end": { "line": 1790, "column": 24 }, "start": { "line": 1790, "column": 43 } }] }, "211": { "line": 1885, "type": "if", "locations": [{ "end": { "line": 1800, "column": 20 }, "start": { "line": 1800, "column": 20 } }, { "end": { "line": 1800, "column": 20 }, "start": { "line": 1800, "column": 20 } }] }, "212": { "line": 1890, "type": "if", "locations": [{ "end": { "line": 1806, "column": 16 }, "start": { "line": 1806, "column": 16 } }, { "end": { "line": 1806, "column": 16 }, "start": { "line": 1806, "column": 16 } }] }, "213": { "line": 1893, "type": "if", "locations": [{ "end": { "line": 1809, "column": 16 }, "start": { "line": 1809, "column": 16 } }, { "end": { "line": 1809, "column": 16 }, "start": { "line": 1809, "column": 16 } }] }, "214": { "line": 1893, "type": "binary-expr", "locations": [{ "end": { "line": 1809, "column": 20 }, "start": { "line": 1809, "column": 20 } }, { "end": { "line": 1809, "column": 16 }, "start": { "line": 1809, "column": 44 } }] }, "215": { "line": 1900, "type": "if", "locations": [{ "end": { "line": 1816, "column": 12 }, "start": { "line": 1816, "column": 12 } }, { "end": { "line": 1816, "column": 12 }, "start": { "line": 1816, "column": 12 } }] }, "216": { "line": 1900, "type": "binary-expr", "locations": [{ "end": { "line": 1816, "column": 16 }, "start": { "line": 1816, "column": 16 } }, { "end": { "line": 1816, "column": 12 }, "start": { "line": 1816, "column": 40 } }] }, "217": { "line": 1905, "type": "if", "locations": [{ "end": { "line": 1821, "column": 12 }, "start": { "line": 1821, "column": 12 } }, { "end": { "line": 1821, "column": 12 }, "start": { "line": 1821, "column": 12 } }] }, "218": { "line": 1969, "type": "if", "locations": [{ "end": { "line": 1882, "column": 8 }, "start": { "line": 1882, "column": 8 } }, { "end": { "line": 1882, "column": 8 }, "start": { "line": 1882, "column": 8 } }] }, "219": { "line": 1976, "type": "binary-expr", "locations": [{ "end": { "line": 1888, "column": 25 }, "start": { "line": 1888, "column": 25 } }, { "end": { "line": 1888, "column": 12 }, "start": { "line": 1888, "column": 63 } }] }, "220": { "line": 1979, "type": "binary-expr", "locations": [{ "end": { "line": 1891, "column": 26 }, "start": { "line": 1891, "column": 26 } }, { "end": { "line": 1891, "column": 12 }, "start": { "line": 1892, "column": 16 } }] }, "221": { "line": 1980, "type": "binary-expr", "locations": [{ "end": { "line": 1893, "column": 27 }, "start": { "line": 1893, "column": 27 } }, { "end": { "line": 1893, "column": 12 }, "start": { "line": 1894, "column": 16 } }] }, "222": { "line": 1981, "type": "binary-expr", "locations": [{ "end": { "line": 1895, "column": 26 }, "start": { "line": 1895, "column": 26 } }, { "end": { "line": 1895, "column": 12 }, "start": { "line": 1896, "column": 16 } }] }, "223": { "line": 1982, "type": "binary-expr", "locations": [{ "end": { "line": 1897, "column": 27 }, "start": { "line": 1897, "column": 27 } }, { "end": { "line": 1897, "column": 12 }, "start": { "line": 1898, "column": 16 } }] }, "224": { "line": 1983, "type": "binary-expr", "locations": [{ "end": { "line": 1899, "column": 27 }, "start": { "line": 1899, "column": 27 } }, { "end": { "line": 1899, "column": 12 }, "start": { "line": 1900, "column": 16 } }] }, "225": { "line": 1984, "type": "binary-expr", "locations": [{ "end": { "line": 1901, "column": 27 }, "start": { "line": 1901, "column": 27 } }, { "end": { "line": 1901, "column": 12 }, "start": { "line": 1902, "column": 16 } }] }, "226": { "line": 1989, "type": "if", "locations": [{ "end": { "line": 1907, "column": 12 }, "start": { "line": 1907, "column": 12 } }, { "end": { "line": 1907, "column": 12 }, "start": { "line": 1907, "column": 12 } }] }, "227": { "line": 1994, "type": "if", "locations": [{ "end": { "line": 1912, "column": 17 }, "start": { "line": 1912, "column": 17 } }, { "end": { "line": 1912, "column": 17 }, "start": { "line": 1912, "column": 17 } }] }, "228": { "line": 1999, "type": "if", "locations": [{ "end": { "line": 1917, "column": 17 }, "start": { "line": 1917, "column": 17 } }, { "end": { "line": 1917, "column": 17 }, "start": { "line": 1917, "column": 17 } }] }, "229": { "line": 2004, "type": "if", "locations": [{ "end": { "line": 1922, "column": 17 }, "start": { "line": 1922, "column": 17 } }, { "end": { "line": 1922, "column": 17 }, "start": { "line": 1922, "column": 17 } }] }, "230": { "line": 2009, "type": "if", "locations": [{ "end": { "line": 1927, "column": 17 }, "start": { "line": 1927, "column": 17 } }, { "end": { "line": 1927, "column": 17 }, "start": { "line": 1927, "column": 17 } }] }, "231": { "line": 2014, "type": "if", "locations": [{ "end": { "line": 1932, "column": 17 }, "start": { "line": 1932, "column": 17 } }, { "end": { "line": 1932, "column": 17 }, "start": { "line": 1932, "column": 17 } }] }, "232": { "line": 2019, "type": "if", "locations": [{ "end": { "line": 1937, "column": 17 }, "start": { "line": 1937, "column": 17 } }, { "end": { "line": 1937, "column": 17 }, "start": { "line": 1937, "column": 17 } }] }, "233": { "line": 2022, "type": "if", "locations": [{ "end": { "line": 1941, "column": 17 }, "start": { "line": 1941, "column": 17 } }, { "end": { "line": 1941, "column": 17 }, "start": { "line": 1941, "column": 17 } }] }, "234": { "line": 2027, "type": "if", "locations": [{ "end": { "line": 1946, "column": 17 }, "start": { "line": 1946, "column": 17 } }, { "end": { "line": 1946, "column": 17 }, "start": { "line": 1946, "column": 17 } }] }, "235": { "line": 2031, "type": "if", "locations": [{ "end": { "line": 1950, "column": 17 }, "start": { "line": 1950, "column": 17 } }, { "end": { "line": 1950, "column": 17 }, "start": { "line": 1950, "column": 17 } }] }, "236": { "line": 2037, "type": "if", "locations": [{ "end": { "line": 1959, "column": 12 }, "start": { "line": 1959, "column": 12 } }, { "end": { "line": 1959, "column": 12 }, "start": { "line": 1959, "column": 12 } }] }, "237": { "line": 2039, "type": "if", "locations": [{ "end": { "line": 1961, "column": 16 }, "start": { "line": 1961, "column": 16 } }, { "end": { "line": 1961, "column": 16 }, "start": { "line": 1961, "column": 16 } }] }, "238": { "line": 2045, "type": "binary-expr", "locations": [{ "end": { "line": 1967, "column": 22 }, "start": { "line": 1967, "column": 22 } }, { "end": { "line": 1967, "column": 12 }, "start": { "line": 1967, "column": 43 } }] }, "239": { "line": 2050, "type": "if", "locations": [{ "end": { "line": 1972, "column": 12 }, "start": { "line": 1972, "column": 12 } }, { "end": { "line": 1972, "column": 12 }, "start": { "line": 1972, "column": 12 } }] }, "240": { "line": 2054, "type": "if", "locations": [{ "end": { "line": 1979, "column": 17 }, "start": { "line": 1979, "column": 17 } }, { "end": { "line": 1979, "column": 17 }, "start": { "line": 1979, "column": 17 } }] }, "241": { "line": 2058, "type": "if", "locations": [{ "end": { "line": 1986, "column": 17 }, "start": { "line": 1986, "column": 17 } }, { "end": { "line": 1986, "column": 17 }, "start": { "line": 1986, "column": 17 } }] }, "242": { "line": 2062, "type": "if", "locations": [{ "end": { "line": 1993, "column": 17 }, "start": { "line": 1993, "column": 17 } }, { "end": { "line": 1993, "column": 17 }, "start": { "line": 1993, "column": 17 } }] }, "243": { "line": 2066, "type": "if", "locations": [{ "end": { "line": 2000, "column": 17 }, "start": { "line": 2000, "column": 17 } }, { "end": { "line": 2000, "column": 17 }, "start": { "line": 2000, "column": 17 } }] }, "244": { "line": 2067, "type": "cond-expr", "locations": [{ "end": { "line": 2001, "column": 28 }, "start": { "line": 2002, "column": 49 } }, { "end": { "line": 2001, "column": 16 }, "start": { "line": 2002, "column": 57 } }] }, "245": { "line": 2070, "type": "if", "locations": [{ "end": { "line": 2005, "column": 17 }, "start": { "line": 2005, "column": 17 } }, { "end": { "line": 2005, "column": 17 }, "start": { "line": 2005, "column": 17 } }] }, "246": { "line": 2074, "type": "if", "locations": [{ "end": { "line": 2010, "column": 17 }, "start": { "line": 2010, "column": 17 } }, { "end": { "line": 2010, "column": 17 }, "start": { "line": 2010, "column": 17 } }] }, "247": { "line": 2078, "type": "if", "locations": [{ "end": { "line": 2015, "column": 17 }, "start": { "line": 2015, "column": 17 } }, { "end": { "line": 2015, "column": 17 }, "start": { "line": 2015, "column": 17 } }] }, "248": { "line": 2079, "type": "cond-expr", "locations": [{ "end": { "line": 2016, "column": 28 }, "start": { "line": 2017, "column": 20 } }, { "end": { "line": 2016, "column": 16 }, "start": { "line": 2017, "column": 27 } }] }, "249": { "line": 2082, "type": "if", "locations": [{ "end": { "line": 2020, "column": 17 }, "start": { "line": 2020, "column": 17 } }, { "end": { "line": 2020, "column": 17 }, "start": { "line": 2020, "column": 17 } }] }, "250": { "line": 2084, "type": "cond-expr", "locations": [{ "end": { "line": 2023, "column": 20 }, "start": { "line": 2026, "column": 31 } }, { "end": { "line": 2022, "column": 16 }, "start": { "line": 2026, "column": 38 } }] }, "251": { "line": 2084, "type": "binary-expr", "locations": [{ "end": { "line": 2023, "column": 20 }, "start": { "line": 2023, "column": 20 } }, { "end": { "line": 2023, "column": 20 }, "start": { "line": 2025, "column": 24 } }] }, "252": { "line": 2087, "type": "if", "locations": [{ "end": { "line": 2029, "column": 17 }, "start": { "line": 2029, "column": 17 } }, { "end": { "line": 2029, "column": 17 }, "start": { "line": 2029, "column": 17 } }] }, "253": { "line": 2091, "type": "if", "locations": [{ "end": { "line": 2033, "column": 17 }, "start": { "line": 2033, "column": 17 } }, { "end": { "line": 2033, "column": 17 }, "start": { "line": 2033, "column": 17 } }] }, "254": { "line": 2095, "type": "if", "locations": [{ "end": { "line": 2037, "column": 17 }, "start": { "line": 2037, "column": 17 } }, { "end": { "line": 2037, "column": 17 }, "start": { "line": 2037, "column": 17 } }] }, "255": { "line": 2108, "type": "if", "locations": [{ "end": { "line": 2050, "column": 16 }, "start": { "line": 2050, "column": 16 } }, { "end": { "line": 2050, "column": 16 }, "start": { "line": 2050, "column": 16 } }] }, "256": { "line": 2108, "type": "binary-expr", "locations": [{ "end": { "line": 2050, "column": 20 }, "start": { "line": 2050, "column": 20 } }, { "end": { "line": 2050, "column": 20 }, "start": { "line": 2051, "column": 20 } }, { "end": { "line": 2050, "column": 16 }, "start": { "line": 2052, "column": 20 } }] }, "257": { "line": 2112, "type": "binary-expr", "locations": [{ "end": { "line": 2056, "column": 27 }, "start": { "line": 2056, "column": 27 } }, { "end": { "line": 2056, "column": 20 }, "start": { "line": 2056, "column": 53 } }] }, "258": { "line": 2113, "type": "binary-expr", "locations": [{ "end": { "line": 2057, "column": 32 }, "start": { "line": 2057, "column": 32 } }, { "end": { "line": 2057, "column": 20 }, "start": { "line": 2058, "column": 24 } }] }, "259": { "line": 2135, "type": "cond-expr", "locations": [{ "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, { "end": { "line": 2090, "column": 6 }, "start": { "line": 2087, "column": 25 } }] }, "260": { "line": 2135, "type": "binary-expr", "locations": [{ "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, { "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }] }, "261": { "line": 2136, "type": "cond-expr", "locations": [{ "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, { "end": { "line": 2090, "column": 6 }, "start": { "line": 2088, "column": 16 } }] }, "262": { "line": 2136, "type": "binary-expr", "locations": [{ "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, { "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }] }, "263": { "line": 2137, "type": "cond-expr", "locations": [{ "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, { "end": { "line": 2090, "column": 6 }, "start": { "line": 2089, "column": 18 } }] }, "264": { "line": 2137, "type": "binary-expr", "locations": [{ "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }, { "end": { "line": 2090, "column": 6 }, "start": { "line": 2090, "column": 6 } }] }, "265": { "line": 2139, "type": "if", "locations": [{ "end": { "line": 2091, "column": 8 }, "start": { "line": 2091, "column": 8 } }, { "end": { "line": 2091, "column": 8 }, "start": { "line": 2091, "column": 8 } }] }, "266": { "line": 2145, "type": "cond-expr", "locations": [{ "end": { "line": 2097, "column": 25 }, "start": { "line": 2097, "column": 33 } }, { "end": { "line": 2097, "column": 8 }, "start": { "line": 2098, "column": 12 } }] }, "267": { "line": 2147, "type": "if", "locations": [{ "end": { "line": 2100, "column": 8 }, "start": { "line": 2100, "column": 8 } }, { "end": { "line": 2100, "column": 8 }, "start": { "line": 2100, "column": 8 } }] }, "268": { "line": 2154, "type": "if", "locations": [{ "end": { "line": 2107, "column": 12 }, "start": { "line": 2107, "column": 12 } }, { "end": { "line": 2107, "column": 12 }, "start": { "line": 2107, "column": 12 } }] }, "269": { "line": 2161, "type": "if", "locations": [{ "end": { "line": 2114, "column": 12 }, "start": { "line": 2114, "column": 12 } }, { "end": { "line": 2114, "column": 12 }, "start": { "line": 2114, "column": 12 } }] }, "270": { "line": 2161, "type": "binary-expr", "locations": [{ "end": { "line": 2114, "column": 16 }, "start": { "line": 2114, "column": 16 } }, { "end": { "line": 2114, "column": 12 }, "start": { "line": 2114, "column": 44 } }] }, "271": { "line": 2164, "type": "if", "locations": [{ "end": { "line": 2117, "column": 20 }, "start": { "line": 2117, "column": 20 } }, { "end": { "line": 2117, "column": 20 }, "start": { "line": 2117, "column": 20 } }] }, "272": { "line": 2183, "type": "if", "locations": [{ "end": { "line": 2134, "column": 8 }, "start": { "line": 2134, "column": 8 } }, { "end": { "line": 2134, "column": 8 }, "start": { "line": 2134, "column": 8 } }] }, "273": { "line": 2188, "type": "if", "locations": [{ "end": { "line": 2139, "column": 8 }, "start": { "line": 2139, "column": 8 } }, { "end": { "line": 2139, "column": 8 }, "start": { "line": 2139, "column": 8 } }] }, "274": { "line": 2193, "type": "if", "locations": [{ "end": { "line": 2144, "column": 8 }, "start": { "line": 2144, "column": 8 } }, { "end": { "line": 2144, "column": 8 }, "start": { "line": 2144, "column": 8 } }] }, "275": { "line": 2193, "type": "binary-expr", "locations": [{ "end": { "line": 2144, "column": 12 }, "start": { "line": 2144, "column": 12 } }, { "end": { "line": 2144, "column": 8 }, "start": { "line": 2144, "column": 39 } }] }, "276": { "line": 2197, "type": "if", "locations": [{ "end": { "line": 2148, "column": 13 }, "start": { "line": 2148, "column": 13 } }, { "end": { "line": 2148, "column": 13 }, "start": { "line": 2148, "column": 13 } }] }, "277": { "line": 2201, "type": "if", "locations": [{ "end": { "line": 2152, "column": 13 }, "start": { "line": 2152, "column": 13 } }, { "end": { "line": 2152, "column": 13 }, "start": { "line": 2152, "column": 13 } }] }, "278": { "line": 2206, "type": "if", "locations": [{ "end": { "line": 2157, "column": 8 }, "start": { "line": 2157, "column": 8 } }, { "end": { "line": 2157, "column": 8 }, "start": { "line": 2157, "column": 8 } }] }, "279": { "line": 2206, "type": "binary-expr", "locations": [{ "end": { "line": 2157, "column": 12 }, "start": { "line": 2157, "column": 12 } }, { "end": { "line": 2157, "column": 12 }, "start": { "line": 2157, "column": 33 } }, { "end": { "line": 2158, "column": 13 }, "start": { "line": 2158, "column": 13 } }, { "end": { "line": 2157, "column": 8 }, "start": { "line": 2158, "column": 38 } }] }, "280": { "line": 2220, "type": "if", "locations": [{ "end": { "line": 2170, "column": 8 }, "start": { "line": 2170, "column": 8 } }, { "end": { "line": 2170, "column": 8 }, "start": { "line": 2170, "column": 8 } }] }, "281": { "line": 2226, "type": "if", "locations": [{ "end": { "line": 2176, "column": 12 }, "start": { "line": 2176, "column": 12 } }, { "end": { "line": 2176, "column": 12 }, "start": { "line": 2176, "column": 12 } }] }, "282": { "line": 2243, "type": "if", "locations": [{ "end": { "line": 2191, "column": 8 }, "start": { "line": 2191, "column": 8 } }, { "end": { "line": 2191, "column": 8 }, "start": { "line": 2191, "column": 8 } }] }, "283": { "line": 2261, "type": "if", "locations": [{ "end": { "line": 2207, "column": 8 }, "start": { "line": 2207, "column": 8 } }, { "end": { "line": 2207, "column": 8 }, "start": { "line": 2207, "column": 8 } }] }, "284": { "line": 2267, "type": "if", "locations": [{ "end": { "line": 2213, "column": 12 }, "start": { "line": 2213, "column": 12 } }, { "end": { "line": 2213, "column": 12 }, "start": { "line": 2213, "column": 12 } }] }, "285": { "line": 2268, "type": "cond-expr", "locations": [{ "end": { "line": 2214, "column": 24 }, "start": { "line": 2214, "column": 31 } }, { "end": { "line": 2214, "column": 16 }, "start": { "line": 2214, "column": 35 } }] }, "286": { "line": 2295, "type": "cond-expr", "locations": [{ "end": { "line": 2236, "column": 29 }, "start": { "line": 2236, "column": 29 } }, { "end": { "line": 2236, "column": 29 }, "start": { "line": 2236, "column": 26 } }] }, "287": { "line": 2295, "type": "binary-expr", "locations": [{ "end": { "line": 2236, "column": 29 }, "start": { "line": 2236, "column": 29 } }, { "end": { "line": 2236, "column": 29 }, "start": { "line": 2236, "column": 29 } }] }, "288": { "line": 2297, "type": "cond-expr", "locations": [{ "end": { "line": 2237, "column": 31 }, "start": { "line": 2237, "column": 47 } }, { "end": { "line": 2237, "column": 17 }, "start": { "line": 2237, "column": 58 } }] }, "289": { "line": 2298, "type": "cond-expr", "locations": [{ "end": { "line": 2238, "column": 15 }, "start": { "line": 2238, "column": 20 } }, { "end": { "line": 2238, "column": 8 }, "start": { "line": 2238, "column": 38 } }] }, "290": { "line": 2310, "type": "cond-expr", "locations": [{ "end": { "line": 2248, "column": 16 }, "start": { "line": 2248, "column": 39 } }, { "end": { "line": 2248, "column": 8 }, "start": { "line": 2248, "column": 43 } }] }, "291": { "line": 2312, "type": "if", "locations": [{ "end": { "line": 2250, "column": 8 }, "start": { "line": 2250, "column": 8 } }, { "end": { "line": 2250, "column": 8 }, "start": { "line": 2250, "column": 8 } }] }, "292": { "line": 2321, "type": "if", "locations": [{ "end": { "line": 2260, "column": 8 }, "start": { "line": 2260, "column": 8 } }, { "end": { "line": 2260, "column": 8 }, "start": { "line": 2260, "column": 8 } }] }, "293": { "line": 2339, "type": "if", "locations": [{ "end": { "line": 2276, "column": 8 }, "start": { "line": 2276, "column": 8 } }, { "end": { "line": 2276, "column": 8 }, "start": { "line": 2276, "column": 8 } }] }, "294": { "line": 2342, "type": "if", "locations": [{ "end": { "line": 2279, "column": 12 }, "start": { "line": 2279, "column": 12 } }, { "end": { "line": 2279, "column": 12 }, "start": { "line": 2279, "column": 12 } }] }, "295": { "line": 2346, "type": "if", "locations": [{ "end": { "line": 2284, "column": 13 }, "start": { "line": 2284, "column": 13 } }, { "end": { "line": 2284, "column": 13 }, "start": { "line": 2284, "column": 13 } }] }, "296": { "line": 2348, "type": "if", "locations": [{ "end": { "line": 2287, "column": 13 }, "start": { "line": 2287, "column": 13 } }, { "end": { "line": 2287, "column": 13 }, "start": { "line": 2287, "column": 13 } }] }, "297": { "line": 2350, "type": "binary-expr", "locations": [{ "end": { "line": 2289, "column": 25 }, "start": { "line": 2289, "column": 25 } }, { "end": { "line": 2289, "column": 12 }, "start": { "line": 2289, "column": 65 } }] }, "298": { "line": 2373, "type": "cond-expr", "locations": [{ "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, { "end": { "line": 2313, "column": 6 }, "start": { "line": 2310, "column": 25 } }] }, "299": { "line": 2373, "type": "binary-expr", "locations": [{ "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, { "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }] }, "300": { "line": 2374, "type": "cond-expr", "locations": [{ "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, { "end": { "line": 2313, "column": 6 }, "start": { "line": 2311, "column": 28 } }] }, "301": { "line": 2374, "type": "binary-expr", "locations": [{ "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, { "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }] }, "302": { "line": 2375, "type": "cond-expr", "locations": [{ "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, { "end": { "line": 2313, "column": 6 }, "start": { "line": 2312, "column": 16 } }] }, "303": { "line": 2375, "type": "binary-expr", "locations": [{ "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }, { "end": { "line": 2313, "column": 6 }, "start": { "line": 2313, "column": 6 } }] }, "304": { "line": 2380, "type": "cond-expr", "locations": [{ "end": { "line": 2317, "column": 25 }, "start": { "line": 2317, "column": 33 } }, { "end": { "line": 2317, "column": 8 }, "start": { "line": 2318, "column": 12 } }] }, "305": { "line": 2382, "type": "if", "locations": [{ "end": { "line": 2320, "column": 8 }, "start": { "line": 2320, "column": 8 } }, { "end": { "line": 2320, "column": 8 }, "start": { "line": 2320, "column": 8 } }] }, "306": { "line": 2390, "type": "if", "locations": [{ "end": { "line": 2328, "column": 16 }, "start": { "line": 2328, "column": 16 } }, { "end": { "line": 2328, "column": 16 }, "start": { "line": 2328, "column": 16 } }] }, "307": { "line": 2390, "type": "binary-expr", "locations": [{ "end": { "line": 2328, "column": 20 }, "start": { "line": 2328, "column": 20 } }, { "end": { "line": 2328, "column": 16 }, "start": { "line": 2328, "column": 41 } }] }, "308": { "line": 2391, "type": "if", "locations": [{ "end": { "line": 2329, "column": 20 }, "start": { "line": 2329, "column": 20 } }, { "end": { "line": 2329, "column": 20 }, "start": { "line": 2329, "column": 20 } }] }, "309": { "line": 2419, "type": "cond-expr", "locations": [{ "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, { "end": { "line": 2358, "column": 6 }, "start": { "line": 2355, "column": 25 } }] }, "310": { "line": 2419, "type": "binary-expr", "locations": [{ "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, { "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }] }, "311": { "line": 2420, "type": "cond-expr", "locations": [{ "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, { "end": { "line": 2358, "column": 6 }, "start": { "line": 2356, "column": 28 } }] }, "312": { "line": 2420, "type": "binary-expr", "locations": [{ "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, { "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }] }, "313": { "line": 2421, "type": "cond-expr", "locations": [{ "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, { "end": { "line": 2358, "column": 6 }, "start": { "line": 2357, "column": 16 } }] }, "314": { "line": 2421, "type": "binary-expr", "locations": [{ "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }, { "end": { "line": 2358, "column": 6 }, "start": { "line": 2358, "column": 6 } }] }, "315": { "line": 2423, "type": "if", "locations": [{ "end": { "line": 2359, "column": 8 }, "start": { "line": 2359, "column": 8 } }, { "end": { "line": 2359, "column": 8 }, "start": { "line": 2359, "column": 8 } }] }, "316": { "line": 2428, "type": "cond-expr", "locations": [{ "end": { "line": 2364, "column": 25 }, "start": { "line": 2364, "column": 33 } }, { "end": { "line": 2364, "column": 8 }, "start": { "line": 2365, "column": 12 } }] }, "317": { "line": 2430, "type": "if", "locations": [{ "end": { "line": 2367, "column": 8 }, "start": { "line": 2367, "column": 8 } }, { "end": { "line": 2367, "column": 8 }, "start": { "line": 2367, "column": 8 } }] }, "318": { "line": 2440, "type": "if", "locations": [{ "end": { "line": 2377, "column": 16 }, "start": { "line": 2377, "column": 16 } }, { "end": { "line": 2377, "column": 16 }, "start": { "line": 2377, "column": 16 } }] }, "319": { "line": 2440, "type": "binary-expr", "locations": [{ "end": { "line": 2377, "column": 20 }, "start": { "line": 2377, "column": 20 } }, { "end": { "line": 2377, "column": 16 }, "start": { "line": 2377, "column": 41 } }] }, "320": { "line": 2441, "type": "if", "locations": [{ "end": { "line": 2378, "column": 20 }, "start": { "line": 2378, "column": 20 } }, { "end": { "line": 2378, "column": 20 }, "start": { "line": 2378, "column": 20 } }] }, "321": { "line": 2468, "type": "cond-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2404, "column": 25 } }] }, "322": { "line": 2468, "type": "binary-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }] }, "323": { "line": 2469, "type": "cond-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2405, "column": 16 } }] }, "324": { "line": 2469, "type": "binary-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }] }, "325": { "line": 2473, "type": "cond-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2406, "column": 18 } }] }, "326": { "line": 2473, "type": "binary-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }] }, "327": { "line": 2474, "type": "cond-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2407, "column": 18 } }] }, "328": { "line": 2474, "type": "binary-expr", "locations": [{ "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }, { "end": { "line": 2408, "column": 6 }, "start": { "line": 2408, "column": 6 } }] }, "329": { "line": 2476, "type": "if", "locations": [{ "end": { "line": 2409, "column": 8 }, "start": { "line": 2409, "column": 8 } }, { "end": { "line": 2409, "column": 8 }, "start": { "line": 2409, "column": 8 } }] }, "330": { "line": 2481, "type": "cond-expr", "locations": [{ "end": { "line": 2414, "column": 25 }, "start": { "line": 2414, "column": 33 } }, { "end": { "line": 2414, "column": 8 }, "start": { "line": 2415, "column": 12 } }] }, "331": { "line": 2486, "type": "binary-expr", "locations": [{ "end": { "line": 2420, "column": 19 }, "start": { "line": 2420, "column": 19 } }, { "end": { "line": 2420, "column": 19 }, "start": { "line": 2421, "column": 17 } }] }, "332": { "line": 2486, "type": "cond-expr", "locations": [{ "end": { "line": 2421, "column": 17 }, "start": { "line": 2422, "column": 20 } }, { "end": { "line": 2420, "column": 19 }, "start": { "line": 2423, "column": 20 } }] }, "333": { "line": 2494, "type": "if", "locations": [{ "end": { "line": 2431, "column": 8 }, "start": { "line": 2431, "column": 8 } }, { "end": { "line": 2431, "column": 8 }, "start": { "line": 2431, "column": 8 } }] }, "334": { "line": 2521, "type": "if", "locations": [{ "end": { "line": 2454, "column": 8 }, "start": { "line": 2454, "column": 8 } }, { "end": { "line": 2454, "column": 8 }, "start": { "line": 2454, "column": 8 } }] }, "335": { "line": 2521, "type": "binary-expr", "locations": [{ "end": { "line": 2454, "column": 12 }, "start": { "line": 2454, "column": 12 } }, { "end": { "line": 2454, "column": 8 }, "start": { "line": 2454, "column": 20 } }] }, "336": { "line": 2526, "type": "if", "locations": [{ "end": { "line": 2459, "column": 8 }, "start": { "line": 2459, "column": 8 } }, { "end": { "line": 2459, "column": 8 }, "start": { "line": 2459, "column": 8 } }] }, "337": { "line": 2526, "type": "binary-expr", "locations": [{ "end": { "line": 2459, "column": 12 }, "start": { "line": 2459, "column": 12 } }, { "end": { "line": 2459, "column": 8 }, "start": { "line": 2459, "column": 35 } }] }, "338": { "line": 2530, "type": "cond-expr", "locations": [{ "end": { "line": 2463, "column": 26 }, "start": { "line": 2463, "column": 36 } }, { "end": { "line": 2463, "column": 8 }, "start": { "line": 2463, "column": 26 } }] }, "339": { "line": 2531, "type": "cond-expr", "locations": [{ "end": { "line": 2464, "column": 24 }, "start": { "line": 2464, "column": 34 } }, { "end": { "line": 2463, "column": 8 }, "start": { "line": 2464, "column": 43 } }] }, "340": { "line": 2534, "type": "if", "locations": [{ "end": { "line": 2467, "column": 8 }, "start": { "line": 2467, "column": 8 } }, { "end": { "line": 2467, "column": 8 }, "start": { "line": 2467, "column": 8 } }] }, "341": { "line": 2538, "type": "if", "locations": [{ "end": { "line": 2471, "column": 8 }, "start": { "line": 2471, "column": 8 } }, { "end": { "line": 2471, "column": 8 }, "start": { "line": 2471, "column": 8 } }] }, "342": { "line": 2539, "type": "if", "locations": [{ "end": { "line": 2472, "column": 12 }, "start": { "line": 2472, "column": 12 } }, { "end": { "line": 2472, "column": 12 }, "start": { "line": 2472, "column": 12 } }] }, "343": { "line": 2555, "type": "if", "locations": [{ "end": { "line": 2486, "column": 8 }, "start": { "line": 2486, "column": 8 } }, { "end": { "line": 2486, "column": 8 }, "start": { "line": 2486, "column": 8 } }] }, "344": { "line": 2572, "type": "cond-expr", "locations": [{ "end": { "line": 2500, "column": 38 }, "start": { "line": 2500, "column": 38 } }, { "end": { "line": 2500, "column": 38 }, "start": { "line": 2500, "column": 34 } }] }, "345": { "line": 2572, "type": "binary-expr", "locations": [{ "end": { "line": 2500, "column": 38 }, "start": { "line": 2500, "column": 38 } }, { "end": { "line": 2500, "column": 38 }, "start": { "line": 2500, "column": 38 } }] }, "346": { "line": 2574, "type": "if", "locations": [{ "end": { "line": 2501, "column": 8 }, "start": { "line": 2501, "column": 8 } }, { "end": { "line": 2501, "column": 8 }, "start": { "line": 2501, "column": 8 } }] }, "347": { "line": 2580, "type": "if", "locations": [{ "end": { "line": 2507, "column": 8 }, "start": { "line": 2507, "column": 8 } }, { "end": { "line": 2507, "column": 8 }, "start": { "line": 2507, "column": 8 } }] }, "348": { "line": 2580, "type": "binary-expr", "locations": [{ "end": { "line": 2507, "column": 12 }, "start": { "line": 2507, "column": 12 } }, { "end": { "line": 2507, "column": 8 }, "start": { "line": 2507, "column": 39 } }] }, "349": { "line": 2581, "type": "if", "locations": [{ "end": { "line": 2508, "column": 12 }, "start": { "line": 2508, "column": 12 } }, { "end": { "line": 2508, "column": 12 }, "start": { "line": 2508, "column": 12 } }] }, "350": { "line": 2581, "type": "binary-expr", "locations": [{ "end": { "line": 2508, "column": 16 }, "start": { "line": 2508, "column": 16 } }, { "end": { "line": 2508, "column": 12 }, "start": { "line": 2508, "column": 40 } }] }, "351": { "line": 2587, "type": "if", "locations": [{ "end": { "line": 2515, "column": 13 }, "start": { "line": 2515, "column": 13 } }, { "end": { "line": 2515, "column": 13 }, "start": { "line": 2515, "column": 13 } }] }, "352": { "line": 2588, "type": "cond-expr", "locations": [{ "end": { "line": 2516, "column": 25 }, "start": { "line": 2516, "column": 42 } }, { "end": { "line": 2516, "column": 12 }, "start": { "line": 2517, "column": 16 } }] }, "353": { "line": 2590, "type": "if", "locations": [{ "end": { "line": 2519, "column": 12 }, "start": { "line": 2519, "column": 12 } }, { "end": { "line": 2519, "column": 12 }, "start": { "line": 2519, "column": 12 } }] }, "354": { "line": 2590, "type": "binary-expr", "locations": [{ "end": { "line": 2519, "column": 16 }, "start": { "line": 2519, "column": 16 } }, { "end": { "line": 2519, "column": 12 }, "start": { "line": 2519, "column": 40 } }] }, "355": { "line": 2597, "type": "if", "locations": [{ "end": { "line": 2527, "column": 13 }, "start": { "line": 2527, "column": 13 } }, { "end": { "line": 2527, "column": 13 }, "start": { "line": 2527, "column": 13 } }] }, "356": { "line": 2599, "type": "if", "locations": [{ "end": { "line": 2529, "column": 12 }, "start": { "line": 2529, "column": 12 } }, { "end": { "line": 2529, "column": 12 }, "start": { "line": 2529, "column": 12 } }] }, "357": { "line": 2599, "type": "binary-expr", "locations": [{ "end": { "line": 2529, "column": 16 }, "start": { "line": 2529, "column": 16 } }, { "end": { "line": 2529, "column": 12 }, "start": { "line": 2529, "column": 40 } }] }, "358": { "line": 2602, "type": "if", "locations": [{ "end": { "line": 2533, "column": 12 }, "start": { "line": 2533, "column": 12 } }, { "end": { "line": 2533, "column": 12 }, "start": { "line": 2533, "column": 12 } }] }, "359": { "line": 2620, "type": "if", "locations": [{ "end": { "line": 2549, "column": 8 }, "start": { "line": 2549, "column": 8 } }, { "end": { "line": 2549, "column": 8 }, "start": { "line": 2549, "column": 8 } }] }, "360": { "line": 2623, "type": "binary-expr", "locations": [{ "end": { "line": 2552, "column": 14 }, "start": { "line": 2552, "column": 14 } }, { "end": { "line": 2552, "column": 8 }, "start": { "line": 2552, "column": 21 } }] }, "361": { "line": 2629, "type": "cond-expr", "locations": [{ "end": { "line": 2558, "column": 19 }, "start": { "line": 2558, "column": 35 } }, { "end": { "line": 2558, "column": 8 }, "start": { "line": 2558, "column": 66 } }] }, "362": { "line": 2632, "type": "if", "locations": [{ "end": { "line": 2561, "column": 12 }, "start": { "line": 2561, "column": 12 } }, { "end": { "line": 2561, "column": 12 }, "start": { "line": 2561, "column": 12 } }] }, "363": { "line": 2640, "type": "if", "locations": [{ "end": { "line": 2569, "column": 8 }, "start": { "line": 2569, "column": 8 } }, { "end": { "line": 2569, "column": 8 }, "start": { "line": 2569, "column": 8 } }] }, "364": { "line": 2651, "type": "if", "locations": [{ "end": { "line": 2578, "column": 8 }, "start": { "line": 2578, "column": 8 } }, { "end": { "line": 2578, "column": 8 }, "start": { "line": 2578, "column": 8 } }] }, "365": { "line": 2658, "type": "if", "locations": [{ "end": { "line": 2585, "column": 12 }, "start": { "line": 2585, "column": 12 } }, { "end": { "line": 2585, "column": 12 }, "start": { "line": 2585, "column": 12 } }] }, "366": { "line": 2670, "type": "if", "locations": [{ "end": { "line": 2595, "column": 8 }, "start": { "line": 2595, "column": 8 } }, { "end": { "line": 2595, "column": 8 }, "start": { "line": 2595, "column": 8 } }] }, "367": { "line": 2706, "type": "if", "locations": [{ "end": { "line": 2627, "column": 8 }, "start": { "line": 2627, "column": 8 } }, { "end": { "line": 2627, "column": 8 }, "start": { "line": 2627, "column": 8 } }] }, "368": { "line": 2744, "type": "cond-expr", "locations": [{ "end": { "line": 2658, "column": 46 }, "start": { "line": 2658, "column": 46 } }, { "end": { "line": 2658, "column": 46 }, "start": { "line": 2658, "column": 42 } }] }, "369": { "line": 2744, "type": "binary-expr", "locations": [{ "end": { "line": 2658, "column": 46 }, "start": { "line": 2658, "column": 46 } }, { "end": { "line": 2658, "column": 46 }, "start": { "line": 2658, "column": 46 } }] }, "370": { "line": 2770, "type": "if", "locations": [{ "end": { "line": 2679, "column": 8 }, "start": { "line": 2679, "column": 8 } }, { "end": { "line": 2679, "column": 8 }, "start": { "line": 2679, "column": 8 } }] }, "371": { "line": 2783, "type": "if", "locations": [{ "end": { "line": 2690, "column": 8 }, "start": { "line": 2690, "column": 8 } }, { "end": { "line": 2690, "column": 8 }, "start": { "line": 2690, "column": 8 } }] }, "372": { "line": 2783, "type": "binary-expr", "locations": [{ "end": { "line": 2690, "column": 12 }, "start": { "line": 2690, "column": 12 } }, { "end": { "line": 2690, "column": 8 }, "start": { "line": 2690, "column": 35 } }] }, "373": { "line": 2801, "type": "if", "locations": [{ "end": { "line": 2708, "column": 12 }, "start": { "line": 2708, "column": 12 } }, { "end": { "line": 2708, "column": 12 }, "start": { "line": 2708, "column": 12 } }] }, "374": { "line": 2801, "type": "binary-expr", "locations": [{ "end": { "line": 2708, "column": 16 }, "start": { "line": 2708, "column": 16 } }, { "end": { "line": 2709, "column": 17 }, "start": { "line": 2709, "column": 17 } }, { "end": { "line": 2709, "column": 17 }, "start": { "line": 2709, "column": 32 } }, { "end": { "line": 2708, "column": 16 }, "start": { "line": 2710, "column": 20 } }, { "end": { "line": 2711, "column": 17 }, "start": { "line": 2711, "column": 17 } }, { "end": { "line": 2711, "column": 34 }, "start": { "line": 2711, "column": 34 } }, { "end": { "line": 2711, "column": 17 }, "start": { "line": 2712, "column": 20 } }, { "end": { "line": 2708, "column": 12 }, "start": { "line": 2713, "column": 16 } }] }, "375": { "line": 2804, "type": "if", "locations": [{ "end": { "line": 2716, "column": 16 }, "start": { "line": 2716, "column": 16 } }, { "end": { "line": 2716, "column": 16 }, "start": { "line": 2716, "column": 16 } }] }, "376": { "line": 2810, "type": "if", "locations": [{ "end": { "line": 2722, "column": 16 }, "start": { "line": 2722, "column": 16 } }, { "end": { "line": 2722, "column": 16 }, "start": { "line": 2722, "column": 16 } }] }, "377": { "line": 2830, "type": "binary-expr", "locations": [{ "end": { "line": 2742, "column": 15 }, "start": { "line": 2742, "column": 15 } }, { "end": { "line": 2742, "column": 15 }, "start": { "line": 2742, "column": 49 } }, { "end": { "line": 2742, "column": 8 }, "start": { "line": 2743, "column": 12 } }] }, "378": { "line": 2866, "type": "if", "locations": [{ "end": { "line": 2773, "column": 8 }, "start": { "line": 2773, "column": 8 } }, { "end": { "line": 2773, "column": 8 }, "start": { "line": 2773, "column": 8 } }] }, "379": { "line": 2881, "type": "if", "locations": [{ "end": { "line": 2786, "column": 8 }, "start": { "line": 2786, "column": 8 } }, { "end": { "line": 2786, "column": 8 }, "start": { "line": 2786, "column": 8 } }] }, "380": { "line": 2896, "type": "cond-expr", "locations": [{ "end": { "line": 2798, "column": 42 }, "start": { "line": 2798, "column": 42 } }, { "end": { "line": 2798, "column": 42 }, "start": { "line": 2798, "column": 32 } }] }, "381": { "line": 2896, "type": "binary-expr", "locations": [{ "end": { "line": 2798, "column": 42 }, "start": { "line": 2798, "column": 42 } }, { "end": { "line": 2798, "column": 42 }, "start": { "line": 2798, "column": 42 } }] }, "382": { "line": 2899, "type": "cond-expr", "locations": [{ "end": { "line": 2800, "column": 19 }, "start": { "line": 2800, "column": 39 } }, { "end": { "line": 2799, "column": 8 }, "start": { "line": 2800, "column": 47 } }] }, "383": { "line": 2902, "type": "if", "locations": [{ "end": { "line": 2803, "column": 12 }, "start": { "line": 2803, "column": 12 } }, { "end": { "line": 2803, "column": 12 }, "start": { "line": 2803, "column": 12 } }] }, "384": { "line": 2905, "type": "if", "locations": [{ "end": { "line": 2806, "column": 12 }, "start": { "line": 2806, "column": 12 } }, { "end": { "line": 2806, "column": 12 }, "start": { "line": 2806, "column": 12 } }] }, "385": { "line": 2925, "type": "cond-expr", "locations": [{ "end": { "line": 2821, "column": 56 }, "start": { "line": 2821, "column": 56 } }, { "end": { "line": 2821, "column": 56 }, "start": { "line": 2821, "column": 46 } }] }, "386": { "line": 2925, "type": "binary-expr", "locations": [{ "end": { "line": 2821, "column": 56 }, "start": { "line": 2821, "column": 56 } }, { "end": { "line": 2821, "column": 56 }, "start": { "line": 2821, "column": 56 } }] }, "387": { "line": 2927, "type": "if", "locations": [{ "end": { "line": 2822, "column": 8 }, "start": { "line": 2822, "column": 8 } }, { "end": { "line": 2822, "column": 8 }, "start": { "line": 2822, "column": 8 } }] }, "388": { "line": 2935, "type": "if", "locations": [{ "end": { "line": 2830, "column": 8 }, "start": { "line": 2830, "column": 8 } }, { "end": { "line": 2830, "column": 8 }, "start": { "line": 2830, "column": 8 } }] }, "389": { "line": 2943, "type": "if", "locations": [{ "end": { "line": 2844, "column": 12 }, "start": { "line": 2844, "column": 12 } }, { "end": { "line": 2844, "column": 12 }, "start": { "line": 2844, "column": 12 } }] }, "390": { "line": 2943, "type": "binary-expr", "locations": [{ "end": { "line": 2844, "column": 16 }, "start": { "line": 2844, "column": 16 } }, { "end": { "line": 2845, "column": 17 }, "start": { "line": 2845, "column": 17 } }, { "end": { "line": 2845, "column": 17 }, "start": { "line": 2845, "column": 37 } }, { "end": { "line": 2844, "column": 16 }, "start": { "line": 2846, "column": 20 } }] }, "391": { "line": 2945, "type": "if", "locations": [{ "end": { "line": 2848, "column": 16 }, "start": { "line": 2848, "column": 16 } }, { "end": { "line": 2848, "column": 16 }, "start": { "line": 2848, "column": 16 } }] }, "392": { "line": 2973, "type": "binary-expr", "locations": [{ "end": { "line": 2872, "column": 15 }, "start": { "line": 2872, "column": 15 } }, { "end": { "line": 2872, "column": 8 }, "start": { "line": 2872, "column": 30 } }] }, "393": { "line": 2984, "type": "if", "locations": [{ "end": { "line": 2881, "column": 8 }, "start": { "line": 2881, "column": 8 } }, { "end": { "line": 2881, "column": 8 }, "start": { "line": 2881, "column": 8 } }] }, "394": { "line": 2992, "type": "if", "locations": [{ "end": { "line": 2889, "column": 12 }, "start": { "line": 2889, "column": 12 } }, { "end": { "line": 2889, "column": 12 }, "start": { "line": 2889, "column": 12 } }] }, "395": { "line": 2993, "type": "if", "locations": [{ "end": { "line": 2890, "column": 16 }, "start": { "line": 2890, "column": 16 } }, { "end": { "line": 2890, "column": 16 }, "start": { "line": 2890, "column": 16 } }] }, "396": { "line": 2997, "type": "if", "locations": [{ "end": { "line": 2894, "column": 16 }, "start": { "line": 2894, "column": 16 } }, { "end": { "line": 2894, "column": 16 }, "start": { "line": 2894, "column": 16 } }] }, "397": { "line": 2997, "type": "binary-expr", "locations": [{ "end": { "line": 2894, "column": 20 }, "start": { "line": 2894, "column": 20 } }, { "end": { "line": 2894, "column": 16 }, "start": { "line": 2895, "column": 20 } }] }, "398": { "line": 3056, "type": "cond-expr", "locations": [{ "end": { "line": 2943, "column": 34 }, "start": { "line": 2943, "column": 34 } }, { "end": { "line": 2943, "column": 34 }, "start": { "line": 2943, "column": 30 } }] }, "399": { "line": 3056, "type": "binary-expr", "locations": [{ "end": { "line": 2943, "column": 34 }, "start": { "line": 2943, "column": 34 } }, { "end": { "line": 2943, "column": 34 }, "start": { "line": 2943, "column": 34 } }] }, "400": { "line": 3058, "type": "if", "locations": [{ "end": { "line": 2944, "column": 8 }, "start": { "line": 2944, "column": 8 } }, { "end": { "line": 2944, "column": 8 }, "start": { "line": 2944, "column": 8 } }] }, "401": { "line": 3062, "type": "if", "locations": [{ "end": { "line": 2948, "column": 8 }, "start": { "line": 2948, "column": 8 } }, { "end": { "line": 2948, "column": 8 }, "start": { "line": 2948, "column": 8 } }] }, "402": { "line": 3076, "type": "cond-expr", "locations": [{ "end": { "line": 2960, "column": 20 }, "start": { "line": 2960, "column": 38 } }, { "end": { "line": 2960, "column": 8 }, "start": { "line": 2960, "column": 68 } }] }, "403": { "line": 3081, "type": "if", "locations": [{ "end": { "line": 2965, "column": 12 }, "start": { "line": 2965, "column": 12 } }, { "end": { "line": 2965, "column": 12 }, "start": { "line": 2965, "column": 12 } }] }, "404": { "line": 3084, "type": "if", "locations": [{ "end": { "line": 2968, "column": 12 }, "start": { "line": 2968, "column": 12 } }, { "end": { "line": 2968, "column": 12 }, "start": { "line": 2968, "column": 12 } }] }, "405": { "line": 3087, "type": "if", "locations": [{ "end": { "line": 2971, "column": 12 }, "start": { "line": 2971, "column": 12 } }, { "end": { "line": 2971, "column": 12 }, "start": { "line": 2971, "column": 12 } }] }, "406": { "line": 3103, "type": "cond-expr", "locations": [{ "end": { "line": 2984, "column": 46 }, "start": { "line": 2984, "column": 46 } }, { "end": { "line": 2984, "column": 46 }, "start": { "line": 2984, "column": 39 } }] }, "407": { "line": 3103, "type": "binary-expr", "locations": [{ "end": { "line": 2984, "column": 46 }, "start": { "line": 2984, "column": 46 } }, { "end": { "line": 2984, "column": 46 }, "start": { "line": 2984, "column": 46 } }] }, "408": { "line": 3107, "type": "if", "locations": [{ "end": { "line": 2987, "column": 12 }, "start": { "line": 2987, "column": 12 } }, { "end": { "line": 2987, "column": 12 }, "start": { "line": 2987, "column": 12 } }] }, "409": { "line": 3107, "type": "binary-expr", "locations": [{ "end": { "line": 2987, "column": 16 }, "start": { "line": 2987, "column": 16 } }, { "end": { "line": 2987, "column": 12 }, "start": { "line": 2987, "column": 37 } }] }, "410": { "line": 3108, "type": "if", "locations": [{ "end": { "line": 2988, "column": 16 }, "start": { "line": 2988, "column": 16 } }, { "end": { "line": 2988, "column": 16 }, "start": { "line": 2988, "column": 16 } }] }, "411": { "line": 3128, "type": "cond-expr", "locations": [{ "end": { "line": 3006, "column": 15 }, "start": { "line": 3006, "column": 15 } }, { "end": { "line": 3006, "column": 8 }, "start": { "line": 3006, "column": 34 } }] }, "412": { "line": 3149, "type": "cond-expr", "locations": [{ "end": { "line": 3022, "column": 35 }, "start": { "line": 3022, "column": 35 } }, { "end": { "line": 3022, "column": 35 }, "start": { "line": 3022, "column": 28 } }] }, "413": { "line": 3149, "type": "binary-expr", "locations": [{ "end": { "line": 3022, "column": 35 }, "start": { "line": 3022, "column": 35 } }, { "end": { "line": 3022, "column": 35 }, "start": { "line": 3022, "column": 35 } }] } }, "code": ["import {addEvt, cancelEvt, stopEvt, targetEvt, keyCode} from './event';", "import {", "    addClass, createElm, createOpt, elm, getText, getFirstTextNode, hasClass,", "    removeClass, removeElm, tag", "} from './dom';", "import {contains, matchCase, rgxEsc, trim} from './string';", "import {isEmpty as isEmptyString} from './string';", "import {", "    isArray, isEmpty, isFn, isNumber, isObj, isString, isUndef, EMPTY_FN", "} from './types';", "import {parse as parseNb} from './number'", "", "import {root} from './root';", "import {Emitter} from './emitter';", "import {GridLayout} from './modules/gridLayout';", "import {Loader} from './modules/loader';", "import {HighlightKeyword} from './modules/highlightKeywords';", "import {PopupFilter} from './modules/popupFilter';", "import {Dropdown} from './modules/dropdown';", "import {CheckList} from './modules/checkList';", "import {RowsCounter} from './modules/rowsCounter';", "import {StatusBar} from './modules/statusBar';", "import {Paging} from './modules/paging';", "import {ClearButton} from './modules/clearButton';", "import {Help} from './modules/help';", "import {AlternateRows} from './modules/alternateRows';", "import {NoResults} from './modules/noResults';", "import {State} from './modules/state';", "import {DateType} from './modules/dateType';", "", "import {", "    INPUT, SELECT, MULTIPLE, CHECKLIST, NONE,", "    ENTER_KEY, TAB_KEY, ESC_KEY, UP_ARROW_KEY, DOWN_ARROW_KEY,", "    CELL_TAG, AUTO_FILTER_DELAY, NUMBER, DATE, FORMATTED_NUMBER", "} from './const';", "", "let doc = root.document;", "", "/**", " * Makes HTML tables filterable and a bit more :)", " *", " * @export", " * @class TableFilter", " */", "export class TableFilter {", "", "    /**", "     * Creates an instance of TableFilter", "     * requires `table` or `id` arguments, `row` and `configuration` optional", "     * @param {DOMElement} table Table DOM element", "     * @param {String} id Table id", "     * @param {Number} row index indicating the 1st row", "     * @param {Object} configuration object", "     */", "    constructor(...args) {", "        /**", "         * ID of current instance", "         * @type {String}", "         * @private", "         */", "        this.id = null;", "", "        /**", "         * Current version", "         * @type {String}", "         */", "        this.version = '0.4.35';", "", "        /**", "         * Current year", "         * @type {Number}", "         * @private", "         */", "        this.year = new Date().getFullYear();", "", "        /**", "         * HTML Table DOM element", "         * @type {DOMElement}", "         */", "        this.tbl = null;", "", "        /**", "         * Calculated row's index from which starts filtering once filters", "         * are generated", "         * @type {Number}", "         */", "        this.refRow = null;", "", "        /**", "         * Index of the headers row", "         * @type {Number}", "         * @private", "         */", "        this.headersRow = null;", "", "        /**", "         * Configuration object", "         * @type {Object}", "         * @private", "         */", "        this.cfg = {};", "", "        /**", "         * Number of rows that can be filtered", "         * @type {Number}", "         * @private", "         */", "        this.nbFilterableRows = 0;", "", "        /**", "         * Number of cells in the reference row", "         * @type {Number}", "         * @private", "         */", "        this.nbCells = null;", "", "        let startRow;", "", "        // TODO: use for-of", "        args.forEach((arg) => {", "            if (typeof arg === 'object' && arg.nodeName === 'TABLE') {", "                this.tbl = arg;", "                this.id = arg.id || `tf_${new Date().getTime()}_`;", "            } else if (isString(arg)) {", "                this.id = arg;", "                this.tbl = elm(arg);", "            } else if (isNumber(arg)) {", "                startRow = arg;", "            } else if (isObj(arg)) {", "                this.cfg = arg;", "            }", "        });", "", "        if (!this.tbl || this.tbl.nodeName !== 'TABLE') {", "            throw new Error(`Could not instantiate TableFilter: HTML table", "                DOM element not found.`);", "        }", "", "        if (this.getRowsNb() === 0) {", "            throw new Error(`Could not instantiate TableFilter: HTML table", "                requires at least 1 row.`);", "        }", "", "        // configuration object", "        let f = this.cfg;", "", "        /**", "         * Event emitter instance", "         * @type {Emitter}", "         */", "        this.emitter = new Emitter();", "", "        //Start row et cols nb", "        this.refRow = isUndef(startRow) ? 2 : (startRow + 1);", "", "        /**", "         * Base path for static assets", "         * @type {String}", "         */", "        this.basePath = f.base_path || 'tablefilter/';", "", "        /*** filters' grid properties ***/", "", "        /**", "         * Enable/disable filters", "         * @type {Boolean}", "         */", "        this.fltGrid = f.grid === false ? false : true;", "", "        /**", "         * Enable/disable grid layout (fixed headers)", "         * @type {Boolean}", "         */", "        this.gridLayout = Boolean(f.grid_layout);", "", "        /**", "         * Filters row index", "         * @type {Number}", "         */", "        this.filtersRowIndex = isNaN(f.filters_row_index) ?", "            0 : f.filters_row_index;", "", "        /**", "         * Headers row index", "         * @type {Number}", "         */", "        this.headersRow = isNaN(f.headers_row_index) ?", "            (this.filtersRowIndex === 0 ? 1 : 0) : f.headers_row_index;", "", "        /**", "         * Define the type of cell containing a filter (td/th)", "         * @type {String}", "         */", "        this.fltCellTag = isString(f.filters_cell_tag) ?", "            f.filters_cell_tag : CELL_TAG;", "", "        /**", "         * List of filters IDs", "         * @type {Array}", "         * @private", "         */", "        this.fltIds = [];", "", "        /**", "         * List of valid rows indexes (rows visible upon filtering)", "         * @type {Array}", "         * @private", "         */", "        this.validRowsIndex = [];", "", "        /**", "         * Toolbar's container DOM element", "         * @type {DOMElement}", "         * @private", "         */", "        this.infDiv = null;", "", "        /**", "         * Left-side inner container DOM element (rows counter in toolbar)", "         * @type {DOMElement}", "         * @private", "         */", "        this.lDiv = null;", "", "        /**", "         * Right-side inner container DOM element (reset button,", "         * page length selector in toolbar)", "         * @type {DOMElement}", "         * @private", "         */", "        this.rDiv = null;", "", "        /**", "         * Middle inner container DOM element (paging elements in toolbar)", "         * @type {DOMElement}", "         * @private", "         */", "        this.mDiv = null;", "", "        /**", "         * Css class for toolbar's container DOM element", "         * @type {String}", "         */", "        this.infDivCssClass = f.inf_div_css_class || 'inf';", "", "        /**", "         * Css class for left-side inner container DOM element", "         * @type {String}", "         */", "        this.lDivCssClass = f.left_div_css_class || 'ldiv';", "", "        /**", "         * Css class for right-side inner container DOM element", "         * @type {String}", "         */", "        this.rDivCssClass = f.right_div_css_class || 'rdiv';", "", "        /**", "         * Css class for middle inner container DOM element", "         * @type {String}", "         */", "        this.mDivCssClass = f.middle_div_css_class || 'mdiv';", "", "        /*** filters' grid appearance ***/", "        /**", "         * Path for stylesheets", "         * @type {String}", "         */", "        this.stylePath = f.style_path || this.basePath + 'style/';", "", "        /**", "         * Main stylesheet path", "         * @type {String}", "         */", "        this.stylesheet = f.stylesheet || this.stylePath + 'tablefilter.css';", "", "        /**", "         * Main stylesheet ID", "         * @type {String}", "         * @private", "         */", "        this.stylesheetId = this.id + '_style';", "", "        /**", "         * Css class for the filters row", "         * @type {String}", "         */", "        this.fltsRowCssClass = f.flts_row_css_class || 'fltrow';", "", "        /**", "         * Enable/disable icons (paging, reset button)", "         * @type {Boolean}", "         */", "        this.enableIcons = f.enable_icons === false ? false : true;", "", "        /**", "         * Enable/disable alternating rows", "         * @type {Boolean}", "         */", "        this.alternateRows = Boolean(f.alternate_rows);", "", "        /**", "         * Indicate whether columns widths are set", "         * @type {Boolean}", "         * @private", "         */", "        this.hasColWidths = isArray(f.col_widths);", "", "        /**", "         * Columns widths array", "         * @type {Array}", "         */", "        this.colWidths = this.hasColWidths ? f.col_widths : [];", "", "        /**", "         * Css class for a filter element", "         * @type {String}", "         */", "        this.fltCssClass = f.flt_css_class || 'flt';", "", "        /**", "         * Css class for multiple select filters", "         * @type {String}", "         */", "        this.fltMultiCssClass = f.flt_multi_css_class || 'flt_multi';", "", "        /**", "         * Css class for small filter (when submit button is active)", "         * @type {String}", "         */", "        this.fltSmallCssClass = f.flt_small_css_class || 'flt_s';", "", "        /**", "         * Css class for single filter type", "         * @type {String}", "         */", "        this.singleFltCssClass = f.single_flt_css_class || 'single_flt';", "", "        /*** filters' grid behaviours ***/", "", "        /**", "         * Enable/disable enter key for input type filters", "         * @type {Boolean}", "         */", "        this.enterKey = f.enter_key === false ? false : true;", "", "        /**", "         * Callback fired before filtering process starts", "         * @type {Function}", "         */", "        this.onBeforeFilter = isFn(f.on_before_filter) ?", "            f.on_before_filter : EMPTY_FN;", "", "        /**", "         * Callback fired after filtering process is completed", "         * @type {Function}", "         */", "        this.onAfterFilter = isFn(f.on_after_filter) ?", "            f.on_after_filter : EMPTY_FN;", "", "        /**", "         * Enable/disable case sensitivity filtering", "         * @type {Boolean}", "         */", "        this.caseSensitive = Boolean(f.case_sensitive);", "", "        /**", "         * Indicate whether exact match filtering is enabled on a per column", "         * basis", "         * @type {Boolean}", "         * @private", "         */", "        this.hasExactMatchByCol = isArray(f.columns_exact_match);", "", "        /**", "         * Exact match filtering per column array", "         * @type {Array}", "         */", "        this.exactMatchByCol = this.hasExactMatchByCol ?", "            f.columns_exact_match : [];", "", "        /**", "         * Globally enable/disable exact match filtering", "         * @type {Boolean}", "         */", "        this.exactMatch = Boolean(f.exact_match);", "", "        /**", "         * Ignore diacritics globally or on a column basis", "         * @type {Boolean|Array}", "         */", "        this.ignoreDiacritics = f.ignore_diacritics;", "", "        /**", "         * Enable/disable linked filters filtering mode", "         * @type {Boolean}", "         */", "        this.linkedFilters = Boolean(f.linked_filters);", "", "        /**", "         * Enable/disable readonly state for excluded options when", "         * linked filters filtering mode is on", "         * @type {Boolean}", "         */", "        this.disableExcludedOptions = Boolean(f.disable_excluded_options);", "", "        /**", "         * Active filter ID", "         * @type {String}", "         * @private", "         */", "        this.activeFilterId = null;", "", "        /**", "         * Enable/disable always visible rows, excluded from filtering", "         * @type {Boolean}", "         */", "        this.hasVisibleRows = Boolean(f.rows_always_visible);", "", "        /**", "         * List of row indexes to be excluded from filtering", "         * @type {Array}", "         */", "        this.visibleRows = this.hasVisibleRows ? f.rows_always_visible : [];", "", "        /**", "         * Enable/disable external filters generation", "         * @type {Boolean}", "         */", "        this.isExternalFlt = Boolean(f.external_flt_grid);", "", "        /**", "         * List of containers IDs where external filters will be generated", "         * @type {Array}", "         */", "        this.externalFltTgtIds = f.external_flt_grid_ids || [];", "", "        /**", "         * Callback fired after filters are generated", "         * @type {Function}", "         */", "        this.onFiltersLoaded = isFn(f.on_filters_loaded) ?", "            f.on_filters_loaded : EMPTY_FN;", "", "        /**", "         * Enable/disable single filter filtering all columns", "         * @type {Boolean}", "         */", "        this.singleSearchFlt = Boolean(f.single_filter);", "", "        /**", "         * Callback fired after a row is validated during filtering", "         * @type {Function}", "         */", "        this.onRowValidated = isFn(f.on_row_validated) ?", "            f.on_row_validated : EMPTY_FN;", "", "        /**", "         * List of columns implementing custom filtering", "         * @type {Array}", "         */", "        this.customCellDataCols = f.custom_cell_data_cols ?", "            f.custom_cell_data_cols : [];", "", "        /**", "         * Delegate function for retrieving cell data with custom logic", "         * @type {Function}", "         */", "        this.customCellData = isFn(f.custom_cell_data) ?", "            f.custom_cell_data : EMPTY_FN;", "", "        /**", "         * Global watermark text for input filter type or watermark for each", "         * filter if an array is supplied", "         * @type {String|Array}", "         */", "        this.watermark = f.watermark || '';", "", "        /**", "         * Indicate whether watermark is on a per column basis", "         * @type {Boolean}", "         * @private", "         */", "        this.isWatermarkArray = isArray(this.watermark);", "", "        /**", "         * Toolbar's custom container ID", "         * @type {String}", "         */", "        this.toolBarTgtId = f.toolbar_target_id || null;", "", "        /**", "         * Indicate whether help UI component is disabled", "         * @type {Boolean}", "         */", "        this.help = isUndef(f.help_instructions) ?", "            undefined : Boolean(f.help_instructions);", "", "        /**", "         * Indicate whether pop-up filters UI is enabled", "         * @type {Boolean}", "         */", "        this.popupFilters = Boolean(f.popup_filters);", "", "        /**", "         * Indicate whether filtered (active) columns indicator is enabled", "         * @type {Boolean}", "         */", "        this.markActiveColumns = Boolean(f.mark_active_columns);", "", "        /**", "         * Css class for filtered (active) columns", "         * @type {String}", "         */", "        this.activeColumnsCssClass = f.active_columns_css_class ||", "            'activeHeader';", "", "        /**", "         * Callback fired before a column is marked as filtered", "         * @type {Function}", "         */", "        this.onBeforeActiveColumn = isFn(f.on_before_active_column) ?", "            f.on_before_active_column : EMPTY_FN;", "", "        /**", "         * Callback fired after a column is marked as filtered", "         * @type {Function}", "         */", "        this.onAfterActiveColumn = isFn(f.on_after_active_column) ?", "            f.on_after_active_column : EMPTY_FN;", "", "        /*** select filter's customisation and behaviours ***/", "        /**", "         * Text for clear option in drop-down filter types (1st option)", "         * @type {String|Array}", "         */", "        this.clearFilterText = f.clear_filter_text || 'Clear';", "", "        /**", "         * Indicate whether empty option is enabled in drop-down filter types", "         * @type {Boolean}", "         */", "        this.enableEmptyOption = Boolean(f.enable_empty_option);", "", "        /**", "         * Text for empty option in drop-down filter types", "         * @type {String}", "         */", "        this.emptyText = f.empty_text || '(Empty)';", "", "        /**", "         * Indicate whether non-empty option is enabled in drop-down filter", "         * types", "         * @type {Boolean}", "         */", "        this.enableNonEmptyOption = Boolean(f.enable_non_empty_option);", "", "        /**", "         * Text for non-empty option in drop-down filter types", "         * @type {String}", "         */", "        this.nonEmptyText = f.non_empty_text || '(Non empty)';", "", "        /**", "         * Indicate whether drop-down filter types filter the table by default", "         * on change event", "         * @type {Boolean}", "         */", "        this.onSlcChange = f.on_change === false ? false : true;", "", "        /**", "         * Indicate whether options in drop-down filter types are sorted in a", "         * alpha-numeric manner by default", "         * @type {Boolean}", "         */", "        this.sortSlc = f.sort_select === false ? false : true;", "", "        /**", "         * Indicate whether options in drop-down filter types are sorted in a", "         * ascending numeric manner", "         * @type {Boolean}", "         * @private", "         */", "        this.isSortNumAsc = Boolean(f.sort_num_asc);", "", "        /**", "         * List of columns implementing options sorting in a ascending numeric", "         * manner", "         * @type {Array}", "         */", "        this.sortNumAsc = this.isSortNumAsc ? f.sort_num_asc : [];", "", "        /**", "         * Indicate whether options in drop-down filter types are sorted in a", "         * descending numeric manner", "         * @type {Boolean}", "         * @private", "         */", "        this.isSortNumDesc = Boolean(f.sort_num_desc);", "", "        /**", "         * List of columns implementing options sorting in a descending numeric", "         * manner", "         * @type {Array}", "         */", "        this.sortNumDesc = this.isSortNumDesc ? f.sort_num_desc : [];", "", "        /**", "         * Indicate whether drop-down filter types are populated on demand at", "         * first usage", "         * @type {Boolean}", "         */", "        this.loadFltOnDemand = Boolean(f.load_filters_on_demand);", "", "        /**", "         * Indicate whether custom drop-down filter options are implemented", "         * @type {Boolean}", "         */", "        this.hasCustomOptions = isObj(f.custom_options);", "", "        /**", "         * Custom options definition of a per column basis, ie:", "         *\tcustom_options: {", "         *      cols:[0, 1],", "         *      texts: [", "         *          ['a0', 'b0', 'c0'],", "         *          ['a1', 'b1', 'c1']", "         *      ],", "         *      values: [", "         *          ['a0', 'b0', 'c0'],", "         *          ['a1', 'b1', 'c1']", "         *      ],", "         *      sorts: [false, true]", "         *  }", "         *", "         * @type {Object}", "         */", "        this.customOptions = f.custom_options;", "", "        /*** Filter operators ***/", "        /**", "         * Regular expression operator for input filter. Defaults to 'rgx:'", "         * @type {String}", "         */", "        this.rgxOperator = f.regexp_operator || 'rgx:';", "", "        /**", "         * Empty cells operator for input filter. Defaults to '[empty]'", "         * @type {String}", "         */", "        this.emOperator = f.empty_operator || '[empty]';", "", "        /**", "         * Non-empty cells operator for input filter. Defaults to '[nonempty]'", "         * @type {String}", "         */", "        this.nmOperator = f.nonempty_operator || '[nonempty]';", "", "        /**", "         * Logical OR operator for input filter. Defaults to '||'", "         * @type {String}", "         */", "        this.orOperator = f.or_operator || '||';", "", "        /**", "         * Logical AND operator for input filter. Defaults to '&&'", "         * @type {String}", "         */", "        this.anOperator = f.and_operator || '&&';", "", "        /**", "         * Greater than operator for input filter. Defaults to '>'", "         * @type {String}", "         */", "        this.grOperator = f.greater_operator || '>';", "", "        /**", "         * Lower than operator for input filter. Defaults to '<'", "         * @type {String}", "         */", "        this.lwOperator = f.lower_operator || '<';", "", "        /**", "         * Lower than or equal operator for input filter. Defaults to '<='", "         * @type {String}", "         */", "        this.leOperator = f.lower_equal_operator || '<=';", "", "        /**", "         * Greater than or equal operator for input filter. Defaults to '>='", "         * @type {String}", "         */", "        this.geOperator = f.greater_equal_operator || '>=';", "", "        /**", "         * Inequality operator for input filter. Defaults to '!'", "         * @type {String}", "         */", "        this.dfOperator = f.different_operator || '!';", "", "        /**", "         * Like operator for input filter. Defaults to '!'", "         * @type {String}", "         */", "        this.lkOperator = f.like_operator || '*';", "", "        /**", "         * Strict equality operator for input filter. Defaults to '='", "         * @type {String}", "         */", "        this.eqOperator = f.equal_operator || '=';", "", "        /**", "         * Starts with operator for input filter. Defaults to '='", "         * @type {String}", "         */", "        this.stOperator = f.start_with_operator || '{';", "", "        /**", "         * Ends with operator for input filter. Defaults to '='", "         * @type {String}", "         */", "        this.enOperator = f.end_with_operator || '}';", "", "        // this.curExp = f.cur_exp || '^[¥£€$]';", "", "        /**", "         * Stored values separator", "         * @type {String}", "         */", "        this.separator = f.separator || ',';", "", "        /**", "         * Enable rows counter UI component", "         * @type {Boolean}", "         */", "        this.rowsCounter = Boolean(f.rows_counter);", "", "        /**", "         * Enable status bar UI component", "         * @type {Boolean}", "         */", "        this.statusBar = Boolean(f.status_bar);", "", "        /**", "         * Enable activity/spinner indicator UI component", "         * @type {Boolean}", "         */", "        this.loader = Boolean(f.loader);", "", "        /*** validation - reset buttons/links ***/", "        /**", "         * Enable filters submission button", "         * @type {Boolean}", "         */", "        this.displayBtn = Boolean(f.btn);", "", "        /**", "         * Define filters submission button text", "         * @type {String}", "         */", "        this.btnText = f.btn_text || (!this.enableIcons ? 'Go' : '');", "", "        /**", "         * Css class for filters submission button", "         * @type {String}", "         */", "        this.btnCssClass = f.btn_css_class ||", "            (!this.enableIcons ? 'btnflt' : 'btnflt_icon');", "", "        /**", "         * Enable clear button", "         * @type {Boolean}", "         */", "        this.btnReset = Boolean(f.btn_reset);", "", "        /**", "         * Callback fired before filters are cleared", "         * @type {Function}", "         */", "        this.onBeforeReset = isFn(f.on_before_reset) ?", "            f.on_before_reset : EMPTY_FN;", "", "        /**", "         * Callback fired after filters are cleared", "         * @type {Function}", "         */", "        this.onAfterReset = isFn(f.on_after_reset) ?", "            f.on_after_reset : EMPTY_FN;", "", "        /**", "         * Enable paging component", "         * @type {Boolean}", "         */", "        this.paging = Boolean(f.paging);", "", "        /**", "         * Number of hidden rows", "         * @type {Number}", "         * @private", "         */", "        this.nbHiddenRows = 0;", "", "        /**", "         * Enable auto-filter behaviour, table is filtered when a user", "         * stops typing", "         * @type {Boolean}", "         */", "        this.autoFilter = Boolean(f.auto_filter);", "", "        /**", "         * Auto-filter delay in msecs", "         * @type {Number}", "         */", "        this.autoFilterDelay = !isNaN(f.auto_filter_delay) ?", "            f.auto_filter_delay : AUTO_FILTER_DELAY;", "", "        /**", "         * Indicate whether user is typing", "         * @type {Boolean}", "         * @private", "         */", "        this.isUserTyping = null;", "", "        /**", "         * Auto-filter interval ID", "         * @type {String}", "         * @private", "         */", "        this.autoFilterTimer = null;", "", "        /**", "         * Enable keyword highlighting behaviour", "         * @type {Boolean}", "         */", "        this.highlightKeywords = Boolean(f.highlight_keywords);", "", "        /**", "         * Enable no results message UI component", "         * @type {Boolean}", "         */", "        this.noResults = isObj(f.no_results_message) ||", "            Boolean(f.no_results_message);", "", "        /**", "         * Enable state persistence", "         * @type {Boolean}", "         */", "        this.state = isObj(f.state) || Boolean(f.state);", "", "        /*** data types ***/", "", "        /**", "         * Define default locale, default to 'en' as per Sugar Date module:", "         * https://sugarjs.com/docs/#/DateLocales", "         * @type {String}", "         */", "        this.locale = f.locale || 'en';", "", "        /**", "         * Define thousands separator ',' or '.', defaults to ','", "         * @type {String}", "         */", "        this.thousandsSeparator = f.thousands_separator || ',';", "", "        /**", "         * Define decimal separator ',' or '.', defaults to '.'", "         * @type {String}", "         */", "        this.decimalSeparator = f.decimal_separator || '.';", "", "        /**", "         * Determine whether table has columns data types", "         * @type {Boolean}", "         * @private", "         */", "        this.hasColTypes = isArray(f.col_types);", "", "        /**", "         * Define data types on a column basis, possible values 'string',", "         * 'number', 'formatted-number', 'date', 'ipaddress' ie:", "         * col_types : [", "         *  'string', 'date', 'number',", "         *  { type: 'formatted-number', decimal: ',', thousands: '.' },", "         *  { type: 'date', locale: 'en-gb' },", "         *  { type: 'date', format: ['{dd}-{months}-{yyyy|yy}'] }", "         * ]", "         *", "         * Refer to https://sugarjs.com/docs/#/DateParsing for exhaustive", "         * information on date parsing formats supported by Sugar Date", "         * @type {Array}", "         */", "        this.colTypes = this.hasColTypes ? f.col_types : [];", "", "        /*** ids prefixes ***/", "        /**", "         * Main prefix", "         * @private", "         */", "        this.prfxTf = 'TF';", "", "        /**", "         * Filter's ID prefix (inputs - selects)", "         * @private", "         */", "        this.prfxFlt = 'flt';", "", "        /**", "         * Button's ID prefix", "         * @private", "         */", "        this.prfxValButton = 'btn';", "", "        /**", "         * Toolbar container ID prefix", "         * @private", "         */", "        this.prfxInfDiv = 'inf_';", "", "        /**", "         * Toolbar left element ID prefix", "         * @private", "         */", "        this.prfxLDiv = 'ldiv_';", "", "        /**", "         * Toolbar right element ID prefix", "         * @private", "         */", "        this.prfxRDiv = 'rdiv_';", "", "        /**", "         * Toolbar middle element ID prefix", "         * @private", "         */", "        this.prfxMDiv = 'mdiv_';", "", "        /**", "         * Responsive Css class", "         * @private", "         */", "        this.prfxResponsive = 'resp';", "", "        /*** extensions ***/", "        /**", "         * List of loaded extensions", "         * @type {Array}", "         * @private", "         */", "        this.extensions = f.extensions;", "", "        /**", "         * Determine whether extensions are loaded", "         * @type {Boolean}", "         * @private", "         */", "        this.hasExtensions = isArray(this.extensions);", "", "        /*** themes ***/", "        /**", "         * Enable default theme", "         * @type {Boolean}", "         */", "        this.enableDefaultTheme = Boolean(f.enable_default_theme);", "", "        /**", "         * Determine whether themes are enables", "         * @type {Boolean}", "         * @private", "         */", "        this.hasThemes = (this.enableDefaultTheme || isArray(f.themes));", "", "        /**", "         * List of themes, ie:", "         * themes: [{ name: 'skyblue' }]", "         * @type {Array}", "         */", "        this.themes = f.themes || [];", "", "        /**", "         * Define path to themes assets, defaults to", "         * 'tablefilter/style/themes/'. Usage:", "         * themes: [{ name: 'skyblue' }]", "         * @type {Array}", "         */", "        this.themesPath = f.themes_path || this.stylePath + 'themes/';", "", "        /**", "         * Enable responsive layout", "         * @type {Boolean}", "         */", "        this.responsive = Boolean(f.responsive);", "", "        /**", "         * Features registry", "         * @private", "         */", "        this.Mod = {};", "", "        /**", "         * Extensions registry", "         * @private", "         */", "        this.ExtRegistry = {};", "    }", "", "    /**", "     * Initialise features and layout", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        this.nbCells = this.getCellsNb(this.refRow);", "        let Mod = this.Mod;", "        let n = this.singleSearchFlt ? 1 : this.nbCells;", "        let inpclass;", "", "        //loads stylesheet if not imported", "        this.import(this.stylesheetId, this.stylesheet, null, 'link');", "", "        //loads theme", "        if (this.hasThemes) {", "            this.loadThemes();", "        }", "", "        // Instanciate sugar date wrapper", "        Mod.dateType = Mod.dateType || new DateType(this);", "        Mod.dateType.init();", "", "        // Instantiate help feature and initialise only if set true", "        Mod.help = Mod.help || new Help(this);", "        if (this.help) {", "            Mod.help.init();", "        }", "", "        if (this.state) {", "            Mod.state = Mod.state || new State(this);", "            Mod.state.init();", "        }", "", "        if (this.gridLayout) {", "            Mod.gridLayout = Mod.gridLayout || new GridLayout(this);", "            Mod.gridLayout.init();", "        }", "", "        if (this.loader) {", "            Mod.loader = Mod.loader || new Loader(this);", "            Mod.loader.init();", "        }", "", "        if (this.highlightKeywords) {", "            Mod.highlightKeyword = new HighlightKeyword(this);", "            Mod.highlightKeyword.init();", "        }", "", "        if (this.popupFilters) {", "            Mod.popupFilter = Mod.popupFilter || new PopupFilter(this);", "            Mod.popupFilter.init();", "        }", "", "        //filters grid is not generated", "        if (!this.fltGrid) {", "            this._initNoFilters();", "        } else {", "            let fltrow = this._insertFiltersRow();", "", "            this.nbFilterableRows = this.getRowsNb();", "", "            // Generate filters", "            for (let i = 0; i < n; i++) {", "                this.emitter.emit('before-filter-init', this, i);", "", "                let fltcell = createElm(this.fltCellTag),", "                    col = this.getFilterType(i);", "", "                if (this.singleSearchFlt) {", "                    fltcell.colSpan = this.nbCells;", "                }", "                if (!this.gridLayout) {", "                    fltrow.appendChild(fltcell);", "                }", "                inpclass = (i === n - 1 && this.displayBtn) ?", "                    this.fltSmallCssClass : this.fltCssClass;", "", "                //only 1 input for single search", "                if (this.singleSearchFlt) {", "                    col = INPUT;", "                    inpclass = this.singleFltCssClass;", "                }", "", "                //drop-down filters", "                if (col === SELECT || col === MULTIPLE) {", "                    if (!Mod.dropdown) {", "                        Mod.dropdown = new Dropdown(this);", "                    }", "                    Mod.dropdown.init(i, this.isExternalFlt, fltcell);", "                }", "                // checklist", "                else if (col === CHECKLIST) {", "                    if (!Mod.checkList) {", "                        Mod.checkList = new CheckList(this);", "                    }", "                    Mod.checkList.init(i, this.isExternalFlt, fltcell);", "                } else {", "                    this._buildInputFilter(i, inpclass, fltcell);", "                }", "", "                // this adds submit button", "                if (i === n - 1 && this.displayBtn) {", "                    this._buildSubmitButton(i, fltcell);", "                }", "", "                this.emitter.emit('after-filter-init', this, i);", "            }", "", "            this.emitter.on(['filter-focus'],", "                (tf, filter) => this.setActiveFilterId(filter.id));", "", "        }//if this.fltGrid", "", "        /* Features */", "        if (this.hasVisibleRows) {", "            this.emitter.on(['after-filtering'],", "                () => this.enforceVisibility());", "            this.enforceVisibility();", "        }", "        if (this.rowsCounter) {", "            Mod.rowsCounter = new RowsCounter(this);", "            Mod.rowsCounter.init();", "        }", "        if (this.statusBar) {", "            Mod.statusBar = new StatusBar(this);", "            Mod.statusBar.init();", "        }", "        if (this.paging) {", "            if (!Mod.paging) {", "                Mod.paging = new Paging(this);", "                Mod.paging.init();", "            } else {", "                Mod.paging.reset();", "            }", "        }", "        if (this.btnReset) {", "            Mod.clearButton = new ClearButton(this);", "            Mod.clearButton.init();", "        }", "", "        if (this.hasColWidths && !this.gridLayout) {", "            this.setColWidths();", "        }", "        if (this.alternateRows) {", "            Mod.alternateRows = new AlternateRows(this);", "            Mod.alternateRows.init();", "        }", "        if (this.noResults) {", "            Mod.noResults = Mod.noResults || new NoResults(this);", "            Mod.noResults.init();", "        }", "", "        //TF css class is added to table", "        if (!this.gridLayout) {", "            addClass(this.tbl, this.prfxTf);", "            if (this.responsive) {", "                addClass(this.tbl, this.prfxResponsive);", "            }", "        }", "", "        /* Loads extensions */", "        if (this.hasExtensions) {", "            this.initExtensions();", "        }", "", "        // Subscribe to events", "        if (this.markActiveColumns) {", "            this.emitter.on(['before-filtering'],", "                () => this.clearActiveColumns());", "            this.emitter.on(['cell-processed'],", "                (tf, colIndex) => this.markActiveColumn(colIndex));", "        }", "        if (this.linkedFilters) {", "            this.emitter.on(['after-filtering'], () => this.linkFilters());", "        }", "", "        /** @inherited */", "        this.initialized = true;", "", "        this.onFiltersLoaded(this);", "", "        this.emitter.emit('initialized', this);", "    }", "", "    /**", "     * Detect <enter> key", "     * @param {Event} evt", "     */", "    detectKey(evt) {", "        if (!this.enterKey) {", "            return;", "        }", "        if (evt) {", "            let key = keyCode(evt);", "            if (key === ENTER_KEY) {", "                this.filter();", "                cancelEvt(evt);", "                stopEvt(evt);", "            } else {", "                this.isUserTyping = true;", "                root.clearInterval(this.autoFilterTimer);", "                this.autoFilterTimer = null;", "            }", "        }", "    }", "", "    /**", "     * Filter's keyup event: if auto-filter on, detect user is typing and filter", "     * columns", "     * @param {Event} evt", "     */", "    onKeyUp(evt) {", "        if (!this.autoFilter) {", "            return;", "        }", "        let key = keyCode(evt);", "        this.isUserTyping = false;", "", "        function filter() {", "            root.clearInterval(this.autoFilterTimer);", "            this.autoFilterTimer = null;", "            if (!this.isUserTyping) {", "                this.filter();", "                this.isUserTyping = null;", "            }", "        }", "", "        if (key !== ENTER_KEY && key !== TAB_KEY && key !== ESC_KEY &&", "            key !== UP_ARROW_KEY && key !== DOWN_ARROW_KEY) {", "            if (this.autoFilterTimer === null) {", "                this.autoFilterTimer = root.setInterval(filter.bind(this),", "                    this.autoFilterDelay);", "            }", "        } else {", "            root.clearInterval(this.autoFilterTimer);", "            this.autoFilterTimer = null;", "        }", "    }", "", "    /**", "     * Filter's keydown event: if auto-filter on, detect user is typing", "     */", "    onKeyDown() {", "        if (this.autoFilter) {", "            this.isUserTyping = true;", "        }", "    }", "", "    /**", "     * Filter's focus event", "     * @param {Event} evt", "     */", "    onInpFocus(evt) {", "        let elm = targetEvt(evt);", "        this.emitter.emit('filter-focus', this, elm);", "    }", "", "    /**", "     * Filter's blur event: if auto-filter on, clear interval on filter blur", "     */", "    onInpBlur() {", "        if (this.autoFilter) {", "            this.isUserTyping = false;", "            root.clearInterval(this.autoFilterTimer);", "        }", "        this.emitter.emit('filter-blur', this);", "    }", "", "    /**", "     * Insert filters row at initialization", "     */", "    _insertFiltersRow() {", "        // TODO: prevent filters row generation for popup filters too,", "        // to reduce and simplify headers row index adjusting across lib modules", "        // (GridLayout, PopupFilter etc)", "        if (this.gridLayout) {", "            return;", "        }", "        let fltrow;", "", "        let thead = tag(this.tbl, 'thead');", "        if (thead.length > 0) {", "            fltrow = thead[0].insertRow(this.filtersRowIndex);", "        } else {", "            fltrow = this.tbl.insertRow(this.filtersRowIndex);", "        }", "", "        fltrow.className = this.fltsRowCssClass;", "", "        if (this.isExternalFlt) {", "            fltrow.style.display = NONE;", "        }", "", "        this.emitter.emit('filters-row-inserted', this, fltrow);", "        return fltrow;", "    }", "", "    /**", "     * Initialize filtersless table", "     */", "    _initNoFilters() {", "        if (this.fltGrid) {", "            return;", "        }", "        this.refRow = this.refRow > 0 ? this.refRow - 1 : 0;", "        this.nbFilterableRows = this.getRowsNb();", "    }", "", "    /**", "     * Build input filter type", "     * @param  {Number} colIndex      Column index", "     * @param  {String} cssClass      Css class applied to filter", "     * @param  {DOMElement} container Container DOM element", "     */", "    _buildInputFilter(colIndex, cssClass, container) {", "        let col = this.getFilterType(colIndex);", "        let externalFltTgtId = this.isExternalFlt ?", "            this.externalFltTgtIds[colIndex] : null;", "        let inpType = col === INPUT ? 'text' : 'hidden';", "        let inp = createElm(INPUT,", "            ['id', this.buildFilterId(colIndex)],", "            ['type', inpType], ['ct', colIndex]);", "", "        if (inpType !== 'hidden' && this.watermark) {", "            inp.setAttribute('placeholder',", "                this.isWatermarkArray ? (this.watermark[colIndex] || '') :", "                    this.watermark", "            );", "        }", "        inp.className = cssClass || this.fltCssClass;", "        addEvt(inp, 'focus', (evt) => this.onInpFocus(evt));", "", "        //filter is appended in custom element", "        if (externalFltTgtId) {", "            elm(externalFltTgtId).appendChild(inp);", "        } else {", "            container.appendChild(inp);", "        }", "", "        this.fltIds.push(inp.id);", "", "        addEvt(inp, 'keypress', (evt) => this.detectKey(evt));", "        addEvt(inp, 'keydown', () => this.onKeyDown());", "        addEvt(inp, 'keyup', (evt) => this.onKeyUp(evt));", "        addEvt(inp, 'blur', () => this.onInpBlur());", "    }", "", "    /**", "     * Build submit button", "     * @param  {Number} colIndex      Column index", "     * @param  {DOMElement} container Container DOM element", "     */", "    _buildSubmitButton(colIndex, container) {", "        let externalFltTgtId = this.isExternalFlt ?", "            this.externalFltTgtIds[colIndex] : null;", "        let btn = createElm(INPUT,", "            ['type', 'button'],", "            ['value', this.btnText]", "        );", "        btn.className = this.btnCssClass;", "", "        //filter is appended in custom element", "        if (externalFltTgtId) {", "            elm(externalFltTgtId).appendChild(btn);", "        } else {", "            container.appendChild(btn);", "        }", "", "        addEvt(btn, 'click', () => this.filter());", "    }", "", "    /**", "     * Return a feature instance for a given name", "     * @param  {String} name Name of the feature", "     * @return {Object}", "     */", "    feature(name) {", "        return this.Mod[name];", "    }", "", "    /**", "     * Initialise all the extensions defined in the configuration object", "     */", "    initExtensions() {", "        let exts = this.extensions;", "        // Set config's publicPath dynamically for Webpack...", "        __webpack_public_path__ = this.basePath;", "", "        this.emitter.emit('before-loading-extensions', this);", "        for (let i = 0, len = exts.length; i < len; i++) {", "            let ext = exts[i];", "            if (!this.ExtRegistry[ext.name]) {", "                this.loadExtension(ext);", "            }", "        }", "        this.emitter.emit('after-loading-extensions', this);", "    }", "", "    /**", "     * Load an extension module", "     * @param  {Object} ext Extension config object", "     */", "    loadExtension(ext) {", "        if (!ext || !ext.name) {", "            return;", "        }", "", "        let name = ext.name;", "        let path = ext.path;", "        let modulePath;", "", "        if (name && path) {", "            modulePath = ext.path + name;", "        } else {", "            name = name.replace('.js', '');", "            modulePath = 'extensions/{}/{}'.replace(/{}/g, name);", "        }", "", "        // Require pattern for Webpack", "        require(['./' + modulePath], (mod) => {", "            /* eslint-disable */", "            let inst = new mod.default(this, ext);", "            /* eslint-enable */", "            inst.init();", "            this.ExtRegistry[name] = inst;", "        });", "    }", "", "    /**", "     * Get an extension instance", "     * @param  {String} name Name of the extension", "     * @return {Object}      Extension instance", "     */", "    extension(name) {", "        return this.ExtRegistry[name];", "    }", "", "    /**", "     * Check passed extension name exists", "     * @param  {String}  name Name of the extension", "     * @return {Boolean}", "     */", "    hasExtension(name) {", "        return !isEmpty(this.ExtRegistry[name]);", "    }", "", "    /**", "     * Destroy all the extensions defined in the configuration object", "     */", "    destroyExtensions() {", "        let exts = this.extensions;", "", "        for (let i = 0, len = exts.length; i < len; i++) {", "            let ext = exts[i];", "            let extInstance = this.ExtRegistry[ext.name];", "            if (extInstance) {", "                extInstance.destroy();", "                this.ExtRegistry[ext.name] = undefined;", "            }", "        }", "    }", "", "    /**", "     * Load themes defined in the configuration object", "     */", "    loadThemes() {", "        let themes = this.themes;", "        this.emitter.emit('before-loading-themes', this);", "", "        //Default theme config", "        if (this.enableDefaultTheme) {", "            let defaultTheme = { name: 'default' };", "            this.themes.push(defaultTheme);", "        }", "        if (isArray(themes)) {", "            for (let i = 0, len = themes.length; i < len; i++) {", "                let theme = themes[i];", "                let name = theme.name;", "                let path = theme.path;", "                let styleId = this.prfxTf + name;", "                if (name && !path) {", "                    path = this.themesPath + name + '/' + name + '.css';", "                }", "                else if (!name && theme.path) {", "                    name = 'theme{0}'.replace('{0}', i);", "                }", "", "                if (!this.isImported(path, 'link')) {", "                    this.import(styleId, path, null, 'link');", "                }", "            }", "        }", "", "        // Enable loader indicator", "        this.loader = true;", "", "        this.emitter.emit('after-loading-themes', this);", "    }", "", "    /**", "     * Return stylesheet DOM element for a given theme name", "     * @return {DOMElement} stylesheet element", "     */", "    getStylesheet(name = 'default') {", "        return elm(this.prfxTf + name);", "    }", "", "    /**", "     * Destroy filter grid", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        let emitter = this.emitter;", "", "        if (this.isExternalFlt && !this.popupFilters) {", "            this.removeExternalFlts();", "        }", "        if (this.infDiv) {", "            this.removeToolbar();", "        }", "        if (this.markActiveColumns) {", "            this.clearActiveColumns();", "            emitter.off(['before-filtering'], () => this.clearActiveColumns());", "            emitter.off(['cell-processed'],", "                (tf, colIndex) => this.markActiveColumn(colIndex));", "        }", "        if (this.hasExtensions) {", "            this.destroyExtensions();", "        }", "", "        this.validateAllRows();", "", "        if (this.fltGrid && !this.gridLayout) {", "            this.tbl.deleteRow(this.filtersRowIndex);", "        }", "", "        // broadcast destroy event", "        emitter.emit('destroy', this);", "", "        // unsubscribe to events", "        if (this.hasVisibleRows) {", "            emitter.off(['after-filtering'], () => this.enforceVisibility());", "        }", "        if (this.linkedFilters) {", "            emitter.off(['after-filtering'], () => this.linkFilters());", "        }", "        this.emitter.off(['filter-focus'],", "            (tf, filter) => this.setActiveFilterId(filter.id));", "", "        removeClass(this.tbl, this.prfxTf);", "        removeClass(this.tbl, this.prfxResponsive);", "", "        this.nbHiddenRows = 0;", "        this.validRowsIndex = [];", "        this.fltIds = [];", "        this.initialized = false;", "    }", "", "    /**", "     * Generate container element for paging, reset button, rows counter etc.", "     */", "    setToolbar() {", "        if (this.infDiv) {", "            return;", "        }", "", "        /*** container div ***/", "        let infDiv = createElm('div');", "        infDiv.className = this.infDivCssClass;", "", "        //custom container", "        if (this.toolBarTgtId) {", "            elm(this.toolBarTgtId).appendChild(infDiv);", "        }", "        //grid-layout", "        else if (this.gridLayout) {", "            let gridLayout = this.Mod.gridLayout;", "            gridLayout.tblMainCont.appendChild(infDiv);", "            infDiv.className = gridLayout.infDivCssClass;", "        }", "        //default location: just above the table", "        else {", "            let cont = createElm('caption');", "            cont.appendChild(infDiv);", "            this.tbl.insertBefore(cont, this.tbl.firstChild);", "        }", "        this.infDiv = infDiv;", "", "        /*** left div containing rows # displayer ***/", "        let lDiv = createElm('div');", "        lDiv.className = this.lDivCssClass;", "        infDiv.appendChild(lDiv);", "        this.lDiv = lDiv;", "", "        /***    right div containing reset button", "                + nb results per page select    ***/", "        let rDiv = createElm('div');", "        rDiv.className = this.rDivCssClass;", "        infDiv.appendChild(rDiv);", "        this.rDiv = rDiv;", "", "        /*** mid div containing paging elements ***/", "        let mDiv = createElm('div');", "        mDiv.className = this.mDivCssClass;", "        infDiv.appendChild(mDiv);", "        this.mDiv = mDiv;", "", "        // emit help initialisation only if undefined", "        if (isUndef(this.help)) {", "            // explicitily set enabled field to true to initialise help by", "            // default, only if setting is undefined", "            this.Mod.help.enabled = true;", "            this.emitter.emit('init-help', this);", "        }", "    }", "", "    /**", "     * Remove toolbar container element", "     */", "    removeToolbar() {", "        if (!this.infDiv) {", "            return;", "        }", "        removeElm(this.infDiv);", "        this.infDiv = null;", "", "        let tbl = this.tbl;", "        let captions = tag(tbl, 'caption');", "        if (captions.length > 0) {", "            [].forEach.call(captions, (elm) => tbl.removeChild(elm));", "        }", "    }", "", "    /**", "     * Remove all the external column filters", "     */", "    removeExternalFlts() {", "        if (!this.isExternalFlt) {", "            return;", "        }", "        let ids = this.externalFltTgtIds,", "            len = ids.length;", "        for (let ct = 0; ct < len; ct++) {", "            let externalFltTgtId = ids[ct],", "                externalFlt = elm(externalFltTgtId);", "            if (externalFlt) {", "                externalFlt.innerHTML = '';", "            }", "        }", "    }", "", "    /**", "     * Check if given column implements a filter with custom options", "     * @param  {Number}  colIndex Column's index", "     * @return {Boolean}", "     */", "    isCustomOptions(colIndex) {", "        return this.hasCustomOptions &&", "            this.customOptions.cols.indexOf(colIndex) !== -1;", "    }", "", "    /**", "     * Returns an array [[value0, value1 ...],[text0, text1 ...]] with the", "     * custom options values and texts", "     * @param  {Number} colIndex Column's index", "     * @return {Array}", "     */", "    getCustomOptions(colIndex) {", "        if (isEmpty(colIndex) || !this.isCustomOptions(colIndex)) {", "            return;", "        }", "", "        let customOptions = this.customOptions;", "        let cols = customOptions.cols;", "        let optTxt = [], optArray = [];", "        let index = cols.indexOf(colIndex);", "        let slcValues = customOptions.values[index];", "        let slcTexts = customOptions.texts[index];", "        let slcSort = customOptions.sorts[index];", "", "        for (let r = 0, len = slcValues.length; r < len; r++) {", "            optArray.push(slcValues[r]);", "            if (slcTexts[r]) {", "                optTxt.push(slcTexts[r]);", "            } else {", "                optTxt.push(slcValues[r]);", "            }", "        }", "        if (slcSort) {", "            optArray.sort();", "            optTxt.sort();", "        }", "        return [optArray, optTxt];", "    }", "", "    /**", "     * Filter the table by retrieving the data from each cell in every single", "     * row and comparing it to the search term for current column. A row is", "     * hidden when all the search terms are not found in inspected row.", "     */", "    filter() {", "        if (!this.fltGrid || !this.initialized) {", "            return;", "        }", "        //fire onbefore callback", "        this.onBeforeFilter(this);", "        this.emitter.emit('before-filtering', this);", "", "        let row = this.tbl.rows,", "            nbRows = this.getRowsNb(true),", "            hiddenRows = 0;", "", "        this.validRowsIndex = [];", "        // search args re-init", "        let searchArgs = this.getFiltersValue();", "", "        for (let k = this.refRow; k < nbRows; k++) {", "            // already filtered rows display re-init", "            row[k].style.display = '';", "", "            let cells = row[k].cells;", "            let nchilds = cells.length;", "", "            // checks if row has exact cell #", "            if (nchilds !== this.nbCells) {", "                continue;", "            }", "", "            let occurence = [],", "                isRowValid = true,", "                //only for single filter search", "                singleFltRowValid = false;", "", "            // this loop retrieves cell data", "            for (let j = 0; j < nchilds; j++) {", "                //searched keyword", "                let sA = searchArgs[this.singleSearchFlt ? 0 : j];", "", "                if (sA === '') {", "                    continue;", "                }", "", "                let cellValue = matchCase(this.getCellValue(cells[j]),", "                    this.caseSensitive);", "", "                //multiple search parameter operator ||", "                let sAOrSplit = sA.toString().split(this.orOperator),", "                    //multiple search || parameter boolean", "                    hasMultiOrSA = sAOrSplit.length > 1,", "                    //multiple search parameter operator &&", "                    sAAndSplit = sA.toString().split(this.anOperator),", "                    //multiple search && parameter boolean", "                    hasMultiAndSA = sAAndSplit.length > 1;", "", "                //detect operators or array query", "                if (isArray(sA) || hasMultiOrSA || hasMultiAndSA) {", "                    let cS,", "                        s,", "                        occur = false;", "                    if (isArray(sA)) {", "                        s = sA;", "                    } else {", "                        s = hasMultiOrSA ? sAOrSplit : sAAndSplit;", "                    }", "                    // isolate search term and check occurence in cell data", "                    for (let w = 0, len = s.length; w < len; w++) {", "                        cS = trim(s[w]);", "                        occur = this._testTerm(cS, cellValue, j);", "", "                        if (occur) {", "                            this.emitter.emit('highlight-keyword', this,", "                                cells[j], cS);", "                        }", "                        if ((hasMultiOrSA && occur) ||", "                            (hasMultiAndSA && !occur)) {", "                            break;", "                        }", "                        if (isArray(sA) && occur) {", "                            break;", "                        }", "                    }", "                    occurence[j] = occur;", "", "                }", "                //single search parameter", "                else {", "                    occurence[j] = this._testTerm(trim(sA), cellValue, j);", "                    if (occurence[j]) {", "                        this.emitter.emit('highlight-keyword', this, cells[j],", "                            sA);", "                    }", "                }//else single param", "", "                if (!occurence[j]) {", "                    isRowValid = false;", "                }", "                if (this.singleSearchFlt && occurence[j]) {", "                    singleFltRowValid = true;", "                }", "", "                this.emitter.emit('cell-processed', this, j, cells[j]);", "            }//for j", "", "            if (this.singleSearchFlt && singleFltRowValid) {", "                isRowValid = true;", "            }", "", "            this.validateRow(k, isRowValid);", "            if (!isRowValid) {", "                hiddenRows++;", "            }", "", "            this.emitter.emit('row-processed', this, k,", "                this.validRowsIndex.length, isRowValid);", "        }// for k", "", "        this.nbHiddenRows = hiddenRows;", "", "        //fire onafterfilter callback", "        this.onAfterFilter(this);", "", "        this.emitter.emit('after-filtering', this, searchArgs);", "    }", "", "    /**", "     * Test for a match of search term in cell data", "     * @param {String} term      Search term", "     * @param {String} cellValue  Cell data", "     * @param {Number} colIdx    Column index", "     * @returns {Boolean}", "     */", "    _testTerm(term, cellValue, colIdx) {", "        let numData;", "        let decimal = this.decimalSeparator;", "        let reLe = new RegExp(this.leOperator),", "            reGe = new RegExp(this.geOperator),", "            reL = new RegExp(this.lwOperator),", "            reG = new RegExp(this.grOperator),", "            reD = new RegExp(this.dfOperator),", "            reLk = new RegExp(rgxEsc(this.lkOperator)),", "            reEq = new RegExp(this.eqOperator),", "            reSt = new RegExp(this.stOperator),", "            reEn = new RegExp(this.enOperator),", "            // re_an = new RegExp(this.anOperator),", "            // re_cr = new RegExp(this.curExp),", "            reEm = this.emOperator,", "            reNm = this.nmOperator,", "            reRe = new RegExp(rgxEsc(this.rgxOperator));", "", "        term = matchCase(term, this.caseSensitive);", "", "        let occurence = false;", "", "        //Search arg operator tests", "        let hasLO = reL.test(term),", "            hasLE = reLe.test(term),", "            hasGR = reG.test(term),", "            hasGE = reGe.test(term),", "            hasDF = reD.test(term),", "            hasEQ = reEq.test(term),", "            hasLK = reLk.test(term),", "            // hatermN = re_an.test(term),", "            hasST = reSt.test(term),", "            hasEN = reEn.test(term),", "            hasEM = (reEm === term),", "            hasNM = (reNm === term),", "            hasRE = reRe.test(term);", "", "        // Check for dates or resolve date type", "        if (this.hasType(colIdx, [DATE])) {", "            let dte1, dte2;", "", "            let dateType = this.Mod.dateType;", "            let isValidDate = dateType.isValid.bind(dateType);", "            let parseDate = dateType.parse.bind(dateType);", "            let locale = dateType.getOptions(colIdx).locale || this.locale;", "", "            // Search arg dates tests", "            let isLDate = hasLO &&", "                isValidDate(term.replace(reL, ''), locale);", "            let isLEDate = hasLE &&", "                isValidDate(term.replace(reLe, ''), locale);", "            let isGDate = hasGR &&", "                isValidDate(term.replace(reG, ''), locale);", "            let isGEDate = hasGE &&", "                isValidDate(term.replace(reGe, ''), locale);", "            let isDFDate = hasDF &&", "                isValidDate(term.replace(reD, ''), locale);", "            let isEQDate = hasEQ &&", "                isValidDate(term.replace(reEq, ''), locale);", "", "            dte1 = parseDate(cellValue, locale);", "", "            // lower date", "            if (isLDate) {", "                dte2 = parseDate(term.replace(reL, ''), locale);", "                occurence = dte1 < dte2;", "            }", "            // lower equal date", "            else if (isLEDate) {", "                dte2 = parseDate(term.replace(reLe, ''), locale);", "                occurence = dte1 <= dte2;", "            }", "            // greater equal date", "            else if (isGEDate) {", "                dte2 = parseDate(term.replace(reGe, ''), locale);", "                occurence = dte1 >= dte2;", "            }", "            // greater date", "            else if (isGDate) {", "                dte2 = parseDate(term.replace(reG, ''), locale);", "                occurence = dte1 > dte2;", "            }", "            // different date", "            else if (isDFDate) {", "                dte2 = parseDate(term.replace(reD, ''), locale);", "                occurence = dte1.toString() !== dte2.toString();", "            }", "            // equal date", "            else if (isEQDate) {", "                dte2 = parseDate(term.replace(reEq, ''), locale);", "                occurence = dte1.toString() === dte2.toString();", "            }", "            // searched keyword with * operator doesn't have to be a date", "            else if (reLk.test(term)) {// like date", "                occurence = contains(term.replace(reLk, ''), cellValue,", "                    false, this.caseSensitive);", "            }", "            else if (isValidDate(term)) {", "                dte2 = parseDate(term, locale);", "                occurence = dte1.toString() === dte2.toString();", "            }", "            //empty", "            else if (hasEM) {", "                occurence = isEmptyString(cellValue);", "            }", "            //non-empty", "            else if (hasNM) {", "                occurence = !isEmptyString(cellValue);", "            } else {", "                occurence = contains(term, cellValue,", "                    this.isExactMatch(colIdx), this.caseSensitive);", "            }", "        }", "", "        else {", "            if (this.hasType(colIdx, [FORMATTED_NUMBER])) {", "                let colType = this.colTypes[colIdx];", "                if (colType.hasOwnProperty('decimal')) {", "                    decimal = colType.decimal;", "                }", "            }", "            // Convert to number anyways to auto-resolve type in case not", "            // defined by configuration", "            numData = Number(cellValue) || parseNb(cellValue, decimal);", "", "            // first checks if there is any operator (<,>,<=,>=,!,*,=,{,},", "            // rgx:)", "            // lower equal", "            if (hasLE) {", "                occurence = numData <= parseNb(", "                    term.replace(reLe, ''),", "                    decimal", "                );", "            }", "            //greater equal", "            else if (hasGE) {", "                occurence = numData >= parseNb(", "                    term.replace(reGe, ''),", "                    decimal", "                );", "            }", "            //lower", "            else if (hasLO) {", "                occurence = numData < parseNb(", "                    term.replace(reL, ''),", "                    decimal", "                );", "            }", "            //greater", "            else if (hasGR) {", "                occurence = numData > parseNb(", "                    term.replace(reG, ''),", "                    decimal", "                );", "            }", "            //different", "            else if (hasDF) {", "                occurence = contains(term.replace(reD, ''), cellValue,", "                    false, this.caseSensitive) ? false : true;", "            }", "            //like", "            else if (hasLK) {", "                occurence = contains(term.replace(reLk, ''), cellValue,", "                    false, this.caseSensitive);", "            }", "            //equal", "            else if (hasEQ) {", "                occurence = contains(term.replace(reEq, ''), cellValue,", "                    true, this.caseSensitive);", "            }", "            //starts with", "            else if (hasST) {", "                occurence = cellValue.indexOf(term.replace(reSt, '')) === 0 ?", "                    true : false;", "            }", "            //ends with", "            else if (hasEN) {", "                let searchArg = term.replace(reEn, '');", "                occurence =", "                    cellValue.lastIndexOf(searchArg, cellValue.length - 1) ===", "                        (cellValue.length - 1) - (searchArg.length - 1) &&", "                        cellValue.lastIndexOf(searchArg, cellValue.length - 1)", "                        > -1 ? true : false;", "            }", "            //empty", "            else if (hasEM) {", "                occurence = isEmptyString(cellValue);", "            }", "            //non-empty", "            else if (hasNM) {", "                occurence = !isEmptyString(cellValue);", "            }", "            //regexp", "            else if (hasRE) {", "                //in case regexp throws", "                try {", "                    //operator is removed", "                    let srchArg = term.replace(reRe, '');", "                    let rgx = new RegExp(srchArg);", "                    occurence = rgx.test(cellValue);", "                } catch (ex) {", "                    occurence = false;", "                }", "            } else {", "                // If numeric type data, perform a strict equality test and", "                // fallback to unformatted number string comparison", "                if (numData &&", "                    this.hasType(colIdx, [NUMBER, FORMATTED_NUMBER]) &&", "                    !this.singleSearchFlt) {", "                    // parseNb can return 0 for strings which are not", "                    // formatted numbers, in that case return the original", "                    // string. TODO: handle this in parseNb", "                    term = parseNb(term, decimal) || term;", "                    occurence = numData === term ||", "                        contains(term.toString(), numData.toString(),", "                            this.isExactMatch(colIdx), this.caseSensitive);", "                } else {", "                    // Finally test search term is contained in cell data", "                    occurence = contains(", "                        term,", "                        cellValue,", "                        this.isExactMatch(colIdx),", "                        this.caseSensitive,", "                        this.ignoresDiacritics(colIdx)", "                    );", "                }", "            }", "", "        }//else", "", "        return occurence;", "    }", "", "    /**", "     * Return the data of a specified column", "     * @param  {Number} colIndex Column index", "     * @param  {Boolean} [includeHeaders=false] Include headers row", "     * @param  {Boolean} [typed=true] Return a typed value", "     * @param  {Array} [exclude=[]] List of row indexes to be excluded", "     * @return {Array}           Flat list of data for a column", "     */", "    getColValues(", "        colIndex,", "        includeHeaders = false,", "        typed = false,", "        exclude = []", "    ) {", "        if (!this.fltGrid) {", "            return;", "        }", "        let row = this.tbl.rows;", "        let nbRows = this.getRowsNb(true);", "        let colValues = [];", "        let getContent = typed ? this.getCellData.bind(this) :", "            this.getCellValue.bind(this);", "", "        if (includeHeaders) {", "            colValues.push(this.getHeadersText()[colIndex]);", "        }", "", "        for (let i = this.refRow; i < nbRows; i++) {", "            let isExludedRow = false;", "            // checks if current row index appears in exclude array", "            if (exclude.length > 0) {", "                isExludedRow = exclude.indexOf(i) !== -1;", "            }", "            let cell = row[i].cells,", "                nchilds = cell.length;", "", "            // checks if row has exact cell # and is not excluded", "            if (nchilds === this.nbCells && !isExludedRow) {", "                // this loop retrieves cell data", "                for (let j = 0; j < nchilds; j++) {", "                    if (j !== colIndex) {", "                        continue;", "                    }", "                    let data = getContent(cell[j]);", "                    colValues.push(data);", "                }", "            }", "        }", "        return colValues;", "    }", "", "    /**", "     * Return the filter's value of a specified column", "     * @param  {Number} index Column index", "     * @return {String}       Filter value", "     */", "    getFilterValue(index) {", "        if (!this.fltGrid) {", "            return;", "        }", "        let fltValue = '';", "        let flt = this.getFilterElement(index);", "        if (!flt) {", "            return fltValue;", "        }", "", "        let fltColType = this.getFilterType(index);", "        if (fltColType !== MULTIPLE && fltColType !== CHECKLIST) {", "            fltValue = flt.value;", "        }", "        //mutiple select", "        else if (fltColType === MULTIPLE) {", "            fltValue = this.feature('dropdown').getValues(index);", "        }", "        //checklist", "        else if (fltColType === CHECKLIST) {", "            fltValue = this.feature('checkList').getValues(index);", "        }", "        //return an empty string if collection is empty or contains a single", "        //empty string", "        if (isArray(fltValue) && fltValue.length === 0 ||", "            (fltValue.length === 1 && fltValue[0] === '')) {", "            fltValue = '';", "        }", "", "        return fltValue;", "    }", "", "    /**", "     * Return the filters' values", "     * @return {Array} List of filters' values", "     */", "    getFiltersValue() {", "        if (!this.fltGrid) {", "            return;", "        }", "        let searchArgs = [];", "        for (let i = 0, len = this.fltIds.length; i < len; i++) {", "            let fltValue = this.getFilterValue(i);", "            if (isArray(fltValue)) {", "                searchArgs.push(fltValue);", "            } else {", "                searchArgs.push(trim(fltValue));", "            }", "        }", "        return searchArgs;", "    }", "", "    /**", "     * Return the ID of a specified column's filter", "     * @param  {Number} index Column's index", "     * @return {String}       ID of the filter element", "     */", "    getFilterId(index) {", "        if (!this.fltGrid) {", "            return;", "        }", "        return this.fltIds[index];", "    }", "", "    /**", "     * Return the list of ids of filters matching a specified type.", "     * Note: hidden filters are also returned", "     *", "     * @param  {String} type  Filter type string ('input', 'select', 'multiple',", "     *                        'checklist')", "     * @param  {Boolean} bool If true returns columns indexes instead of IDs", "     * @return {[type]}       List of element IDs or column indexes", "     */", "    getFiltersByType(type, bool) {", "        if (!this.fltGrid) {", "            return;", "        }", "        let arr = [];", "        for (let i = 0, len = this.fltIds.length; i < len; i++) {", "            let fltType = this.getFilterType(i);", "            if (fltType === type.toLowerCase()) {", "                let a = bool ? i : this.fltIds[i];", "                arr.push(a);", "            }", "        }", "        return arr;", "    }", "", "    /**", "     * Return the filter's DOM element for a given column", "     * @param  {Number} index     Column's index", "     * @return {DOMElement}", "     */", "    getFilterElement(index) {", "        let fltId = this.fltIds[index];", "        return elm(fltId);", "    }", "", "    /**", "     * Return the number of cells for a given row index", "     * @param  {Number} rowIndex Index of the row", "     * @return {Number}          Number of cells", "     */", "    getCellsNb(rowIndex = 0) {", "        let tr = this.tbl.rows[rowIndex >= 0 ? rowIndex : 0];", "        return tr ? tr.cells.length : 0;", "    }", "", "    /**", "     * Return the number of filterable rows starting from reference row if", "     * defined", "     * @param  {Boolean} includeHeaders Include the headers row", "     * @return {Number}                 Number of filterable rows", "     */", "    getRowsNb(includeHeaders) {", "        let s = isUndef(this.refRow) ? 0 : this.refRow;", "        let ntrs = this.tbl.rows.length;", "        if (includeHeaders) {", "            s = 0;", "        }", "        return parseInt(ntrs - s, 10);", "    }", "", "", "    getCellValue(cell) {", "        let idx = cell.cellIndex;", "        //CallcustomCellData callback", "        if (this.customCellDataCols.indexOf(idx) !== -1) {", "            return this.customCellData(this, cell, idx);", "        } else {", "            return getText(cell);", "        }", "    }", "", "    /**", "     * Return the typed data of a given cell based on the column type definition", "     * @param  {DOMElement} cell Cell's DOM object", "     * @return {String|Number|Date}", "     */", "    getCellData(cell) {", "        let colIndex = cell.cellIndex;", "        let value = this.getCellValue(cell);", "", "        if (this.hasType(colIndex, [FORMATTED_NUMBER])) {", "            let decimal = this.decimalSeparator;", "            let colType = this.colTypes[colIndex];", "            if (colType.hasOwnProperty('decimal')) {", "                decimal = colType.decimal;", "            }", "            return parseNb(value, decimal);", "        }", "        else if (this.hasType(colIndex, [NUMBER])) {", "            return Number(value);", "        }", "        else if (this.hasType(colIndex, [DATE])){", "            let dateType = this.Mod.dateType;", "            let locale = dateType.getOptions(colIndex).locale || this.locale;", "            return dateType.parse(value, locale);", "        }", "", "        return value;", "    }", "", "    /**", "     * Return the table data with following format:", "     * [", "     *     [rowIndex, [value0, value1...]],", "     *     [rowIndex, [value0, value1...]]", "     * ]", "     * @param  {Boolean} [includeHeaders=false] Include headers row", "     * @param  {Boolean} [excludeHiddenCols=false] Exclude hidden columns", "     * @param  {Boolean} [typed=false] Return typed value", "     * @return {Array}", "     *", "     * TODO: provide an API returning data in JSON format", "     */", "    getTableData(", "        includeHeaders = false,", "        excludeHiddenCols = false,", "        typed = false", "    ) {", "        let rows = this.tbl.rows;", "        let nbRows = this.getRowsNb(true);", "        let tblData = [];", "        let getContent = typed ? this.getCellData.bind(this) :", "            this.getCellValue.bind(this);", "", "        if (includeHeaders) {", "            let headers = this.getHeadersText(excludeHiddenCols);", "            tblData.push([this.getHeadersRowIndex(), headers]);", "        }", "        for (let k = this.refRow; k < nbRows; k++) {", "            let rowData = [k, []];", "            let cells = rows[k].cells;", "            for (let j = 0, len = cells.length; j < len; j++) {", "                if (excludeHiddenCols && this.hasExtension('colsVisibility')) {", "                    if (this.extension('colsVisibility').isColHidden(j)) {", "                        continue;", "                    }", "                }", "                let cellValue = getContent(cells[j]);", "                rowData[1].push(cellValue);", "            }", "            tblData.push(rowData);", "        }", "        return tblData;", "    }", "", "    /**", "     * Return the filtered data with following format:", "     * [", "     *     [rowIndex, [value0, value1...]],", "     *     [rowIndex, [value0, value1...]]", "     * ]", "     * @param  {Boolean} [includeHeaders=false] Include headers row", "     * @param  {Boolean} [excludeHiddenCols=false] Exclude hidden columns", "     * @param  {Boolean} [typed=false] Return typed value", "     * @return {Array}", "     *", "     * TODO: provide an API returning data in JSON format", "     */", "    getFilteredData(", "        includeHeaders = false,", "        excludeHiddenCols = false,", "        typed = false", "    ) {", "        if (!this.validRowsIndex) {", "            return [];", "        }", "        let rows = this.tbl.rows,", "            filteredData = [];", "        let getContent = typed ? this.getCellData.bind(this) :", "            this.getCellValue.bind(this);", "", "        if (includeHeaders) {", "            let headers = this.getHeadersText(excludeHiddenCols);", "            filteredData.push([this.getHeadersRowIndex(), headers]);", "        }", "", "        let validRows = this.getValidRows(true);", "        for (let i = 0; i < validRows.length; i++) {", "            let rData = [this.validRowsIndex[i], []],", "                cells = rows[this.validRowsIndex[i]].cells;", "            for (let k = 0; k < cells.length; k++) {", "                if (excludeHiddenCols && this.hasExtension('colsVisibility')) {", "                    if (this.extension('colsVisibility').isColHidden(k)) {", "                        continue;", "                    }", "                }", "                let cellValue = getContent(cells[k]);", "                rData[1].push(cellValue);", "            }", "            filteredData.push(rData);", "        }", "        return filteredData;", "    }", "", "    /**", "     * Return the filtered data for a given column index", "     * @param  {Number} colIndex Colmun's index", "     * @param  {Boolean} [includeHeaders=false] Include headers row", "     * @param  {Boolean} [typed=false] Return typed value", "     * @param  {Array} [exclude=[]] List of row indexes to be excluded", "     * @param  {Boolean} [visible=true] Return only filtered and visible data", "     *                           (relevant for paging)", "     * @return {Array}           Flat list of values ['val0','val1','val2'...]", "     *", "     * TODO: provide an API returning data in JSON format", "     */", "    getFilteredDataCol(", "        colIndex,", "        includeHeaders = false,", "        typed = false,", "        exclude = [],", "        visible = true", "    ) {", "        if (isUndef(colIndex)) {", "            return [];", "        }", "", "        let rows = this.tbl.rows;", "        let getContent = typed ? this.getCellData.bind(this) :", "            this.getCellValue.bind(this);", "", "        // ensure valid rows index do not contain excluded rows and row is", "        // displayed", "        let validRows = this.getValidRows(true).filter((rowIdx) => {", "            return exclude.indexOf(rowIdx) === -1 &&", "                (visible ?", "                    this.getRowDisplay(rows[rowIdx]) !== 'none' :", "                    true);", "        });", "", "        // convert column value to expected type if necessary", "        let validColValues = validRows.map((rowIdx) => {", "            return getContent(rows[rowIdx].cells[colIndex]);", "        });", "", "        if (includeHeaders) {", "            validColValues.unshift(this.getHeadersText()[colIndex]);", "        }", "", "        return validColValues;", "    }", "", "    /**", "     * Get the display value of a row", "     * @param  {HTMLTableRowElement} row DOM element of the row", "     * @return {String}     Usually 'none' or ''", "     */", "    getRowDisplay(row) {", "        return row.style.display;", "    }", "", "    /**", "     * Validate/invalidate row by setting the 'validRow' attribute on the row", "     * @param  {Number}  rowIndex Index of the row", "     * @param  {Boolean} isValid", "     */", "    validateRow(rowIndex, isValid) {", "        let row = this.tbl.rows[rowIndex];", "        if (!row || typeof isValid !== 'boolean') {", "            return;", "        }", "", "        // always visible rows are valid", "        if (this.hasVisibleRows && this.visibleRows.indexOf(rowIndex) !== -1) {", "            isValid = true;", "        }", "", "        let displayFlag = isValid ? '' : NONE,", "            validFlag = isValid ? 'true' : 'false';", "        row.style.display = displayFlag;", "", "        if (this.paging) {", "            row.setAttribute('validRow', validFlag);", "        }", "", "        if (isValid) {", "            if (this.validRowsIndex.indexOf(rowIndex) === -1) {", "                this.validRowsIndex.push(rowIndex);", "            }", "", "            this.onRowValidated(this, rowIndex);", "", "            this.emitter.emit('row-validated', this, rowIndex);", "        }", "    }", "", "    /**", "     * Validate all filterable rows", "     */", "    validateAllRows() {", "        if (!this.initialized) {", "            return;", "        }", "        this.validRowsIndex = [];", "        for (let k = this.refRow; k < this.nbFilterableRows; k++) {", "            this.validateRow(k, true);", "        }", "    }", "", "    /**", "     * Set search value to a given filter", "     * @param {Number} index     Column's index", "     * @param {String or Array} query  searcharg Search term", "     */", "    setFilterValue(index, query = '') {", "        if (!this.fltGrid) {", "            return;", "        }", "        let slc = this.getFilterElement(index),", "            fltColType = this.getFilterType(index);", "", "        if (fltColType !== MULTIPLE && fltColType !== CHECKLIST) {", "            if (this.loadFltOnDemand && !this.initialized) {", "                this.emitter.emit('build-select-filter', this, index,", "                    this.linkedFilters, this.isExternalFlt);", "            }", "            slc.value = query;", "        }", "        //multiple selects", "        else if (fltColType === MULTIPLE) {", "            let values = isArray(query) ? query :", "                query.split(' ' + this.orOperator + ' ');", "", "            if (this.loadFltOnDemand && !this.initialized) {", "                this.emitter.emit('build-select-filter', this, index,", "                    this.linkedFilters, this.isExternalFlt);", "            }", "", "            this.emitter.emit('select-options', this, index, values);", "        }", "        //checklist", "        else if (fltColType === CHECKLIST) {", "            let values = [];", "            if (this.loadFltOnDemand && !this.initialized) {", "                this.emitter.emit('build-checklist-filter', this, index,", "                    this.linkedFilters);", "            }", "            if (isArray(query)) {", "                values = query;", "            } else {", "                query = matchCase(query, this.caseSensitive);", "                values = query.split(' ' + this.orOperator + ' ');", "            }", "", "            this.emitter.emit('select-checklist-options', this, index, values);", "        }", "    }", "", "    /**", "     * Set them columns' widths as per configuration", "     * @param {Element} tbl DOM element", "     */", "    setColWidths(tbl) {", "        if (!this.hasColWidths) {", "            return;", "        }", "        tbl = tbl || this.tbl;", "", "        let nbCols = this.nbCells;", "        let colWidths = this.colWidths;", "        let colTags = tag(tbl, 'col');", "        let tblHasColTag = colTags.length > 0;", "        let frag = !tblHasColTag ? doc.createDocumentFragment() : null;", "        for (let k = 0; k < nbCols; k++) {", "            let col;", "            if (tblHasColTag) {", "                col = colTags[k];", "            } else {", "                col = createElm('col');", "                frag.appendChild(col);", "            }", "            col.style.width = colWidths[k];", "        }", "        if (!tblHasColTag) {", "            tbl.insertBefore(frag, tbl.firstChild);", "        }", "    }", "", "    /**", "     * Makes defined rows always visible", "     */", "    enforceVisibility() {", "        if (!this.hasVisibleRows) {", "            return;", "        }", "        let nbRows = this.getRowsNb(true);", "        for (let i = 0, len = this.visibleRows.length; i < len; i++) {", "            let row = this.visibleRows[i];", "            //row index cannot be > nrows", "            if (row <= nbRows) {", "                this.validateRow(row, true);", "            }", "        }", "    }", "", "    /**", "     * Clear all the filters' values", "     */", "    clearFilters() {", "        if (!this.fltGrid) {", "            return;", "        }", "", "        this.emitter.emit('before-clearing-filters', this);", "        this.onBeforeReset(this, this.getFiltersValue());", "", "        for (let i = 0, len = this.fltIds.length; i < len; i++) {", "            this.setFilterValue(i, '');", "        }", "", "        this.filter();", "", "        this.onAfterReset(this);", "        this.emitter.emit('after-clearing-filters', this);", "    }", "", "    /**", "     * Clears filtered columns visual indicator (background color)", "     */", "    clearActiveColumns() {", "        for (let i = 0, len = this.getCellsNb(this.headersRow); i < len; i++) {", "            removeClass(this.getHeaderElement(i), this.activeColumnsCssClass);", "        }", "    }", "", "    /**", "     * Mark currently filtered column", "     * @param  {Number} colIndex Column index", "     */", "    markActiveColumn(colIndex) {", "        let header = this.getHeaderElement(colIndex);", "        if (hasClass(header, this.activeColumnsCssClass)) {", "            return;", "        }", "        this.onBeforeActiveColumn(this, colIndex);", "", "        addClass(header, this.activeColumnsCssClass);", "", "        this.onAfterActiveColumn(this, colIndex);", "    }", "", "    /**", "     * Return the ID of the current active filter", "     * @returns {String}", "     */", "    getActiveFilterId() {", "        return this.activeFilterId;", "    }", "", "    /**", "     * Set the ID of the current active filter", "     * @param {String} filterId Element ID", "     */", "    setActiveFilterId(filterId) {", "        this.activeFilterId = filterId;", "    }", "", "    /**", "     * Return the column index for a given filter ID", "     * @param {string} [filterId=''] Filter ID", "     * @returns {Number} Column index", "     */", "    getColumnIndexFromFilterId(filterId = '') {", "        let idx = filterId.split('_')[0];", "        idx = idx.split(this.prfxFlt)[1];", "        return parseInt(idx, 10);", "    }", "", "    /**", "     * Builds filter element ID for a given column index", "     * @param {any} colIndex", "     * @returns {String} Filter element ID string", "     * @private", "     */", "    buildFilterId(colIndex) {", "        return `${this.prfxFlt}${colIndex}_${this.id}`;", "    }", "", "    /**", "     * Make specified column's filter active", "     * @param colIndex Index of a column", "     */", "    activateFilter(colIndex) {", "        if (isUndef(colIndex)) {", "            return;", "        }", "        this.setActiveFilterId(this.getFilterId(colIndex));", "    }", "", "    /**", "     * Refresh the filters subject to linking ('select', 'multiple',", "     * 'checklist' type)", "     */", "    linkFilters() {", "        if (!this.linkedFilters || !this.activeFilterId) {", "            return;", "        }", "        let slcA1 = this.getFiltersByType(SELECT, true),", "            slcA2 = this.getFiltersByType(MULTIPLE, true),", "            slcA3 = this.getFiltersByType(CHECKLIST, true),", "            slcIndex = slcA1.concat(slcA2);", "        slcIndex = slcIndex.concat(slcA3);", "", "        let activeIdx = this.getColumnIndexFromFilterId(this.activeFilterId);", "", "        for (let i = 0, len = slcIndex.length; i < len; i++) {", "            let colIdx = slcIndex[i];", "            let curSlc = elm(this.fltIds[colIdx]);", "            let slcSelectedValue = this.getFilterValue(colIdx);", "", "            // Welcome to cyclomatic complexity hell :)", "            // TODO: simplify/refactor if statement", "            if (activeIdx !== colIdx ||", "                (this.paging && slcA1.indexOf(colIdx) !== -1 &&", "                    activeIdx === colIdx) ||", "                (!this.paging && (slcA3.indexOf(colIdx) !== -1 ||", "                    slcA2.indexOf(colIdx) !== -1)) ||", "                slcSelectedValue === this.getClearFilterText(colIdx)) {", "", "                //1st option needs to be inserted", "                if (this.loadFltOnDemand) {", "                    let opt0 = createOpt(this.getClearFilterText(colIdx), '');", "                    curSlc.innerHTML = '';", "                    curSlc.appendChild(opt0);", "                }", "", "                if (slcA3.indexOf(colIdx) !== -1) {", "                    this.emitter.emit('build-checklist-filter', this, colIdx,", "                        true);", "                } else {", "                    this.emitter.emit('build-select-filter', this, colIdx,", "                        true);", "                }", "", "                this.setFilterValue(colIdx, slcSelectedValue);", "            }", "        }", "    }", "", "    /**", "     * Determines if passed filter column implements exact query match", "     * @param  {Number}  colIndex   Column index", "     * @return {Boolean}", "     */", "    isExactMatch(colIndex) {", "        let fltType = this.getFilterType(colIndex);", "        return this.exactMatchByCol[colIndex] || this.exactMatch ||", "            fltType !== INPUT;", "    }", "", "    /**", "     * Checks if passed row is valid", "     * @param {Number} rowIndex Row index", "     * @returns {Boolean}", "     */", "    isRowValid(rowIndex) {", "        return this.getValidRows().indexOf(rowIndex) !== -1;", "    }", "", "    /**", "     * Checks if passed row is visible", "     * @param {Number} rowIndex Row index", "     * @returns {Boolean}", "     */", "    isRowDisplayed(rowIndex) {", "        let row = this.tbl.rows[rowIndex];", "        return this.getRowDisplay(row) === '';", "    }", "", "    /**", "     * Checks if specified column filter ignores diacritics.", "     * Note this is only valid for input filter types.", "     * @param {Number} colIndex    Column index", "     * @returns {Boolean}", "     */", "    ignoresDiacritics(colIndex) {", "        let ignoreDiac = this.ignoreDiacritics;", "        if (isArray(ignoreDiac)) {", "            return ignoreDiac[colIndex];", "        }", "        return Boolean(ignoreDiac);", "    }", "", "    /**", "     * Returns clear all text for specified filter column", "     * @param {Number} colIndex    Column index", "     * @returns {String}", "     */", "    getClearFilterText(colIndex) {", "        let clearText = this.clearFilterText;", "        if (isArray(clearText)) {", "            return clearText[colIndex];", "        }", "        return clearText;", "    }", "", "    /**", "     * Check if passed script or stylesheet is already imported", "     * @param  {String}  filePath Ressource path", "     * @param  {String}  type     Possible values: 'script' or 'link'", "     * @return {Boolean}", "     */", "    isImported(filePath, type = 'script') {", "        let imported = false,", "            attr = type === 'script' ? 'src' : 'href',", "            files = tag(doc, type);", "        for (let i = 0, len = files.length; i < len; i++) {", "            if (isUndef(files[i][attr])) {", "                continue;", "            }", "            if (files[i][attr].match(filePath)) {", "                imported = true;", "                break;", "            }", "        }", "        return imported;", "    }", "", "    /**", "     * Import script or stylesheet", "     * @param  {String}   fileId   Ressource ID", "     * @param  {String}   filePath Ressource path", "     * @param  {Function} callback Callback", "     * @param  {String}   type     Possible values: 'script' or 'link'", "     */", "    import(fileId, filePath, callback, type = 'script') {", "        if (this.isImported(filePath, type)) {", "            return;", "        }", "        let o = this,", "            isLoaded = false,", "            file,", "            head = tag(doc, 'head')[0];", "", "        if (type.toLowerCase() === 'link') {", "            file = createElm('link',", "                ['id', fileId], ['type', 'text/css'],", "                ['rel', 'stylesheet'], ['href', filePath]", "            );", "        } else {", "            file = createElm('script',", "                ['id', fileId],", "                ['type', 'text/javascript'], ['src', filePath]", "            );", "        }", "", "        //Browser <> IE onload event works only for scripts, not for stylesheets", "        file.onload = file.onreadystatechange = () => {", "            if (!isLoaded &&", "                (!this.readyState || this.readyState === 'loaded' ||", "                    this.readyState === 'complete')) {", "                isLoaded = true;", "                if (typeof callback === 'function') {", "                    callback.call(null, o);", "                }", "            }", "        };", "        file.onerror = function () {", "            throw new Error(`TableFilter could not load: ${filePath}`);", "        };", "        head.appendChild(file);", "    }", "", "    /**", "     * Check if table has filters grid", "     * @return {Boolean}", "     */", "    isInitialized() {", "        return this.initialized;", "    }", "", "    /**", "     * Get list of filter IDs", "     * @return {[type]} [description]", "     */", "    getFiltersId() {", "        return this.fltIds || [];", "    }", "", "    /**", "     * Get filtered (valid) rows indexes", "     * @param  {Boolean} reCalc Force calculation of filtered rows list", "     * @return {Array}          List of row indexes", "     */", "    getValidRows(reCalc) {", "        if (!reCalc) {", "            return this.validRowsIndex;", "        }", "", "        let nbRows = this.getRowsNb(true);", "        this.validRowsIndex = [];", "        for (let k = this.refRow; k < nbRows; k++) {", "            let r = this.tbl.rows[k];", "            if (!this.paging) {", "                if (this.getRowDisplay(r) !== NONE) {", "                    this.validRowsIndex.push(r.rowIndex);", "                }", "            } else {", "                if (r.getAttribute('validRow') === 'true' ||", "                    r.getAttribute('validRow') === null) {", "                    this.validRowsIndex.push(r.rowIndex);", "                }", "            }", "        }", "        return this.validRowsIndex;", "    }", "", "    /**", "     * Get the index of the row containing the filters", "     * @return {Number}", "     */", "    getFiltersRowIndex() {", "        return this.filtersRowIndex;", "    }", "", "    /**", "     * Get the index of the headers row", "     * @return {Number}", "     */", "    getHeadersRowIndex() {", "        return this.headersRow;", "    }", "", "    /**", "     * Get the row index from where the filtering process start (1st filterable", "     * row)", "     * @return {Number}", "     */", "    getStartRowIndex() {", "        return this.refRow;", "    }", "", "    /**", "     * Get the index of the last row", "     * @return {Number}", "     */", "    getLastRowIndex() {", "        let nbRows = this.getRowsNb(true);", "        return (nbRows - 1);", "    }", "", "    /**", "     * Determine whether the specified column has one of the passed types", "     * @param {Number} colIndex Column index", "     * @param {Array} [types=[]] List of column types", "     * @returns {Boolean}", "     */", "    hasType(colIndex, types = []) {", "        if (!this.hasColTypes) {", "            return false;", "        }", "        let colType = this.colTypes[colIndex];", "        if (isObj(colType)) {", "            colType = colType.type;", "        }", "        return types.indexOf(colType) !== -1;", "    }", "", "    /**", "     * Get the header DOM element for a given column index", "     * @param  {Number} colIndex Column index", "     * @return {Element}", "     */", "    getHeaderElement(colIndex) {", "        let table = this.gridLayout ? this.Mod.gridLayout.headTbl : this.tbl;", "        let tHead = tag(table, 'thead');", "        let headersRow = this.headersRow;", "        let header;", "        for (let i = 0; i < this.nbCells; i++) {", "            if (i !== colIndex) {", "                continue;", "            }", "            if (tHead.length === 0) {", "                header = table.rows[headersRow].cells[i];", "            }", "            if (tHead.length === 1) {", "                header = tHead[0].rows[headersRow].cells[i];", "            }", "            break;", "        }", "        return header;", "    }", "", "    /**", "     * Return the list of headers' text", "     * @param  {Boolean} excludeHiddenCols  Optional: exclude hidden columns", "     * @return {Array} list of headers' text", "     */", "    getHeadersText(excludeHiddenCols = false) {", "        let headers = [];", "        for (let j = 0; j < this.nbCells; j++) {", "            if (excludeHiddenCols && this.hasExtension('colsVisibility')) {", "                if (this.extension('colsVisibility').isColHidden(j)) {", "                    continue;", "                }", "            }", "            let header = this.getHeaderElement(j);", "            let headerText = getFirstTextNode(header);", "            headers.push(headerText);", "        }", "        return headers;", "    }", "", "    /**", "     * Return the filter type for a specified column", "     * @param  {Number} colIndex Column's index", "     * @return {String}", "     */", "    getFilterType(colIndex) {", "        let colType = this.cfg['col_' + colIndex];", "        return !colType ? INPUT : colType.toLowerCase();", "    }", "", "    /**", "     * Get the total number of filterable rows", "     * @return {Number}", "     */", "    getFilterableRowsNb() {", "        return this.getRowsNb(false);", "    }", "", "    /**", "     * Return the total number of valid rows", "     * @param {Boolean} [reCalc=false] Forces calculation of filtered rows", "     * @returns {Number}", "     */", "    getValidRowsNb(reCalc = false) {", "        return this.getValidRows(reCalc).length;", "    }", "", "    /**", "     * Get the configuration object (literal object)", "     * @return {Object}", "     */", "    config() {", "        return this.cfg;", "    }", "}", ""] };
	}
	__cov_OZNmcyNdW1BMU9Wdzqdf4g = __cov_OZNmcyNdW1BMU9Wdzqdf4g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\tablefilter.js'];
	__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['2']++;exports.TableFilter = undefined;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['3']++;var _typeof = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['2'][0]++, typeof Symbol === 'function') && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['2'][1]++, _typeof2(Symbol.iterator) === 'symbol') ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['1'][0]++, function (obj) {
	   __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['1']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['4']++;return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
	}) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['1'][1]++, function (obj) {
	   __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['2']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['5']++;return (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['4'][0]++, obj) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['4'][1]++, typeof Symbol === 'function') && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['4'][2]++, obj.constructor === Symbol) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['4'][3]++, obj !== Symbol.prototype) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['3'][0]++, 'symbol') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['3'][1]++, typeof obj === 'undefined' ? 'undefined' : _typeof2(obj));
	});__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['6']++;var _event = __webpack_require__(1);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['7']++;var _dom = __webpack_require__(3);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['8']++;var _string = __webpack_require__(5);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['9']++;var _types = __webpack_require__(4);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['10']++;var _number = __webpack_require__(7);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['11']++;var _root = __webpack_require__(2);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['12']++;var _emitter = __webpack_require__(8);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['13']++;var _gridLayout = __webpack_require__(9);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['14']++;var _loader = __webpack_require__(12);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['15']++;var _highlightKeywords = __webpack_require__(13);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['16']++;var _popupFilter = __webpack_require__(14);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['17']++;var _dropdown = __webpack_require__(15);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['18']++;var _checkList = __webpack_require__(18);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['19']++;var _rowsCounter = __webpack_require__(19);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['20']++;var _statusBar = __webpack_require__(20);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['21']++;var _paging = __webpack_require__(21);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['22']++;var _clearButton = __webpack_require__(22);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['23']++;var _help = __webpack_require__(23);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['24']++;var _alternateRows = __webpack_require__(24);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['25']++;var _noResults = __webpack_require__(25);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['26']++;var _state = __webpack_require__(26);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['27']++;var _dateType = __webpack_require__(30);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['28']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['3']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['30']++;if (!(instance instanceof Constructor)) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['5'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['31']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['5'][1]++;
	   }
	}__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['32']++;var doc = _root.root.document;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['33']++;var TableFilter = exports.TableFilter = function () {
	   __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['4']++;function TableFilter() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['5']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['35']++;var _this = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['36']++;_classCallCheck(this, TableFilter);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['37']++;this.id = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['38']++;this.version = '0.4.35';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['39']++;this.year = new Date().getFullYear();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['40']++;this.tbl = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['41']++;this.refRow = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['42']++;this.headersRow = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['43']++;this.cfg = {};__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['44']++;this.nbFilterableRows = 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['45']++;this.nbCells = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['46']++;var startRow = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['47']++;for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['48']++;args[_key] = arguments[_key];
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['49']++;args.forEach(function (arg) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['6']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['50']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['7'][0]++, (typeof arg === 'undefined' ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['8'][0]++, 'undefined') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['8'][1]++, _typeof(arg))) === 'object') && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['7'][1]++, arg.nodeName === 'TABLE')) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['6'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['51']++;_this.tbl = arg;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['52']++;_this.id = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['9'][0]++, arg.id) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['9'][1]++, 'tf_' + new Date().getTime() + '_');
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['6'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['53']++;if ((0, _types.isString)(arg)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['10'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['54']++;_this.id = arg;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['55']++;_this.tbl = (0, _dom.elm)(arg);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['10'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['56']++;if ((0, _types.isNumber)(arg)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['11'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['57']++;startRow = arg;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['11'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['58']++;if ((0, _types.isObj)(arg)) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['12'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['59']++;_this.cfg = arg;
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['12'][1]++;
	                  }
	               }
	            }
	         }
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['60']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['14'][0]++, !this.tbl) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['14'][1]++, this.tbl.nodeName !== 'TABLE')) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['13'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['61']++;throw new Error('Could not instantiate TableFilter: HTML table\n                DOM element not found.');
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['13'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['62']++;if (this.getRowsNb() === 0) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['15'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['63']++;throw new Error('Could not instantiate TableFilter: HTML table\n                requires at least 1 row.');
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['15'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['64']++;var f = this.cfg;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['65']++;this.emitter = new _emitter.Emitter();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['66']++;this.refRow = (0, _types.isUndef)(startRow) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['16'][0]++, 2) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['16'][1]++, startRow + 1);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['67']++;this.basePath = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['17'][0]++, f.base_path) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['17'][1]++, 'tablefilter/');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['68']++;this.fltGrid = f.grid === false ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['18'][0]++, false) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['18'][1]++, true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['69']++;this.gridLayout = Boolean(f.grid_layout);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['70']++;this.filtersRowIndex = isNaN(f.filters_row_index) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['19'][0]++, 0) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['19'][1]++, f.filters_row_index);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['71']++;this.headersRow = isNaN(f.headers_row_index) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['20'][0]++, this.filtersRowIndex === 0 ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['21'][0]++, 1) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['21'][1]++, 0)) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['20'][1]++, f.headers_row_index);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['72']++;this.fltCellTag = (0, _types.isString)(f.filters_cell_tag) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['22'][0]++, f.filters_cell_tag) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['22'][1]++, _const.CELL_TAG);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['73']++;this.fltIds = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['74']++;this.validRowsIndex = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['75']++;this.infDiv = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['76']++;this.lDiv = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['77']++;this.rDiv = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['78']++;this.mDiv = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['79']++;this.infDivCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['23'][0]++, f.inf_div_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['23'][1]++, 'inf');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['80']++;this.lDivCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['24'][0]++, f.left_div_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['24'][1]++, 'ldiv');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['81']++;this.rDivCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['25'][0]++, f.right_div_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['25'][1]++, 'rdiv');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['82']++;this.mDivCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['26'][0]++, f.middle_div_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['26'][1]++, 'mdiv');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['83']++;this.stylePath = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['27'][0]++, f.style_path) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['27'][1]++, this.basePath + 'style/');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['84']++;this.stylesheet = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['28'][0]++, f.stylesheet) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['28'][1]++, this.stylePath + 'tablefilter.css');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['85']++;this.stylesheetId = this.id + '_style';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['86']++;this.fltsRowCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['29'][0]++, f.flts_row_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['29'][1]++, 'fltrow');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['87']++;this.enableIcons = f.enable_icons === false ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['30'][0]++, false) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['30'][1]++, true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['88']++;this.alternateRows = Boolean(f.alternate_rows);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['89']++;this.hasColWidths = (0, _types.isArray)(f.col_widths);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['90']++;this.colWidths = this.hasColWidths ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['31'][0]++, f.col_widths) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['31'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['91']++;this.fltCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['32'][0]++, f.flt_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['32'][1]++, 'flt');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['92']++;this.fltMultiCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['33'][0]++, f.flt_multi_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['33'][1]++, 'flt_multi');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['93']++;this.fltSmallCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['34'][0]++, f.flt_small_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['34'][1]++, 'flt_s');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['94']++;this.singleFltCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['35'][0]++, f.single_flt_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['35'][1]++, 'single_flt');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['95']++;this.enterKey = f.enter_key === false ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['36'][0]++, false) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['36'][1]++, true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['96']++;this.onBeforeFilter = (0, _types.isFn)(f.on_before_filter) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['37'][0]++, f.on_before_filter) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['37'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['97']++;this.onAfterFilter = (0, _types.isFn)(f.on_after_filter) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['38'][0]++, f.on_after_filter) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['38'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['98']++;this.caseSensitive = Boolean(f.case_sensitive);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['99']++;this.hasExactMatchByCol = (0, _types.isArray)(f.columns_exact_match);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['100']++;this.exactMatchByCol = this.hasExactMatchByCol ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['39'][0]++, f.columns_exact_match) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['39'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['101']++;this.exactMatch = Boolean(f.exact_match);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['102']++;this.ignoreDiacritics = f.ignore_diacritics;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['103']++;this.linkedFilters = Boolean(f.linked_filters);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['104']++;this.disableExcludedOptions = Boolean(f.disable_excluded_options);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['105']++;this.activeFilterId = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['106']++;this.hasVisibleRows = Boolean(f.rows_always_visible);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['107']++;this.visibleRows = this.hasVisibleRows ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['40'][0]++, f.rows_always_visible) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['40'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['108']++;this.isExternalFlt = Boolean(f.external_flt_grid);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['109']++;this.externalFltTgtIds = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['41'][0]++, f.external_flt_grid_ids) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['41'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['110']++;this.onFiltersLoaded = (0, _types.isFn)(f.on_filters_loaded) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['42'][0]++, f.on_filters_loaded) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['42'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['111']++;this.singleSearchFlt = Boolean(f.single_filter);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['112']++;this.onRowValidated = (0, _types.isFn)(f.on_row_validated) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['43'][0]++, f.on_row_validated) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['43'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['113']++;this.customCellDataCols = f.custom_cell_data_cols ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['44'][0]++, f.custom_cell_data_cols) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['44'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['114']++;this.customCellData = (0, _types.isFn)(f.custom_cell_data) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['45'][0]++, f.custom_cell_data) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['45'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['115']++;this.watermark = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['46'][0]++, f.watermark) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['46'][1]++, '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['116']++;this.isWatermarkArray = (0, _types.isArray)(this.watermark);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['117']++;this.toolBarTgtId = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['47'][0]++, f.toolbar_target_id) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['47'][1]++, null);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['118']++;this.help = (0, _types.isUndef)(f.help_instructions) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['48'][0]++, undefined) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['48'][1]++, Boolean(f.help_instructions));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['119']++;this.popupFilters = Boolean(f.popup_filters);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['120']++;this.markActiveColumns = Boolean(f.mark_active_columns);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['121']++;this.activeColumnsCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['49'][0]++, f.active_columns_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['49'][1]++, 'activeHeader');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['122']++;this.onBeforeActiveColumn = (0, _types.isFn)(f.on_before_active_column) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['50'][0]++, f.on_before_active_column) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['50'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['123']++;this.onAfterActiveColumn = (0, _types.isFn)(f.on_after_active_column) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['51'][0]++, f.on_after_active_column) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['51'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['124']++;this.clearFilterText = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['52'][0]++, f.clear_filter_text) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['52'][1]++, 'Clear');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['125']++;this.enableEmptyOption = Boolean(f.enable_empty_option);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['126']++;this.emptyText = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['53'][0]++, f.empty_text) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['53'][1]++, '(Empty)');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['127']++;this.enableNonEmptyOption = Boolean(f.enable_non_empty_option);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['128']++;this.nonEmptyText = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['54'][0]++, f.non_empty_text) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['54'][1]++, '(Non empty)');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['129']++;this.onSlcChange = f.on_change === false ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['55'][0]++, false) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['55'][1]++, true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['130']++;this.sortSlc = f.sort_select === false ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['56'][0]++, false) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['56'][1]++, true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['131']++;this.isSortNumAsc = Boolean(f.sort_num_asc);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['132']++;this.sortNumAsc = this.isSortNumAsc ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['57'][0]++, f.sort_num_asc) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['57'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['133']++;this.isSortNumDesc = Boolean(f.sort_num_desc);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['134']++;this.sortNumDesc = this.isSortNumDesc ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['58'][0]++, f.sort_num_desc) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['58'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['135']++;this.loadFltOnDemand = Boolean(f.load_filters_on_demand);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['136']++;this.hasCustomOptions = (0, _types.isObj)(f.custom_options);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['137']++;this.customOptions = f.custom_options;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['138']++;this.rgxOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['59'][0]++, f.regexp_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['59'][1]++, 'rgx:');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['139']++;this.emOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['60'][0]++, f.empty_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['60'][1]++, '[empty]');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['140']++;this.nmOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['61'][0]++, f.nonempty_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['61'][1]++, '[nonempty]');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['141']++;this.orOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['62'][0]++, f.or_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['62'][1]++, '||');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['142']++;this.anOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['63'][0]++, f.and_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['63'][1]++, '&&');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['143']++;this.grOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['64'][0]++, f.greater_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['64'][1]++, '>');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['144']++;this.lwOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['65'][0]++, f.lower_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['65'][1]++, '<');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['145']++;this.leOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['66'][0]++, f.lower_equal_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['66'][1]++, '<=');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['146']++;this.geOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['67'][0]++, f.greater_equal_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['67'][1]++, '>=');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['147']++;this.dfOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['68'][0]++, f.different_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['68'][1]++, '!');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['148']++;this.lkOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['69'][0]++, f.like_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['69'][1]++, '*');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['149']++;this.eqOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['70'][0]++, f.equal_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['70'][1]++, '=');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['150']++;this.stOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['71'][0]++, f.start_with_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['71'][1]++, '{');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['151']++;this.enOperator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['72'][0]++, f.end_with_operator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['72'][1]++, '}');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['152']++;this.separator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['73'][0]++, f.separator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['73'][1]++, ',');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['153']++;this.rowsCounter = Boolean(f.rows_counter);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['154']++;this.statusBar = Boolean(f.status_bar);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['155']++;this.loader = Boolean(f.loader);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['156']++;this.displayBtn = Boolean(f.btn);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['157']++;this.btnText = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['74'][0]++, f.btn_text) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['74'][1]++, !this.enableIcons ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['75'][0]++, 'Go') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['75'][1]++, ''));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['158']++;this.btnCssClass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['76'][0]++, f.btn_css_class) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['76'][1]++, !this.enableIcons ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['77'][0]++, 'btnflt') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['77'][1]++, 'btnflt_icon'));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['159']++;this.btnReset = Boolean(f.btn_reset);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['160']++;this.onBeforeReset = (0, _types.isFn)(f.on_before_reset) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['78'][0]++, f.on_before_reset) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['78'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['161']++;this.onAfterReset = (0, _types.isFn)(f.on_after_reset) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['79'][0]++, f.on_after_reset) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['79'][1]++, _types.EMPTY_FN);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['162']++;this.paging = Boolean(f.paging);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['163']++;this.nbHiddenRows = 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['164']++;this.autoFilter = Boolean(f.auto_filter);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['165']++;this.autoFilterDelay = !isNaN(f.auto_filter_delay) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['80'][0]++, f.auto_filter_delay) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['80'][1]++, _const.AUTO_FILTER_DELAY);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['166']++;this.isUserTyping = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['167']++;this.autoFilterTimer = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['168']++;this.highlightKeywords = Boolean(f.highlight_keywords);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['169']++;this.noResults = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['81'][0]++, (0, _types.isObj)(f.no_results_message)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['81'][1]++, Boolean(f.no_results_message));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['170']++;this.state = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['82'][0]++, (0, _types.isObj)(f.state)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['82'][1]++, Boolean(f.state));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['171']++;this.locale = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['83'][0]++, f.locale) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['83'][1]++, 'en');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['172']++;this.thousandsSeparator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['84'][0]++, f.thousands_separator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['84'][1]++, ',');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['173']++;this.decimalSeparator = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['85'][0]++, f.decimal_separator) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['85'][1]++, '.');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['174']++;this.hasColTypes = (0, _types.isArray)(f.col_types);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['175']++;this.colTypes = this.hasColTypes ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['86'][0]++, f.col_types) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['86'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['176']++;this.prfxTf = 'TF';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['177']++;this.prfxFlt = 'flt';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['178']++;this.prfxValButton = 'btn';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['179']++;this.prfxInfDiv = 'inf_';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['180']++;this.prfxLDiv = 'ldiv_';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['181']++;this.prfxRDiv = 'rdiv_';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['182']++;this.prfxMDiv = 'mdiv_';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['183']++;this.prfxResponsive = 'resp';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['184']++;this.extensions = f.extensions;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['185']++;this.hasExtensions = (0, _types.isArray)(this.extensions);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['186']++;this.enableDefaultTheme = Boolean(f.enable_default_theme);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['187']++;this.hasThemes = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['87'][0]++, this.enableDefaultTheme) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['87'][1]++, (0, _types.isArray)(f.themes));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['188']++;this.themes = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['88'][0]++, f.themes) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['88'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['189']++;this.themesPath = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['89'][0]++, f.themes_path) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['89'][1]++, this.stylePath + 'themes/');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['190']++;this.responsive = Boolean(f.responsive);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['191']++;this.Mod = {};__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['192']++;this.ExtRegistry = {};
	   }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['193']++;TableFilter.prototype.init = function init() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['7']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['194']++;var _this2 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['195']++;if (this.initialized) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['90'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['196']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['90'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['197']++;this.nbCells = this.getCellsNb(this.refRow);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['198']++;var Mod = this.Mod;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['199']++;var n = this.singleSearchFlt ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['91'][0]++, 1) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['91'][1]++, this.nbCells);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['200']++;var inpclass = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['201']++;this.import(this.stylesheetId, this.stylesheet, null, 'link');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['202']++;if (this.hasThemes) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['92'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['203']++;this.loadThemes();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['92'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['204']++;Mod.dateType = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['93'][0]++, Mod.dateType) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['93'][1]++, new _dateType.DateType(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['205']++;Mod.dateType.init();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['206']++;Mod.help = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['94'][0]++, Mod.help) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['94'][1]++, new _help.Help(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['207']++;if (this.help) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['95'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['208']++;Mod.help.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['95'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['209']++;if (this.state) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['96'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['210']++;Mod.state = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['97'][0]++, Mod.state) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['97'][1]++, new _state.State(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['211']++;Mod.state.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['96'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['212']++;if (this.gridLayout) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['98'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['213']++;Mod.gridLayout = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['99'][0]++, Mod.gridLayout) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['99'][1]++, new _gridLayout.GridLayout(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['214']++;Mod.gridLayout.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['98'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['215']++;if (this.loader) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['100'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['216']++;Mod.loader = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['101'][0]++, Mod.loader) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['101'][1]++, new _loader.Loader(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['217']++;Mod.loader.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['100'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['218']++;if (this.highlightKeywords) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['102'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['219']++;Mod.highlightKeyword = new _highlightKeywords.HighlightKeyword(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['220']++;Mod.highlightKeyword.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['102'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['221']++;if (this.popupFilters) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['103'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['222']++;Mod.popupFilter = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['104'][0]++, Mod.popupFilter) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['104'][1]++, new _popupFilter.PopupFilter(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['223']++;Mod.popupFilter.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['103'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['224']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['105'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['225']++;this._initNoFilters();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['105'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['226']++;var fltrow = this._insertFiltersRow();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['227']++;this.nbFilterableRows = this.getRowsNb();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['228']++;for (var i = 0; i < n; i++) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['229']++;this.emitter.emit('before-filter-init', this, i);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['230']++;var fltcell = (0, _dom.createElm)(this.fltCellTag),
	                col = this.getFilterType(i);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['231']++;if (this.singleSearchFlt) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['106'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['232']++;fltcell.colSpan = this.nbCells;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['106'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['233']++;if (!this.gridLayout) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['107'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['234']++;fltrow.appendChild(fltcell);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['107'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['235']++;inpclass = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['109'][0]++, i === n - 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['109'][1]++, this.displayBtn) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['108'][0]++, this.fltSmallCssClass) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['108'][1]++, this.fltCssClass);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['236']++;if (this.singleSearchFlt) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['110'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['237']++;col = _const.INPUT;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['238']++;inpclass = this.singleFltCssClass;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['110'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['239']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['112'][0]++, col === _const.SELECT) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['112'][1]++, col === _const.MULTIPLE)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['111'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['240']++;if (!Mod.dropdown) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['113'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['241']++;Mod.dropdown = new _dropdown.Dropdown(this);
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['113'][1]++;
	               }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['242']++;Mod.dropdown.init(i, this.isExternalFlt, fltcell);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['111'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['243']++;if (col === _const.CHECKLIST) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['114'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['244']++;if (!Mod.checkList) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['115'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['245']++;Mod.checkList = new _checkList.CheckList(this);
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['115'][1]++;
	                  }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['246']++;Mod.checkList.init(i, this.isExternalFlt, fltcell);
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['114'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['247']++;this._buildInputFilter(i, inpclass, fltcell);
	               }
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['248']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['117'][0]++, i === n - 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['117'][1]++, this.displayBtn)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['116'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['249']++;this._buildSubmitButton(i, fltcell);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['116'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['250']++;this.emitter.emit('after-filter-init', this, i);
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['251']++;this.emitter.on(['filter-focus'], function (tf, filter) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['8']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['252']++;return _this2.setActiveFilterId(filter.id);
	         });
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['253']++;if (this.hasVisibleRows) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['118'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['254']++;this.emitter.on(['after-filtering'], function () {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['9']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['255']++;return _this2.enforceVisibility();
	         });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['256']++;this.enforceVisibility();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['118'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['257']++;if (this.rowsCounter) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['119'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['258']++;Mod.rowsCounter = new _rowsCounter.RowsCounter(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['259']++;Mod.rowsCounter.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['119'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['260']++;if (this.statusBar) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['120'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['261']++;Mod.statusBar = new _statusBar.StatusBar(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['262']++;Mod.statusBar.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['120'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['263']++;if (this.paging) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['121'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['264']++;if (!Mod.paging) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['122'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['265']++;Mod.paging = new _paging.Paging(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['266']++;Mod.paging.init();
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['122'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['267']++;Mod.paging.reset();
	         }
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['121'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['268']++;if (this.btnReset) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['123'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['269']++;Mod.clearButton = new _clearButton.ClearButton(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['270']++;Mod.clearButton.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['123'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['271']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['125'][0]++, this.hasColWidths) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['125'][1]++, !this.gridLayout)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['124'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['272']++;this.setColWidths();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['124'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['273']++;if (this.alternateRows) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['126'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['274']++;Mod.alternateRows = new _alternateRows.AlternateRows(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['275']++;Mod.alternateRows.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['126'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['276']++;if (this.noResults) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['127'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['277']++;Mod.noResults = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['128'][0]++, Mod.noResults) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['128'][1]++, new _noResults.NoResults(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['278']++;Mod.noResults.init();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['127'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['279']++;if (!this.gridLayout) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['129'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['280']++;(0, _dom.addClass)(this.tbl, this.prfxTf);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['281']++;if (this.responsive) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['130'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['282']++;(0, _dom.addClass)(this.tbl, this.prfxResponsive);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['130'][1]++;
	         }
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['129'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['283']++;if (this.hasExtensions) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['131'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['284']++;this.initExtensions();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['131'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['285']++;if (this.markActiveColumns) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['132'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['286']++;this.emitter.on(['before-filtering'], function () {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['10']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['287']++;return _this2.clearActiveColumns();
	         });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['288']++;this.emitter.on(['cell-processed'], function (tf, colIndex) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['11']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['289']++;return _this2.markActiveColumn(colIndex);
	         });
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['132'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['290']++;if (this.linkedFilters) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['133'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['291']++;this.emitter.on(['after-filtering'], function () {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['12']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['292']++;return _this2.linkFilters();
	         });
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['133'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['293']++;this.initialized = true;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['294']++;this.onFiltersLoaded(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['295']++;this.emitter.emit('initialized', this);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['296']++;TableFilter.prototype.detectKey = function detectKey(evt) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['13']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['297']++;if (!this.enterKey) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['134'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['298']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['134'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['299']++;if (evt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['135'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['300']++;var key = (0, _event.keyCode)(evt);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['301']++;if (key === _const.ENTER_KEY) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['136'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['302']++;this.filter();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['303']++;(0, _event.cancelEvt)(evt);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['304']++;(0, _event.stopEvt)(evt);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['136'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['305']++;this.isUserTyping = true;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['306']++;_root.root.clearInterval(this.autoFilterTimer);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['307']++;this.autoFilterTimer = null;
	         }
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['135'][1]++;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['308']++;TableFilter.prototype.onKeyUp = function onKeyUp(evt) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['14']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['309']++;if (!this.autoFilter) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['137'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['310']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['137'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['311']++;var key = (0, _event.keyCode)(evt);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['312']++;this.isUserTyping = false;function filter() {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['15']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['314']++;_root.root.clearInterval(this.autoFilterTimer);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['315']++;this.autoFilterTimer = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['316']++;if (!this.isUserTyping) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['138'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['317']++;this.filter();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['318']++;this.isUserTyping = null;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['138'][1]++;
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['319']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['140'][0]++, key !== _const.ENTER_KEY) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['140'][1]++, key !== _const.TAB_KEY) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['140'][2]++, key !== _const.ESC_KEY) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['140'][3]++, key !== _const.UP_ARROW_KEY) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['140'][4]++, key !== _const.DOWN_ARROW_KEY)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['139'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['320']++;if (this.autoFilterTimer === null) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['141'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['321']++;this.autoFilterTimer = _root.root.setInterval(filter.bind(this), this.autoFilterDelay);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['141'][1]++;
	         }
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['139'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['322']++;_root.root.clearInterval(this.autoFilterTimer);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['323']++;this.autoFilterTimer = null;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['324']++;TableFilter.prototype.onKeyDown = function onKeyDown() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['16']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['325']++;if (this.autoFilter) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['142'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['326']++;this.isUserTyping = true;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['142'][1]++;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['327']++;TableFilter.prototype.onInpFocus = function onInpFocus(evt) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['17']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['328']++;var elm = (0, _event.targetEvt)(evt);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['329']++;this.emitter.emit('filter-focus', this, elm);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['330']++;TableFilter.prototype.onInpBlur = function onInpBlur() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['18']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['331']++;if (this.autoFilter) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['143'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['332']++;this.isUserTyping = false;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['333']++;_root.root.clearInterval(this.autoFilterTimer);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['143'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['334']++;this.emitter.emit('filter-blur', this);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['335']++;TableFilter.prototype._insertFiltersRow = function _insertFiltersRow() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['19']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['336']++;if (this.gridLayout) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['144'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['337']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['144'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['338']++;var fltrow = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['339']++;var thead = (0, _dom.tag)(this.tbl, 'thead');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['340']++;if (thead.length > 0) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['145'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['341']++;fltrow = thead[0].insertRow(this.filtersRowIndex);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['145'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['342']++;fltrow = this.tbl.insertRow(this.filtersRowIndex);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['343']++;fltrow.className = this.fltsRowCssClass;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['344']++;if (this.isExternalFlt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['146'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['345']++;fltrow.style.display = _const.NONE;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['146'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['346']++;this.emitter.emit('filters-row-inserted', this, fltrow);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['347']++;return fltrow;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['348']++;TableFilter.prototype._initNoFilters = function _initNoFilters() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['20']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['349']++;if (this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['147'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['350']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['147'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['351']++;this.refRow = this.refRow > 0 ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['148'][0]++, this.refRow - 1) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['148'][1]++, 0);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['352']++;this.nbFilterableRows = this.getRowsNb();
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['353']++;TableFilter.prototype._buildInputFilter = function _buildInputFilter(colIndex, cssClass, container) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['21']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['354']++;var _this3 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['355']++;var col = this.getFilterType(colIndex);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['356']++;var externalFltTgtId = this.isExternalFlt ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['149'][0]++, this.externalFltTgtIds[colIndex]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['149'][1]++, null);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['357']++;var inpType = col === _const.INPUT ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['150'][0]++, 'text') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['150'][1]++, 'hidden');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['358']++;var inp = (0, _dom.createElm)(_const.INPUT, ['id', this.buildFilterId(colIndex)], ['type', inpType], ['ct', colIndex]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['359']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['152'][0]++, inpType !== 'hidden') && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['152'][1]++, this.watermark)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['151'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['360']++;inp.setAttribute('placeholder', this.isWatermarkArray ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['153'][0]++, (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['154'][0]++, this.watermark[colIndex]) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['154'][1]++, '')) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['153'][1]++, this.watermark));
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['151'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['361']++;inp.className = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['155'][0]++, cssClass) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['155'][1]++, this.fltCssClass);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['362']++;(0, _event.addEvt)(inp, 'focus', function (evt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['22']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['363']++;return _this3.onInpFocus(evt);
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['364']++;if (externalFltTgtId) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['156'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['365']++;(0, _dom.elm)(externalFltTgtId).appendChild(inp);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['156'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['366']++;container.appendChild(inp);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['367']++;this.fltIds.push(inp.id);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['368']++;(0, _event.addEvt)(inp, 'keypress', function (evt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['23']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['369']++;return _this3.detectKey(evt);
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['370']++;(0, _event.addEvt)(inp, 'keydown', function () {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['24']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['371']++;return _this3.onKeyDown();
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['372']++;(0, _event.addEvt)(inp, 'keyup', function (evt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['25']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['373']++;return _this3.onKeyUp(evt);
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['374']++;(0, _event.addEvt)(inp, 'blur', function () {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['26']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['375']++;return _this3.onInpBlur();
	      });
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['376']++;TableFilter.prototype._buildSubmitButton = function _buildSubmitButton(colIndex, container) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['27']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['377']++;var _this4 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['378']++;var externalFltTgtId = this.isExternalFlt ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['157'][0]++, this.externalFltTgtIds[colIndex]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['157'][1]++, null);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['379']++;var btn = (0, _dom.createElm)(_const.INPUT, ['type', 'button'], ['value', this.btnText]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['380']++;btn.className = this.btnCssClass;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['381']++;if (externalFltTgtId) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['158'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['382']++;(0, _dom.elm)(externalFltTgtId).appendChild(btn);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['158'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['383']++;container.appendChild(btn);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['384']++;(0, _event.addEvt)(btn, 'click', function () {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['28']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['385']++;return _this4.filter();
	      });
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['386']++;TableFilter.prototype.feature = function feature(name) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['29']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['387']++;return this.Mod[name];
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['388']++;TableFilter.prototype.initExtensions = function initExtensions() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['30']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['389']++;var exts = this.extensions;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['390']++;__webpack_require__.p = this.basePath;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['391']++;this.emitter.emit('before-loading-extensions', this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['392']++;for (var i = 0, len = exts.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['393']++;var ext = exts[i];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['394']++;if (!this.ExtRegistry[ext.name]) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['159'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['395']++;this.loadExtension(ext);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['159'][1]++;
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['396']++;this.emitter.emit('after-loading-extensions', this);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['397']++;TableFilter.prototype.loadExtension = function loadExtension(ext) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['31']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['398']++;var _this5 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['399']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['161'][0]++, !ext) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['161'][1]++, !ext.name)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['160'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['400']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['160'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['401']++;var name = ext.name;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['402']++;var path = ext.path;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['403']++;var modulePath = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['404']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['163'][0]++, name) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['163'][1]++, path)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['162'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['405']++;modulePath = ext.path + name;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['162'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['406']++;name = name.replace('.js', '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['407']++;modulePath = 'extensions/{}/{}'.replace(/{}/g, name);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['408']++;__webpack_require__.e/* require */(1, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(435)("./" + modulePath)]; (function (mod) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['32']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['409']++;var inst = new mod.default(_this5, ext);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['410']++;inst.init();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['411']++;_this5.ExtRegistry[name] = inst;
	      }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['412']++;TableFilter.prototype.extension = function extension(name) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['33']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['413']++;return this.ExtRegistry[name];
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['414']++;TableFilter.prototype.hasExtension = function hasExtension(name) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['34']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['415']++;return !(0, _types.isEmpty)(this.ExtRegistry[name]);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['416']++;TableFilter.prototype.destroyExtensions = function destroyExtensions() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['35']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['417']++;var exts = this.extensions;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['418']++;for (var i = 0, len = exts.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['419']++;var ext = exts[i];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['420']++;var extInstance = this.ExtRegistry[ext.name];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['421']++;if (extInstance) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['164'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['422']++;extInstance.destroy();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['423']++;this.ExtRegistry[ext.name] = undefined;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['164'][1]++;
	         }
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['424']++;TableFilter.prototype.loadThemes = function loadThemes() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['36']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['425']++;var themes = this.themes;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['426']++;this.emitter.emit('before-loading-themes', this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['427']++;if (this.enableDefaultTheme) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['165'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['428']++;var defaultTheme = { name: 'default' };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['429']++;this.themes.push(defaultTheme);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['165'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['430']++;if ((0, _types.isArray)(themes)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['166'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['431']++;for (var i = 0, len = themes.length; i < len; i++) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['432']++;var theme = themes[i];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['433']++;var name = theme.name;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['434']++;var path = theme.path;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['435']++;var styleId = this.prfxTf + name;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['436']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['168'][0]++, name) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['168'][1]++, !path)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['167'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['437']++;path = this.themesPath + name + '/' + name + '.css';
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['167'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['438']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['170'][0]++, !name) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['170'][1]++, theme.path)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['169'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['439']++;name = 'theme{0}'.replace('{0}', i);
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['169'][1]++;
	               }
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['440']++;if (!this.isImported(path, 'link')) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['171'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['441']++;this.import(styleId, path, null, 'link');
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['171'][1]++;
	            }
	         }
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['166'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['442']++;this.loader = true;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['443']++;this.emitter.emit('after-loading-themes', this);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['444']++;TableFilter.prototype.getStylesheet = function getStylesheet() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['37']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['445']++;var name = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['173'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['173'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['172'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['172'][1]++, 'default');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['446']++;return (0, _dom.elm)(this.prfxTf + name);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['447']++;TableFilter.prototype.destroy = function destroy() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['38']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['448']++;var _this6 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['449']++;if (!this.initialized) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['174'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['450']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['174'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['451']++;var emitter = this.emitter;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['452']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['176'][0]++, this.isExternalFlt) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['176'][1]++, !this.popupFilters)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['175'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['453']++;this.removeExternalFlts();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['175'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['454']++;if (this.infDiv) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['177'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['455']++;this.removeToolbar();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['177'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['456']++;if (this.markActiveColumns) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['178'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['457']++;this.clearActiveColumns();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['458']++;emitter.off(['before-filtering'], function () {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['39']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['459']++;return _this6.clearActiveColumns();
	         });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['460']++;emitter.off(['cell-processed'], function (tf, colIndex) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['40']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['461']++;return _this6.markActiveColumn(colIndex);
	         });
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['178'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['462']++;if (this.hasExtensions) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['179'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['463']++;this.destroyExtensions();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['179'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['464']++;this.validateAllRows();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['465']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['181'][0]++, this.fltGrid) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['181'][1]++, !this.gridLayout)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['180'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['466']++;this.tbl.deleteRow(this.filtersRowIndex);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['180'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['467']++;emitter.emit('destroy', this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['468']++;if (this.hasVisibleRows) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['182'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['469']++;emitter.off(['after-filtering'], function () {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['41']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['470']++;return _this6.enforceVisibility();
	         });
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['182'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['471']++;if (this.linkedFilters) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['183'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['472']++;emitter.off(['after-filtering'], function () {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['42']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['473']++;return _this6.linkFilters();
	         });
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['183'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['474']++;this.emitter.off(['filter-focus'], function (tf, filter) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['43']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['475']++;return _this6.setActiveFilterId(filter.id);
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['476']++;(0, _dom.removeClass)(this.tbl, this.prfxTf);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['477']++;(0, _dom.removeClass)(this.tbl, this.prfxResponsive);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['478']++;this.nbHiddenRows = 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['479']++;this.validRowsIndex = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['480']++;this.fltIds = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['481']++;this.initialized = false;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['482']++;TableFilter.prototype.setToolbar = function setToolbar() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['44']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['483']++;if (this.infDiv) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['184'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['484']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['184'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['485']++;var infDiv = (0, _dom.createElm)('div');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['486']++;infDiv.className = this.infDivCssClass;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['487']++;if (this.toolBarTgtId) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['185'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['488']++;(0, _dom.elm)(this.toolBarTgtId).appendChild(infDiv);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['185'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['489']++;if (this.gridLayout) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['186'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['490']++;var gridLayout = this.Mod.gridLayout;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['491']++;gridLayout.tblMainCont.appendChild(infDiv);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['492']++;infDiv.className = gridLayout.infDivCssClass;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['186'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['493']++;var cont = (0, _dom.createElm)('caption');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['494']++;cont.appendChild(infDiv);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['495']++;this.tbl.insertBefore(cont, this.tbl.firstChild);
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['496']++;this.infDiv = infDiv;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['497']++;var lDiv = (0, _dom.createElm)('div');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['498']++;lDiv.className = this.lDivCssClass;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['499']++;infDiv.appendChild(lDiv);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['500']++;this.lDiv = lDiv;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['501']++;var rDiv = (0, _dom.createElm)('div');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['502']++;rDiv.className = this.rDivCssClass;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['503']++;infDiv.appendChild(rDiv);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['504']++;this.rDiv = rDiv;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['505']++;var mDiv = (0, _dom.createElm)('div');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['506']++;mDiv.className = this.mDivCssClass;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['507']++;infDiv.appendChild(mDiv);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['508']++;this.mDiv = mDiv;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['509']++;if ((0, _types.isUndef)(this.help)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['187'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['510']++;this.Mod.help.enabled = true;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['511']++;this.emitter.emit('init-help', this);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['187'][1]++;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['512']++;TableFilter.prototype.removeToolbar = function removeToolbar() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['45']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['513']++;if (!this.infDiv) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['188'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['514']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['188'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['515']++;(0, _dom.removeElm)(this.infDiv);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['516']++;this.infDiv = null;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['517']++;var tbl = this.tbl;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['518']++;var captions = (0, _dom.tag)(tbl, 'caption');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['519']++;if (captions.length > 0) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['189'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['520']++;[].forEach.call(captions, function (elm) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['46']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['521']++;return tbl.removeChild(elm);
	         });
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['189'][1]++;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['522']++;TableFilter.prototype.removeExternalFlts = function removeExternalFlts() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['47']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['523']++;if (!this.isExternalFlt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['190'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['524']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['190'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['525']++;var ids = this.externalFltTgtIds,
	          len = ids.length;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['526']++;for (var ct = 0; ct < len; ct++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['527']++;var externalFltTgtId = ids[ct],
	             externalFlt = (0, _dom.elm)(externalFltTgtId);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['528']++;if (externalFlt) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['191'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['529']++;externalFlt.innerHTML = '';
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['191'][1]++;
	         }
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['530']++;TableFilter.prototype.isCustomOptions = function isCustomOptions(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['48']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['531']++;return (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['192'][0]++, this.hasCustomOptions) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['192'][1]++, this.customOptions.cols.indexOf(colIndex) !== -1);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['532']++;TableFilter.prototype.getCustomOptions = function getCustomOptions(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['49']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['533']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['194'][0]++, (0, _types.isEmpty)(colIndex)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['194'][1]++, !this.isCustomOptions(colIndex))) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['193'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['534']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['193'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['535']++;var customOptions = this.customOptions;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['536']++;var cols = customOptions.cols;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['537']++;var optTxt = [],
	          optArray = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['538']++;var index = cols.indexOf(colIndex);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['539']++;var slcValues = customOptions.values[index];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['540']++;var slcTexts = customOptions.texts[index];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['541']++;var slcSort = customOptions.sorts[index];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['542']++;for (var r = 0, len = slcValues.length; r < len; r++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['543']++;optArray.push(slcValues[r]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['544']++;if (slcTexts[r]) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['195'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['545']++;optTxt.push(slcTexts[r]);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['195'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['546']++;optTxt.push(slcValues[r]);
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['547']++;if (slcSort) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['196'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['548']++;optArray.sort();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['549']++;optTxt.sort();
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['196'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['550']++;return [optArray, optTxt];
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['551']++;TableFilter.prototype.filter = function filter() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['50']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['552']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['198'][0]++, !this.fltGrid) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['198'][1]++, !this.initialized)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['197'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['553']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['197'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['554']++;this.onBeforeFilter(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['555']++;this.emitter.emit('before-filtering', this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['556']++;var row = this.tbl.rows,
	          nbRows = this.getRowsNb(true),
	          hiddenRows = 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['557']++;this.validRowsIndex = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['558']++;var searchArgs = this.getFiltersValue();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['559']++;for (var k = this.refRow; k < nbRows; k++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['560']++;row[k].style.display = '';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['561']++;var cells = row[k].cells;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['562']++;var nchilds = cells.length;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['563']++;if (nchilds !== this.nbCells) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['199'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['564']++;continue;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['199'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['565']++;var occurence = [],
	             isRowValid = true,
	             singleFltRowValid = false;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['566']++;for (var j = 0; j < nchilds; j++) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['567']++;var sA = searchArgs[this.singleSearchFlt ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['200'][0]++, 0) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['200'][1]++, j)];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['568']++;if (sA === '') {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['201'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['569']++;continue;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['201'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['570']++;var cellValue = (0, _string.matchCase)(this.getCellValue(cells[j]), this.caseSensitive);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['571']++;var sAOrSplit = sA.toString().split(this.orOperator),
	                hasMultiOrSA = sAOrSplit.length > 1,
	                sAAndSplit = sA.toString().split(this.anOperator),
	                hasMultiAndSA = sAAndSplit.length > 1;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['572']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['203'][0]++, (0, _types.isArray)(sA)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['203'][1]++, hasMultiOrSA) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['203'][2]++, hasMultiAndSA)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['202'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['573']++;var cS = void 0,
	                   s = void 0,
	                   occur = false;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['574']++;if ((0, _types.isArray)(sA)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['204'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['575']++;s = sA;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['204'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['576']++;s = hasMultiOrSA ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['205'][0]++, sAOrSplit) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['205'][1]++, sAAndSplit);
	               }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['577']++;for (var w = 0, len = s.length; w < len; w++) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['578']++;cS = (0, _string.trim)(s[w]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['579']++;occur = this._testTerm(cS, cellValue, j);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['580']++;if (occur) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['206'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['581']++;this.emitter.emit('highlight-keyword', this, cells[j], cS);
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['206'][1]++;
	                  }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['582']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['208'][0]++, hasMultiOrSA) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['208'][1]++, occur) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['208'][2]++, hasMultiAndSA) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['208'][3]++, !occur)) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['207'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['583']++;break;
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['207'][1]++;
	                  }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['584']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['210'][0]++, (0, _types.isArray)(sA)) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['210'][1]++, occur)) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['209'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['585']++;break;
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['209'][1]++;
	                  }
	               }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['586']++;occurence[j] = occur;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['202'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['587']++;occurence[j] = this._testTerm((0, _string.trim)(sA), cellValue, j);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['588']++;if (occurence[j]) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['211'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['589']++;this.emitter.emit('highlight-keyword', this, cells[j], sA);
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['211'][1]++;
	               }
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['590']++;if (!occurence[j]) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['212'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['591']++;isRowValid = false;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['212'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['592']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['214'][0]++, this.singleSearchFlt) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['214'][1]++, occurence[j])) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['213'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['593']++;singleFltRowValid = true;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['213'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['594']++;this.emitter.emit('cell-processed', this, j, cells[j]);
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['595']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['216'][0]++, this.singleSearchFlt) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['216'][1]++, singleFltRowValid)) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['215'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['596']++;isRowValid = true;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['215'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['597']++;this.validateRow(k, isRowValid);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['598']++;if (!isRowValid) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['217'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['599']++;hiddenRows++;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['217'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['600']++;this.emitter.emit('row-processed', this, k, this.validRowsIndex.length, isRowValid);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['601']++;this.nbHiddenRows = hiddenRows;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['602']++;this.onAfterFilter(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['603']++;this.emitter.emit('after-filtering', this, searchArgs);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['604']++;TableFilter.prototype._testTerm = function _testTerm(term, cellValue, colIdx) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['51']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['605']++;var numData = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['606']++;var decimal = this.decimalSeparator;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['607']++;var reLe = new RegExp(this.leOperator),
	          reGe = new RegExp(this.geOperator),
	          reL = new RegExp(this.lwOperator),
	          reG = new RegExp(this.grOperator),
	          reD = new RegExp(this.dfOperator),
	          reLk = new RegExp((0, _string.rgxEsc)(this.lkOperator)),
	          reEq = new RegExp(this.eqOperator),
	          reSt = new RegExp(this.stOperator),
	          reEn = new RegExp(this.enOperator),
	          reEm = this.emOperator,
	          reNm = this.nmOperator,
	          reRe = new RegExp((0, _string.rgxEsc)(this.rgxOperator));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['608']++;term = (0, _string.matchCase)(term, this.caseSensitive);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['609']++;var occurence = false;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['610']++;var hasLO = reL.test(term),
	          hasLE = reLe.test(term),
	          hasGR = reG.test(term),
	          hasGE = reGe.test(term),
	          hasDF = reD.test(term),
	          hasEQ = reEq.test(term),
	          hasLK = reLk.test(term),
	          hasST = reSt.test(term),
	          hasEN = reEn.test(term),
	          hasEM = reEm === term,
	          hasNM = reNm === term,
	          hasRE = reRe.test(term);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['611']++;if (this.hasType(colIdx, [_const.DATE])) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['218'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['612']++;var dte1 = void 0,
	             dte2 = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['613']++;var dateType = this.Mod.dateType;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['614']++;var isValidDate = dateType.isValid.bind(dateType);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['615']++;var parseDate = dateType.parse.bind(dateType);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['616']++;var locale = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['219'][0]++, dateType.getOptions(colIdx).locale) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['219'][1]++, this.locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['617']++;var isLDate = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['220'][0]++, hasLO) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['220'][1]++, isValidDate(term.replace(reL, ''), locale));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['618']++;var isLEDate = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['221'][0]++, hasLE) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['221'][1]++, isValidDate(term.replace(reLe, ''), locale));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['619']++;var isGDate = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['222'][0]++, hasGR) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['222'][1]++, isValidDate(term.replace(reG, ''), locale));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['620']++;var isGEDate = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['223'][0]++, hasGE) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['223'][1]++, isValidDate(term.replace(reGe, ''), locale));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['621']++;var isDFDate = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['224'][0]++, hasDF) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['224'][1]++, isValidDate(term.replace(reD, ''), locale));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['622']++;var isEQDate = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['225'][0]++, hasEQ) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['225'][1]++, isValidDate(term.replace(reEq, ''), locale));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['623']++;dte1 = parseDate(cellValue, locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['624']++;if (isLDate) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['226'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['625']++;dte2 = parseDate(term.replace(reL, ''), locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['626']++;occurence = dte1 < dte2;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['226'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['627']++;if (isLEDate) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['227'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['628']++;dte2 = parseDate(term.replace(reLe, ''), locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['629']++;occurence = dte1 <= dte2;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['227'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['630']++;if (isGEDate) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['228'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['631']++;dte2 = parseDate(term.replace(reGe, ''), locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['632']++;occurence = dte1 >= dte2;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['228'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['633']++;if (isGDate) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['229'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['634']++;dte2 = parseDate(term.replace(reG, ''), locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['635']++;occurence = dte1 > dte2;
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['229'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['636']++;if (isDFDate) {
	                        __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['230'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['637']++;dte2 = parseDate(term.replace(reD, ''), locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['638']++;occurence = dte1.toString() !== dte2.toString();
	                     } else {
	                        __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['230'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['639']++;if (isEQDate) {
	                           __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['231'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['640']++;dte2 = parseDate(term.replace(reEq, ''), locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['641']++;occurence = dte1.toString() === dte2.toString();
	                        } else {
	                           __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['231'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['642']++;if (reLk.test(term)) {
	                              __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['232'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['643']++;occurence = (0, _string.contains)(term.replace(reLk, ''), cellValue, false, this.caseSensitive);
	                           } else {
	                              __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['232'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['644']++;if (isValidDate(term)) {
	                                 __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['233'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['645']++;dte2 = parseDate(term, locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['646']++;occurence = dte1.toString() === dte2.toString();
	                              } else {
	                                 __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['233'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['647']++;if (hasEM) {
	                                    __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['234'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['648']++;occurence = (0, _string.isEmpty)(cellValue);
	                                 } else {
	                                    __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['234'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['649']++;if (hasNM) {
	                                       __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['235'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['650']++;occurence = !(0, _string.isEmpty)(cellValue);
	                                    } else {
	                                       __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['235'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['651']++;occurence = (0, _string.contains)(term, cellValue, this.isExactMatch(colIdx), this.caseSensitive);
	                                    }
	                                 }
	                              }
	                           }
	                        }
	                     }
	                  }
	               }
	            }
	         }
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['218'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['652']++;if (this.hasType(colIdx, [_const.FORMATTED_NUMBER])) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['236'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['653']++;var colType = this.colTypes[colIdx];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['654']++;if (colType.hasOwnProperty('decimal')) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['237'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['655']++;decimal = colType.decimal;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['237'][1]++;
	            }
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['236'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['656']++;numData = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['238'][0]++, Number(cellValue)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['238'][1]++, (0, _number.parse)(cellValue, decimal));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['657']++;if (hasLE) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['239'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['658']++;occurence = numData <= (0, _number.parse)(term.replace(reLe, ''), decimal);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['239'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['659']++;if (hasGE) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['240'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['660']++;occurence = numData >= (0, _number.parse)(term.replace(reGe, ''), decimal);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['240'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['661']++;if (hasLO) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['241'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['662']++;occurence = numData < (0, _number.parse)(term.replace(reL, ''), decimal);
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['241'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['663']++;if (hasGR) {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['242'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['664']++;occurence = numData > (0, _number.parse)(term.replace(reG, ''), decimal);
	                  } else {
	                     __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['242'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['665']++;if (hasDF) {
	                        __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['243'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['666']++;occurence = (0, _string.contains)(term.replace(reD, ''), cellValue, false, this.caseSensitive) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['244'][0]++, false) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['244'][1]++, true);
	                     } else {
	                        __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['243'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['667']++;if (hasLK) {
	                           __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['245'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['668']++;occurence = (0, _string.contains)(term.replace(reLk, ''), cellValue, false, this.caseSensitive);
	                        } else {
	                           __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['245'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['669']++;if (hasEQ) {
	                              __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['246'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['670']++;occurence = (0, _string.contains)(term.replace(reEq, ''), cellValue, true, this.caseSensitive);
	                           } else {
	                              __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['246'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['671']++;if (hasST) {
	                                 __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['247'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['672']++;occurence = cellValue.indexOf(term.replace(reSt, '')) === 0 ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['248'][0]++, true) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['248'][1]++, false);
	                              } else {
	                                 __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['247'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['673']++;if (hasEN) {
	                                    __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['249'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['674']++;var searchArg = term.replace(reEn, '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['675']++;occurence = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['251'][0]++, cellValue.lastIndexOf(searchArg, cellValue.length - 1) === cellValue.length - 1 - (searchArg.length - 1)) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['251'][1]++, cellValue.lastIndexOf(searchArg, cellValue.length - 1) > -1) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['250'][0]++, true) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['250'][1]++, false);
	                                 } else {
	                                    __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['249'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['676']++;if (hasEM) {
	                                       __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['252'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['677']++;occurence = (0, _string.isEmpty)(cellValue);
	                                    } else {
	                                       __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['252'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['678']++;if (hasNM) {
	                                          __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['253'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['679']++;occurence = !(0, _string.isEmpty)(cellValue);
	                                       } else {
	                                          __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['253'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['680']++;if (hasRE) {
	                                             __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['254'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['681']++;try {
	                                                __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['682']++;var srchArg = term.replace(reRe, '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['683']++;var rgx = new RegExp(srchArg);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['684']++;occurence = rgx.test(cellValue);
	                                             } catch (ex) {
	                                                __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['685']++;occurence = false;
	                                             }
	                                          } else {
	                                             __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['254'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['686']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['256'][0]++, numData) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['256'][1]++, this.hasType(colIdx, [_const.NUMBER, _const.FORMATTED_NUMBER])) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['256'][2]++, !this.singleSearchFlt)) {
	                                                __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['255'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['687']++;term = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['257'][0]++, (0, _number.parse)(term, decimal)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['257'][1]++, term);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['688']++;occurence = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['258'][0]++, numData === term) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['258'][1]++, (0, _string.contains)(term.toString(), numData.toString(), this.isExactMatch(colIdx), this.caseSensitive));
	                                             } else {
	                                                __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['255'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['689']++;occurence = (0, _string.contains)(term, cellValue, this.isExactMatch(colIdx), this.caseSensitive, this.ignoresDiacritics(colIdx));
	                                             }
	                                          }
	                                       }
	                                    }
	                                 }
	                              }
	                           }
	                        }
	                     }
	                  }
	               }
	            }
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['690']++;return occurence;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['691']++;TableFilter.prototype.getColValues = function getColValues(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['52']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['692']++;var includeHeaders = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['260'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['260'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['259'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['259'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['693']++;var typed = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['262'][0]++, arguments.length > 2) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['262'][1]++, arguments[2] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['261'][0]++, arguments[2]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['261'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['694']++;var exclude = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['264'][0]++, arguments.length > 3) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['264'][1]++, arguments[3] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['263'][0]++, arguments[3]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['263'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['695']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['265'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['696']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['265'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['697']++;var row = this.tbl.rows;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['698']++;var nbRows = this.getRowsNb(true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['699']++;var colValues = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['700']++;var getContent = typed ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['266'][0]++, this.getCellData.bind(this)) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['266'][1]++, this.getCellValue.bind(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['701']++;if (includeHeaders) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['267'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['702']++;colValues.push(this.getHeadersText()[colIndex]);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['267'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['703']++;for (var i = this.refRow; i < nbRows; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['704']++;var isExludedRow = false;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['705']++;if (exclude.length > 0) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['268'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['706']++;isExludedRow = exclude.indexOf(i) !== -1;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['268'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['707']++;var cell = row[i].cells,
	             nchilds = cell.length;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['708']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['270'][0]++, nchilds === this.nbCells) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['270'][1]++, !isExludedRow)) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['269'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['709']++;for (var j = 0; j < nchilds; j++) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['710']++;if (j !== colIndex) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['271'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['711']++;continue;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['271'][1]++;
	               }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['712']++;var data = getContent(cell[j]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['713']++;colValues.push(data);
	            }
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['269'][1]++;
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['714']++;return colValues;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['715']++;TableFilter.prototype.getFilterValue = function getFilterValue(index) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['53']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['716']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['272'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['717']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['272'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['718']++;var fltValue = '';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['719']++;var flt = this.getFilterElement(index);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['720']++;if (!flt) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['273'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['721']++;return fltValue;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['273'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['722']++;var fltColType = this.getFilterType(index);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['723']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['275'][0]++, fltColType !== _const.MULTIPLE) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['275'][1]++, fltColType !== _const.CHECKLIST)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['274'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['724']++;fltValue = flt.value;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['274'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['725']++;if (fltColType === _const.MULTIPLE) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['276'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['726']++;fltValue = this.feature('dropdown').getValues(index);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['276'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['727']++;if (fltColType === _const.CHECKLIST) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['277'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['728']++;fltValue = this.feature('checkList').getValues(index);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['277'][1]++;
	            }
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['729']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['279'][0]++, (0, _types.isArray)(fltValue)) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['279'][1]++, fltValue.length === 0) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['279'][2]++, fltValue.length === 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['279'][3]++, fltValue[0] === '')) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['278'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['730']++;fltValue = '';
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['278'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['731']++;return fltValue;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['732']++;TableFilter.prototype.getFiltersValue = function getFiltersValue() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['54']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['733']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['280'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['734']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['280'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['735']++;var searchArgs = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['736']++;for (var i = 0, len = this.fltIds.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['737']++;var fltValue = this.getFilterValue(i);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['738']++;if ((0, _types.isArray)(fltValue)) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['281'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['739']++;searchArgs.push(fltValue);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['281'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['740']++;searchArgs.push((0, _string.trim)(fltValue));
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['741']++;return searchArgs;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['742']++;TableFilter.prototype.getFilterId = function getFilterId(index) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['55']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['743']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['282'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['744']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['282'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['745']++;return this.fltIds[index];
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['746']++;TableFilter.prototype.getFiltersByType = function getFiltersByType(type, bool) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['56']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['747']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['283'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['748']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['283'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['749']++;var arr = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['750']++;for (var i = 0, len = this.fltIds.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['751']++;var fltType = this.getFilterType(i);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['752']++;if (fltType === type.toLowerCase()) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['284'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['753']++;var a = bool ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['285'][0]++, i) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['285'][1]++, this.fltIds[i]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['754']++;arr.push(a);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['284'][1]++;
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['755']++;return arr;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['756']++;TableFilter.prototype.getFilterElement = function getFilterElement(index) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['57']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['757']++;var fltId = this.fltIds[index];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['758']++;return (0, _dom.elm)(fltId);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['759']++;TableFilter.prototype.getCellsNb = function getCellsNb() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['58']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['760']++;var rowIndex = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['287'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['287'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['286'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['286'][1]++, 0);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['761']++;var tr = this.tbl.rows[rowIndex >= 0 ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['288'][0]++, rowIndex) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['288'][1]++, 0)];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['762']++;return tr ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['289'][0]++, tr.cells.length) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['289'][1]++, 0);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['763']++;TableFilter.prototype.getRowsNb = function getRowsNb(includeHeaders) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['59']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['764']++;var s = (0, _types.isUndef)(this.refRow) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['290'][0]++, 0) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['290'][1]++, this.refRow);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['765']++;var ntrs = this.tbl.rows.length;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['766']++;if (includeHeaders) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['291'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['767']++;s = 0;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['291'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['768']++;return parseInt(ntrs - s, 10);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['769']++;TableFilter.prototype.getCellValue = function getCellValue(cell) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['60']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['770']++;var idx = cell.cellIndex;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['771']++;if (this.customCellDataCols.indexOf(idx) !== -1) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['292'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['772']++;return this.customCellData(this, cell, idx);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['292'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['773']++;return (0, _dom.getText)(cell);
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['774']++;TableFilter.prototype.getCellData = function getCellData(cell) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['61']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['775']++;var colIndex = cell.cellIndex;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['776']++;var value = this.getCellValue(cell);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['777']++;if (this.hasType(colIndex, [_const.FORMATTED_NUMBER])) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['293'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['778']++;var decimal = this.decimalSeparator;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['779']++;var colType = this.colTypes[colIndex];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['780']++;if (colType.hasOwnProperty('decimal')) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['294'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['781']++;decimal = colType.decimal;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['294'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['782']++;return (0, _number.parse)(value, decimal);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['293'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['783']++;if (this.hasType(colIndex, [_const.NUMBER])) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['295'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['784']++;return Number(value);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['295'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['785']++;if (this.hasType(colIndex, [_const.DATE])) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['296'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['786']++;var dateType = this.Mod.dateType;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['787']++;var locale = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['297'][0]++, dateType.getOptions(colIndex).locale) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['297'][1]++, this.locale);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['788']++;return dateType.parse(value, locale);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['296'][1]++;
	            }
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['789']++;return value;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['790']++;TableFilter.prototype.getTableData = function getTableData() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['62']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['791']++;var includeHeaders = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['299'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['299'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['298'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['298'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['792']++;var excludeHiddenCols = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['301'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['301'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['300'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['300'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['793']++;var typed = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['303'][0]++, arguments.length > 2) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['303'][1]++, arguments[2] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['302'][0]++, arguments[2]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['302'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['794']++;var rows = this.tbl.rows;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['795']++;var nbRows = this.getRowsNb(true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['796']++;var tblData = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['797']++;var getContent = typed ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['304'][0]++, this.getCellData.bind(this)) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['304'][1]++, this.getCellValue.bind(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['798']++;if (includeHeaders) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['305'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['799']++;var headers = this.getHeadersText(excludeHiddenCols);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['800']++;tblData.push([this.getHeadersRowIndex(), headers]);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['305'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['801']++;for (var k = this.refRow; k < nbRows; k++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['802']++;var rowData = [k, []];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['803']++;var cells = rows[k].cells;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['804']++;for (var j = 0, len = cells.length; j < len; j++) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['805']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['307'][0]++, excludeHiddenCols) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['307'][1]++, this.hasExtension('colsVisibility'))) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['306'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['806']++;if (this.extension('colsVisibility').isColHidden(j)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['308'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['807']++;continue;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['308'][1]++;
	               }
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['306'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['808']++;var cellValue = getContent(cells[j]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['809']++;rowData[1].push(cellValue);
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['810']++;tblData.push(rowData);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['811']++;return tblData;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['812']++;TableFilter.prototype.getFilteredData = function getFilteredData() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['63']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['813']++;var includeHeaders = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['310'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['310'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['309'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['309'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['814']++;var excludeHiddenCols = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['312'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['312'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['311'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['311'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['815']++;var typed = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['314'][0]++, arguments.length > 2) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['314'][1]++, arguments[2] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['313'][0]++, arguments[2]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['313'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['816']++;if (!this.validRowsIndex) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['315'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['817']++;return [];
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['315'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['818']++;var rows = this.tbl.rows,
	          filteredData = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['819']++;var getContent = typed ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['316'][0]++, this.getCellData.bind(this)) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['316'][1]++, this.getCellValue.bind(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['820']++;if (includeHeaders) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['317'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['821']++;var headers = this.getHeadersText(excludeHiddenCols);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['822']++;filteredData.push([this.getHeadersRowIndex(), headers]);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['317'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['823']++;var validRows = this.getValidRows(true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['824']++;for (var i = 0; i < validRows.length; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['825']++;var rData = [this.validRowsIndex[i], []],
	             cells = rows[this.validRowsIndex[i]].cells;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['826']++;for (var k = 0; k < cells.length; k++) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['827']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['319'][0]++, excludeHiddenCols) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['319'][1]++, this.hasExtension('colsVisibility'))) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['318'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['828']++;if (this.extension('colsVisibility').isColHidden(k)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['320'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['829']++;continue;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['320'][1]++;
	               }
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['318'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['830']++;var cellValue = getContent(cells[k]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['831']++;rData[1].push(cellValue);
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['832']++;filteredData.push(rData);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['833']++;return filteredData;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['834']++;TableFilter.prototype.getFilteredDataCol = function getFilteredDataCol(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['64']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['835']++;var includeHeaders = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['322'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['322'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['321'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['321'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['836']++;var typed = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['324'][0]++, arguments.length > 2) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['324'][1]++, arguments[2] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['323'][0]++, arguments[2]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['323'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['837']++;var _this7 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['838']++;var exclude = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['326'][0]++, arguments.length > 3) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['326'][1]++, arguments[3] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['325'][0]++, arguments[3]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['325'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['839']++;var visible = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['328'][0]++, arguments.length > 4) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['328'][1]++, arguments[4] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['327'][0]++, arguments[4]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['327'][1]++, true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['840']++;if ((0, _types.isUndef)(colIndex)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['329'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['841']++;return [];
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['329'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['842']++;var rows = this.tbl.rows;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['843']++;var getContent = typed ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['330'][0]++, this.getCellData.bind(this)) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['330'][1]++, this.getCellValue.bind(this));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['844']++;var validRows = this.getValidRows(true).filter(function (rowIdx) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['65']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['845']++;return (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['331'][0]++, exclude.indexOf(rowIdx) === -1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['331'][1]++, visible ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['332'][0]++, _this7.getRowDisplay(rows[rowIdx]) !== 'none') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['332'][1]++, true));
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['846']++;var validColValues = validRows.map(function (rowIdx) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['66']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['847']++;return getContent(rows[rowIdx].cells[colIndex]);
	      });__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['848']++;if (includeHeaders) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['333'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['849']++;validColValues.unshift(this.getHeadersText()[colIndex]);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['333'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['850']++;return validColValues;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['851']++;TableFilter.prototype.getRowDisplay = function getRowDisplay(row) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['67']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['852']++;return row.style.display;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['853']++;TableFilter.prototype.validateRow = function validateRow(rowIndex, isValid) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['68']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['854']++;var row = this.tbl.rows[rowIndex];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['855']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['335'][0]++, !row) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['335'][1]++, typeof isValid !== 'boolean')) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['334'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['856']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['334'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['857']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['337'][0]++, this.hasVisibleRows) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['337'][1]++, this.visibleRows.indexOf(rowIndex) !== -1)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['336'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['858']++;isValid = true;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['336'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['859']++;var displayFlag = isValid ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['338'][0]++, '') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['338'][1]++, _const.NONE),
	          validFlag = isValid ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['339'][0]++, 'true') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['339'][1]++, 'false');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['860']++;row.style.display = displayFlag;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['861']++;if (this.paging) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['340'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['862']++;row.setAttribute('validRow', validFlag);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['340'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['863']++;if (isValid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['341'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['864']++;if (this.validRowsIndex.indexOf(rowIndex) === -1) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['342'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['865']++;this.validRowsIndex.push(rowIndex);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['342'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['866']++;this.onRowValidated(this, rowIndex);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['867']++;this.emitter.emit('row-validated', this, rowIndex);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['341'][1]++;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['868']++;TableFilter.prototype.validateAllRows = function validateAllRows() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['69']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['869']++;if (!this.initialized) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['343'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['870']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['343'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['871']++;this.validRowsIndex = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['872']++;for (var k = this.refRow; k < this.nbFilterableRows; k++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['873']++;this.validateRow(k, true);
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['874']++;TableFilter.prototype.setFilterValue = function setFilterValue(index) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['70']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['875']++;var query = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['345'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['345'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['344'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['344'][1]++, '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['876']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['346'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['877']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['346'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['878']++;var slc = this.getFilterElement(index),
	          fltColType = this.getFilterType(index);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['879']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['348'][0]++, fltColType !== _const.MULTIPLE) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['348'][1]++, fltColType !== _const.CHECKLIST)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['347'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['880']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['350'][0]++, this.loadFltOnDemand) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['350'][1]++, !this.initialized)) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['349'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['881']++;this.emitter.emit('build-select-filter', this, index, this.linkedFilters, this.isExternalFlt);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['349'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['882']++;slc.value = query;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['347'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['883']++;if (fltColType === _const.MULTIPLE) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['351'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['884']++;var values = (0, _types.isArray)(query) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['352'][0]++, query) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['352'][1]++, query.split(' ' + this.orOperator + ' '));__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['885']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['354'][0]++, this.loadFltOnDemand) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['354'][1]++, !this.initialized)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['353'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['886']++;this.emitter.emit('build-select-filter', this, index, this.linkedFilters, this.isExternalFlt);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['353'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['887']++;this.emitter.emit('select-options', this, index, values);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['351'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['888']++;if (fltColType === _const.CHECKLIST) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['355'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['889']++;var _values = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['890']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['357'][0]++, this.loadFltOnDemand) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['357'][1]++, !this.initialized)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['356'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['891']++;this.emitter.emit('build-checklist-filter', this, index, this.linkedFilters);
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['356'][1]++;
	               }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['892']++;if ((0, _types.isArray)(query)) {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['358'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['893']++;_values = query;
	               } else {
	                  __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['358'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['894']++;query = (0, _string.matchCase)(query, this.caseSensitive);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['895']++;_values = query.split(' ' + this.orOperator + ' ');
	               }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['896']++;this.emitter.emit('select-checklist-options', this, index, _values);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['355'][1]++;
	            }
	         }
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['897']++;TableFilter.prototype.setColWidths = function setColWidths(tbl) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['71']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['898']++;if (!this.hasColWidths) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['359'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['899']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['359'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['900']++;tbl = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['360'][0]++, tbl) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['360'][1]++, this.tbl);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['901']++;var nbCols = this.nbCells;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['902']++;var colWidths = this.colWidths;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['903']++;var colTags = (0, _dom.tag)(tbl, 'col');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['904']++;var tblHasColTag = colTags.length > 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['905']++;var frag = !tblHasColTag ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['361'][0]++, doc.createDocumentFragment()) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['361'][1]++, null);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['906']++;for (var k = 0; k < nbCols; k++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['907']++;var col = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['908']++;if (tblHasColTag) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['362'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['909']++;col = colTags[k];
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['362'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['910']++;col = (0, _dom.createElm)('col');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['911']++;frag.appendChild(col);
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['912']++;col.style.width = colWidths[k];
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['913']++;if (!tblHasColTag) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['363'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['914']++;tbl.insertBefore(frag, tbl.firstChild);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['363'][1]++;
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['915']++;TableFilter.prototype.enforceVisibility = function enforceVisibility() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['72']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['916']++;if (!this.hasVisibleRows) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['364'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['917']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['364'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['918']++;var nbRows = this.getRowsNb(true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['919']++;for (var i = 0, len = this.visibleRows.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['920']++;var row = this.visibleRows[i];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['921']++;if (row <= nbRows) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['365'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['922']++;this.validateRow(row, true);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['365'][1]++;
	         }
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['923']++;TableFilter.prototype.clearFilters = function clearFilters() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['73']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['924']++;if (!this.fltGrid) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['366'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['925']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['366'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['926']++;this.emitter.emit('before-clearing-filters', this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['927']++;this.onBeforeReset(this, this.getFiltersValue());__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['928']++;for (var i = 0, len = this.fltIds.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['929']++;this.setFilterValue(i, '');
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['930']++;this.filter();__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['931']++;this.onAfterReset(this);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['932']++;this.emitter.emit('after-clearing-filters', this);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['933']++;TableFilter.prototype.clearActiveColumns = function clearActiveColumns() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['74']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['934']++;for (var i = 0, len = this.getCellsNb(this.headersRow); i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['935']++;(0, _dom.removeClass)(this.getHeaderElement(i), this.activeColumnsCssClass);
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['936']++;TableFilter.prototype.markActiveColumn = function markActiveColumn(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['75']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['937']++;var header = this.getHeaderElement(colIndex);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['938']++;if ((0, _dom.hasClass)(header, this.activeColumnsCssClass)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['367'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['939']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['367'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['940']++;this.onBeforeActiveColumn(this, colIndex);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['941']++;(0, _dom.addClass)(header, this.activeColumnsCssClass);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['942']++;this.onAfterActiveColumn(this, colIndex);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['943']++;TableFilter.prototype.getActiveFilterId = function getActiveFilterId() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['76']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['944']++;return this.activeFilterId;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['945']++;TableFilter.prototype.setActiveFilterId = function setActiveFilterId(filterId) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['77']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['946']++;this.activeFilterId = filterId;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['947']++;TableFilter.prototype.getColumnIndexFromFilterId = function getColumnIndexFromFilterId() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['78']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['948']++;var filterId = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['369'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['369'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['368'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['368'][1]++, '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['949']++;var idx = filterId.split('_')[0];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['950']++;idx = idx.split(this.prfxFlt)[1];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['951']++;return parseInt(idx, 10);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['952']++;TableFilter.prototype.buildFilterId = function buildFilterId(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['79']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['953']++;return '' + this.prfxFlt + colIndex + '_' + this.id;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['954']++;TableFilter.prototype.activateFilter = function activateFilter(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['80']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['955']++;if ((0, _types.isUndef)(colIndex)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['370'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['956']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['370'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['957']++;this.setActiveFilterId(this.getFilterId(colIndex));
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['958']++;TableFilter.prototype.linkFilters = function linkFilters() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['81']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['959']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['372'][0]++, !this.linkedFilters) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['372'][1]++, !this.activeFilterId)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['371'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['960']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['371'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['961']++;var slcA1 = this.getFiltersByType(_const.SELECT, true),
	          slcA2 = this.getFiltersByType(_const.MULTIPLE, true),
	          slcA3 = this.getFiltersByType(_const.CHECKLIST, true),
	          slcIndex = slcA1.concat(slcA2);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['962']++;slcIndex = slcIndex.concat(slcA3);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['963']++;var activeIdx = this.getColumnIndexFromFilterId(this.activeFilterId);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['964']++;for (var i = 0, len = slcIndex.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['965']++;var colIdx = slcIndex[i];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['966']++;var curSlc = (0, _dom.elm)(this.fltIds[colIdx]);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['967']++;var slcSelectedValue = this.getFilterValue(colIdx);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['968']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][0]++, activeIdx !== colIdx) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][1]++, this.paging) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][2]++, slcA1.indexOf(colIdx) !== -1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][3]++, activeIdx === colIdx) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][4]++, !this.paging) && ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][5]++, slcA3.indexOf(colIdx) !== -1) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][6]++, slcA2.indexOf(colIdx) !== -1)) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['374'][7]++, slcSelectedValue === this.getClearFilterText(colIdx))) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['373'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['969']++;if (this.loadFltOnDemand) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['375'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['970']++;var opt0 = (0, _dom.createOpt)(this.getClearFilterText(colIdx), '');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['971']++;curSlc.innerHTML = '';__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['972']++;curSlc.appendChild(opt0);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['375'][1]++;
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['973']++;if (slcA3.indexOf(colIdx) !== -1) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['376'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['974']++;this.emitter.emit('build-checklist-filter', this, colIdx, true);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['376'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['975']++;this.emitter.emit('build-select-filter', this, colIdx, true);
	            }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['976']++;this.setFilterValue(colIdx, slcSelectedValue);
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['373'][1]++;
	         }
	      }
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['977']++;TableFilter.prototype.isExactMatch = function isExactMatch(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['82']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['978']++;var fltType = this.getFilterType(colIndex);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['979']++;return (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['377'][0]++, this.exactMatchByCol[colIndex]) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['377'][1]++, this.exactMatch) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['377'][2]++, fltType !== _const.INPUT);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['980']++;TableFilter.prototype.isRowValid = function isRowValid(rowIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['83']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['981']++;return this.getValidRows().indexOf(rowIndex) !== -1;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['982']++;TableFilter.prototype.isRowDisplayed = function isRowDisplayed(rowIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['84']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['983']++;var row = this.tbl.rows[rowIndex];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['984']++;return this.getRowDisplay(row) === '';
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['985']++;TableFilter.prototype.ignoresDiacritics = function ignoresDiacritics(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['85']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['986']++;var ignoreDiac = this.ignoreDiacritics;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['987']++;if ((0, _types.isArray)(ignoreDiac)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['378'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['988']++;return ignoreDiac[colIndex];
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['378'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['989']++;return Boolean(ignoreDiac);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['990']++;TableFilter.prototype.getClearFilterText = function getClearFilterText(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['86']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['991']++;var clearText = this.clearFilterText;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['992']++;if ((0, _types.isArray)(clearText)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['379'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['993']++;return clearText[colIndex];
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['379'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['994']++;return clearText;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['995']++;TableFilter.prototype.isImported = function isImported(filePath) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['87']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['996']++;var type = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['381'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['381'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['380'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['380'][1]++, 'script');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['997']++;var imported = false,
	          attr = type === 'script' ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['382'][0]++, 'src') : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['382'][1]++, 'href'),
	          files = (0, _dom.tag)(doc, type);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['998']++;for (var i = 0, len = files.length; i < len; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['999']++;if ((0, _types.isUndef)(files[i][attr])) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['383'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1000']++;continue;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['383'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1001']++;if (files[i][attr].match(filePath)) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['384'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1002']++;imported = true;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1003']++;break;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['384'][1]++;
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1004']++;return imported;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1005']++;TableFilter.prototype.import = function _import(fileId, filePath, callback) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['88']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1006']++;var _this8 = this;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1007']++;var type = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['386'][0]++, arguments.length > 3) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['386'][1]++, arguments[3] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['385'][0]++, arguments[3]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['385'][1]++, 'script');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1008']++;if (this.isImported(filePath, type)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['387'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1009']++;return;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['387'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1010']++;var o = this,
	          isLoaded = false,
	          file = void 0,
	          head = (0, _dom.tag)(doc, 'head')[0];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1011']++;if (type.toLowerCase() === 'link') {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['388'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1012']++;file = (0, _dom.createElm)('link', ['id', fileId], ['type', 'text/css'], ['rel', 'stylesheet'], ['href', filePath]);
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['388'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1013']++;file = (0, _dom.createElm)('script', ['id', fileId], ['type', 'text/javascript'], ['src', filePath]);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1014']++;file.onload = file.onreadystatechange = function () {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['89']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1015']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['390'][0]++, !isLoaded) && ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['390'][1]++, !_this8.readyState) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['390'][2]++, _this8.readyState === 'loaded') || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['390'][3]++, _this8.readyState === 'complete'))) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['389'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1016']++;isLoaded = true;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1017']++;if (typeof callback === 'function') {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['391'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1018']++;callback.call(null, o);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['391'][1]++;
	            }
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['389'][1]++;
	         }
	      };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1019']++;file.onerror = function () {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['90']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1020']++;throw new Error('TableFilter could not load: ' + filePath);
	      };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1021']++;head.appendChild(file);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1022']++;TableFilter.prototype.isInitialized = function isInitialized() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['91']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1023']++;return this.initialized;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1024']++;TableFilter.prototype.getFiltersId = function getFiltersId() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['92']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1025']++;return (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['392'][0]++, this.fltIds) || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['392'][1]++, []);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1026']++;TableFilter.prototype.getValidRows = function getValidRows(reCalc) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['93']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1027']++;if (!reCalc) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['393'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1028']++;return this.validRowsIndex;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['393'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1029']++;var nbRows = this.getRowsNb(true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1030']++;this.validRowsIndex = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1031']++;for (var k = this.refRow; k < nbRows; k++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1032']++;var r = this.tbl.rows[k];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1033']++;if (!this.paging) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['394'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1034']++;if (this.getRowDisplay(r) !== _const.NONE) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['395'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1035']++;this.validRowsIndex.push(r.rowIndex);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['395'][1]++;
	            }
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['394'][1]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1036']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['397'][0]++, r.getAttribute('validRow') === 'true') || (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['397'][1]++, r.getAttribute('validRow') === null)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['396'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1037']++;this.validRowsIndex.push(r.rowIndex);
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['396'][1]++;
	            }
	         }
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1038']++;return this.validRowsIndex;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1039']++;TableFilter.prototype.getFiltersRowIndex = function getFiltersRowIndex() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['94']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1040']++;return this.filtersRowIndex;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1041']++;TableFilter.prototype.getHeadersRowIndex = function getHeadersRowIndex() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['95']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1042']++;return this.headersRow;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1043']++;TableFilter.prototype.getStartRowIndex = function getStartRowIndex() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['96']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1044']++;return this.refRow;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1045']++;TableFilter.prototype.getLastRowIndex = function getLastRowIndex() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['97']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1046']++;var nbRows = this.getRowsNb(true);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1047']++;return nbRows - 1;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1048']++;TableFilter.prototype.hasType = function hasType(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['98']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1049']++;var types = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['399'][0]++, arguments.length > 1) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['399'][1]++, arguments[1] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['398'][0]++, arguments[1]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['398'][1]++, []);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1050']++;if (!this.hasColTypes) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['400'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1051']++;return false;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['400'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1052']++;var colType = this.colTypes[colIndex];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1053']++;if ((0, _types.isObj)(colType)) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['401'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1054']++;colType = colType.type;
	      } else {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['401'][1]++;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1055']++;return types.indexOf(colType) !== -1;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1056']++;TableFilter.prototype.getHeaderElement = function getHeaderElement(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['99']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1057']++;var table = this.gridLayout ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['402'][0]++, this.Mod.gridLayout.headTbl) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['402'][1]++, this.tbl);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1058']++;var tHead = (0, _dom.tag)(table, 'thead');__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1059']++;var headersRow = this.headersRow;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1060']++;var header = void 0;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1061']++;for (var i = 0; i < this.nbCells; i++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1062']++;if (i !== colIndex) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['403'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1063']++;continue;
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['403'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1064']++;if (tHead.length === 0) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['404'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1065']++;header = table.rows[headersRow].cells[i];
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['404'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1066']++;if (tHead.length === 1) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['405'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1067']++;header = tHead[0].rows[headersRow].cells[i];
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['405'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1068']++;break;
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1069']++;return header;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1070']++;TableFilter.prototype.getHeadersText = function getHeadersText() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['100']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1071']++;var excludeHiddenCols = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['407'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['407'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['406'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['406'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1072']++;var headers = [];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1073']++;for (var j = 0; j < this.nbCells; j++) {
	         __cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1074']++;if ((__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['409'][0]++, excludeHiddenCols) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['409'][1]++, this.hasExtension('colsVisibility'))) {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['408'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1075']++;if (this.extension('colsVisibility').isColHidden(j)) {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['410'][0]++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1076']++;continue;
	            } else {
	               __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['410'][1]++;
	            }
	         } else {
	            __cov_OZNmcyNdW1BMU9Wdzqdf4g.b['408'][1]++;
	         }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1077']++;var header = this.getHeaderElement(j);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1078']++;var headerText = (0, _dom.getFirstTextNode)(header);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1079']++;headers.push(headerText);
	      }__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1080']++;return headers;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1081']++;TableFilter.prototype.getFilterType = function getFilterType(colIndex) {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['101']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1082']++;var colType = this.cfg['col_' + colIndex];__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1083']++;return !colType ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['411'][0]++, _const.INPUT) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['411'][1]++, colType.toLowerCase());
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1084']++;TableFilter.prototype.getFilterableRowsNb = function getFilterableRowsNb() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['102']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1085']++;return this.getRowsNb(false);
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1086']++;TableFilter.prototype.getValidRowsNb = function getValidRowsNb() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['103']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1087']++;var reCalc = (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['413'][0]++, arguments.length > 0) && (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['413'][1]++, arguments[0] !== undefined) ? (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['412'][0]++, arguments[0]) : (__cov_OZNmcyNdW1BMU9Wdzqdf4g.b['412'][1]++, false);__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1088']++;return this.getValidRows(reCalc).length;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1089']++;TableFilter.prototype.config = function config() {
	      __cov_OZNmcyNdW1BMU9Wdzqdf4g.f['104']++;__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1090']++;return this.cfg;
	   };__cov_OZNmcyNdW1BMU9Wdzqdf4g.s['1091']++;return TableFilter;
	}();

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_URudG1Xw$tDIVg$yXj_Vzw = Function('return this')();
	if (!__cov_URudG1Xw$tDIVg$yXj_Vzw.__coverage__) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.__coverage__ = {};
	}
	__cov_URudG1Xw$tDIVg$yXj_Vzw = __cov_URudG1Xw$tDIVg$yXj_Vzw.__coverage__;
	if (!__cov_URudG1Xw$tDIVg$yXj_Vzw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\event.js']) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\event.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\event.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0 }, "fnMap": { "1": { "line": 23, "name": "addEvt", "loc": { "start": { "line": 16, "column": 22 }, "end": { "line": 16, "column": 52 } } }, "2": { "line": 42, "name": "removeEvt", "loc": { "start": { "line": 36, "column": 25 }, "end": { "line": 36, "column": 55 } } }, "3": { "line": 57, "name": "stopEvt", "loc": { "start": { "line": 51, "column": 23 }, "end": { "line": 51, "column": 32 } } }, "4": { "line": 74, "name": "cancelEvt", "loc": { "start": { "line": 68, "column": 25 }, "end": { "line": 68, "column": 34 } } }, "5": { "line": 91, "name": "targetEvt", "loc": { "start": { "line": 85, "column": 25 }, "end": { "line": 85, "column": 34 } } }, "6": { "line": 104, "name": "keyCode", "loc": { "start": { "line": 98, "column": 23 }, "end": { "line": 98, "column": 32 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 16, "column": 7 }, "start": { "line": 16, "column": 7 } }, "5": { "end": { "line": 24, "column": 5 }, "start": { "line": 17, "column": 4 } }, "6": { "end": { "line": 18, "column": 8 }, "start": { "line": 18, "column": 8 } }, "7": { "end": { "line": 24, "column": 5 }, "start": { "line": 20, "column": 9 } }, "8": { "end": { "line": 21, "column": 8 }, "start": { "line": 21, "column": 8 } }, "9": { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 8 } }, "10": { "end": { "line": 36, "column": 7 }, "start": { "line": 36, "column": 7 } }, "11": { "end": { "line": 43, "column": 5 }, "start": { "line": 37, "column": 4 } }, "12": { "end": { "line": 38, "column": 8 }, "start": { "line": 38, "column": 8 } }, "13": { "end": { "line": 43, "column": 5 }, "start": { "line": 39, "column": 11 } }, "14": { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 8 } }, "15": { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 8 } }, "16": { "end": { "line": 51, "column": 7 }, "start": { "line": 51, "column": 7 } }, "17": { "end": { "line": 54, "column": 5 }, "start": { "line": 52, "column": 4 } }, "18": { "end": { "line": 53, "column": 8 }, "start": { "line": 53, "column": 8 } }, "19": { "end": { "line": 59, "column": 5 }, "start": { "line": 55, "column": 4 } }, "20": { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 8 } }, "21": { "end": { "line": 58, "column": 8 }, "start": { "line": 58, "column": 8 } }, "22": { "end": { "line": 68, "column": 7 }, "start": { "line": 68, "column": 7 } }, "23": { "end": { "line": 71, "column": 5 }, "start": { "line": 69, "column": 4 } }, "24": { "end": { "line": 70, "column": 8 }, "start": { "line": 70, "column": 8 } }, "25": { "end": { "line": 76, "column": 5 }, "start": { "line": 72, "column": 4 } }, "26": { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 8 } }, "27": { "end": { "line": 75, "column": 8 }, "start": { "line": 75, "column": 8 } }, "28": { "end": { "line": 85, "column": 7 }, "start": { "line": 85, "column": 7 } }, "29": { "end": { "line": 88, "column": 5 }, "start": { "line": 86, "column": 4 } }, "30": { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 8 } }, "31": { "end": { "line": 89, "column": 4 }, "start": { "line": 89, "column": 4 } }, "32": { "end": { "line": 98, "column": 7 }, "start": { "line": 98, "column": 7 } }, "33": { "end": { "line": 99, "column": 4 }, "start": { "line": 99, "column": 4 } } }, "branchMap": { "1": { "line": 24, "type": "if", "locations": [{ "end": { "line": 17, "column": 4 }, "start": { "line": 17, "column": 4 } }, { "end": { "line": 17, "column": 4 }, "start": { "line": 17, "column": 4 } }] }, "2": { "line": 26, "type": "if", "locations": [{ "end": { "line": 20, "column": 9 }, "start": { "line": 20, "column": 9 } }, { "end": { "line": 20, "column": 9 }, "start": { "line": 20, "column": 9 } }] }, "3": { "line": 43, "type": "if", "locations": [{ "end": { "line": 37, "column": 4 }, "start": { "line": 37, "column": 4 } }, { "end": { "line": 37, "column": 4 }, "start": { "line": 37, "column": 4 } }] }, "4": { "line": 45, "type": "if", "locations": [{ "end": { "line": 39, "column": 11 }, "start": { "line": 39, "column": 11 } }, { "end": { "line": 39, "column": 11 }, "start": { "line": 39, "column": 11 } }] }, "5": { "line": 58, "type": "if", "locations": [{ "end": { "line": 52, "column": 4 }, "start": { "line": 52, "column": 4 } }, { "end": { "line": 52, "column": 4 }, "start": { "line": 52, "column": 4 } }] }, "6": { "line": 61, "type": "if", "locations": [{ "end": { "line": 55, "column": 4 }, "start": { "line": 55, "column": 4 } }, { "end": { "line": 55, "column": 4 }, "start": { "line": 55, "column": 4 } }] }, "7": { "line": 75, "type": "if", "locations": [{ "end": { "line": 69, "column": 4 }, "start": { "line": 69, "column": 4 } }, { "end": { "line": 69, "column": 4 }, "start": { "line": 69, "column": 4 } }] }, "8": { "line": 78, "type": "if", "locations": [{ "end": { "line": 72, "column": 4 }, "start": { "line": 72, "column": 4 } }, { "end": { "line": 72, "column": 4 }, "start": { "line": 72, "column": 4 } }] }, "9": { "line": 92, "type": "if", "locations": [{ "end": { "line": 86, "column": 4 }, "start": { "line": 86, "column": 4 } }, { "end": { "line": 86, "column": 4 }, "start": { "line": 86, "column": 4 } }] }, "10": { "line": 95, "type": "binary-expr", "locations": [{ "end": { "line": 89, "column": 11 }, "start": { "line": 89, "column": 11 } }, { "end": { "line": 89, "column": 4 }, "start": { "line": 89, "column": 25 } }] }, "11": { "line": 105, "type": "cond-expr", "locations": [{ "end": { "line": 99, "column": 11 }, "start": { "line": 99, "column": 26 } }, { "end": { "line": 99, "column": 4 }, "start": { "line": 100, "column": 9 } }] }, "12": { "line": 105, "type": "cond-expr", "locations": [{ "end": { "line": 100, "column": 9 }, "start": { "line": 100, "column": 23 } }, { "end": { "line": 99, "column": 4 }, "start": { "line": 100, "column": 38 } }] }, "13": { "line": 105, "type": "cond-expr", "locations": [{ "end": { "line": 100, "column": 38 }, "start": { "line": 100, "column": 50 } }, { "end": { "line": 99, "column": 4 }, "start": { "line": 100, "column": 62 } }] } }, "code": ["import {root} from './root';", "", "/**", " * DOM event utilities", " */", "", "/**", " * Add event handler for specified event on passed element", " *", " * @param {DOMElement} obj Element", " * @param {String} type Event type", " * @param {Function} Handler", " * @param {Boolean} capture Specifiy whether the event should be executed in", " * the capturing or in the bubbling phase", " */", "export const addEvt = (obj, type, func, capture) => {", "    if (obj.addEventListener) {", "        obj.addEventListener(type, func, capture);", "    }", "    else if (obj.attachEvent) {", "        obj.attachEvent('on' + type, func);", "    } else {", "        obj['on' + type] = func;", "    }", "};", "", "/**", " * Remove event handler for specified event on passed element", " *", " * @param {DOMElement} obj Element", " * @param {String} type Event type", " * @param {Function} Handler", " * @param {Boolean} capture Specifiy whether the event should be executed in", " * the capturing or in the bubbling phase", " */", "export const removeEvt = (obj, type, func, capture) => {", "    if (obj.removeEventListener) {", "        obj.removeEventListener(type, func, capture);", "    } else if (obj.detachEvent) {", "        obj.detachEvent('on' + type, func);", "    } else {", "        obj['on' + type] = null;", "    }", "};", "", "/**", " * Prevents further propagation of the current event in the bubbling phase", " *", " * @param {Event} evt Event on the DOM", " */", "export const stopEvt = (evt) => {", "    if (!evt) {", "        evt = root.event;", "    }", "    if (evt.stopPropagation) {", "        evt.stopPropagation();", "    } else {", "        evt.cancelBubble = true;", "    }", "};", "", "/**", " * Cancels the event if it is cancelable, without stopping further", " * propagation of the event.", " *", " * @param {Event} evt Event on the DOM", " */", "export const cancelEvt = (evt) => {", "    if (!evt) {", "        evt = root.event;", "    }", "    if (evt.preventDefault) {", "        evt.preventDefault();", "    } else {", "        evt.returnValue = false;", "    }", "};", "", "/**", " * Reference to the object that dispatched the event", " *", " * @param {Event} evt Event on the DOM", " * @returns {DOMElement}", " */", "export const targetEvt = (evt) => {", "    if (!evt) {", "        evt = root.event;", "    }", "    return evt.target || evt.srcElement;", "};", "", "/**", " * Returns the Unicode value of pressed key", " *", " * @param {Event} evt Event on the DOM", " * @returns {Number}", " */", "export const keyCode = (evt) => {", "    return evt.charCode ? evt.charCode :", "        (evt.keyCode ? evt.keyCode : (evt.which ? evt.which : 0));", "};", ""] };
	}
	__cov_URudG1Xw$tDIVg$yXj_Vzw = __cov_URudG1Xw$tDIVg$yXj_Vzw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\event.js'];
	__cov_URudG1Xw$tDIVg$yXj_Vzw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_URudG1Xw$tDIVg$yXj_Vzw.s['2']++;exports.keyCode = exports.targetEvt = exports.cancelEvt = exports.stopEvt = exports.removeEvt = exports.addEvt = undefined;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['3']++;var _root = __webpack_require__(2);__cov_URudG1Xw$tDIVg$yXj_Vzw.s['4']++;var addEvt = exports.addEvt = function addEvt(obj, type, func, capture) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.f['1']++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['5']++;if (obj.addEventListener) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['1'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['6']++;obj.addEventListener(type, func, capture);
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['1'][1]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['7']++;if (obj.attachEvent) {
	         __cov_URudG1Xw$tDIVg$yXj_Vzw.b['2'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['8']++;obj.attachEvent('on' + type, func);
	      } else {
	         __cov_URudG1Xw$tDIVg$yXj_Vzw.b['2'][1]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['9']++;obj['on' + type] = func;
	      }
	   }
	};__cov_URudG1Xw$tDIVg$yXj_Vzw.s['10']++;var removeEvt = exports.removeEvt = function removeEvt(obj, type, func, capture) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.f['2']++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['11']++;if (obj.removeEventListener) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['3'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['12']++;obj.removeEventListener(type, func, capture);
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['3'][1]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['13']++;if (obj.detachEvent) {
	         __cov_URudG1Xw$tDIVg$yXj_Vzw.b['4'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['14']++;obj.detachEvent('on' + type, func);
	      } else {
	         __cov_URudG1Xw$tDIVg$yXj_Vzw.b['4'][1]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['15']++;obj['on' + type] = null;
	      }
	   }
	};__cov_URudG1Xw$tDIVg$yXj_Vzw.s['16']++;var stopEvt = exports.stopEvt = function stopEvt(evt) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.f['3']++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['17']++;if (!evt) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['5'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['18']++;evt = _root.root.event;
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['5'][1]++;
	   }__cov_URudG1Xw$tDIVg$yXj_Vzw.s['19']++;if (evt.stopPropagation) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['6'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['20']++;evt.stopPropagation();
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['6'][1]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['21']++;evt.cancelBubble = true;
	   }
	};__cov_URudG1Xw$tDIVg$yXj_Vzw.s['22']++;var cancelEvt = exports.cancelEvt = function cancelEvt(evt) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.f['4']++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['23']++;if (!evt) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['7'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['24']++;evt = _root.root.event;
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['7'][1]++;
	   }__cov_URudG1Xw$tDIVg$yXj_Vzw.s['25']++;if (evt.preventDefault) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['8'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['26']++;evt.preventDefault();
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['8'][1]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['27']++;evt.returnValue = false;
	   }
	};__cov_URudG1Xw$tDIVg$yXj_Vzw.s['28']++;var targetEvt = exports.targetEvt = function targetEvt(evt) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.f['5']++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['29']++;if (!evt) {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['9'][0]++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['30']++;evt = _root.root.event;
	   } else {
	      __cov_URudG1Xw$tDIVg$yXj_Vzw.b['9'][1]++;
	   }__cov_URudG1Xw$tDIVg$yXj_Vzw.s['31']++;return (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['10'][0]++, evt.target) || (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['10'][1]++, evt.srcElement);
	};__cov_URudG1Xw$tDIVg$yXj_Vzw.s['32']++;var keyCode = exports.keyCode = function keyCode(evt) {
	   __cov_URudG1Xw$tDIVg$yXj_Vzw.f['6']++;__cov_URudG1Xw$tDIVg$yXj_Vzw.s['33']++;return evt.charCode ? (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['11'][0]++, evt.charCode) : (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['11'][1]++, evt.keyCode ? (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['12'][0]++, evt.keyCode) : (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['12'][1]++, evt.which ? (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['13'][0]++, evt.which) : (__cov_URudG1Xw$tDIVg$yXj_Vzw.b['13'][1]++, 0)));
	};

/***/ },
/* 2 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_fl5Wd0ZPgEBxOjiQbnq60g = Function('return this')();
	if (!__cov_fl5Wd0ZPgEBxOjiQbnq60g.__coverage__) {
	   __cov_fl5Wd0ZPgEBxOjiQbnq60g.__coverage__ = {};
	}
	__cov_fl5Wd0ZPgEBxOjiQbnq60g = __cov_fl5Wd0ZPgEBxOjiQbnq60g.__coverage__;
	if (!__cov_fl5Wd0ZPgEBxOjiQbnq60g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\root.js']) {
	   __cov_fl5Wd0ZPgEBxOjiQbnq60g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\root.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\root.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0, 0], "5": [0, 0, 0, 0, 0, 0, 0], "6": [0, 0], "7": [0, 0] }, "f": { "1": 0, "2": 0 }, "fnMap": { "1": { "line": 7, "name": "(anonymous_1)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 7, "name": "(anonymous_2)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "end": { "line": 4, "column": 7 }, "start": { "line": 4, "column": 7 } } }, "branchMap": { "1": { "line": 7, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 7, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 7, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 7, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 12, "type": "binary-expr", "locations": [{ "end": { "line": 4, "column": 21 }, "start": { "line": 4, "column": 21 } }, { "end": { "line": 4, "column": 21 }, "start": { "line": 4, "column": 49 } }, { "end": { "line": 4, "column": 20 }, "start": { "line": 4, "column": 71 } }, { "end": { "line": 5, "column": 5 }, "start": { "line": 5, "column": 5 } }, { "end": { "line": 5, "column": 5 }, "start": { "line": 5, "column": 35 } }, { "end": { "line": 4, "column": 20 }, "start": { "line": 5, "column": 63 } }, { "end": { "line": 4, "column": 7 }, "start": { "line": 4, "column": 20 } }] }, "6": { "line": 12, "type": "cond-expr", "locations": [{ "end": { "line": 4, "column": 21 }, "start": { "line": 4, "column": 21 } }, { "end": { "line": 4, "column": 21 }, "start": { "line": 4, "column": 21 } }] }, "7": { "line": 12, "type": "cond-expr", "locations": [{ "end": { "line": 5, "column": 5 }, "start": { "line": 5, "column": 5 } }, { "end": { "line": 5, "column": 5 }, "start": { "line": 5, "column": 5 } }] } }, "code": ["/**", " * Export window or global object depending on the environment", " */", "export const root = (typeof self === 'object' && self.self === self && self) ||", "    (typeof global === 'object' && global.global === global && global) ||", "    this;", ""] };
	}
	__cov_fl5Wd0ZPgEBxOjiQbnq60g = __cov_fl5Wd0ZPgEBxOjiQbnq60g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\root.js'];
	__cov_fl5Wd0ZPgEBxOjiQbnq60g.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_fl5Wd0ZPgEBxOjiQbnq60g.s['2']++;var _typeof = (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['2'][0]++, typeof Symbol === 'function') && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['2'][1]++, _typeof2(Symbol.iterator) === 'symbol') ? (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['1'][0]++, function (obj) {
	   __cov_fl5Wd0ZPgEBxOjiQbnq60g.f['1']++;__cov_fl5Wd0ZPgEBxOjiQbnq60g.s['3']++;return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
	}) : (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['1'][1]++, function (obj) {
	   __cov_fl5Wd0ZPgEBxOjiQbnq60g.f['2']++;__cov_fl5Wd0ZPgEBxOjiQbnq60g.s['4']++;return (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['4'][0]++, obj) && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['4'][1]++, typeof Symbol === 'function') && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['4'][2]++, obj.constructor === Symbol) && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['4'][3]++, obj !== Symbol.prototype) ? (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['3'][0]++, 'symbol') : (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['3'][1]++, typeof obj === 'undefined' ? 'undefined' : _typeof2(obj));
	});__cov_fl5Wd0ZPgEBxOjiQbnq60g.s['5']++;var root = exports.root = (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][0]++, (typeof self === 'undefined' ? (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['6'][0]++, 'undefined') : (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['6'][1]++, _typeof(self))) === 'object') && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][1]++, self.self === self) && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][2]++, self) || (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][3]++, (typeof global === 'undefined' ? (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['7'][0]++, 'undefined') : (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['7'][1]++, _typeof(global))) === 'object') && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][4]++, global.global === global) && (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][5]++, global) || (__cov_fl5Wd0ZPgEBxOjiQbnq60g.b['5'][6]++, undefined);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_0nBWLHcRRjHOwAdrhMJC_A = Function('return this')();
	if (!__cov_0nBWLHcRRjHOwAdrhMJC_A.__coverage__) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.__coverage__ = {};
	}
	__cov_0nBWLHcRRjHOwAdrhMJC_A = __cov_0nBWLHcRRjHOwAdrhMJC_A.__coverage__;
	if (!__cov_0nBWLHcRRjHOwAdrhMJC_A['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\dom.js']) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\dom.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\dom.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 1, "76": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0 }, "fnMap": { "1": { "line": 25, "name": "getText", "loc": { "start": { "line": 16, "column": 23 }, "end": { "line": 16, "column": 33 } } }, "2": { "line": 37, "name": "getFirstTextNode", "loc": { "start": { "line": 28, "column": 32 }, "end": { "line": 28, "column": 42 } } }, "3": { "line": 53, "name": "createElm", "loc": { "start": { "line": 44, "column": 25 }, "end": { "line": 44, "column": 38 } } }, "4": { "line": 80, "name": "removeElm", "loc": { "start": { "line": 67, "column": 25 }, "end": { "line": 67, "column": 25 } } }, "5": { "line": 89, "name": "createText", "loc": { "start": { "line": 74, "column": 26 }, "end": { "line": 74, "column": 26 } } }, "6": { "line": 99, "name": "hasClass", "loc": { "start": { "line": 82, "column": 24 }, "end": { "line": 82, "column": 38 } } }, "7": { "line": 115, "name": "addClass", "loc": { "start": { "line": 98, "column": 24 }, "end": { "line": 98, "column": 38 } } }, "8": { "line": 137, "name": "removeClass", "loc": { "start": { "line": 121, "column": 27 }, "end": { "line": 121, "column": 41 } } }, "9": { "line": 157, "name": "createOpt", "loc": { "start": { "line": 141, "column": 25 }, "end": { "line": 141, "column": 49 } } }, "10": { "line": 171, "name": "createCheckItem", "loc": { "start": { "line": 157, "column": 31 }, "end": { "line": 157, "column": 60 } } }, "11": { "line": 188, "name": "elm", "loc": { "start": { "line": 179, "column": 19 }, "end": { "line": 179, "column": 19 } } }, "12": { "line": 197, "name": "tag", "loc": { "start": { "line": 186, "column": 19 }, "end": { "line": 186, "column": 19 } } }, "13": { "line": 202, "name": "supportsClassList", "loc": { "start": { "line": 189, "column": 0 }, "end": { "line": 189, "column": 29 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 9, "column": 0 }, "start": { "line": 9, "column": 0 } }, "7": { "end": { "line": 16, "column": 7 }, "start": { "line": 16, "column": 7 } }, "8": { "end": { "line": 19, "column": 5 }, "start": { "line": 17, "column": 4 } }, "9": { "end": { "line": 18, "column": 8 }, "start": { "line": 18, "column": 8 } }, "10": { "end": { "line": 20, "column": 4 }, "start": { "line": 20, "column": 4 } }, "11": { "end": { "line": 28, "column": 7 }, "start": { "line": 28, "column": 7 } }, "12": { "end": { "line": 34, "column": 5 }, "start": { "line": 29, "column": 4 } }, "13": { "end": { "line": 30, "column": 8 }, "start": { "line": 30, "column": 8 } }, "14": { "end": { "line": 33, "column": 9 }, "start": { "line": 31, "column": 8 } }, "15": { "end": { "line": 32, "column": 12 }, "start": { "line": 32, "column": 12 } }, "16": { "end": { "line": 44, "column": 7 }, "start": { "line": 44, "column": 7 } }, "17": { "end": { "line": 44, "column": 38 }, "start": { "line": 44, "column": 38 } }, "18": { "end": { "line": 44, "column": 38 }, "start": { "line": 44, "column": 29 } }, "19": { "end": { "line": 45, "column": 4 }, "start": { "line": 45, "column": 4 } }, "20": { "end": { "line": 48, "column": 5 }, "start": { "line": 46, "column": 4 } }, "21": { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, "22": { "end": { "line": 50, "column": 4 }, "start": { "line": 50, "column": 4 } }, "23": { "end": { "line": 57, "column": 5 }, "start": { "line": 51, "column": 4 } }, "24": { "end": { "line": 52, "column": 8 }, "start": { "line": 52, "column": 8 } }, "25": { "end": { "line": 56, "column": 9 }, "start": { "line": 54, "column": 8 } }, "26": { "end": { "line": 55, "column": 12 }, "start": { "line": 55, "column": 12 } }, "27": { "end": { "line": 59, "column": 4 }, "start": { "line": 59, "column": 4 } }, "28": { "end": { "line": 67, "column": 7 }, "start": { "line": 67, "column": 7 } }, "29": { "end": { "line": 67, "column": 25 }, "start": { "line": 67, "column": 25 } }, "30": { "end": { "line": 74, "column": 7 }, "start": { "line": 74, "column": 7 } }, "31": { "end": { "line": 74, "column": 26 }, "start": { "line": 74, "column": 26 } }, "32": { "end": { "line": 82, "column": 7 }, "start": { "line": 82, "column": 7 } }, "33": { "end": { "line": 85, "column": 5 }, "start": { "line": 83, "column": 4 } }, "34": { "end": { "line": 84, "column": 8 }, "start": { "line": 84, "column": 8 } }, "35": { "end": { "line": 89, "column": 5 }, "start": { "line": 87, "column": 4 } }, "36": { "end": { "line": 88, "column": 8 }, "start": { "line": 88, "column": 8 } }, "37": { "end": { "line": 90, "column": 4 }, "start": { "line": 90, "column": 4 } }, "38": { "end": { "line": 98, "column": 7 }, "start": { "line": 98, "column": 7 } }, "39": { "end": { "line": 101, "column": 5 }, "start": { "line": 99, "column": 4 } }, "40": { "end": { "line": 100, "column": 8 }, "start": { "line": 100, "column": 8 } }, "41": { "end": { "line": 106, "column": 5 }, "start": { "line": 103, "column": 4 } }, "42": { "end": { "line": 104, "column": 8 }, "start": { "line": 104, "column": 8 } }, "43": { "end": { "line": 105, "column": 8 }, "start": { "line": 105, "column": 8 } }, "44": { "end": { "line": 113, "column": 5 }, "start": { "line": 108, "column": 4 } }, "45": { "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }, "46": { "end": { "line": 113, "column": 5 }, "start": { "line": 111, "column": 9 } }, "47": { "end": { "line": 112, "column": 8 }, "start": { "line": 112, "column": 8 } }, "48": { "end": { "line": 121, "column": 7 }, "start": { "line": 121, "column": 7 } }, "49": { "end": { "line": 124, "column": 5 }, "start": { "line": 122, "column": 4 } }, "50": { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 8 } }, "51": { "end": { "line": 129, "column": 5 }, "start": { "line": 126, "column": 4 } }, "52": { "end": { "line": 127, "column": 8 }, "start": { "line": 127, "column": 8 } }, "53": { "end": { "line": 128, "column": 8 }, "start": { "line": 128, "column": 8 } }, "54": { "end": { "line": 130, "column": 4 }, "start": { "line": 130, "column": 4 } }, "55": { "end": { "line": 131, "column": 4 }, "start": { "line": 131, "column": 4 } }, "56": { "end": { "line": 141, "column": 7 }, "start": { "line": 141, "column": 7 } }, "57": { "end": { "line": 142, "column": 4 }, "start": { "line": 142, "column": 4 } }, "58": { "end": { "line": 143, "column": 4 }, "start": { "line": 143, "column": 4 } }, "59": { "end": { "line": 146, "column": 4 }, "start": { "line": 146, "column": 4 } }, "60": { "end": { "line": 147, "column": 4 }, "start": { "line": 147, "column": 4 } }, "61": { "end": { "line": 157, "column": 7 }, "start": { "line": 157, "column": 7 } }, "62": { "end": { "line": 158, "column": 4 }, "start": { "line": 158, "column": 4 } }, "63": { "end": { "line": 159, "column": 4 }, "start": { "line": 159, "column": 4 } }, "64": { "end": { "line": 160, "column": 4 }, "start": { "line": 160, "column": 4 } }, "65": { "end": { "line": 166, "column": 4 }, "start": { "line": 166, "column": 4 } }, "66": { "end": { "line": 167, "column": 4 }, "start": { "line": 167, "column": 4 } }, "67": { "end": { "line": 168, "column": 4 }, "start": { "line": 168, "column": 4 } }, "68": { "end": { "line": 169, "column": 4 }, "start": { "line": 169, "column": 4 } }, "69": { "end": { "line": 170, "column": 4 }, "start": { "line": 170, "column": 4 } }, "70": { "end": { "line": 171, "column": 4 }, "start": { "line": 171, "column": 4 } }, "71": { "end": { "line": 179, "column": 7 }, "start": { "line": 179, "column": 7 } }, "72": { "end": { "line": 179, "column": 19 }, "start": { "line": 179, "column": 19 } }, "73": { "end": { "line": 186, "column": 7 }, "start": { "line": 186, "column": 7 } }, "74": { "end": { "line": 186, "column": 19 }, "start": { "line": 186, "column": 19 } }, "75": { "end": { "line": 191, "column": 1 }, "start": { "line": 189, "column": 0 } }, "76": { "end": { "line": 190, "column": 4 }, "start": { "line": 190, "column": 4 } } }, "branchMap": { "1": { "line": 26, "type": "if", "locations": [{ "end": { "line": 17, "column": 4 }, "start": { "line": 17, "column": 4 } }, { "end": { "line": 17, "column": 4 }, "start": { "line": 17, "column": 4 } }] }, "2": { "line": 40, "type": "if", "locations": [{ "end": { "line": 31, "column": 8 }, "start": { "line": 31, "column": 8 } }, { "end": { "line": 31, "column": 8 }, "start": { "line": 31, "column": 8 } }] }, "3": { "line": 59, "type": "if", "locations": [{ "end": { "line": 46, "column": 4 }, "start": { "line": 46, "column": 4 } }, { "end": { "line": 46, "column": 4 }, "start": { "line": 46, "column": 4 } }] }, "4": { "line": 67, "type": "if", "locations": [{ "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }, { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }] }, "5": { "line": 67, "type": "binary-expr", "locations": [{ "end": { "line": 54, "column": 12 }, "start": { "line": 54, "column": 12 } }, { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 28 } }] }, "6": { "line": 100, "type": "if", "locations": [{ "end": { "line": 83, "column": 4 }, "start": { "line": 83, "column": 4 } }, { "end": { "line": 83, "column": 4 }, "start": { "line": 83, "column": 4 } }] }, "7": { "line": 104, "type": "if", "locations": [{ "end": { "line": 87, "column": 4 }, "start": { "line": 87, "column": 4 } }, { "end": { "line": 87, "column": 4 }, "start": { "line": 87, "column": 4 } }] }, "8": { "line": 116, "type": "if", "locations": [{ "end": { "line": 99, "column": 4 }, "start": { "line": 99, "column": 4 } }, { "end": { "line": 99, "column": 4 }, "start": { "line": 99, "column": 4 } }] }, "9": { "line": 120, "type": "if", "locations": [{ "end": { "line": 103, "column": 4 }, "start": { "line": 103, "column": 4 } }, { "end": { "line": 103, "column": 4 }, "start": { "line": 103, "column": 4 } }] }, "10": { "line": 125, "type": "if", "locations": [{ "end": { "line": 108, "column": 4 }, "start": { "line": 108, "column": 4 } }, { "end": { "line": 108, "column": 4 }, "start": { "line": 108, "column": 4 } }] }, "11": { "line": 127, "type": "if", "locations": [{ "end": { "line": 111, "column": 9 }, "start": { "line": 111, "column": 9 } }, { "end": { "line": 111, "column": 9 }, "start": { "line": 111, "column": 9 } }] }, "12": { "line": 138, "type": "if", "locations": [{ "end": { "line": 122, "column": 4 }, "start": { "line": 122, "column": 4 } }, { "end": { "line": 122, "column": 4 }, "start": { "line": 122, "column": 4 } }] }, "13": { "line": 142, "type": "if", "locations": [{ "end": { "line": 126, "column": 4 }, "start": { "line": 126, "column": 4 } }, { "end": { "line": 126, "column": 4 }, "start": { "line": 126, "column": 4 } }] }, "14": { "line": 158, "type": "cond-expr", "locations": [{ "end": { "line": 142, "column": 21 }, "start": { "line": 142, "column": 29 } }, { "end": { "line": 142, "column": 4 }, "start": { "line": 142, "column": 36 } }] }, "15": { "line": 159, "type": "cond-expr", "locations": [{ "end": { "line": 143, "column": 14 }, "start": { "line": 144, "column": 12 } }, { "end": { "line": 143, "column": 4 }, "start": { "line": 145, "column": 12 } }] } }, "code": ["import {root} from './root';", "import {isArray, isString, isUndef} from './types';", "import {trim} from './string';", "", "/**", " * DOM utilities", " */", "", "const doc = root.document;", "", "/**", " * Returns text + text of children of given node", " * @param  {NodeElement} node", " * @return {String}", " */", "export const getText = (node) => {", "    if (isUndef(node.textContent)) {", "        return trim(node.innerText);", "    }", "    return trim(node.textContent);", "}", "", "/**", " * Returns the first text node contained in the supplied node", " * @param  {NodeElement} node node", " * @return {String}", " */", "export const getFirstTextNode = (node) => {", "    for (let i = 0; i < node.childNodes.length; i++) {", "        let n = node.childNodes[i];", "        if (n.nodeType === 3) {", "            return n.data;", "        }", "    }", "}", "", "/**", " * Creates an html element with given collection of attributes", " * @param  {String} tag a string of the html tag to create", " * @param  {Array} an undetermined number of arrays containing the with 2", " *                    items, the attribute name and its value ['id','myId']", " * @return {Object}     created element", " */", "export const createElm = (...args) => {", "    let tag = args[0];", "    if (!isString(tag)) {", "        return null;", "    }", "", "    let el = doc.createElement(tag);", "    for (let i = 0; i < args.length; i++) {", "        let arg = args[i];", "", "        if (isArray(arg) && arg.length === 2) {", "            el.setAttribute(arg[0], arg[1]);", "        }", "    }", "", "    return el;", "}", "", "/**", " * Removes passed node from DOM", " * @param  {DOMElement} node", " * @return {DOMElement} old node reference", " */", "export const removeElm = (node) => node.parentNode.removeChild(node);", "", "/**", " * Returns a text node with given text", " * @param  {String} txt", " * @return {Object}", " */", "export const createText = (txt) => doc.createTextNode(txt);", "", "/**", " * Determine whether the passed elements is assigned the given class", " * @param {DOMElement} ele DOM element", " * @param {String} cls CSS class name", " * @returns {Boolean}", " */", "export const hasClass = (ele, cls) => {", "    if (isUndef(ele)) {", "        return false;", "    }", "", "    if (supportsClassList()) {", "        return ele.classList.contains(cls);", "    }", "    return ele.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));", "}", "", "/**", " * Adds the specified class to the passed element", " * @param {DOMElement} ele DOM element", " * @param {String} cls CSS class name", " */", "export const addClass = (ele, cls) => {", "    if (isUndef(ele)) {", "        return;", "    }", "", "    if (supportsClassList()) {", "        ele.classList.add(cls);", "        return;", "    }", "", "    if (ele.className === '') {", "        ele.className = cls;", "    }", "    else if (!hasClass(ele, cls)) {", "        ele.className += ' ' + cls;", "    }", "}", "", "/**", " * Removes the specified class to the passed element", " * @param {DOMElement} ele DOM element", " * @param {String} cls CSS class name", " */", "export const removeClass = (ele, cls) => {", "    if (isUndef(ele)) {", "        return;", "    }", "", "    if (supportsClassList()) {", "        ele.classList.remove(cls);", "        return;", "    }", "    let reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)', 'g');", "    ele.className = ele.className.replace(reg, '');", "}", "", "/**", " * Creates and returns an option element", " * @param  {String}  text  option text", " * @param  {String}  value option value", " * @param  {Boolean} isSel whether option is selected", " * @return {Object}        option element", " */", "export const createOpt = (text, value, isSel) => {", "    let isSelected = isSel ? true : false;", "    let opt = isSelected ?", "            createElm('option', ['value', value], ['selected', 'true']) :", "            createElm('option', ['value', value]);", "    opt.appendChild(createText(text));", "    return opt;", "}", "", "/**", " * Creates and returns a checklist item", " * @param  {String} id  index of check item", " * @param  {String} chkValue  check item value", " * @param  {String} labelText check item label text", " * @return {Object}           li DOM element", " */", "export const createCheckItem = (id, chkValue, labelText) => {", "    let li = createElm('li');", "    let label = createElm('label', ['for', id]);", "    let check = createElm('input',", "        ['id', id],", "        ['name', id],", "        ['type', 'checkbox'],", "        ['value', chkValue]", "    );", "    label.appendChild(check);", "    label.appendChild(createText(labelText));", "    li.appendChild(label);", "    li.label = label;", "    li.check = check;", "    return li;", "}", "", "/**", " * Returns the element matching the supplied Id", " * @param  {String} id  Element identifier", " * @return {DOMElement}", " */", "export const elm = (id) => doc.getElementById(id);", "", "/**", " * Returns list of element matching the supplied tag name", " * @param  {String} tagname  Tag name", " * @return {NodeList}", " */", "export const tag = (o, tagname) => o.getElementsByTagName(tagname);", "", "// HTML5 classList API", "function supportsClassList() {", "    return doc.documentElement.classList;", "}", ""] };
	}
	__cov_0nBWLHcRRjHOwAdrhMJC_A = __cov_0nBWLHcRRjHOwAdrhMJC_A['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\dom.js'];
	__cov_0nBWLHcRRjHOwAdrhMJC_A.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_0nBWLHcRRjHOwAdrhMJC_A.s['2']++;exports.tag = exports.elm = exports.createCheckItem = exports.createOpt = exports.removeClass = exports.addClass = exports.hasClass = exports.createText = exports.removeElm = exports.createElm = exports.getFirstTextNode = exports.getText = undefined;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['3']++;var _root = __webpack_require__(2);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['4']++;var _types = __webpack_require__(4);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['5']++;var _string = __webpack_require__(5);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['6']++;var doc = _root.root.document;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['7']++;var getText = exports.getText = function getText(node) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['1']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['8']++;if ((0, _types.isUndef)(node.textContent)) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['1'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['9']++;return (0, _string.trim)(node.innerText);
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['1'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['10']++;return (0, _string.trim)(node.textContent);
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['11']++;var getFirstTextNode = exports.getFirstTextNode = function getFirstTextNode(node) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['2']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['12']++;for (var i = 0; i < node.childNodes.length; i++) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.s['13']++;var n = node.childNodes[i];__cov_0nBWLHcRRjHOwAdrhMJC_A.s['14']++;if (n.nodeType === 3) {
	         __cov_0nBWLHcRRjHOwAdrhMJC_A.b['2'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['15']++;return n.data;
	      } else {
	         __cov_0nBWLHcRRjHOwAdrhMJC_A.b['2'][1]++;
	      }
	   }
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['16']++;var createElm = exports.createElm = function createElm() {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['3']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['17']++;for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.s['18']++;args[_key] = arguments[_key];
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['19']++;var tag = args[0];__cov_0nBWLHcRRjHOwAdrhMJC_A.s['20']++;if (!(0, _types.isString)(tag)) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['3'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['21']++;return null;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['3'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['22']++;var el = doc.createElement(tag);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['23']++;for (var i = 0; i < args.length; i++) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.s['24']++;var arg = args[i];__cov_0nBWLHcRRjHOwAdrhMJC_A.s['25']++;if ((__cov_0nBWLHcRRjHOwAdrhMJC_A.b['5'][0]++, (0, _types.isArray)(arg)) && (__cov_0nBWLHcRRjHOwAdrhMJC_A.b['5'][1]++, arg.length === 2)) {
	         __cov_0nBWLHcRRjHOwAdrhMJC_A.b['4'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['26']++;el.setAttribute(arg[0], arg[1]);
	      } else {
	         __cov_0nBWLHcRRjHOwAdrhMJC_A.b['4'][1]++;
	      }
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['27']++;return el;
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['28']++;var removeElm = exports.removeElm = function removeElm(node) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['4']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['29']++;return node.parentNode.removeChild(node);
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['30']++;var createText = exports.createText = function createText(txt) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['5']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['31']++;return doc.createTextNode(txt);
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['32']++;var hasClass = exports.hasClass = function hasClass(ele, cls) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['6']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['33']++;if ((0, _types.isUndef)(ele)) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['6'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['34']++;return false;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['6'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['35']++;if (supportsClassList()) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['7'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['36']++;return ele.classList.contains(cls);
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['7'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['37']++;return ele.className.match(new RegExp('(\\s|^)' + cls + '(\\s|$)'));
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['38']++;var addClass = exports.addClass = function addClass(ele, cls) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['7']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['39']++;if ((0, _types.isUndef)(ele)) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['8'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['40']++;return;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['8'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['41']++;if (supportsClassList()) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['9'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['42']++;ele.classList.add(cls);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['43']++;return;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['9'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['44']++;if (ele.className === '') {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['10'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['45']++;ele.className = cls;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['10'][1]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['46']++;if (!hasClass(ele, cls)) {
	         __cov_0nBWLHcRRjHOwAdrhMJC_A.b['11'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['47']++;ele.className += ' ' + cls;
	      } else {
	         __cov_0nBWLHcRRjHOwAdrhMJC_A.b['11'][1]++;
	      }
	   }
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['48']++;var removeClass = exports.removeClass = function removeClass(ele, cls) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['8']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['49']++;if ((0, _types.isUndef)(ele)) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['12'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['50']++;return;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['12'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['51']++;if (supportsClassList()) {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['13'][0]++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['52']++;ele.classList.remove(cls);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['53']++;return;
	   } else {
	      __cov_0nBWLHcRRjHOwAdrhMJC_A.b['13'][1]++;
	   }__cov_0nBWLHcRRjHOwAdrhMJC_A.s['54']++;var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)', 'g');__cov_0nBWLHcRRjHOwAdrhMJC_A.s['55']++;ele.className = ele.className.replace(reg, '');
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['56']++;var createOpt = exports.createOpt = function createOpt(text, value, isSel) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['9']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['57']++;var isSelected = isSel ? (__cov_0nBWLHcRRjHOwAdrhMJC_A.b['14'][0]++, true) : (__cov_0nBWLHcRRjHOwAdrhMJC_A.b['14'][1]++, false);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['58']++;var opt = isSelected ? (__cov_0nBWLHcRRjHOwAdrhMJC_A.b['15'][0]++, createElm('option', ['value', value], ['selected', 'true'])) : (__cov_0nBWLHcRRjHOwAdrhMJC_A.b['15'][1]++, createElm('option', ['value', value]));__cov_0nBWLHcRRjHOwAdrhMJC_A.s['59']++;opt.appendChild(createText(text));__cov_0nBWLHcRRjHOwAdrhMJC_A.s['60']++;return opt;
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['61']++;var createCheckItem = exports.createCheckItem = function createCheckItem(id, chkValue, labelText) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['10']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['62']++;var li = createElm('li');__cov_0nBWLHcRRjHOwAdrhMJC_A.s['63']++;var label = createElm('label', ['for', id]);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['64']++;var check = createElm('input', ['id', id], ['name', id], ['type', 'checkbox'], ['value', chkValue]);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['65']++;label.appendChild(check);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['66']++;label.appendChild(createText(labelText));__cov_0nBWLHcRRjHOwAdrhMJC_A.s['67']++;li.appendChild(label);__cov_0nBWLHcRRjHOwAdrhMJC_A.s['68']++;li.label = label;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['69']++;li.check = check;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['70']++;return li;
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['71']++;var elm = exports.elm = function elm(id) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['11']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['72']++;return doc.getElementById(id);
	};__cov_0nBWLHcRRjHOwAdrhMJC_A.s['73']++;var tag = exports.tag = function tag(o, tagname) {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['12']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['74']++;return o.getElementsByTagName(tagname);
	};function supportsClassList() {
	   __cov_0nBWLHcRRjHOwAdrhMJC_A.f['13']++;__cov_0nBWLHcRRjHOwAdrhMJC_A.s['76']++;return doc.documentElement.classList;
	}

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	
	var __cov_IokL9zF7HjMP9WfXy811pQ = Function('return this')();
	if (!__cov_IokL9zF7HjMP9WfXy811pQ.__coverage__) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.__coverage__ = {};
	}
	__cov_IokL9zF7HjMP9WfXy811pQ = __cov_IokL9zF7HjMP9WfXy811pQ.__coverage__;
	if (!__cov_IokL9zF7HjMP9WfXy811pQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\types.js']) {
	   __cov_IokL9zF7HjMP9WfXy811pQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\types.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\types.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0 }, "b": { "1": [0, 0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 }, "fnMap": { "1": { "line": 17, "name": "EMPTY_FN", "loc": { "start": { "line": 12, "column": 24 }, "end": { "line": 12, "column": 35 } } }, "2": { "line": 24, "name": "isObj", "loc": { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 4 } } }, "3": { "line": 33, "name": "isFn", "loc": { "start": { "line": 28, "column": 4 }, "end": { "line": 28, "column": 4 } } }, "4": { "line": 42, "name": "isArray", "loc": { "start": { "line": 36, "column": 4 }, "end": { "line": 36, "column": 4 } } }, "5": { "line": 51, "name": "isString", "loc": { "start": { "line": 44, "column": 4 }, "end": { "line": 44, "column": 4 } } }, "6": { "line": 60, "name": "isNumber", "loc": { "start": { "line": 52, "column": 4 }, "end": { "line": 52, "column": 4 } } }, "7": { "line": 69, "name": "isUndef", "loc": { "start": { "line": 59, "column": 23 }, "end": { "line": 59, "column": 23 } } }, "8": { "line": 78, "name": "isNull", "loc": { "start": { "line": 66, "column": 22 }, "end": { "line": 66, "column": 22 } } }, "9": { "line": 87, "name": "isEmpty", "loc": { "start": { "line": 73, "column": 23 }, "end": { "line": 73, "column": 23 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "3": { "end": { "line": 12, "column": 7 }, "start": { "line": 12, "column": 7 } }, "4": { "end": { "line": 19, "column": 7 }, "start": { "line": 19, "column": 7 } }, "5": { "end": { "line": 20, "column": 4 }, "start": { "line": 20, "column": 4 } }, "6": { "end": { "line": 27, "column": 7 }, "start": { "line": 27, "column": 7 } }, "7": { "end": { "line": 28, "column": 4 }, "start": { "line": 28, "column": 4 } }, "8": { "end": { "line": 35, "column": 7 }, "start": { "line": 35, "column": 7 } }, "9": { "end": { "line": 36, "column": 4 }, "start": { "line": 36, "column": 4 } }, "10": { "end": { "line": 43, "column": 7 }, "start": { "line": 43, "column": 7 } }, "11": { "end": { "line": 44, "column": 4 }, "start": { "line": 44, "column": 4 } }, "12": { "end": { "line": 51, "column": 7 }, "start": { "line": 51, "column": 7 } }, "13": { "end": { "line": 52, "column": 4 }, "start": { "line": 52, "column": 4 } }, "14": { "end": { "line": 59, "column": 7 }, "start": { "line": 59, "column": 7 } }, "15": { "end": { "line": 59, "column": 23 }, "start": { "line": 59, "column": 23 } }, "16": { "end": { "line": 66, "column": 7 }, "start": { "line": 66, "column": 7 } }, "17": { "end": { "line": 66, "column": 22 }, "start": { "line": 66, "column": 22 } }, "18": { "end": { "line": 73, "column": 7 }, "start": { "line": 73, "column": 7 } }, "19": { "end": { "line": 73, "column": 23 }, "start": { "line": 73, "column": 23 } } }, "branchMap": { "1": { "line": 88, "type": "binary-expr", "locations": [{ "end": { "line": 73, "column": 32 }, "start": { "line": 73, "column": 32 } }, { "end": { "line": 73, "column": 32 }, "start": { "line": 73, "column": 48 } }, { "end": { "line": 73, "column": 23 }, "start": { "line": 73, "column": 63 } }] } }, "code": ["", "/**", " * Types utilities", " */", "", "const UNDEFINED = void 0;", "", "/**", " * Return an empty function", " * @return {Function}", " */", "export const EMPTY_FN = function() {};", "", "/**", " * Check passed argument is an object", " * @param  {Object}  obj", " * @return {Boolean}", " */", "export const isObj =", "    (obj) => Object.prototype.toString.call(obj) === '[object Object]';", "", "/**", " * Check passed argument is a function", " * @param  {Function} obj", " * @return {Boolean}", " */", "export const isFn =", "    (obj) => Object.prototype.toString.call(obj) === '[object Function]';", "", "/**", " * Check passed argument is an array", " * @param  {Array}  obj", " * @return {Boolean}", " */", "export const isArray =", "    (obj) => Object.prototype.toString.call(obj) === '[object Array]';", "", "/**", " * Check passed argument is a string", " * @param {String} obj objue", " * @returns {Boolean}", " */", "export const isString =", "    (obj) => Object.prototype.toString.call(obj) === '[object String]';", "", "/**", " * Check passed argument is a number", " * @param {Number} obj", " * @returns {Boolean}", " */", "export const isNumber =", "    (obj) => Object.prototype.toString.call(obj) === '[object Number]';", "", "/**", " * Check passed argument is undefined", " * @param  {Any}  obj", " * @return {Boolean}", " */", "export const isUndef = (obj) => obj === UNDEFINED;", "", "/**", " * Check passed argument is null", " * @param  {Any}  obj", " * @return {Boolean}", " */", "export const isNull = (obj) => obj === null;", "", "/**", " * Check passed argument is empty (undefined, null or empty string)", " * @param  {Any}  obj", " * @return {Boolean}", " */", "export const isEmpty = (obj) => isUndef(obj) || isNull(obj) || obj.length === 0;", ""] };
	}
	__cov_IokL9zF7HjMP9WfXy811pQ = __cov_IokL9zF7HjMP9WfXy811pQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\types.js'];
	__cov_IokL9zF7HjMP9WfXy811pQ.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_IokL9zF7HjMP9WfXy811pQ.s['2']++;var UNDEFINED = void 0;__cov_IokL9zF7HjMP9WfXy811pQ.s['3']++;var EMPTY_FN = exports.EMPTY_FN = function EMPTY_FN() {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['1']++;
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['4']++;var isObj = exports.isObj = function isObj(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['2']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['5']++;return Object.prototype.toString.call(obj) === '[object Object]';
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['6']++;var isFn = exports.isFn = function isFn(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['3']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['7']++;return Object.prototype.toString.call(obj) === '[object Function]';
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['8']++;var isArray = exports.isArray = function isArray(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['4']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['9']++;return Object.prototype.toString.call(obj) === '[object Array]';
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['10']++;var isString = exports.isString = function isString(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['5']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['11']++;return Object.prototype.toString.call(obj) === '[object String]';
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['12']++;var isNumber = exports.isNumber = function isNumber(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['6']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['13']++;return Object.prototype.toString.call(obj) === '[object Number]';
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['14']++;var isUndef = exports.isUndef = function isUndef(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['7']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['15']++;return obj === UNDEFINED;
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['16']++;var isNull = exports.isNull = function isNull(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['8']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['17']++;return obj === null;
	};__cov_IokL9zF7HjMP9WfXy811pQ.s['18']++;var isEmpty = exports.isEmpty = function isEmpty(obj) {
	   __cov_IokL9zF7HjMP9WfXy811pQ.f['9']++;__cov_IokL9zF7HjMP9WfXy811pQ.s['19']++;return (__cov_IokL9zF7HjMP9WfXy811pQ.b['1'][0]++, isUndef(obj)) || (__cov_IokL9zF7HjMP9WfXy811pQ.b['1'][1]++, isNull(obj)) || (__cov_IokL9zF7HjMP9WfXy811pQ.b['1'][2]++, obj.length === 0);
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_L2FjdLMcjZwuZ4oKt27KTQ = Function('return this')();
	if (!__cov_L2FjdLMcjZwuZ4oKt27KTQ.__coverage__) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ.__coverage__ = {};
	}
	__cov_L2FjdLMcjZwuZ4oKt27KTQ = __cov_L2FjdLMcjZwuZ4oKt27KTQ.__coverage__;
	if (!__cov_L2FjdLMcjZwuZ4oKt27KTQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\string.js']) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\string.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\string.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0 }, "fnMap": { "1": { "line": 19, "name": "trim", "loc": { "start": { "line": 12, "column": 20 }, "end": { "line": 12, "column": 30 } } }, "2": { "line": 31, "name": "isEmpty", "loc": { "start": { "line": 24, "column": 23 }, "end": { "line": 24, "column": 23 } } }, "3": { "line": 40, "name": "rgxEsc", "loc": { "start": { "line": 31, "column": 22 }, "end": { "line": 31, "column": 32 } } }, "4": { "line": 52, "name": "matchCase", "loc": { "start": { "line": 43, "column": 25 }, "end": { "line": 43, "column": 58 } } }, "5": { "line": 70, "name": "contains", "loc": { "start": { "line": 59, "column": 24 }, "end": { "line": 60, "column": 33 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 12, "column": 7 }, "start": { "line": 12, "column": 7 } }, "5": { "end": { "line": 15, "column": 5 }, "start": { "line": 13, "column": 4 } }, "6": { "end": { "line": 14, "column": 8 }, "start": { "line": 14, "column": 8 } }, "7": { "end": { "line": 16, "column": 4 }, "start": { "line": 16, "column": 4 } }, "8": { "end": { "line": 24, "column": 7 }, "start": { "line": 24, "column": 7 } }, "9": { "end": { "line": 24, "column": 23 }, "start": { "line": 24, "column": 23 } }, "10": { "end": { "line": 31, "column": 7 }, "start": { "line": 31, "column": 7 } }, "11": { "end": { "line": 32, "column": 4 }, "start": { "line": 32, "column": 4 } }, "12": { "end": { "line": 33, "column": 4 }, "start": { "line": 33, "column": 4 } }, "13": { "end": { "line": 34, "column": 4 }, "start": { "line": 34, "column": 4 } }, "14": { "end": { "line": 43, "column": 7 }, "start": { "line": 43, "column": 7 } }, "15": { "end": { "line": 43, "column": 58 }, "start": { "line": 43, "column": 58 } }, "16": { "end": { "line": 46, "column": 5 }, "start": { "line": 44, "column": 4 } }, "17": { "end": { "line": 45, "column": 8 }, "start": { "line": 45, "column": 8 } }, "18": { "end": { "line": 47, "column": 4 }, "start": { "line": 47, "column": 4 } }, "19": { "end": { "line": 59, "column": 7 }, "start": { "line": 59, "column": 7 } }, "20": { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, "21": { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, "22": { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, "23": { "end": { "line": 63, "column": 4 }, "start": { "line": 63, "column": 4 } }, "24": { "end": { "line": 64, "column": 4 }, "start": { "line": 64, "column": 4 } }, "25": { "end": { "line": 68, "column": 5 }, "start": { "line": 65, "column": 4 } }, "26": { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 8 } }, "27": { "end": { "line": 67, "column": 8 }, "start": { "line": 67, "column": 8 } }, "28": { "end": { "line": 74, "column": 5 }, "start": { "line": 69, "column": 4 } }, "29": { "end": { "line": 70, "column": 8 }, "start": { "line": 70, "column": 8 } }, "30": { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 8 } }, "31": { "end": { "line": 75, "column": 4 }, "start": { "line": 75, "column": 4 } } }, "branchMap": { "1": { "line": 20, "type": "if", "locations": [{ "end": { "line": 13, "column": 4 }, "start": { "line": 13, "column": 4 } }, { "end": { "line": 13, "column": 4 }, "start": { "line": 13, "column": 4 } }] }, "2": { "line": 53, "type": "cond-expr", "locations": [{ "end": { "line": 43, "column": 58 }, "start": { "line": 43, "column": 58 } }, { "end": { "line": 43, "column": 58 }, "start": { "line": 43, "column": 48 } }] }, "3": { "line": 53, "type": "binary-expr", "locations": [{ "end": { "line": 43, "column": 58 }, "start": { "line": 43, "column": 58 } }, { "end": { "line": 43, "column": 58 }, "start": { "line": 43, "column": 58 } }] }, "4": { "line": 55, "type": "if", "locations": [{ "end": { "line": 44, "column": 4 }, "start": { "line": 44, "column": 4 } }, { "end": { "line": 44, "column": 4 }, "start": { "line": 44, "column": 4 } }] }, "5": { "line": 71, "type": "cond-expr", "locations": [{ "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, { "end": { "line": 60, "column": 33 }, "start": { "line": 59, "column": 50 } }] }, "6": { "line": 71, "type": "binary-expr", "locations": [{ "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }] }, "7": { "line": 72, "type": "cond-expr", "locations": [{ "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, { "end": { "line": 60, "column": 33 }, "start": { "line": 59, "column": 73 } }] }, "8": { "line": 72, "type": "binary-expr", "locations": [{ "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }] }, "9": { "line": 73, "type": "cond-expr", "locations": [{ "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 23 } }] }, "10": { "line": 73, "type": "binary-expr", "locations": [{ "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }, { "end": { "line": 60, "column": 33 }, "start": { "line": 60, "column": 33 } }] }, "11": { "line": 78, "type": "cond-expr", "locations": [{ "end": { "line": 64, "column": 19 }, "start": { "line": 64, "column": 35 } }, { "end": { "line": 64, "column": 4 }, "start": { "line": 64, "column": 41 } }] }, "12": { "line": 79, "type": "if", "locations": [{ "end": { "line": 65, "column": 4 }, "start": { "line": 65, "column": 4 } }, { "end": { "line": 65, "column": 4 }, "start": { "line": 65, "column": 4 } }] }, "13": { "line": 83, "type": "if", "locations": [{ "end": { "line": 69, "column": 4 }, "start": { "line": 69, "column": 4 } }, { "end": { "line": 69, "column": 4 }, "start": { "line": 69, "column": 4 } }] } }, "code": ["import {remove as removeDiacritics} from 'diacritics';", "", "/**", " * String utilities", " */", "", "/**", " * Removes whitespace from both sides of passed string", " * @param  {String} text", " * @return {String}", " */", "export const trim = (text) => {", "    if (text.trim) {", "        return text.trim();", "    }", "    return text.replace(/^\\s*|\\s*$/g, '');", "}", "", "/**", " * Checks if passed string is empty", " * @param {String} text", " * @return {Boolean}", " */", "export const isEmpty = (text) => trim(text) === '';", "", "/**", " * Makes regex safe string by escaping special characters from passed string", " * @param {String} text", " * @return {String} escaped string", " */", "export const rgxEsc = (text) => {", "    let chars = /[-\\/\\\\^$*+?.()|[\\]{}]/g;", "    let escMatch = '\\\\$&';", "    return String(text).replace(chars, escMatch);", "}", "", "/**", " * Returns passed string as lowercase if caseSensitive flag set false. By", " * default it returns the string with no casing changes.", " * @param {String} text", " * @return {String} string", " */", "export const matchCase = (text, caseSensitive = false) => {", "    if (!caseSensitive) {", "        return text.toLowerCase();", "    }", "    return text;", "}", "", "/**", " * Checks if passed data contains the searched term", " * @param  {String} term                Searched term", " * @param  {String} data                Data string", " * @param  {Boolean} exactMatch         Exact match", " * @param  {Boolean} caseSensitive      Case sensitive", " * @param  {Boolean} ignoreDiacritics   Ignore diacritics", " * @return {Boolean}", " */", "export const contains = (term, data, exactMatch = false, caseSensitive = false,", "    ignoreDiacritics = false) => {", "    // Improved by Cedric Wartel (cwl) automatic exact match for selects and", "    // special characters are now filtered", "    let regexp;", "    let modifier = caseSensitive ? 'g' : 'gi';", "    if (ignoreDiacritics) {", "        term = removeDiacritics(term);", "        data = removeDiacritics(data);", "    }", "    if (exactMatch) {", "        regexp = new RegExp('(^\\\\s*)' + rgxEsc(term) + '(\\\\s*$)',", "            modifier);", "    } else {", "        regexp = new RegExp(rgxEsc(term), modifier);", "    }", "    return regexp.test(data);", "}", ""] };
	}
	__cov_L2FjdLMcjZwuZ4oKt27KTQ = __cov_L2FjdLMcjZwuZ4oKt27KTQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\string.js'];
	__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['2']++;exports.contains = exports.matchCase = exports.rgxEsc = exports.isEmpty = exports.trim = undefined;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['3']++;var _diacritics = __webpack_require__(6);__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['4']++;var trim = exports.trim = function trim(text) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ.f['1']++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['5']++;if (text.trim) {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['1'][0]++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['6']++;return text.trim();
	   } else {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['1'][1]++;
	   }__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['7']++;return text.replace(/^\s*|\s*$/g, '');
	};__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['8']++;var isEmpty = exports.isEmpty = function isEmpty(text) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ.f['2']++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['9']++;return trim(text) === '';
	};__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['10']++;var rgxEsc = exports.rgxEsc = function rgxEsc(text) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ.f['3']++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['11']++;var chars = /[-\/\\^$*+?.()|[\]{}]/g;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['12']++;var escMatch = '\\$&';__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['13']++;return String(text).replace(chars, escMatch);
	};__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['14']++;var matchCase = exports.matchCase = function matchCase(text) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ.f['4']++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['15']++;var caseSensitive = (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['3'][0]++, arguments.length > 1) && (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['3'][1]++, arguments[1] !== undefined) ? (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['2'][0]++, arguments[1]) : (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['2'][1]++, false);__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['16']++;if (!caseSensitive) {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['4'][0]++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['17']++;return text.toLowerCase();
	   } else {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['4'][1]++;
	   }__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['18']++;return text;
	};__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['19']++;var contains = exports.contains = function contains(term, data) {
	   __cov_L2FjdLMcjZwuZ4oKt27KTQ.f['5']++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['20']++;var exactMatch = (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['6'][0]++, arguments.length > 2) && (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['6'][1]++, arguments[2] !== undefined) ? (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['5'][0]++, arguments[2]) : (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['5'][1]++, false);__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['21']++;var caseSensitive = (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['8'][0]++, arguments.length > 3) && (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['8'][1]++, arguments[3] !== undefined) ? (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['7'][0]++, arguments[3]) : (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['7'][1]++, false);__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['22']++;var ignoreDiacritics = (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['10'][0]++, arguments.length > 4) && (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['10'][1]++, arguments[4] !== undefined) ? (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['9'][0]++, arguments[4]) : (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['9'][1]++, false);__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['23']++;var regexp = void 0;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['24']++;var modifier = caseSensitive ? (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['11'][0]++, 'g') : (__cov_L2FjdLMcjZwuZ4oKt27KTQ.b['11'][1]++, 'gi');__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['25']++;if (ignoreDiacritics) {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['12'][0]++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['26']++;term = (0, _diacritics.remove)(term);__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['27']++;data = (0, _diacritics.remove)(data);
	   } else {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['12'][1]++;
	   }__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['28']++;if (exactMatch) {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['13'][0]++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['29']++;regexp = new RegExp('(^\\s*)' + rgxEsc(term) + '(\\s*$)', modifier);
	   } else {
	      __cov_L2FjdLMcjZwuZ4oKt27KTQ.b['13'][1]++;__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['30']++;regexp = new RegExp(rgxEsc(term), modifier);
	   }__cov_L2FjdLMcjZwuZ4oKt27KTQ.s['31']++;return regexp.test(data);
	};

/***/ },
/* 6 */
/***/ function(module, exports) {

	exports.remove = removeDiacritics;
	
	var replacementList = [
	  {
	    base: ' ',
	    chars: "\u00A0",
	  }, {
	    base: '0',
	    chars: "\u07C0",
	  }, {
	    base: 'A',
	    chars: "\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F",
	  }, {
	    base: 'AA',
	    chars: "\uA732",
	  }, {
	    base: 'AE',
	    chars: "\u00C6\u01FC\u01E2",
	  }, {
	    base: 'AO',
	    chars: "\uA734",
	  }, {
	    base: 'AU',
	    chars: "\uA736",
	  }, {
	    base: 'AV',
	    chars: "\uA738\uA73A",
	  }, {
	    base: 'AY',
	    chars: "\uA73C",
	  }, {
	    base: 'B',
	    chars: "\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0181",
	  }, {
	    base: 'C',
	    chars: "\u24b8\uff23\uA73E\u1E08\u0106\u0043\u0108\u010A\u010C\u00C7\u0187\u023B",
	  }, {
	    base: 'D',
	    chars: "\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018A\u0189\u1D05\uA779",
	  }, {
	    base: 'Dh',
	    chars: "\u00D0",
	  }, {
	    base: 'DZ',
	    chars: "\u01F1\u01C4",
	  }, {
	    base: 'Dz',
	    chars: "\u01F2\u01C5",
	  }, {
	    base: 'E',
	    chars: "\u025B\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E\u1D07",
	  }, {
	    base: 'F',
	    chars: "\uA77C\u24BB\uFF26\u1E1E\u0191\uA77B",
	  }, {
	    base: 'G',
	    chars: "\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E\u0262",
	  }, {
	    base: 'H',
	    chars: "\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D",
	  }, {
	    base: 'I',
	    chars: "\u24BE\uFF29\xCC\xCD\xCE\u0128\u012A\u012C\u0130\xCF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197",
	  }, {
	    base: 'J',
	    chars: "\u24BF\uFF2A\u0134\u0248\u0237",
	  }, {
	    base: 'K',
	    chars: "\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2",
	  }, {
	    base: 'L',
	    chars: "\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780",
	  }, {
	    base: 'LJ',
	    chars: "\u01C7",
	  }, {
	    base: 'Lj',
	    chars: "\u01C8",
	  }, {
	    base: 'M',
	    chars: "\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C\u03FB",
	  }, {
	    base: 'N',
	    chars: "\uA7A4\u0220\u24C3\uFF2E\u01F8\u0143\xD1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u019D\uA790\u1D0E",
	  }, {
	    base: 'NJ',
	    chars: "\u01CA",
	  }, {
	    base: 'Nj',
	    chars: "\u01CB",
	  }, {
	    base: 'O',
	    chars: "\u24C4\uFF2F\xD2\xD3\xD4\u1ED2\u1ED0\u1ED6\u1ED4\xD5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\xD6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\xD8\u01FE\u0186\u019F\uA74A\uA74C",
	  }, {
	    base: 'OE',
	    chars: "\u0152",
	  }, {
	    base: 'OI',
	    chars: "\u01A2",
	  }, {
	    base: 'OO',
	    chars: "\uA74E",
	  }, {
	    base: 'OU',
	    chars: "\u0222",
	  }, {
	    base: 'P',
	    chars: "\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754",
	  }, {
	    base: 'Q',
	    chars: "\u24C6\uFF31\uA756\uA758\u024A",
	  }, {
	    base: 'R',
	    chars: "\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782",
	  }, {
	    base: 'S',
	    chars: "\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784",
	  }, {
	    base: 'T',
	    chars: "\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786",
	  }, {
	    base: 'Th',
	    chars: "\u00DE",
	  }, {
	    base: 'TZ',
	    chars: "\uA728",
	  }, {
	    base: 'U',
	    chars: "\u24CA\uFF35\xD9\xDA\xDB\u0168\u1E78\u016A\u1E7A\u016C\xDC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244",
	  }, {
	    base: 'V',
	    chars: "\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245",
	  }, {
	    base: 'VY',
	    chars: "\uA760",
	  }, {
	    base: 'W',
	    chars: "\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72",
	  }, {
	    base: 'X',
	    chars: "\u24CD\uFF38\u1E8A\u1E8C",
	  }, {
	    base: 'Y',
	    chars: "\u24CE\uFF39\u1EF2\xDD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE",
	  }, {
	    base: 'Z',
	    chars: "\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762",
	  }, {
	    base: 'a',
	    chars: "\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250\u0251",
	  }, {
	    base: 'aa',
	    chars: "\uA733",
	  }, {
	    base: 'ae',
	    chars: "\u00E6\u01FD\u01E3",
	  }, {
	    base: 'ao',
	    chars: "\uA735",
	  }, {
	    base: 'au',
	    chars: "\uA737",
	  }, {
	    base: 'av',
	    chars: "\uA739\uA73B",
	  }, {
	    base: 'ay',
	    chars: "\uA73D",
	  }, {
	    base: 'b',
	    chars: "\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253\u0182",
	  }, {
	    base: 'c',
	    chars: "\uFF43\u24D2\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184",
	  }, {
	    base: 'd',
	    chars: "\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\u018B\u13E7\u0501\uA7AA",
	  }, {
	    base: 'dh',
	    chars: "\u00F0",
	  }, {
	    base: 'dz',
	    chars: "\u01F3\u01C6",
	  }, {
	    base: 'e',
	    chars: "\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u01DD",
	  }, {
	    base: 'f',
	    chars: "\u24D5\uFF46\u1E1F\u0192",
	  }, {
	    base: 'ff',
	    chars: "\uFB00",
	  }, {
	    base: 'fi',
	    chars: "\uFB01",
	  }, {
	    base: 'fl',
	    chars: "\uFB02",
	  }, {
	    base: 'ffi',
	    chars: "\uFB03",
	  }, {
	    base: 'ffl',
	    chars: "\uFB04",
	  }, {
	    base: 'g',
	    chars: "\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\uA77F\u1D79",
	  }, {
	    base: 'h',
	    chars: "\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265",
	  }, {
	    base: 'hv',
	    chars: "\u0195",
	  }, {
	    base: 'i',
	    chars: "\u24D8\uFF49\xEC\xED\xEE\u0129\u012B\u012D\xEF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131",
	  }, {
	    base: 'j',
	    chars: "\u24D9\uFF4A\u0135\u01F0\u0249",
	  }, {
	    base: 'k',
	    chars: "\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3",
	  }, {
	    base: 'l',
	    chars: "\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747\u026D",
	  }, {
	    base: 'lj',
	    chars: "\u01C9",
	  }, {
	    base: 'm',
	    chars: "\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F",
	  }, {
	    base: 'n',
	    chars: "\u24DD\uFF4E\u01F9\u0144\xF1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5\u043B\u0509",
	  }, {
	    base: 'nj',
	    chars: "\u01CC",
	  }, {
	    base: 'o',
	    chars: "\u24DE\uFF4F\xF2\xF3\xF4\u1ED3\u1ED1\u1ED7\u1ED5\xF5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\xF6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\xF8\u01FF\uA74B\uA74D\u0275\u0254\u1D11",
	  }, {
	    base: 'oe',
	    chars: "\u0153",
	  }, {
	    base: 'oi',
	    chars: "\u01A3",
	  }, {
	    base: 'oo',
	    chars: "\uA74F",
	  }, {
	    base: 'ou',
	    chars: "\u0223",
	  }, {
	    base: 'p',
	    chars: "\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755\u03C1",
	  }, {
	    base: 'q',
	    chars: "\u24E0\uFF51\u024B\uA757\uA759",
	  }, {
	    base: 'r',
	    chars: "\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783",
	  }, {
	    base: 's',
	    chars: "\u24E2\uFF53\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B\u0282",
	  }, {
	    base: 'ss',
	    chars: "\xDF",
	  }, {
	    base: 't',
	    chars: "\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787",
	  }, {
	    base: 'th',
	    chars: "\u00FE",
	  }, {
	    base: 'tz',
	    chars: "\uA729",
	  }, {
	    base: 'u',
	    chars: "\u24E4\uFF55\xF9\xFA\xFB\u0169\u1E79\u016B\u1E7B\u016D\xFC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289",
	  }, {
	    base: 'v',
	    chars: "\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C",
	  }, {
	    base: 'vy',
	    chars: "\uA761",
	  }, {
	    base: 'w',
	    chars: "\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73",
	  }, {
	    base: 'x',
	    chars: "\u24E7\uFF58\u1E8B\u1E8D",
	  }, {
	    base: 'y',
	    chars: "\u24E8\uFF59\u1EF3\xFD\u0177\u1EF9\u0233\u1E8F\xFF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF",
	  }, {
	    base: 'z',
	    chars: "\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763",
	  }
	];
	
	var diacriticsMap = {};
	for (var i = 0; i < replacementList.length; i += 1) {
	  var chars = replacementList[i].chars;
	  for (var j = 0; j < chars.length; j += 1) {
	    diacriticsMap[chars[j]] = replacementList[i].base;
	  }
	}
	
	function removeDiacritics(str) {
	  return str.replace(/[^\u0000-\u007e]/g, function(c) {
	    return diacriticsMap[c] || c;
	  });
	}


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_$FKSo4WImFSW7sGX_GtZig = Function('return this')();
	if (!__cov_$FKSo4WImFSW7sGX_GtZig.__coverage__) {
	   __cov_$FKSo4WImFSW7sGX_GtZig.__coverage__ = {};
	}
	__cov_$FKSo4WImFSW7sGX_GtZig = __cov_$FKSo4WImFSW7sGX_GtZig.__coverage__;
	if (!__cov_$FKSo4WImFSW7sGX_GtZig['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\number.js']) {
	   __cov_$FKSo4WImFSW7sGX_GtZig['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\number.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\number.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0] }, "f": { "1": 0 }, "fnMap": { "1": { "line": 18, "name": "parse", "loc": { "start": { "line": 11, "column": 21 }, "end": { "line": 11, "column": 47 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 11, "column": 7 }, "start": { "line": 11, "column": 7 } }, "5": { "end": { "line": 11, "column": 47 }, "start": { "line": 11, "column": 47 } }, "6": { "end": { "line": 15, "column": 5 }, "start": { "line": 13, "column": 4 } }, "7": { "end": { "line": 14, "column": 8 }, "start": { "line": 14, "column": 8 } }, "8": { "end": { "line": 19, "column": 4 }, "start": { "line": 19, "column": 4 } }, "9": { "end": { "line": 20, "column": 4 }, "start": { "line": 20, "column": 4 } }, "10": { "end": { "line": 28, "column": 4 }, "start": { "line": 28, "column": 4 } } }, "branchMap": { "1": { "line": 19, "type": "cond-expr", "locations": [{ "end": { "line": 11, "column": 47 }, "start": { "line": 11, "column": 47 } }, { "end": { "line": 11, "column": 47 }, "start": { "line": 11, "column": 39 } }] }, "2": { "line": 19, "type": "binary-expr", "locations": [{ "end": { "line": 11, "column": 47 }, "start": { "line": 11, "column": 47 } }, { "end": { "line": 11, "column": 47 }, "start": { "line": 11, "column": 47 } }] }, "3": { "line": 22, "type": "if", "locations": [{ "end": { "line": 13, "column": 4 }, "start": { "line": 13, "column": 4 } }, { "end": { "line": 13, "column": 4 }, "start": { "line": 13, "column": 4 } }] }, "4": { "line": 35, "type": "cond-expr", "locations": [{ "end": { "line": 28, "column": 11 }, "start": { "line": 28, "column": 33 } }, { "end": { "line": 28, "column": 4 }, "start": { "line": 28, "column": 47 } }] } }, "code": ["import {isNumber} from './types';", "", "/**", " * Takes a string, removes all formatting/cruft and returns the raw float value", " * @param {String} Formatted number", " * @param {String} Decimal type '.' or ','", " * @return {Number} Unformatted number", " *", " * https://github.com/openexchangerates/accounting.js/blob/master/accounting.js", " */", "export const parse = (value, decimal = '.') => {", "    // Return the value as-is if it's already a number", "    if (isNumber(value)) {", "        return value;", "    }", "", "    // Build regex to strip out everything except digits, decimal point and", "    // minus sign", "    let regex = new RegExp('[^0-9-' + decimal + ']', ['g']);", "    let unformatted = parseFloat(", "        ('' + value)", "        .replace(/\\((.*)\\)/, '-$1') // replace bracketed values with negatives", "        .replace(regex, '')         // strip out any cruft", "        .replace(decimal, '.')      // make sure decimal point is standard", "    );", "", "    // This will fail silently", "    return !isNaN(unformatted) ? unformatted : 0;", "}", ""] };
	}
	__cov_$FKSo4WImFSW7sGX_GtZig = __cov_$FKSo4WImFSW7sGX_GtZig['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\number.js'];
	__cov_$FKSo4WImFSW7sGX_GtZig.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_$FKSo4WImFSW7sGX_GtZig.s['2']++;exports.parse = undefined;__cov_$FKSo4WImFSW7sGX_GtZig.s['3']++;var _types = __webpack_require__(4);__cov_$FKSo4WImFSW7sGX_GtZig.s['4']++;var parse = exports.parse = function parse(value) {
	   __cov_$FKSo4WImFSW7sGX_GtZig.f['1']++;__cov_$FKSo4WImFSW7sGX_GtZig.s['5']++;var decimal = (__cov_$FKSo4WImFSW7sGX_GtZig.b['2'][0]++, arguments.length > 1) && (__cov_$FKSo4WImFSW7sGX_GtZig.b['2'][1]++, arguments[1] !== undefined) ? (__cov_$FKSo4WImFSW7sGX_GtZig.b['1'][0]++, arguments[1]) : (__cov_$FKSo4WImFSW7sGX_GtZig.b['1'][1]++, '.');__cov_$FKSo4WImFSW7sGX_GtZig.s['6']++;if ((0, _types.isNumber)(value)) {
	      __cov_$FKSo4WImFSW7sGX_GtZig.b['3'][0]++;__cov_$FKSo4WImFSW7sGX_GtZig.s['7']++;return value;
	   } else {
	      __cov_$FKSo4WImFSW7sGX_GtZig.b['3'][1]++;
	   }__cov_$FKSo4WImFSW7sGX_GtZig.s['8']++;var regex = new RegExp('[^0-9-' + decimal + ']', ['g']);__cov_$FKSo4WImFSW7sGX_GtZig.s['9']++;var unformatted = parseFloat(('' + value).replace(/\((.*)\)/, '-$1').replace(regex, '').replace(decimal, '.'));__cov_$FKSo4WImFSW7sGX_GtZig.s['10']++;return !isNaN(unformatted) ? (__cov_$FKSo4WImFSW7sGX_GtZig.b['4'][0]++, unformatted) : (__cov_$FKSo4WImFSW7sGX_GtZig.b['4'][1]++, 0);
	};

/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";
	
	var __cov_MxsiZu4pZpdoRp0JY6jlnA = Function('return this')();
	if (!__cov_MxsiZu4pZpdoRp0JY6jlnA.__coverage__) {
	   __cov_MxsiZu4pZpdoRp0JY6jlnA.__coverage__ = {};
	}
	__cov_MxsiZu4pZpdoRp0JY6jlnA = __cov_MxsiZu4pZpdoRp0JY6jlnA.__coverage__;
	if (!__cov_MxsiZu4pZpdoRp0JY6jlnA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\emitter.js']) {
	   __cov_MxsiZu4pZpdoRp0JY6jlnA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\emitter.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\emitter.js', "s": { "1": 0, "2": 1, "3": 0, "4": 0, "5": 0, "6": 1, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0 }, "fnMap": { "1": { "line": 7, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 12, "name": "(anonymous_2)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 16, "name": "Emitter", "loc": { "start": { "line": 8, "column": 4 }, "end": { "line": 8, "column": 18 } } }, "4": { "line": 33, "name": "on", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 36, "name": "(anonymous_5)", "loc": { "start": { "line": 22, "column": 21 }, "end": { "line": 22, "column": 30 } } }, "6": { "line": 49, "name": "off", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 52, "name": "(anonymous_7)", "loc": { "start": { "line": 34, "column": 21 }, "end": { "line": 34, "column": 30 } } }, "8": { "line": 66, "name": "emit", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "6": { "end": { "line": 14, "column": 5 }, "start": { "line": 8, "column": 4 } }, "7": { "end": { "line": 8, "column": 18 }, "start": { "line": 8, "column": 18 } }, "8": { "end": { "line": 13, "column": 8 }, "start": { "line": 13, "column": 8 } }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "end": { "line": 21, "column": 17 }, "start": { "line": 21, "column": 17 } }, "11": { "end": { "line": 22, "column": 8 }, "start": { "line": 22, "column": 8 } }, "12": { "end": { "line": 23, "column": 12 }, "start": { "line": 23, "column": 12 } }, "13": { "end": { "line": 24, "column": 12 }, "start": { "line": 24, "column": 12 } }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "end": { "line": 33, "column": 18 }, "start": { "line": 33, "column": 18 } }, "16": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "17": { "end": { "line": 37, "column": 13 }, "start": { "line": 35, "column": 12 } }, "18": { "end": { "line": 36, "column": 16 }, "start": { "line": 36, "column": 16 } }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "end": { "line": 51, "column": 9 }, "start": { "line": 47, "column": 8 } }, "21": { "end": { "line": 50, "column": 13 }, "start": { "line": 48, "column": 12 } }, "22": { "end": { "line": 49, "column": 16 }, "start": { "line": 49, "column": 16 } }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 7, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 37, "type": "binary-expr", "locations": [{ "end": { "line": 23, "column": 31 }, "start": { "line": 23, "column": 31 } }, { "end": { "line": 23, "column": 12 }, "start": { "line": 23, "column": 51 } }] }, "3": { "line": 53, "type": "if", "locations": [{ "end": { "line": 35, "column": 12 }, "start": { "line": 35, "column": 12 } }, { "end": { "line": 35, "column": 12 }, "start": { "line": 35, "column": 12 } }] }, "4": { "line": 67, "type": "if", "locations": [{ "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }] } }, "code": ["/**", " * Event emitter class", " */", "export class Emitter {", "    /**", "     * Creates an instance of Emitter.", "     */", "    constructor() {", "        /**", "         * Events object", "         * @type {Object}", "         */", "        this.events = {};", "    }", "", "    /**", "     * Subscribe to an event", "     * @param  {Array}   evts Collection of event names", "     * @param  {Function} fn  Function invoked when event is emitted", "     */", "    on(evts, fn) {", "        evts.forEach((evt) => {", "            this.events[evt] = this.events[evt] || [];", "            this.events[evt].push(fn);", "        });", "    }", "", "    /**", "     * Unsubscribe to an event", "     * @param  {Array}   evts Collection of event names", "     * @param  {Function} fn  Function invoked when event is emitted", "     */", "    off(evts, fn) {", "        evts.forEach((evt) => {", "            if (evt in this.events) {", "                this.events[evt].splice(this.events[evt].indexOf(fn), 1);", "            }", "        });", "    }", "", "    /**", "     * Emit an event", "     * @param  {String} evt Event name followed by any other argument passed to", "     * the invoked function", "     */", "    emit(evt /*, args...*/) {", "        if (evt in this.events) {", "            for (let i = 0; i < this.events[evt].length; i++) {", "                this.events[evt][i].apply(this, [].slice.call(arguments, 1));", "            }", "        }", "    }", "}", ""] };
	}
	__cov_MxsiZu4pZpdoRp0JY6jlnA = __cov_MxsiZu4pZpdoRp0JY6jlnA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\emitter.js'];
	__cov_MxsiZu4pZpdoRp0JY6jlnA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });function _classCallCheck(instance, Constructor) {
	   __cov_MxsiZu4pZpdoRp0JY6jlnA.f['1']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['3']++;if (!(instance instanceof Constructor)) {
	      __cov_MxsiZu4pZpdoRp0JY6jlnA.b['1'][0]++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['4']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_MxsiZu4pZpdoRp0JY6jlnA.b['1'][1]++;
	   }
	}__cov_MxsiZu4pZpdoRp0JY6jlnA.s['5']++;var Emitter = exports.Emitter = function () {
	   __cov_MxsiZu4pZpdoRp0JY6jlnA.f['2']++;function Emitter() {
	      __cov_MxsiZu4pZpdoRp0JY6jlnA.f['3']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['7']++;_classCallCheck(this, Emitter);__cov_MxsiZu4pZpdoRp0JY6jlnA.s['8']++;this.events = {};
	   }__cov_MxsiZu4pZpdoRp0JY6jlnA.s['9']++;Emitter.prototype.on = function on(evts, fn) {
	      __cov_MxsiZu4pZpdoRp0JY6jlnA.f['4']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['10']++;var _this = this;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['11']++;evts.forEach(function (evt) {
	         __cov_MxsiZu4pZpdoRp0JY6jlnA.f['5']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['12']++;_this.events[evt] = (__cov_MxsiZu4pZpdoRp0JY6jlnA.b['2'][0]++, _this.events[evt]) || (__cov_MxsiZu4pZpdoRp0JY6jlnA.b['2'][1]++, []);__cov_MxsiZu4pZpdoRp0JY6jlnA.s['13']++;_this.events[evt].push(fn);
	      });
	   };__cov_MxsiZu4pZpdoRp0JY6jlnA.s['14']++;Emitter.prototype.off = function off(evts, fn) {
	      __cov_MxsiZu4pZpdoRp0JY6jlnA.f['6']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['15']++;var _this2 = this;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['16']++;evts.forEach(function (evt) {
	         __cov_MxsiZu4pZpdoRp0JY6jlnA.f['7']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['17']++;if (evt in _this2.events) {
	            __cov_MxsiZu4pZpdoRp0JY6jlnA.b['3'][0]++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['18']++;_this2.events[evt].splice(_this2.events[evt].indexOf(fn), 1);
	         } else {
	            __cov_MxsiZu4pZpdoRp0JY6jlnA.b['3'][1]++;
	         }
	      });
	   };__cov_MxsiZu4pZpdoRp0JY6jlnA.s['19']++;Emitter.prototype.emit = function emit(evt) {
	      __cov_MxsiZu4pZpdoRp0JY6jlnA.f['8']++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['20']++;if (evt in this.events) {
	         __cov_MxsiZu4pZpdoRp0JY6jlnA.b['4'][0]++;__cov_MxsiZu4pZpdoRp0JY6jlnA.s['21']++;for (var i = 0; i < this.events[evt].length; i++) {
	            __cov_MxsiZu4pZpdoRp0JY6jlnA.s['22']++;this.events[evt][i].apply(this, [].slice.call(arguments, 1));
	         }
	      } else {
	         __cov_MxsiZu4pZpdoRp0JY6jlnA.b['4'][1]++;
	      }
	   };__cov_MxsiZu4pZpdoRp0JY6jlnA.s['23']++;return Emitter;
	}();

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_toz1N7spBKIp3LhBC0BqNw = Function('return this')();
	if (!__cov_toz1N7spBKIp3LhBC0BqNw.__coverage__) {
	   __cov_toz1N7spBKIp3LhBC0BqNw.__coverage__ = {};
	}
	__cov_toz1N7spBKIp3LhBC0BqNw = __cov_toz1N7spBKIp3LhBC0BqNw.__coverage__;
	if (!__cov_toz1N7spBKIp3LhBC0BqNw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\gridLayout.js']) {
	   __cov_toz1N7spBKIp3LhBC0BqNw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\gridLayout.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\gridLayout.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 1, "9": 0, "10": 0, "11": 1, "12": 0, "13": 0, "14": 0, "15": 1, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 1, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0 }, "fnMap": { "1": { "line": 18, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 20, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 22, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 27, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 34, "name": "GridLayout", "loc": { "start": { "line": 16, "column": 4 }, "end": { "line": 16, "column": 20 } } }, "6": { "line": 177, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 275, "name": "(anonymous_7)", "loc": { "start": { "line": 255, "column": 39 }, "end": { "line": 255, "column": 48 } } }, "8": { "line": 325, "name": "setOverrides", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 339, "name": "setDefaultColWidths", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 367, "name": "initialTableWidth", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 390, "name": "createContainer", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 403, "name": "createFiltersRow", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "13": { "line": 424, "name": "setColumnElements", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "14": { "line": 451, "name": "setHeadersRow", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "15": { "line": 472, "name": "setConfigWidth", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "16": { "line": 491, "name": "getSortTriggerIds", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "17": { "line": 511, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "end": { "line": 150, "column": 5 }, "start": { "line": 16, "column": 4 } }, "24": { "end": { "line": 16, "column": 20 }, "start": { "line": 16, "column": 20 } }, "25": { "end": { "line": 16, "column": 20 }, "start": { "line": 16, "column": 20 } }, "26": { "end": { "line": 19, "column": 8 }, "start": { "line": 19, "column": 8 } }, "27": { "end": { "line": 25, "column": 8 }, "start": { "line": 25, "column": 8 } }, "28": { "end": { "line": 31, "column": 8 }, "start": { "line": 31, "column": 8 } }, "29": { "end": { "line": 37, "column": 8 }, "start": { "line": 37, "column": 8 } }, "30": { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 8 } }, "31": { "end": { "line": 49, "column": 8 }, "start": { "line": 49, "column": 8 } }, "32": { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 8 } }, "33": { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 8 } }, "34": { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 8 } }, "35": { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 8 } }, "36": { "end": { "line": 81, "column": 8 }, "start": { "line": 81, "column": 8 } }, "37": { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 8 } }, "38": { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }, "39": { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 8 } }, "40": { "end": { "line": 108, "column": 8 }, "start": { "line": 108, "column": 8 } }, "41": { "end": { "line": 115, "column": 8 }, "start": { "line": 115, "column": 8 } }, "42": { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }, "43": { "end": { "line": 128, "column": 8 }, "start": { "line": 128, "column": 8 } }, "44": { "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 8 } }, "45": { "end": { "line": 140, "column": 8 }, "start": { "line": 140, "column": 8 } }, "46": { "end": { "line": 146, "column": 8 }, "start": { "line": 146, "column": 8 } }, "47": { "end": { "line": 149, "column": 8 }, "start": { "line": 149, "column": 8 } }, "48": { "end": { "line": 16, "column": 20 }, "start": { "line": 16, "column": 20 } }, "49": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "50": { "end": { "line": 156, "column": 11 }, "start": { "line": 156, "column": 11 } }, "51": { "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }, "52": { "end": { "line": 158, "column": 8 }, "start": { "line": 158, "column": 8 } }, "53": { "end": { "line": 162, "column": 9 }, "start": { "line": 160, "column": 8 } }, "54": { "end": { "line": 161, "column": 12 }, "start": { "line": 161, "column": 12 } }, "55": { "end": { "line": 165, "column": 8 }, "start": { "line": 165, "column": 8 } }, "56": { "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 8 } }, "57": { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, "58": { "end": { "line": 174, "column": 8 }, "start": { "line": 174, "column": 8 } }, "59": { "end": { "line": 178, "column": 9 }, "start": { "line": 176, "column": 8 } }, "60": { "end": { "line": 177, "column": 12 }, "start": { "line": 177, "column": 12 } }, "61": { "end": { "line": 179, "column": 8 }, "start": { "line": 179, "column": 8 } }, "62": { "end": { "line": 182, "column": 8 }, "start": { "line": 182, "column": 8 } }, "63": { "end": { "line": 183, "column": 8 }, "start": { "line": 183, "column": 8 } }, "64": { "end": { "line": 186, "column": 9 }, "start": { "line": 184, "column": 8 } }, "65": { "end": { "line": 185, "column": 12 }, "start": { "line": 185, "column": 12 } }, "66": { "end": { "line": 187, "column": 8 }, "start": { "line": 187, "column": 8 } }, "67": { "end": { "line": 188, "column": 8 }, "start": { "line": 188, "column": 8 } }, "68": { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }, "69": { "end": { "line": 195, "column": 9 }, "start": { "line": 192, "column": 8 } }, "70": { "end": { "line": 193, "column": 12 }, "start": { "line": 193, "column": 12 } }, "71": { "end": { "line": 197, "column": 8 }, "start": { "line": 197, "column": 8 } }, "72": { "end": { "line": 198, "column": 8 }, "start": { "line": 198, "column": 8 } }, "73": { "end": { "line": 201, "column": 8 }, "start": { "line": 201, "column": 8 } }, "74": { "end": { "line": 203, "column": 8 }, "start": { "line": 203, "column": 8 } }, "75": { "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 8 } }, "76": { "end": { "line": 207, "column": 8 }, "start": { "line": 207, "column": 8 } }, "77": { "end": { "line": 211, "column": 8 }, "start": { "line": 211, "column": 8 } }, "78": { "end": { "line": 212, "column": 8 }, "start": { "line": 212, "column": 8 } }, "79": { "end": { "line": 215, "column": 8 }, "start": { "line": 215, "column": 8 } }, "80": { "end": { "line": 218, "column": 8 }, "start": { "line": 218, "column": 8 } }, "81": { "end": { "line": 220, "column": 8 }, "start": { "line": 220, "column": 8 } }, "82": { "end": { "line": 225, "column": 9 }, "start": { "line": 221, "column": 8 } }, "83": { "end": { "line": 222, "column": 12 }, "start": { "line": 222, "column": 12 } }, "84": { "end": { "line": 224, "column": 12 }, "start": { "line": 224, "column": 12 } }, "85": { "end": { "line": 227, "column": 8 }, "start": { "line": 227, "column": 8 } }, "86": { "end": { "line": 228, "column": 8 }, "start": { "line": 228, "column": 8 } }, "87": { "end": { "line": 231, "column": 8 }, "start": { "line": 231, "column": 8 } }, "88": { "end": { "line": 234, "column": 9 }, "start": { "line": 232, "column": 8 } }, "89": { "end": { "line": 233, "column": 12 }, "start": { "line": 233, "column": 12 } }, "90": { "end": { "line": 237, "column": 8 }, "start": { "line": 237, "column": 8 } }, "91": { "end": { "line": 238, "column": 8 }, "start": { "line": 238, "column": 8 } }, "92": { "end": { "line": 239, "column": 8 }, "start": { "line": 239, "column": 8 } }, "93": { "end": { "line": 240, "column": 8 }, "start": { "line": 240, "column": 8 } }, "94": { "end": { "line": 244, "column": 8 }, "start": { "line": 244, "column": 8 } }, "95": { "end": { "line": 249, "column": 8 }, "start": { "line": 249, "column": 8 } }, "96": { "end": { "line": 251, "column": 8 }, "start": { "line": 251, "column": 8 } }, "97": { "end": { "line": 255, "column": 8 }, "start": { "line": 255, "column": 8 } }, "98": { "end": { "line": 256, "column": 12 }, "start": { "line": 256, "column": 12 } }, "99": { "end": { "line": 257, "column": 12 }, "start": { "line": 257, "column": 12 } }, "100": { "end": { "line": 258, "column": 12 }, "start": { "line": 258, "column": 12 } }, "101": { "end": { "line": 277, "column": 8 }, "start": { "line": 277, "column": 8 } }, "102": { "end": { "line": 281, "column": 9 }, "start": { "line": 278, "column": 8 } }, "103": { "end": { "line": 279, "column": 12 }, "start": { "line": 279, "column": 12 } }, "104": { "end": { "line": 280, "column": 12 }, "start": { "line": 280, "column": 12 } }, "105": { "end": { "line": 285, "column": 8 }, "start": { "line": 285, "column": 8 } }, "106": { "end": { "line": 289, "column": 9 }, "start": { "line": 287, "column": 8 } }, "107": { "end": { "line": 288, "column": 12 }, "start": { "line": 288, "column": 12 } }, "108": { "end": { "line": 293, "column": 9 }, "start": { "line": 291, "column": 8 } }, "109": { "end": { "line": 292, "column": 12 }, "start": { "line": 292, "column": 12 } }, "110": { "end": { "line": 296, "column": 8 }, "start": { "line": 296, "column": 8 } }, "111": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "112": { "end": { "line": 304, "column": 8 }, "start": { "line": 304, "column": 8 } }, "113": { "end": { "line": 305, "column": 8 }, "start": { "line": 305, "column": 8 } }, "114": { "end": { "line": 306, "column": 8 }, "start": { "line": 306, "column": 8 } }, "115": { "end": { "line": 307, "column": 8 }, "start": { "line": 307, "column": 8 } }, "116": { "end": { "line": 308, "column": 8 }, "start": { "line": 308, "column": 8 } }, "117": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "118": { "end": { "line": 316, "column": 8 }, "start": { "line": 316, "column": 8 } }, "119": { "end": { "line": 319, "column": 9 }, "start": { "line": 317, "column": 8 } }, "120": { "end": { "line": 318, "column": 12 }, "start": { "line": 318, "column": 12 } }, "121": { "end": { "line": 331, "column": 9 }, "start": { "line": 320, "column": 8 } }, "122": { "end": { "line": 321, "column": 12 }, "start": { "line": 321, "column": 12 } }, "123": { "end": { "line": 322, "column": 12 }, "start": { "line": 322, "column": 12 } }, "124": { "end": { "line": 329, "column": 13 }, "start": { "line": 323, "column": 12 } }, "125": { "end": { "line": 324, "column": 16 }, "start": { "line": 324, "column": 16 } }, "126": { "end": { "line": 329, "column": 13 }, "start": { "line": 325, "column": 19 } }, "127": { "end": { "line": 326, "column": 16 }, "start": { "line": 326, "column": 16 } }, "128": { "end": { "line": 328, "column": 16 }, "start": { "line": 328, "column": 16 } }, "129": { "end": { "line": 330, "column": 12 }, "start": { "line": 330, "column": 12 } }, "130": { "end": { "line": 332, "column": 8 }, "start": { "line": 332, "column": 8 } }, "131": { "end": { "line": 333, "column": 8 }, "start": { "line": 333, "column": 8 } }, "132": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "133": { "end": { "line": 342, "column": 8 }, "start": { "line": 342, "column": 8 } }, "134": { "end": { "line": 341, "column": 24 }, "start": { "line": 343, "column": 8 } }, "135": { "end": { "line": 352, "column": 9 }, "start": { "line": 345, "column": 8 } }, "136": { "end": { "line": 346, "column": 12 }, "start": { "line": 346, "column": 12 } }, "137": { "end": { "line": 352, "column": 9 }, "start": { "line": 348, "column": 13 } }, "138": { "end": { "line": 349, "column": 12 }, "start": { "line": 349, "column": 12 } }, "139": { "end": { "line": 351, "column": 12 }, "start": { "line": 351, "column": 12 } }, "140": { "end": { "line": 353, "column": 8 }, "start": { "line": 353, "column": 8 } }, "141": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "142": { "end": { "line": 364, "column": 8 }, "start": { "line": 364, "column": 8 } }, "143": { "end": { "line": 365, "column": 8 }, "start": { "line": 365, "column": 8 } }, "144": { "end": { "line": 366, "column": 8 }, "start": { "line": 366, "column": 8 } }, "145": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "146": { "end": { "line": 375, "column": 8 }, "start": { "line": 375, "column": 8 } }, "147": { "end": { "line": 376, "column": 8 }, "start": { "line": 376, "column": 8 } }, "148": { "end": { "line": 385, "column": 9 }, "start": { "line": 377, "column": 8 } }, "149": { "end": { "line": 378, "column": 12 }, "start": { "line": 378, "column": 12 } }, "150": { "end": { "line": 384, "column": 13 }, "start": { "line": 379, "column": 12 } }, "151": { "end": { "line": 380, "column": 16 }, "start": { "line": 380, "column": 16 } }, "152": { "end": { "line": 381, "column": 16 }, "start": { "line": 381, "column": 16 } }, "153": { "end": { "line": 382, "column": 16 }, "start": { "line": 382, "column": 16 } }, "154": { "end": { "line": 383, "column": 16 }, "start": { "line": 383, "column": 16 } }, "155": { "end": { "line": 386, "column": 8 }, "start": { "line": 386, "column": 8 } }, "156": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "157": { "end": { "line": 394, "column": 8 }, "start": { "line": 394, "column": 8 } }, "158": { "end": { "line": 395, "column": 8 }, "start": { "line": 395, "column": 8 } }, "159": { "end": { "line": 396, "column": 8 }, "start": { "line": 396, "column": 8 } }, "160": { "end": { "line": 409, "column": 9 }, "start": { "line": 398, "column": 8 } }, "161": { "end": { "line": 399, "column": 12 }, "start": { "line": 399, "column": 12 } }, "162": { "end": { "line": 406, "column": 13 }, "start": { "line": 401, "column": 12 } }, "163": { "end": { "line": 402, "column": 16 }, "start": { "line": 402, "column": 16 } }, "164": { "end": { "line": 403, "column": 16 }, "start": { "line": 403, "column": 16 } }, "165": { "end": { "line": 405, "column": 16 }, "start": { "line": 405, "column": 16 } }, "166": { "end": { "line": 407, "column": 12 }, "start": { "line": 407, "column": 12 } }, "167": { "end": { "line": 408, "column": 12 }, "start": { "line": 408, "column": 12 } }, "168": { "end": { "line": 410, "column": 8 }, "start": { "line": 410, "column": 8 } }, "169": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "170": { "end": { "line": 429, "column": 9 }, "start": { "line": 419, "column": 8 } }, "171": { "end": { "line": 422, "column": 12 }, "start": { "line": 422, "column": 12 } }, "172": { "end": { "line": 428, "column": 13 }, "start": { "line": 425, "column": 12 } }, "173": { "end": { "line": 426, "column": 16 }, "start": { "line": 426, "column": 16 } }, "174": { "end": { "line": 427, "column": 16 }, "start": { "line": 427, "column": 16 } }, "175": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "176": { "end": { "line": 440, "column": 9 }, "start": { "line": 438, "column": 8 } }, "177": { "end": { "line": 439, "column": 12 }, "start": { "line": 439, "column": 12 } }, "178": { "end": { "line": 445, "column": 9 }, "start": { "line": 441, "column": 8 } }, "179": { "end": { "line": 442, "column": 12 }, "start": { "line": 442, "column": 12 } }, "180": { "end": { "line": 444, "column": 12 }, "start": { "line": 444, "column": 12 } }, "181": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "182": { "end": { "line": 455, "column": 8 }, "start": { "line": 455, "column": 8 } }, "183": { "end": { "line": 456, "column": 8 }, "start": { "line": 456, "column": 8 } }, "184": { "end": { "line": 465, "column": 9 }, "start": { "line": 457, "column": 8 } }, "185": { "end": { "line": 458, "column": 12 }, "start": { "line": 458, "column": 12 } }, "186": { "end": { "line": 459, "column": 12 }, "start": { "line": 459, "column": 12 } }, "187": { "end": { "line": 463, "column": 13 }, "start": { "line": 460, "column": 12 } }, "188": { "end": { "line": 461, "column": 16 }, "start": { "line": 461, "column": 16 } }, "189": { "end": { "line": 462, "column": 16 }, "start": { "line": 462, "column": 16 } }, "190": { "end": { "line": 464, "column": 12 }, "start": { "line": 464, "column": 12 } }, "191": { "end": { "line": 466, "column": 8 }, "start": { "line": 466, "column": 8 } }, "192": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "193": { "end": { "line": 473, "column": 8 }, "start": { "line": 473, "column": 8 } }, "194": { "end": { "line": 474, "column": 8 }, "start": { "line": 474, "column": 8 } }, "195": { "end": { "line": 478, "column": 9 }, "start": { "line": 476, "column": 8 } }, "196": { "end": { "line": 477, "column": 12 }, "start": { "line": 477, "column": 12 } }, "197": { "end": { "line": 479, "column": 8 }, "start": { "line": 479, "column": 8 } }, "198": { "end": { "line": 480, "column": 8 }, "start": { "line": 480, "column": 8 } }, "199": { "end": { "line": 481, "column": 8 }, "start": { "line": 481, "column": 8 } }, "200": { "end": { "line": 483, "column": 8 }, "start": { "line": 483, "column": 8 } }, "201": { "end": { "line": 484, "column": 8 }, "start": { "line": 484, "column": 8 } }, "202": { "end": { "line": 485, "column": 8 }, "start": { "line": 485, "column": 8 } }, "203": { "end": { "line": 486, "column": 8 }, "start": { "line": 486, "column": 8 } }, "204": { "end": { "line": 488, "column": 8 }, "start": { "line": 488, "column": 8 } }, "205": { "end": { "line": 490, "column": 8 }, "start": { "line": 490, "column": 8 } }, "206": { "end": { "line": 492, "column": 8 }, "start": { "line": 492, "column": 8 } }, "207": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 20, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 45, "type": "binary-expr", "locations": [{ "end": { "line": 25, "column": 21 }, "start": { "line": 25, "column": 21 } }, { "end": { "line": 25, "column": 8 }, "start": { "line": 25, "column": 37 } }] }, "11": { "line": 51, "type": "binary-expr", "locations": [{ "end": { "line": 31, "column": 22 }, "start": { "line": 31, "column": 22 } }, { "end": { "line": 31, "column": 8 }, "start": { "line": 31, "column": 39 } }] }, "12": { "line": 57, "type": "binary-expr", "locations": [{ "end": { "line": 37, "column": 32 }, "start": { "line": 37, "column": 32 } }, { "end": { "line": 37, "column": 8 }, "start": { "line": 37, "column": 57 } }] }, "13": { "line": 63, "type": "binary-expr", "locations": [{ "end": { "line": 43, "column": 28 }, "start": { "line": 43, "column": 28 } }, { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 57 } }] }, "14": { "line": 69, "type": "binary-expr", "locations": [{ "end": { "line": 49, "column": 32 }, "start": { "line": 49, "column": 32 } }, { "end": { "line": 49, "column": 8 }, "start": { "line": 50, "column": 12 } }] }, "15": { "line": 75, "type": "binary-expr", "locations": [{ "end": { "line": 56, "column": 30 }, "start": { "line": 56, "column": 30 } }, { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 59 } }] }, "16": { "line": 81, "type": "binary-expr", "locations": [{ "end": { "line": 62, "column": 28 }, "start": { "line": 62, "column": 28 } }, { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 56 } }] }, "17": { "line": 87, "type": "binary-expr", "locations": [{ "end": { "line": 68, "column": 24 }, "start": { "line": 68, "column": 24 } }, { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 47 } }] }, "18": { "line": 93, "type": "cond-expr", "locations": [{ "end": { "line": 74, "column": 29 }, "start": { "line": 75, "column": 12 } }, { "end": { "line": 74, "column": 8 }, "start": { "line": 75, "column": 20 } }] }, "19": { "line": 105, "type": "binary-expr", "locations": [{ "end": { "line": 87, "column": 31 }, "start": { "line": 87, "column": 31 } }, { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 59 } }] }, "20": { "line": 140, "type": "cond-expr", "locations": [{ "end": { "line": 122, "column": 28 }, "start": { "line": 122, "column": 60 } }, { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 67 } }] }, "21": { "line": 183, "type": "if", "locations": [{ "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 8 } }, { "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 8 } }] }, "22": { "line": 198, "type": "if", "locations": [{ "end": { "line": 176, "column": 8 }, "start": { "line": 176, "column": 8 } }, { "end": { "line": 176, "column": 8 }, "start": { "line": 176, "column": 8 } }] }, "23": { "line": 206, "type": "if", "locations": [{ "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }, { "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }] }, "24": { "line": 214, "type": "if", "locations": [{ "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 8 } }, { "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 8 } }] }, "25": { "line": 215, "type": "cond-expr", "locations": [{ "end": { "line": 193, "column": 31 }, "start": { "line": 194, "column": 16 } }, { "end": { "line": 193, "column": 30 }, "start": { "line": 194, "column": 34 } }] }, "26": { "line": 241, "type": "if", "locations": [{ "end": { "line": 221, "column": 8 }, "start": { "line": 221, "column": 8 } }, { "end": { "line": 221, "column": 8 }, "start": { "line": 221, "column": 8 } }] }, "27": { "line": 252, "type": "if", "locations": [{ "end": { "line": 232, "column": 8 }, "start": { "line": 232, "column": 8 } }, { "end": { "line": 232, "column": 8 }, "start": { "line": 232, "column": 8 } }] }, "28": { "line": 298, "type": "if", "locations": [{ "end": { "line": 278, "column": 8 }, "start": { "line": 278, "column": 8 } }, { "end": { "line": 278, "column": 8 }, "start": { "line": 278, "column": 8 } }] }, "29": { "line": 307, "type": "if", "locations": [{ "end": { "line": 287, "column": 8 }, "start": { "line": 287, "column": 8 } }, { "end": { "line": 287, "column": 8 }, "start": { "line": 287, "column": 8 } }] }, "30": { "line": 311, "type": "if", "locations": [{ "end": { "line": 291, "column": 8 }, "start": { "line": 291, "column": 8 } }, { "end": { "line": 291, "column": 8 }, "start": { "line": 291, "column": 8 } }] }, "31": { "line": 341, "type": "if", "locations": [{ "end": { "line": 317, "column": 8 }, "start": { "line": 317, "column": 8 } }, { "end": { "line": 317, "column": 8 }, "start": { "line": 317, "column": 8 } }] }, "32": { "line": 347, "type": "if", "locations": [{ "end": { "line": 323, "column": 12 }, "start": { "line": 323, "column": 12 } }, { "end": { "line": 323, "column": 12 }, "start": { "line": 323, "column": 12 } }] }, "33": { "line": 349, "type": "if", "locations": [{ "end": { "line": 325, "column": 19 }, "start": { "line": 325, "column": 19 } }, { "end": { "line": 325, "column": 19 }, "start": { "line": 325, "column": 19 } }] }, "34": { "line": 371, "type": "if", "locations": [{ "end": { "line": 345, "column": 8 }, "start": { "line": 345, "column": 8 } }, { "end": { "line": 345, "column": 8 }, "start": { "line": 345, "column": 8 } }] }, "35": { "line": 373, "type": "if", "locations": [{ "end": { "line": 348, "column": 13 }, "start": { "line": 348, "column": 13 } }, { "end": { "line": 348, "column": 13 }, "start": { "line": 348, "column": 13 } }] }, "36": { "line": 406, "type": "if", "locations": [{ "end": { "line": 377, "column": 8 }, "start": { "line": 377, "column": 8 } }, { "end": { "line": 377, "column": 8 }, "start": { "line": 377, "column": 8 } }] }, "37": { "line": 406, "type": "binary-expr", "locations": [{ "end": { "line": 377, "column": 12 }, "start": { "line": 377, "column": 12 } }, { "end": { "line": 377, "column": 8 }, "start": { "line": 377, "column": 34 } }] }, "38": { "line": 432, "type": "if", "locations": [{ "end": { "line": 401, "column": 12 }, "start": { "line": 401, "column": 12 } }, { "end": { "line": 401, "column": 12 }, "start": { "line": 401, "column": 12 } }] }, "39": { "line": 452, "type": "if", "locations": [{ "end": { "line": 419, "column": 8 }, "start": { "line": 419, "column": 8 } }, { "end": { "line": 419, "column": 8 }, "start": { "line": 419, "column": 8 } }] }, "40": { "line": 473, "type": "if", "locations": [{ "end": { "line": 438, "column": 8 }, "start": { "line": 438, "column": 8 } }, { "end": { "line": 438, "column": 8 }, "start": { "line": 438, "column": 8 } }] }, "41": { "line": 476, "type": "if", "locations": [{ "end": { "line": 441, "column": 8 }, "start": { "line": 441, "column": 8 } }, { "end": { "line": 441, "column": 8 }, "start": { "line": 441, "column": 8 } }] }, "42": { "line": 497, "type": "if", "locations": [{ "end": { "line": 460, "column": 12 }, "start": { "line": 460, "column": 12 } }, { "end": { "line": 460, "column": 12 }, "start": { "line": 460, "column": 12 } }] }, "43": { "line": 497, "type": "binary-expr", "locations": [{ "end": { "line": 460, "column": 16 }, "start": { "line": 460, "column": 16 } }, { "end": { "line": 460, "column": 12 }, "start": { "line": 460, "column": 25 } }] }, "44": { "line": 515, "type": "if", "locations": [{ "end": { "line": 476, "column": 8 }, "start": { "line": 476, "column": 8 } }, { "end": { "line": 476, "column": 8 }, "start": { "line": 476, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, removeElm, elm, tag} from '../dom';", "import {addEvt, targetEvt} from '../event';", "import {contains} from '../string';", "import {NONE} from '../const';", "", "/**", " * Grid layout, table with fixed headers", " */", "export class GridLayout extends Feature {", "", "    /**", "     * Creates an instance of GridLayout", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'gridLayout');", "", "        let f = this.config;", "", "        /**", "         * Grid-layout container width as CSS string", "         * @type {String}", "         */", "        this.width = f.grid_width || null;", "", "        /**", "         * Grid-layout container height as CSS string", "         * @type {String}", "         */", "        this.height = f.grid_height || null;", "", "        /**", "         * Css class for main container element", "         * @type {String}", "         */", "        this.mainContCssClass = f.grid_cont_css_class || 'grd_Cont';", "", "        /**", "         * Css class for body table container element", "         * @type {String}", "         */", "        this.contCssClass = f.grid_tbl_cont_css_class || 'grd_tblCont';", "", "        /**", "         * Css class for headers table container element", "         * @type {String}", "         */", "        this.headContCssClass = f.grid_tblHead_cont_css_class ||", "            'grd_headTblCont';", "", "        /**", "         * Css class for toolbar container element (rows counter, paging etc.)", "         * @type {String}", "         */", "        this.infDivCssClass = f.grid_inf_grid_css_class || 'grd_inf';", "", "        /**", "         * Index of the headers row, default: 0", "         * @type {Number}", "         */", "        this.headRowIndex = f.grid_headers_row_index || 0;", "", "        /**", "         * Collection of the header row indexes to be moved into headers table", "         * @type {Array}", "         */", "        this.headRows = f.grid_headers_rows || [0];", "", "        /**", "         * Enable or disable column filters generation, default: true", "         * @type {Boolean}", "         */", "        this.enableFilters = f.grid_enable_default_filters === false ?", "            false : true;", "", "        /**", "         * Enable or disable column headers, default: false", "         * @type {Boolean}", "         */", "        this.noHeaders = Boolean(f.grid_no_headers);", "", "        /**", "         * Grid-layout default column widht as CSS string", "         * @type {String}", "         */", "        this.defaultColWidth = f.grid_default_col_width || '100px';", "", "        /**", "         * List of column elements", "         * @type {Array}", "         * @private", "         */", "        this.colElms = [];", "", "        /**", "         * Prefix for grid-layout filter's cell ID", "         * @type {String}", "         * @private", "         */", "        this.prfxGridFltTd = '_td_';", "", "        /**", "         * Prefix for grid-layout header's cell ID", "         * @type {String}", "         * @private", "         */", "        this.prfxGridTh = 'tblHeadTh_';", "", "        /**", "         * Mark-up of original HTML table", "         * @type {String}", "         * @private", "         */", "        this.sourceTblHtml = tf.tbl.outerHTML;", "", "        /**", "         * Indicates if working table has column elements", "         * @type {Boolean}", "         * @private", "         */", "        this.tblHasColTag = tag(tf.tbl, 'col').length > 0 ? true : false;", "", "        /**", "         * Main container element", "         * @private", "         */", "        this.tblMainCont = null;", "", "        /**", "         * Table container element", "         * @private", "         */", "        this.tblCont = null;", "", "        /**", "         * Headers' table container element", "         * @private", "         */", "        this.headTblCont = null;", "", "        /**", "         * Headers' table element", "         * @private", "         */", "        this.headTbl = null;", "", "        // filters flag at TF level", "        tf.fltGrid = this.enableFilters;", "    }", "", "    /**", "     * Generates a grid with fixed headers", "     * TODO: reduce size of init by extracting single purposed methods", "     */", "    init() {", "        let tf = this.tf;", "        let tbl = tf.tbl;", "", "        if (this.initialized) {", "            return;", "        }", "", "        // Override relevant TableFilter properties", "        this.setOverrides();", "", "        // Assign default column widths", "        this.setDefaultColWidths();", "", "        // Initial table width", "        let tblW = this.initialTableWidth();", "", "        //Main container: it will contain all the elements", "        this.tblMainCont = this.createContainer(", "            'div', this.mainContCssClass);", "        if (this.width) {", "            this.tblMainCont.style.width = this.width;", "        }", "        tbl.parentNode.insertBefore(this.tblMainCont, tbl);", "", "        //Table container: div wrapping content table", "        this.tblCont = this.createContainer('div', this.contCssClass);", "        this.setConfigWidth(this.tblCont);", "        if (this.height) {", "            this.tblCont.style.height = this.height;", "        }", "        tbl.parentNode.insertBefore(this.tblCont, tbl);", "        let t = removeElm(tbl);", "        this.tblCont.appendChild(t);", "", "        //In case table width is expressed in %", "        if (tbl.style.width === '') {", "            tbl.style.width = (contains('%', tblW) ?", "                tbl.clientWidth : tblW) + 'px';", "        }", "", "        let d = removeElm(this.tblCont);", "        this.tblMainCont.appendChild(d);", "", "        //Headers table container: div wrapping headers table", "        this.headTblCont = this.createContainer(", "            'div', this.headContCssClass);", "        this.setConfigWidth(this.headTblCont);", "", "        //Headers table", "        this.headTbl = createElm('table');", "        let tH = createElm('tHead');", "", "        //1st row should be headers row, ids are added if not set", "        //Those ids are used by the sort feature", "        let hRow = tbl.rows[this.headRowIndex];", "        let sortTriggers = this.getSortTriggerIds(hRow);", "", "        //Filters row is created", "        let filtersRow = this.createFiltersRow();", "", "        //Headers row are moved from content table to headers table", "        this.setHeadersRow(tH);", "", "        this.headTbl.appendChild(tH);", "        if (tf.filtersRowIndex === 0) {", "            tH.insertBefore(filtersRow, hRow);", "        } else {", "            tH.appendChild(filtersRow);", "        }", "", "        this.headTblCont.appendChild(this.headTbl);", "        this.tblCont.parentNode.insertBefore(this.headTblCont, this.tblCont);", "", "        //THead needs to be removed in content table for sort feature", "        let thead = tag(tbl, 'thead');", "        if (thead.length > 0) {", "            tbl.removeChild(thead[0]);", "        }", "", "        //Headers table style", "        this.headTbl.style.tableLayout = 'fixed';", "        tbl.style.tableLayout = 'fixed';", "        this.headTbl.cellPadding = tbl.cellPadding;", "        this.headTbl.cellSpacing = tbl.cellSpacing;", "        // this.headTbl.style.width = tbl.style.width;", "", "        //content table without headers needs col widths to be reset", "        tf.setColWidths(this.headTbl);", "", "        //Headers container width", "        // this.headTblCont.style.width = this.tblCont.clientWidth+'px';", "", "        tbl.style.width = '';", "        //", "        this.headTbl.style.width = tbl.clientWidth + 'px';", "        //", "", "        //scroll synchronisation", "        addEvt(this.tblCont, 'scroll', (evt) => {", "            let elm = targetEvt(evt);", "            let scrollLeft = elm.scrollLeft;", "            this.headTblCont.scrollLeft = scrollLeft;", "            //New pointerX calc taking into account scrollLeft", "            // if(!o.isPointerXOverwritten){", "            //     try{", "            //         o.Evt.pointerX = function(evt){", "            //             let e = evt || global.event;", "            //             let bdScrollLeft = tf_StandardBody().scrollLeft +", "            //                 scrollLeft;", "            //             return (e.pageX + scrollLeft) ||", "            //                 (e.clientX + bdScrollLeft);", "            //         };", "            //         o.isPointerXOverwritten = true;", "            //     } catch(err) {", "            //         o.isPointerXOverwritten = false;", "            //     }", "            // }", "        });", "", "        // TODO: Trigger a custom event handled by sort extension", "        let sort = tf.extension('sort');", "        if (sort) {", "            sort.asyncSort = true;", "            sort.triggerIds = sortTriggers;", "        }", "", "        //Col elements are enough to keep column widths after sorting and", "        //filtering", "        this.setColumnElements();", "", "        if (tf.popupFilters) {", "            filtersRow.style.display = NONE;", "        }", "", "        if (tbl.clientWidth !== this.headTbl.clientWidth) {", "            tbl.style.width = this.headTbl.clientWidth + 'px';", "        }", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Overrides TableFilter instance properties to adjust to grid layout mode", "     * @private", "     */", "    setOverrides() {", "        let tf = this.tf;", "        tf.refRow = 0;", "        tf.headersRow = 0;", "        tf.filtersRowIndex = 1;", "        tf.isExternalFlt = true;", "    }", "", "    /**", "     * Set grid-layout default column widths if column widths are not defined", "     * @private", "     */", "    setDefaultColWidths() {", "        let tf = this.tf;", "        if (tf.hasColWidths) {", "            return;", "        }", "        for (let k = 0, len = tf.getCellsNb(); k < len; k++) {", "            let colW;", "            let cell = tf.tbl.rows[tf.getHeadersRowIndex()].cells[k];", "            if (cell.width !== '') {", "                colW = cell.width;", "            } else if (cell.style.width !== '') {", "                colW = parseInt(cell.style.width, 10);", "            } else {", "                colW = this.defaultColWidth;", "            }", "            tf.colWidths[k] = colW;", "        }", "        tf.hasColWidths = true;", "        tf.setColWidths();", "    }", "", "    /**", "     * Initial table width", "     * @returns {Number}", "     * @private", "     */", "    initialTableWidth() {", "        let tbl = this.tf.tbl;", "        let width; //initial table width", "", "        if (tbl.width !== '') {", "            width = tbl.width;", "        }", "        else if (tbl.style.width !== '') {", "            width = tbl.style.width;", "        } else {", "            width = tbl.clientWidth;", "        }", "        return parseInt(width, 10);", "    }", "", "    /**", "     * Creates container element", "     * @param {String} tag Tag name", "     * @param {String} className Css class to assign to element", "     * @returns {DOMElement}", "     * @private", "     */", "    createContainer(tag, className) {", "        let element = createElm(tag);", "        element.className = className;", "        return element;", "    }", "", "    /**", "     * Creates filters row with cells", "     * @returns {HTMLTableRowElement}", "     * @private", "     */", "    createFiltersRow() {", "        let tf = this.tf;", "        let filtersRow = createElm('tr');", "        if (this.enableFilters && tf.fltGrid) {", "            tf.externalFltTgtIds = [];", "            for (let j = 0; j < tf.getCellsNb(); j++) {", "                let fltTdId = `${tf.prfxFlt + j + this.prfxGridFltTd + tf.id}`;", "                let cl = createElm(tf.fltCellTag, ['id', fltTdId]);", "                filtersRow.appendChild(cl);", "                tf.externalFltTgtIds[j] = fltTdId;", "            }", "        }", "        return filtersRow;", "    }", "", "    /**", "     * Generates column elements if necessary and assigns their widths", "     * @private", "     */", "    setColumnElements() {", "        let tf = this.tf;", "        let cols = tag(tf.tbl, 'col');", "        this.tblHasColTag = cols.length > 0;", "", "        for (let k = (tf.nbCells - 1); k >= 0; k--) {", "            let col;", "", "            if (!this.tblHasColTag) {", "                col = createElm('col');", "                tf.tbl.insertBefore(col, tf.tbl.firstChild);", "            } else {", "                col = cols[k];", "            }", "            col.style.width = tf.colWidths[k];", "            this.colElms[k] = col;", "        }", "        this.tblHasColTag = true;", "    }", "", "    /**", "     * Sets headers row in headers table", "     * @param {HTMLHeadElement} tableHead Table head element", "     * @private", "     */", "    setHeadersRow(tableHead) {", "        if (this.noHeaders) {", "            // Handle table with no headers, assuming here headers do not", "            // exist", "            tableHead.appendChild(createElm('tr'));", "        } else {", "            // Headers row are moved from content table to headers table", "            for (let i = 0; i < this.headRows.length; i++) {", "                let row = this.tf.tbl.rows[this.headRows[i]];", "                tableHead.appendChild(row);", "            }", "        }", "    }", "", "    /**", "     * Sets width defined in configuration to passed element", "     * @param {DOMElement} element DOM element", "     * @private", "     */", "    setConfigWidth(element) {", "        if (!this.width) {", "            return;", "        }", "        if (this.width.indexOf('%') !== -1) {", "            element.style.width = '100%';", "        } else {", "            element.style.width = this.width;", "        }", "    }", "", "    /**", "     * Returns a list of header IDs used for specifing external sort triggers", "     * @param {HTMLTableRowElement} row DOM row element", "     * @returns {Array} List of IDs", "     * @private", "     */", "    getSortTriggerIds(row) {", "        let tf = this.tf;", "        let sortTriggers = [];", "        for (let n = 0; n < tf.getCellsNb(); n++) {", "            let c = row.cells[n];", "            let thId = c.getAttribute('id');", "            if (!thId || thId === '') {", "                thId = `${this.prfxGridTh + n}_${tf.id}`;", "                c.setAttribute('id', thId);", "            }", "            sortTriggers.push(thId);", "        }", "        return sortTriggers;", "    }", "", "    /**", "     * Removes the grid layout", "     */", "    destroy() {", "        let tf = this.tf;", "        let tbl = tf.tbl;", "", "        if (!this.initialized) {", "            return;", "        }", "        let t = removeElm(tbl);", "        this.tblMainCont.parentNode.insertBefore(t, this.tblMainCont);", "        removeElm(this.tblMainCont);", "", "        this.tblMainCont = null;", "        this.headTblCont = null;", "        this.headTbl = null;", "        this.tblCont = null;", "", "        tbl.outerHTML = this.sourceTblHtml;", "        //needed to keep reference of table element for future usage", "        this.tf.tbl = elm(tf.id);", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_toz1N7spBKIp3LhBC0BqNw = __cov_toz1N7spBKIp3LhBC0BqNw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\gridLayout.js'];
	__cov_toz1N7spBKIp3LhBC0BqNw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_toz1N7spBKIp3LhBC0BqNw.s['2']++;exports.GridLayout = undefined;__cov_toz1N7spBKIp3LhBC0BqNw.s['3']++;var _feature = __webpack_require__(10);__cov_toz1N7spBKIp3LhBC0BqNw.s['4']++;var _dom = __webpack_require__(3);__cov_toz1N7spBKIp3LhBC0BqNw.s['5']++;var _event = __webpack_require__(1);__cov_toz1N7spBKIp3LhBC0BqNw.s['6']++;var _string = __webpack_require__(5);__cov_toz1N7spBKIp3LhBC0BqNw.s['7']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_toz1N7spBKIp3LhBC0BqNw.f['1']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['9']++;if (!(instance instanceof Constructor)) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['1'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['10']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_toz1N7spBKIp3LhBC0BqNw.f['2']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['12']++;if (!self) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['2'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['13']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['2'][1]++;
	   }__cov_toz1N7spBKIp3LhBC0BqNw.s['14']++;return (__cov_toz1N7spBKIp3LhBC0BqNw.b['4'][0]++, call) && ((__cov_toz1N7spBKIp3LhBC0BqNw.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_toz1N7spBKIp3LhBC0BqNw.b['4'][2]++, typeof call === 'function')) ? (__cov_toz1N7spBKIp3LhBC0BqNw.b['3'][0]++, call) : (__cov_toz1N7spBKIp3LhBC0BqNw.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_toz1N7spBKIp3LhBC0BqNw.f['3']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['16']++;if ((__cov_toz1N7spBKIp3LhBC0BqNw.b['6'][0]++, typeof superClass !== 'function') && (__cov_toz1N7spBKIp3LhBC0BqNw.b['6'][1]++, superClass !== null)) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['5'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['17']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['5'][1]++;
	   }__cov_toz1N7spBKIp3LhBC0BqNw.s['18']++;subClass.prototype = Object.create((__cov_toz1N7spBKIp3LhBC0BqNw.b['7'][0]++, superClass) && (__cov_toz1N7spBKIp3LhBC0BqNw.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_toz1N7spBKIp3LhBC0BqNw.s['19']++;if (superClass) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['8'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['20']++;Object.setPrototypeOf ? (__cov_toz1N7spBKIp3LhBC0BqNw.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_toz1N7spBKIp3LhBC0BqNw.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_toz1N7spBKIp3LhBC0BqNw.b['8'][1]++;
	   }
	}__cov_toz1N7spBKIp3LhBC0BqNw.s['21']++;var GridLayout = exports.GridLayout = function (_Feature) {
	   __cov_toz1N7spBKIp3LhBC0BqNw.f['4']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['22']++;_inherits(GridLayout, _Feature);function GridLayout(tf) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['5']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['24']++;_classCallCheck(this, GridLayout);__cov_toz1N7spBKIp3LhBC0BqNw.s['25']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'gridLayout'));__cov_toz1N7spBKIp3LhBC0BqNw.s['26']++;var f = _this.config;__cov_toz1N7spBKIp3LhBC0BqNw.s['27']++;_this.width = (__cov_toz1N7spBKIp3LhBC0BqNw.b['10'][0]++, f.grid_width) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['10'][1]++, null);__cov_toz1N7spBKIp3LhBC0BqNw.s['28']++;_this.height = (__cov_toz1N7spBKIp3LhBC0BqNw.b['11'][0]++, f.grid_height) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['11'][1]++, null);__cov_toz1N7spBKIp3LhBC0BqNw.s['29']++;_this.mainContCssClass = (__cov_toz1N7spBKIp3LhBC0BqNw.b['12'][0]++, f.grid_cont_css_class) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['12'][1]++, 'grd_Cont');__cov_toz1N7spBKIp3LhBC0BqNw.s['30']++;_this.contCssClass = (__cov_toz1N7spBKIp3LhBC0BqNw.b['13'][0]++, f.grid_tbl_cont_css_class) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['13'][1]++, 'grd_tblCont');__cov_toz1N7spBKIp3LhBC0BqNw.s['31']++;_this.headContCssClass = (__cov_toz1N7spBKIp3LhBC0BqNw.b['14'][0]++, f.grid_tblHead_cont_css_class) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['14'][1]++, 'grd_headTblCont');__cov_toz1N7spBKIp3LhBC0BqNw.s['32']++;_this.infDivCssClass = (__cov_toz1N7spBKIp3LhBC0BqNw.b['15'][0]++, f.grid_inf_grid_css_class) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['15'][1]++, 'grd_inf');__cov_toz1N7spBKIp3LhBC0BqNw.s['33']++;_this.headRowIndex = (__cov_toz1N7spBKIp3LhBC0BqNw.b['16'][0]++, f.grid_headers_row_index) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['16'][1]++, 0);__cov_toz1N7spBKIp3LhBC0BqNw.s['34']++;_this.headRows = (__cov_toz1N7spBKIp3LhBC0BqNw.b['17'][0]++, f.grid_headers_rows) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['17'][1]++, [0]);__cov_toz1N7spBKIp3LhBC0BqNw.s['35']++;_this.enableFilters = f.grid_enable_default_filters === false ? (__cov_toz1N7spBKIp3LhBC0BqNw.b['18'][0]++, false) : (__cov_toz1N7spBKIp3LhBC0BqNw.b['18'][1]++, true);__cov_toz1N7spBKIp3LhBC0BqNw.s['36']++;_this.noHeaders = Boolean(f.grid_no_headers);__cov_toz1N7spBKIp3LhBC0BqNw.s['37']++;_this.defaultColWidth = (__cov_toz1N7spBKIp3LhBC0BqNw.b['19'][0]++, f.grid_default_col_width) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['19'][1]++, '100px');__cov_toz1N7spBKIp3LhBC0BqNw.s['38']++;_this.colElms = [];__cov_toz1N7spBKIp3LhBC0BqNw.s['39']++;_this.prfxGridFltTd = '_td_';__cov_toz1N7spBKIp3LhBC0BqNw.s['40']++;_this.prfxGridTh = 'tblHeadTh_';__cov_toz1N7spBKIp3LhBC0BqNw.s['41']++;_this.sourceTblHtml = tf.tbl.outerHTML;__cov_toz1N7spBKIp3LhBC0BqNw.s['42']++;_this.tblHasColTag = (0, _dom.tag)(tf.tbl, 'col').length > 0 ? (__cov_toz1N7spBKIp3LhBC0BqNw.b['20'][0]++, true) : (__cov_toz1N7spBKIp3LhBC0BqNw.b['20'][1]++, false);__cov_toz1N7spBKIp3LhBC0BqNw.s['43']++;_this.tblMainCont = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['44']++;_this.tblCont = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['45']++;_this.headTblCont = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['46']++;_this.headTbl = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['47']++;tf.fltGrid = _this.enableFilters;__cov_toz1N7spBKIp3LhBC0BqNw.s['48']++;return _this;
	   }__cov_toz1N7spBKIp3LhBC0BqNw.s['49']++;GridLayout.prototype.init = function init() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['6']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['50']++;var _this2 = this;__cov_toz1N7spBKIp3LhBC0BqNw.s['51']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['52']++;var tbl = tf.tbl;__cov_toz1N7spBKIp3LhBC0BqNw.s['53']++;if (this.initialized) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['21'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['54']++;return;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['21'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['55']++;this.setOverrides();__cov_toz1N7spBKIp3LhBC0BqNw.s['56']++;this.setDefaultColWidths();__cov_toz1N7spBKIp3LhBC0BqNw.s['57']++;var tblW = this.initialTableWidth();__cov_toz1N7spBKIp3LhBC0BqNw.s['58']++;this.tblMainCont = this.createContainer('div', this.mainContCssClass);__cov_toz1N7spBKIp3LhBC0BqNw.s['59']++;if (this.width) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['22'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['60']++;this.tblMainCont.style.width = this.width;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['22'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['61']++;tbl.parentNode.insertBefore(this.tblMainCont, tbl);__cov_toz1N7spBKIp3LhBC0BqNw.s['62']++;this.tblCont = this.createContainer('div', this.contCssClass);__cov_toz1N7spBKIp3LhBC0BqNw.s['63']++;this.setConfigWidth(this.tblCont);__cov_toz1N7spBKIp3LhBC0BqNw.s['64']++;if (this.height) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['23'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['65']++;this.tblCont.style.height = this.height;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['23'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['66']++;tbl.parentNode.insertBefore(this.tblCont, tbl);__cov_toz1N7spBKIp3LhBC0BqNw.s['67']++;var t = (0, _dom.removeElm)(tbl);__cov_toz1N7spBKIp3LhBC0BqNw.s['68']++;this.tblCont.appendChild(t);__cov_toz1N7spBKIp3LhBC0BqNw.s['69']++;if (tbl.style.width === '') {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['24'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['70']++;tbl.style.width = ((0, _string.contains)('%', tblW) ? (__cov_toz1N7spBKIp3LhBC0BqNw.b['25'][0]++, tbl.clientWidth) : (__cov_toz1N7spBKIp3LhBC0BqNw.b['25'][1]++, tblW)) + 'px';
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['24'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['71']++;var d = (0, _dom.removeElm)(this.tblCont);__cov_toz1N7spBKIp3LhBC0BqNw.s['72']++;this.tblMainCont.appendChild(d);__cov_toz1N7spBKIp3LhBC0BqNw.s['73']++;this.headTblCont = this.createContainer('div', this.headContCssClass);__cov_toz1N7spBKIp3LhBC0BqNw.s['74']++;this.setConfigWidth(this.headTblCont);__cov_toz1N7spBKIp3LhBC0BqNw.s['75']++;this.headTbl = (0, _dom.createElm)('table');__cov_toz1N7spBKIp3LhBC0BqNw.s['76']++;var tH = (0, _dom.createElm)('tHead');__cov_toz1N7spBKIp3LhBC0BqNw.s['77']++;var hRow = tbl.rows[this.headRowIndex];__cov_toz1N7spBKIp3LhBC0BqNw.s['78']++;var sortTriggers = this.getSortTriggerIds(hRow);__cov_toz1N7spBKIp3LhBC0BqNw.s['79']++;var filtersRow = this.createFiltersRow();__cov_toz1N7spBKIp3LhBC0BqNw.s['80']++;this.setHeadersRow(tH);__cov_toz1N7spBKIp3LhBC0BqNw.s['81']++;this.headTbl.appendChild(tH);__cov_toz1N7spBKIp3LhBC0BqNw.s['82']++;if (tf.filtersRowIndex === 0) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['26'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['83']++;tH.insertBefore(filtersRow, hRow);
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['26'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['84']++;tH.appendChild(filtersRow);
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['85']++;this.headTblCont.appendChild(this.headTbl);__cov_toz1N7spBKIp3LhBC0BqNw.s['86']++;this.tblCont.parentNode.insertBefore(this.headTblCont, this.tblCont);__cov_toz1N7spBKIp3LhBC0BqNw.s['87']++;var thead = (0, _dom.tag)(tbl, 'thead');__cov_toz1N7spBKIp3LhBC0BqNw.s['88']++;if (thead.length > 0) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['27'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['89']++;tbl.removeChild(thead[0]);
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['27'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['90']++;this.headTbl.style.tableLayout = 'fixed';__cov_toz1N7spBKIp3LhBC0BqNw.s['91']++;tbl.style.tableLayout = 'fixed';__cov_toz1N7spBKIp3LhBC0BqNw.s['92']++;this.headTbl.cellPadding = tbl.cellPadding;__cov_toz1N7spBKIp3LhBC0BqNw.s['93']++;this.headTbl.cellSpacing = tbl.cellSpacing;__cov_toz1N7spBKIp3LhBC0BqNw.s['94']++;tf.setColWidths(this.headTbl);__cov_toz1N7spBKIp3LhBC0BqNw.s['95']++;tbl.style.width = '';__cov_toz1N7spBKIp3LhBC0BqNw.s['96']++;this.headTbl.style.width = tbl.clientWidth + 'px';__cov_toz1N7spBKIp3LhBC0BqNw.s['97']++;(0, _event.addEvt)(this.tblCont, 'scroll', function (evt) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.f['7']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['98']++;var elm = (0, _event.targetEvt)(evt);__cov_toz1N7spBKIp3LhBC0BqNw.s['99']++;var scrollLeft = elm.scrollLeft;__cov_toz1N7spBKIp3LhBC0BqNw.s['100']++;_this2.headTblCont.scrollLeft = scrollLeft;
	      });__cov_toz1N7spBKIp3LhBC0BqNw.s['101']++;var sort = tf.extension('sort');__cov_toz1N7spBKIp3LhBC0BqNw.s['102']++;if (sort) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['28'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['103']++;sort.asyncSort = true;__cov_toz1N7spBKIp3LhBC0BqNw.s['104']++;sort.triggerIds = sortTriggers;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['28'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['105']++;this.setColumnElements();__cov_toz1N7spBKIp3LhBC0BqNw.s['106']++;if (tf.popupFilters) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['29'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['107']++;filtersRow.style.display = _const.NONE;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['29'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['108']++;if (tbl.clientWidth !== this.headTbl.clientWidth) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['30'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['109']++;tbl.style.width = this.headTbl.clientWidth + 'px';
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['30'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['110']++;this.initialized = true;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['111']++;GridLayout.prototype.setOverrides = function setOverrides() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['8']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['112']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['113']++;tf.refRow = 0;__cov_toz1N7spBKIp3LhBC0BqNw.s['114']++;tf.headersRow = 0;__cov_toz1N7spBKIp3LhBC0BqNw.s['115']++;tf.filtersRowIndex = 1;__cov_toz1N7spBKIp3LhBC0BqNw.s['116']++;tf.isExternalFlt = true;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['117']++;GridLayout.prototype.setDefaultColWidths = function setDefaultColWidths() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['9']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['118']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['119']++;if (tf.hasColWidths) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['31'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['120']++;return;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['31'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['121']++;for (var k = 0, len = tf.getCellsNb(); k < len; k++) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.s['122']++;var colW = void 0;__cov_toz1N7spBKIp3LhBC0BqNw.s['123']++;var cell = tf.tbl.rows[tf.getHeadersRowIndex()].cells[k];__cov_toz1N7spBKIp3LhBC0BqNw.s['124']++;if (cell.width !== '') {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['32'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['125']++;colW = cell.width;
	         } else {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['32'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['126']++;if (cell.style.width !== '') {
	               __cov_toz1N7spBKIp3LhBC0BqNw.b['33'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['127']++;colW = parseInt(cell.style.width, 10);
	            } else {
	               __cov_toz1N7spBKIp3LhBC0BqNw.b['33'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['128']++;colW = this.defaultColWidth;
	            }
	         }__cov_toz1N7spBKIp3LhBC0BqNw.s['129']++;tf.colWidths[k] = colW;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['130']++;tf.hasColWidths = true;__cov_toz1N7spBKIp3LhBC0BqNw.s['131']++;tf.setColWidths();
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['132']++;GridLayout.prototype.initialTableWidth = function initialTableWidth() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['10']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['133']++;var tbl = this.tf.tbl;__cov_toz1N7spBKIp3LhBC0BqNw.s['134']++;var width = void 0;__cov_toz1N7spBKIp3LhBC0BqNw.s['135']++;if (tbl.width !== '') {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['34'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['136']++;width = tbl.width;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['34'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['137']++;if (tbl.style.width !== '') {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['35'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['138']++;width = tbl.style.width;
	         } else {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['35'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['139']++;width = tbl.clientWidth;
	         }
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['140']++;return parseInt(width, 10);
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['141']++;GridLayout.prototype.createContainer = function createContainer(tag, className) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['11']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['142']++;var element = (0, _dom.createElm)(tag);__cov_toz1N7spBKIp3LhBC0BqNw.s['143']++;element.className = className;__cov_toz1N7spBKIp3LhBC0BqNw.s['144']++;return element;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['145']++;GridLayout.prototype.createFiltersRow = function createFiltersRow() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['12']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['146']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['147']++;var filtersRow = (0, _dom.createElm)('tr');__cov_toz1N7spBKIp3LhBC0BqNw.s['148']++;if ((__cov_toz1N7spBKIp3LhBC0BqNw.b['37'][0]++, this.enableFilters) && (__cov_toz1N7spBKIp3LhBC0BqNw.b['37'][1]++, tf.fltGrid)) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['36'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['149']++;tf.externalFltTgtIds = [];__cov_toz1N7spBKIp3LhBC0BqNw.s['150']++;for (var j = 0; j < tf.getCellsNb(); j++) {
	            __cov_toz1N7spBKIp3LhBC0BqNw.s['151']++;var fltTdId = '' + (tf.prfxFlt + j + this.prfxGridFltTd + tf.id);__cov_toz1N7spBKIp3LhBC0BqNw.s['152']++;var cl = (0, _dom.createElm)(tf.fltCellTag, ['id', fltTdId]);__cov_toz1N7spBKIp3LhBC0BqNw.s['153']++;filtersRow.appendChild(cl);__cov_toz1N7spBKIp3LhBC0BqNw.s['154']++;tf.externalFltTgtIds[j] = fltTdId;
	         }
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['36'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['155']++;return filtersRow;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['156']++;GridLayout.prototype.setColumnElements = function setColumnElements() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['13']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['157']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['158']++;var cols = (0, _dom.tag)(tf.tbl, 'col');__cov_toz1N7spBKIp3LhBC0BqNw.s['159']++;this.tblHasColTag = cols.length > 0;__cov_toz1N7spBKIp3LhBC0BqNw.s['160']++;for (var k = tf.nbCells - 1; k >= 0; k--) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.s['161']++;var col = void 0;__cov_toz1N7spBKIp3LhBC0BqNw.s['162']++;if (!this.tblHasColTag) {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['38'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['163']++;col = (0, _dom.createElm)('col');__cov_toz1N7spBKIp3LhBC0BqNw.s['164']++;tf.tbl.insertBefore(col, tf.tbl.firstChild);
	         } else {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['38'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['165']++;col = cols[k];
	         }__cov_toz1N7spBKIp3LhBC0BqNw.s['166']++;col.style.width = tf.colWidths[k];__cov_toz1N7spBKIp3LhBC0BqNw.s['167']++;this.colElms[k] = col;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['168']++;this.tblHasColTag = true;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['169']++;GridLayout.prototype.setHeadersRow = function setHeadersRow(tableHead) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['14']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['170']++;if (this.noHeaders) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['39'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['171']++;tableHead.appendChild((0, _dom.createElm)('tr'));
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['39'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['172']++;for (var i = 0; i < this.headRows.length; i++) {
	            __cov_toz1N7spBKIp3LhBC0BqNw.s['173']++;var row = this.tf.tbl.rows[this.headRows[i]];__cov_toz1N7spBKIp3LhBC0BqNw.s['174']++;tableHead.appendChild(row);
	         }
	      }
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['175']++;GridLayout.prototype.setConfigWidth = function setConfigWidth(element) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['15']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['176']++;if (!this.width) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['40'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['177']++;return;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['40'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['178']++;if (this.width.indexOf('%') !== -1) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['41'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['179']++;element.style.width = '100%';
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['41'][1]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['180']++;element.style.width = this.width;
	      }
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['181']++;GridLayout.prototype.getSortTriggerIds = function getSortTriggerIds(row) {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['16']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['182']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['183']++;var sortTriggers = [];__cov_toz1N7spBKIp3LhBC0BqNw.s['184']++;for (var n = 0; n < tf.getCellsNb(); n++) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.s['185']++;var c = row.cells[n];__cov_toz1N7spBKIp3LhBC0BqNw.s['186']++;var thId = c.getAttribute('id');__cov_toz1N7spBKIp3LhBC0BqNw.s['187']++;if ((__cov_toz1N7spBKIp3LhBC0BqNw.b['43'][0]++, !thId) || (__cov_toz1N7spBKIp3LhBC0BqNw.b['43'][1]++, thId === '')) {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['42'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['188']++;thId = this.prfxGridTh + n + '_' + tf.id;__cov_toz1N7spBKIp3LhBC0BqNw.s['189']++;c.setAttribute('id', thId);
	         } else {
	            __cov_toz1N7spBKIp3LhBC0BqNw.b['42'][1]++;
	         }__cov_toz1N7spBKIp3LhBC0BqNw.s['190']++;sortTriggers.push(thId);
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['191']++;return sortTriggers;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['192']++;GridLayout.prototype.destroy = function destroy() {
	      __cov_toz1N7spBKIp3LhBC0BqNw.f['17']++;__cov_toz1N7spBKIp3LhBC0BqNw.s['193']++;var tf = this.tf;__cov_toz1N7spBKIp3LhBC0BqNw.s['194']++;var tbl = tf.tbl;__cov_toz1N7spBKIp3LhBC0BqNw.s['195']++;if (!this.initialized) {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['44'][0]++;__cov_toz1N7spBKIp3LhBC0BqNw.s['196']++;return;
	      } else {
	         __cov_toz1N7spBKIp3LhBC0BqNw.b['44'][1]++;
	      }__cov_toz1N7spBKIp3LhBC0BqNw.s['197']++;var t = (0, _dom.removeElm)(tbl);__cov_toz1N7spBKIp3LhBC0BqNw.s['198']++;this.tblMainCont.parentNode.insertBefore(t, this.tblMainCont);__cov_toz1N7spBKIp3LhBC0BqNw.s['199']++;(0, _dom.removeElm)(this.tblMainCont);__cov_toz1N7spBKIp3LhBC0BqNw.s['200']++;this.tblMainCont = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['201']++;this.headTblCont = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['202']++;this.headTbl = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['203']++;this.tblCont = null;__cov_toz1N7spBKIp3LhBC0BqNw.s['204']++;tbl.outerHTML = this.sourceTblHtml;__cov_toz1N7spBKIp3LhBC0BqNw.s['205']++;this.tf.tbl = (0, _dom.elm)(tf.id);__cov_toz1N7spBKIp3LhBC0BqNw.s['206']++;this.initialized = false;
	   };__cov_toz1N7spBKIp3LhBC0BqNw.s['207']++;return GridLayout;
	}(_feature.Feature);

/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	
	var __cov_jy0Q0PHVuO4WGKzRNIsjFQ = Function('return this')();
	if (!__cov_jy0Q0PHVuO4WGKzRNIsjFQ.__coverage__) {
	   __cov_jy0Q0PHVuO4WGKzRNIsjFQ.__coverage__ = {};
	}
	__cov_jy0Q0PHVuO4WGKzRNIsjFQ = __cov_jy0Q0PHVuO4WGKzRNIsjFQ.__coverage__;
	if (!__cov_jy0Q0PHVuO4WGKzRNIsjFQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\feature.js']) {
	   __cov_jy0Q0PHVuO4WGKzRNIsjFQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\feature.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\feature.js', "s": { "1": 0, "2": 1, "3": 0, "4": 0, "5": 0, "6": 0, "7": 1, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0 }, "b": { "1": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 }, "fnMap": { "1": { "line": 7, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 15, "name": "(anonymous_2)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 21, "name": "Feature", "loc": { "start": { "line": 13, "column": 4 }, "end": { "line": 13, "column": 29 } } }, "4": { "line": 63, "name": "(anonymous_4)", "loc": { "start": { "line": 51, "column": 37 }, "end": { "line": 51, "column": 37 } } }, "5": { "line": 73, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "6": { "line": 82, "name": "reset", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 92, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 101, "name": "enable", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 110, "name": "disable", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 120, "name": "isEnabled", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "end": { "line": 52, "column": 5 }, "start": { "line": 13, "column": 4 } }, "8": { "end": { "line": 13, "column": 29 }, "start": { "line": 13, "column": 29 } }, "9": { "end": { "line": 13, "column": 29 }, "start": { "line": 13, "column": 29 } }, "10": { "end": { "line": 18, "column": 8 }, "start": { "line": 18, "column": 8 } }, "11": { "end": { "line": 24, "column": 8 }, "start": { "line": 24, "column": 8 } }, "12": { "end": { "line": 30, "column": 8 }, "start": { "line": 30, "column": 8 } }, "13": { "end": { "line": 36, "column": 8 }, "start": { "line": 36, "column": 8 } }, "14": { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 8 } }, "15": { "end": { "line": 48, "column": 8 }, "start": { "line": 48, "column": 8 } }, "16": { "end": { "line": 51, "column": 8 }, "start": { "line": 51, "column": 8 } }, "17": { "end": { "line": 51, "column": 37 }, "start": { "line": 51, "column": 37 } }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "end": { "line": 58, "column": 8 }, "start": { "line": 58, "column": 8 } }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "end": { "line": 65, "column": 8 }, "start": { "line": 65, "column": 8 } }, "22": { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 8 } }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 8 } }, "25": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "26": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "27": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "28": { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 8 } }, "29": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "30": { "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }, "31": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 7, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] } }, "code": ["", "const NOTIMPLEMENTED = 'Not implemented.';", "", "/**", " * Base class defining the interface of a TableFilter feature", " */", "export class Feature {", "    /**", "     * Creates an instance of Feature", "     * @param {Object} tf TableFilter instance", "     * @param {String} feature Feature name known by TableFilter", "     */", "    constructor(tf, feature) {", "        /**", "         * TableFilter instance", "         * @type {TableFilter}", "         */", "        this.tf = tf;", "", "        /**", "         * Feature name", "         * @type {String}", "         */", "        this.feature = feature;", "", "        /**", "         * TableFilter feature setting", "         * @type {Boolean}", "         */", "        this.enabled = tf[feature];", "", "        /**", "         * TableFilter configuration", "         * @type {Object}", "         */", "        this.config = tf.config();", "", "        /**", "         * TableFilter emitter instance", "         * @type {Emitter}", "         */", "        this.emitter = tf.emitter;", "", "        /**", "         * Field indicating whether Feature is initialized", "         * @type {Boolean}", "         */", "        this.initialized = false;", "", "        /** Subscribe to destroy event */", "        this.emitter.on(['destroy'], () => this.destroy());", "    }", "", "    /**", "     * Initialize the feature", "     */", "    init() {", "        throw new Error(NOTIMPLEMENTED);", "    }", "", "    /**", "     * Reset the feature after being disabled", "     */", "    reset() {", "        this.enable();", "        this.init();", "    }", "", "    /**", "     * Destroy the feature", "     */", "    destroy() {", "        throw new Error(NOTIMPLEMENTED);", "    }", "", "    /**", "     * Enable the feature", "     */", "    enable() {", "        this.enabled = true;", "    }", "", "    /**", "     * Disable the feature", "     */", "    disable() {", "        this.enabled = false;", "    }", "", "    /**", "     * Indicate whether the feature is enabled or not", "     * @returns {Boolean}", "     */", "    isEnabled() {", "        return this.enabled;", "    }", "}", ""] };
	}
	__cov_jy0Q0PHVuO4WGKzRNIsjFQ = __cov_jy0Q0PHVuO4WGKzRNIsjFQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\feature.js'];
	__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });function _classCallCheck(instance, Constructor) {
	   __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['1']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['3']++;if (!(instance instanceof Constructor)) {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.b['1'][0]++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['4']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.b['1'][1]++;
	   }
	}__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['5']++;var NOTIMPLEMENTED = 'Not implemented.';__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['6']++;var Feature = exports.Feature = function () {
	   __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['2']++;function Feature(tf, feature) {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['3']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['8']++;var _this = this;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['9']++;_classCallCheck(this, Feature);__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['10']++;this.tf = tf;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['11']++;this.feature = feature;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['12']++;this.enabled = tf[feature];__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['13']++;this.config = tf.config();__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['14']++;this.emitter = tf.emitter;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['15']++;this.initialized = false;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['16']++;this.emitter.on(['destroy'], function () {
	         __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['4']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['17']++;return _this.destroy();
	      });
	   }__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['18']++;Feature.prototype.init = function init() {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['5']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['19']++;throw new Error(NOTIMPLEMENTED);
	   };__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['20']++;Feature.prototype.reset = function reset() {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['6']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['21']++;this.enable();__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['22']++;this.init();
	   };__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['23']++;Feature.prototype.destroy = function destroy() {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['7']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['24']++;throw new Error(NOTIMPLEMENTED);
	   };__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['25']++;Feature.prototype.enable = function enable() {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['8']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['26']++;this.enabled = true;
	   };__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['27']++;Feature.prototype.disable = function disable() {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['9']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['28']++;this.enabled = false;
	   };__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['29']++;Feature.prototype.isEnabled = function isEnabled() {
	      __cov_jy0Q0PHVuO4WGKzRNIsjFQ.f['10']++;__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['30']++;return this.enabled;
	   };__cov_jy0Q0PHVuO4WGKzRNIsjFQ.s['31']++;return Feature;
	}();

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	
	var __cov_J0JiqQu5WDeEIRsWliR3zw = Function('return this')();
	if (!__cov_J0JiqQu5WDeEIRsWliR3zw.__coverage__) {
	   __cov_J0JiqQu5WDeEIRsWliR3zw.__coverage__ = {};
	}
	__cov_J0JiqQu5WDeEIRsWliR3zw = __cov_J0JiqQu5WDeEIRsWliR3zw.__coverage__;
	if (!__cov_J0JiqQu5WDeEIRsWliR3zw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\const.js']) {
	   __cov_J0JiqQu5WDeEIRsWliR3zw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\const.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\const.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0 }, "b": {}, "f": {}, "fnMap": {}, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "end": { "line": 9, "column": 7 }, "start": { "line": 9, "column": 7 } }, "3": { "end": { "line": 14, "column": 7 }, "start": { "line": 14, "column": 7 } }, "4": { "end": { "line": 19, "column": 7 }, "start": { "line": 19, "column": 7 } }, "5": { "end": { "line": 24, "column": 7 }, "start": { "line": 24, "column": 7 } }, "6": { "end": { "line": 29, "column": 7 }, "start": { "line": 29, "column": 7 } }, "7": { "end": { "line": 39, "column": 7 }, "start": { "line": 39, "column": 7 } }, "8": { "end": { "line": 44, "column": 7 }, "start": { "line": 44, "column": 7 } }, "9": { "end": { "line": 49, "column": 7 }, "start": { "line": 49, "column": 7 } }, "10": { "end": { "line": 54, "column": 7 }, "start": { "line": 54, "column": 7 } }, "11": { "end": { "line": 59, "column": 7 }, "start": { "line": 59, "column": 7 } }, "12": { "end": { "line": 69, "column": 7 }, "start": { "line": 69, "column": 7 } }, "13": { "end": { "line": 74, "column": 7 }, "start": { "line": 74, "column": 7 } }, "14": { "end": { "line": 84, "column": 7 }, "start": { "line": 84, "column": 7 } }, "15": { "end": { "line": 90, "column": 7 }, "start": { "line": 90, "column": 7 } }, "16": { "end": { "line": 96, "column": 7 }, "start": { "line": 96, "column": 7 } }, "17": { "end": { "line": 102, "column": 7 }, "start": { "line": 102, "column": 7 } }, "18": { "end": { "line": 108, "column": 7 }, "start": { "line": 108, "column": 7 } }, "19": { "end": { "line": 118, "column": 7 }, "start": { "line": 118, "column": 7 } } }, "branchMap": {}, "code": ["/**", " * Filter types", " */", "", "/**", " * Input filter type", " * @type {String}", " */", "export const INPUT = 'input';", "/**", " * Select filter type", " * @type {String}", " */", "export const SELECT = 'select';", "/**", " * Multiple select filter type", " * @type {String}", " */", "export const MULTIPLE = 'multiple';", "/**", " * Checklist filter type", " * @type {String}", " */", "export const CHECKLIST = 'checklist';", "/**", " * None filter type", " * @type {String}", " */", "export const NONE = 'none';", "", "/**", " * Key codes", " */", "", "/**", " * Enter key code", " * @type {Number}", " */", "export const ENTER_KEY = 13;", "/**", " * Tab key code", " * @type {Number}", " */", "export const TAB_KEY = 9;", "/**", " * Escape key code", " * @type {Number}", " */", "export const ESC_KEY = 27;", "/**", " * Up arrow key code", " * @type {Number}", " */", "export const UP_ARROW_KEY = 38;", "/**", " * Down arrow key code", " * @type {Number}", " */", "export const DOWN_ARROW_KEY = 40;", "", "/**", " * HTML tags", " */", "", "/**", " * Header cell tag", " * @type {String}", " */", "export const HEADER_TAG = 'TH';", "/**", " * Cell tag", " * @type {String}", " */", "export const CELL_TAG = 'TD';", "", "/**", " * Data types", " */", "", "/**", " * String", " * @type {String}", " */", "export const STRING = 'string';", "", "/**", " * Number", " * @type {String}", " */", "export const NUMBER = 'number';", "", "/**", " * Formatted number", " * @type {String}", " */", "export const FORMATTED_NUMBER = 'formatted-number';", "", "/**", " * Date", " * @type {String}", " */", "export const DATE = 'date';", "", "/**", " * IP address", " * @type {String}", " */", "export const IP_ADDRESS = 'ipaddress';", "", "/**", " * Default values", " */", "", "/**", " * Auto filter delay in milliseconds", " * @type {Number}", " */", "export const AUTO_FILTER_DELAY = 750;", ""] };
	}
	__cov_J0JiqQu5WDeEIRsWliR3zw = __cov_J0JiqQu5WDeEIRsWliR3zw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\const.js'];
	__cov_J0JiqQu5WDeEIRsWliR3zw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_J0JiqQu5WDeEIRsWliR3zw.s['2']++;var INPUT = exports.INPUT = 'input';__cov_J0JiqQu5WDeEIRsWliR3zw.s['3']++;var SELECT = exports.SELECT = 'select';__cov_J0JiqQu5WDeEIRsWliR3zw.s['4']++;var MULTIPLE = exports.MULTIPLE = 'multiple';__cov_J0JiqQu5WDeEIRsWliR3zw.s['5']++;var CHECKLIST = exports.CHECKLIST = 'checklist';__cov_J0JiqQu5WDeEIRsWliR3zw.s['6']++;var NONE = exports.NONE = 'none';__cov_J0JiqQu5WDeEIRsWliR3zw.s['7']++;var ENTER_KEY = exports.ENTER_KEY = 13;__cov_J0JiqQu5WDeEIRsWliR3zw.s['8']++;var TAB_KEY = exports.TAB_KEY = 9;__cov_J0JiqQu5WDeEIRsWliR3zw.s['9']++;var ESC_KEY = exports.ESC_KEY = 27;__cov_J0JiqQu5WDeEIRsWliR3zw.s['10']++;var UP_ARROW_KEY = exports.UP_ARROW_KEY = 38;__cov_J0JiqQu5WDeEIRsWliR3zw.s['11']++;var DOWN_ARROW_KEY = exports.DOWN_ARROW_KEY = 40;__cov_J0JiqQu5WDeEIRsWliR3zw.s['12']++;var HEADER_TAG = exports.HEADER_TAG = 'TH';__cov_J0JiqQu5WDeEIRsWliR3zw.s['13']++;var CELL_TAG = exports.CELL_TAG = 'TD';__cov_J0JiqQu5WDeEIRsWliR3zw.s['14']++;var STRING = exports.STRING = 'string';__cov_J0JiqQu5WDeEIRsWliR3zw.s['15']++;var NUMBER = exports.NUMBER = 'number';__cov_J0JiqQu5WDeEIRsWliR3zw.s['16']++;var FORMATTED_NUMBER = exports.FORMATTED_NUMBER = 'formatted-number';__cov_J0JiqQu5WDeEIRsWliR3zw.s['17']++;var DATE = exports.DATE = 'date';__cov_J0JiqQu5WDeEIRsWliR3zw.s['18']++;var IP_ADDRESS = exports.IP_ADDRESS = 'ipaddress';__cov_J0JiqQu5WDeEIRsWliR3zw.s['19']++;var AUTO_FILTER_DELAY = exports.AUTO_FILTER_DELAY = 750;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_S4T0lqgVuop2vs4nYCviBg = Function('return this')();
	if (!__cov_S4T0lqgVuop2vs4nYCviBg.__coverage__) {
	   __cov_S4T0lqgVuop2vs4nYCviBg.__coverage__ = {};
	}
	__cov_S4T0lqgVuop2vs4nYCviBg = __cov_S4T0lqgVuop2vs4nYCviBg.__coverage__;
	if (!__cov_S4T0lqgVuop2vs4nYCviBg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\loader.js']) {
	   __cov_S4T0lqgVuop2vs4nYCviBg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\loader.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\loader.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 1, "9": 0, "10": 0, "11": 1, "12": 0, "13": 0, "14": 0, "15": 1, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 1, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0 }, "fnMap": { "1": { "line": 18, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 20, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 22, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 34, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 42, "name": "Loader", "loc": { "start": { "line": 33, "column": 4 }, "end": { "line": 33, "column": 20 } } }, "6": { "line": 104, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 133, "name": "(anonymous_7)", "loc": { "start": { "line": 119, "column": 27 }, "end": { "line": 119, "column": 27 } } }, "8": { "line": 136, "name": "(anonymous_8)", "loc": { "start": { "line": 120, "column": 27 }, "end": { "line": 120, "column": 27 } } }, "9": { "line": 152, "name": "show", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 159, "name": "displayLoader", "loc": { "start": { "line": 137, "column": 28 }, "end": { "line": 137, "column": 34 } } }, "11": { "line": 181, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 194, "name": "(anonymous_12)", "loc": { "start": { "line": 168, "column": 28 }, "end": { "line": 168, "column": 28 } } }, "13": { "line": 197, "name": "(anonymous_13)", "loc": { "start": { "line": 169, "column": 28 }, "end": { "line": 169, "column": 28 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "end": { "line": 86, "column": 5 }, "start": { "line": 33, "column": 4 } }, "25": { "end": { "line": 33, "column": 20 }, "start": { "line": 33, "column": 20 } }, "26": { "end": { "line": 33, "column": 20 }, "start": { "line": 33, "column": 20 } }, "27": { "end": { "line": 36, "column": 8 }, "start": { "line": 36, "column": 8 } }, "28": { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 8 } }, "29": { "end": { "line": 48, "column": 8 }, "start": { "line": 48, "column": 8 } }, "30": { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }, "31": { "end": { "line": 60, "column": 8 }, "start": { "line": 60, "column": 8 } }, "32": { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 8 } }, "33": { "end": { "line": 72, "column": 8 }, "start": { "line": 72, "column": 8 } }, "34": { "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 8 } }, "35": { "end": { "line": 85, "column": 8 }, "start": { "line": 85, "column": 8 } }, "36": { "end": { "line": 33, "column": 20 }, "start": { "line": 33, "column": 20 } }, "37": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "38": { "end": { "line": 91, "column": 11 }, "start": { "line": 91, "column": 11 } }, "39": { "end": { "line": 94, "column": 9 }, "start": { "line": 92, "column": 8 } }, "40": { "end": { "line": 93, "column": 12 }, "start": { "line": 93, "column": 12 } }, "41": { "end": { "line": 96, "column": 8 }, "start": { "line": 96, "column": 8 } }, "42": { "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 8 } }, "43": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "44": { "end": { "line": 100, "column": 8 }, "start": { "line": 100, "column": 8 } }, "45": { "end": { "line": 102, "column": 8 }, "start": { "line": 102, "column": 8 } }, "46": { "end": { "line": 108, "column": 9 }, "start": { "line": 104, "column": 8 } }, "47": { "end": { "line": 105, "column": 12 }, "start": { "line": 105, "column": 12 } }, "48": { "end": { "line": 107, "column": 12 }, "start": { "line": 107, "column": 12 } }, "49": { "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }, "50": { "end": { "line": 114, "column": 9 }, "start": { "line": 110, "column": 8 } }, "51": { "end": { "line": 111, "column": 12 }, "start": { "line": 111, "column": 12 } }, "52": { "end": { "line": 113, "column": 12 }, "start": { "line": 113, "column": 12 } }, "53": { "end": { "line": 116, "column": 8 }, "start": { "line": 116, "column": 8 } }, "54": { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, "55": { "end": { "line": 119, "column": 27 }, "start": { "line": 119, "column": 27 } }, "56": { "end": { "line": 120, "column": 8 }, "start": { "line": 120, "column": 8 } }, "57": { "end": { "line": 120, "column": 27 }, "start": { "line": 120, "column": 27 } }, "58": { "end": { "line": 125, "column": 8 }, "start": { "line": 125, "column": 8 } }, "59": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "60": { "end": { "line": 132, "column": 12 }, "start": { "line": 132, "column": 12 } }, "61": { "end": { "line": 135, "column": 9 }, "start": { "line": 133, "column": 8 } }, "62": { "end": { "line": 134, "column": 12 }, "start": { "line": 134, "column": 12 } }, "63": { "end": { "line": 137, "column": 8 }, "start": { "line": 137, "column": 8 } }, "64": { "end": { "line": 140, "column": 13 }, "start": { "line": 138, "column": 12 } }, "65": { "end": { "line": 139, "column": 16 }, "start": { "line": 139, "column": 16 } }, "66": { "end": { "line": 143, "column": 13 }, "start": { "line": 141, "column": 12 } }, "67": { "end": { "line": 142, "column": 16 }, "start": { "line": 142, "column": 16 } }, "68": { "end": { "line": 144, "column": 12 }, "start": { "line": 144, "column": 12 } }, "69": { "end": { "line": 147, "column": 13 }, "start": { "line": 145, "column": 12 } }, "70": { "end": { "line": 146, "column": 16 }, "start": { "line": 146, "column": 16 } }, "71": { "end": { "line": 150, "column": 8 }, "start": { "line": 150, "column": 8 } }, "72": { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 8 } }, "73": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "74": { "end": { "line": 157, "column": 14 }, "start": { "line": 157, "column": 14 } }, "75": { "end": { "line": 160, "column": 9 }, "start": { "line": 158, "column": 8 } }, "76": { "end": { "line": 159, "column": 12 }, "start": { "line": 159, "column": 12 } }, "77": { "end": { "line": 162, "column": 8 }, "start": { "line": 162, "column": 8 } }, "78": { "end": { "line": 164, "column": 8 }, "start": { "line": 164, "column": 8 } }, "79": { "end": { "line": 165, "column": 8 }, "start": { "line": 165, "column": 8 } }, "80": { "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 8 } }, "81": { "end": { "line": 168, "column": 28 }, "start": { "line": 168, "column": 28 } }, "82": { "end": { "line": 169, "column": 8 }, "start": { "line": 169, "column": 8 } }, "83": { "end": { "line": 169, "column": 28 }, "start": { "line": 169, "column": 28 } }, "84": { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, "85": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 20, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 53, "type": "binary-expr", "locations": [{ "end": { "line": 42, "column": 24 }, "start": { "line": 42, "column": 24 } }, { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 46 } }] }, "11": { "line": 65, "type": "binary-expr", "locations": [{ "end": { "line": 54, "column": 20 }, "start": { "line": 54, "column": 20 } }, { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 37 } }] }, "12": { "line": 71, "type": "binary-expr", "locations": [{ "end": { "line": 60, "column": 20 }, "start": { "line": 60, "column": 20 } }, { "end": { "line": 60, "column": 8 }, "start": { "line": 60, "column": 37 } }] }, "13": { "line": 77, "type": "binary-expr", "locations": [{ "end": { "line": 66, "column": 24 }, "start": { "line": 66, "column": 24 } }, { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 46 } }] }, "14": { "line": 89, "type": "cond-expr", "locations": [{ "end": { "line": 78, "column": 22 }, "start": { "line": 79, "column": 12 } }, { "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 22 } }] }, "15": { "line": 95, "type": "cond-expr", "locations": [{ "end": { "line": 85, "column": 22 }, "start": { "line": 85, "column": 47 } }, { "end": { "line": 85, "column": 8 }, "start": { "line": 85, "column": 22 } }] }, "16": { "line": 107, "type": "if", "locations": [{ "end": { "line": 92, "column": 8 }, "start": { "line": 92, "column": 8 } }, { "end": { "line": 92, "column": 8 }, "start": { "line": 92, "column": 8 } }] }, "17": { "line": 117, "type": "cond-expr", "locations": [{ "end": { "line": 102, "column": 23 }, "start": { "line": 103, "column": 12 } }, { "end": { "line": 102, "column": 8 }, "start": { "line": 103, "column": 32 } }] }, "18": { "line": 118, "type": "if", "locations": [{ "end": { "line": 104, "column": 8 }, "start": { "line": 104, "column": 8 } }, { "end": { "line": 104, "column": 8 }, "start": { "line": 104, "column": 8 } }] }, "19": { "line": 124, "type": "if", "locations": [{ "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }, { "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }] }, "20": { "line": 155, "type": "if", "locations": [{ "end": { "line": 133, "column": 8 }, "start": { "line": 133, "column": 8 } }, { "end": { "line": 133, "column": 8 }, "start": { "line": 133, "column": 8 } }] }, "21": { "line": 160, "type": "if", "locations": [{ "end": { "line": 138, "column": 12 }, "start": { "line": 138, "column": 12 } }, { "end": { "line": 138, "column": 12 }, "start": { "line": 138, "column": 12 } }] }, "22": { "line": 163, "type": "if", "locations": [{ "end": { "line": 141, "column": 12 }, "start": { "line": 141, "column": 12 } }, { "end": { "line": 141, "column": 12 }, "start": { "line": 141, "column": 12 } }] }, "23": { "line": 167, "type": "if", "locations": [{ "end": { "line": 145, "column": 12 }, "start": { "line": 145, "column": 12 } }, { "end": { "line": 145, "column": 12 }, "start": { "line": 145, "column": 12 } }] }, "24": { "line": 172, "type": "cond-expr", "locations": [{ "end": { "line": 150, "column": 16 }, "start": { "line": 150, "column": 29 } }, { "end": { "line": 150, "column": 8 }, "start": { "line": 150, "column": 47 } }] }, "25": { "line": 184, "type": "if", "locations": [{ "end": { "line": 158, "column": 8 }, "start": { "line": 158, "column": 8 } }, { "end": { "line": 158, "column": 8 }, "start": { "line": 158, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, createText, elm, removeElm} from '../dom';", "import {isFn, EMPTY_FN} from '../types';", "import {root} from '../root';", "import {NONE} from '../const';", "", "const EVENTS = [", "    'before-filtering',", "    'before-populating-filter',", "    'before-page-change',", "    'before-clearing-filters',", "    'before-page-length-change',", "    'before-reset-page',", "    'before-reset-page-length',", "    'before-loading-extensions',", "    'before-loading-themes'", "];", "", "/**", " * Activity indicator", " *", " * @export", " * @class Loader", " * @extends {Feature}", " */", "export class Loader extends Feature {", "", "    /**", "     * Creates an instance of Loader.", "     *", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'loader');", "", "        let f = this.config;", "", "        /**", "         * ID of custom container element", "         * @type {String}", "         */", "        this.targetId = f.loader_target_id || null;", "", "        /**", "         * Loader container DOM element", "         * @type {DOMElement}", "         */", "        this.cont = null;", "", "        /**", "         * Text displayed when indicator is visible", "         * @type {String}", "         */", "        this.text = f.loader_text || 'Loading...';", "", "        /**", "         * Custom HTML injected in Loader's container element", "         * @type {String}", "         */", "        this.html = f.loader_html || null;", "", "        /**", "         * Css class for Loader's container element", "         * @type {String}", "         */", "        this.cssClass = f.loader_css_class || 'loader';", "", "        /**", "         * Close delay in milliseconds", "         * @type {Number}", "         */", "        this.closeDelay = 250;", "", "        /**", "         * Callback fired when loader is displayed", "         * @type {Function}", "         */", "        this.onShow = isFn(f.on_show_loader) ?", "            f.on_show_loader : EMPTY_FN;", "", "        /**", "         * Callback fired when loader is closed", "         * @type {Function}", "         */", "        this.onHide = isFn(f.on_hide_loader) ? f.on_hide_loader : EMPTY_FN;", "    }", "", "    /**", "     * Initializes Loader instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        let tf = this.tf;", "        let emitter = this.emitter;", "", "        let containerDiv = createElm('div');", "        containerDiv.className = this.cssClass;", "", "        let targetEl = !this.targetId ?", "            tf.tbl.parentNode : elm(this.targetId);", "        if (!this.targetId) {", "            targetEl.insertBefore(containerDiv, tf.tbl);", "        } else {", "            targetEl.appendChild(containerDiv);", "        }", "        this.cont = containerDiv;", "        if (!this.html) {", "            this.cont.appendChild(createText(this.text));", "        } else {", "            this.cont.innerHTML = this.html;", "        }", "", "        this.show(NONE);", "", "        // Subscribe to events", "        emitter.on(EVENTS, () => this.show(''));", "        emitter.on(EVENTS, () => this.show(NONE));", "", "        /**", "         * @inherited", "         */", "        this.initialized = true;", "    }", "", "    /**", "     * Shows or hides activity indicator", "     * @param {String} Two possible values: '' or 'none'", "     */", "    show(p) {", "        if (!this.isEnabled()) {", "            return;", "        }", "", "        let displayLoader = () => {", "            if (!this.cont) {", "                return;", "            }", "            if (p !== NONE) {", "                this.onShow(this);", "            }", "            this.cont.style.display = p;", "            if (p === NONE) {", "                this.onHide(this);", "            }", "        };", "", "        let t = p === NONE ? this.closeDelay : 1;", "        root.setTimeout(displayLoader, t);", "    }", "", "    /**", "     * Removes feature", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        let emitter = this.emitter;", "", "        removeElm(this.cont);", "        this.cont = null;", "", "        // Unsubscribe to events", "        emitter.off(EVENTS, () => this.show(''));", "        emitter.off(EVENTS, () => this.show(NONE));", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_S4T0lqgVuop2vs4nYCviBg = __cov_S4T0lqgVuop2vs4nYCviBg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\loader.js'];
	__cov_S4T0lqgVuop2vs4nYCviBg.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_S4T0lqgVuop2vs4nYCviBg.s['2']++;exports.Loader = undefined;__cov_S4T0lqgVuop2vs4nYCviBg.s['3']++;var _feature = __webpack_require__(10);__cov_S4T0lqgVuop2vs4nYCviBg.s['4']++;var _dom = __webpack_require__(3);__cov_S4T0lqgVuop2vs4nYCviBg.s['5']++;var _types = __webpack_require__(4);__cov_S4T0lqgVuop2vs4nYCviBg.s['6']++;var _root = __webpack_require__(2);__cov_S4T0lqgVuop2vs4nYCviBg.s['7']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_S4T0lqgVuop2vs4nYCviBg.f['1']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['9']++;if (!(instance instanceof Constructor)) {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['1'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['10']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_S4T0lqgVuop2vs4nYCviBg.f['2']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['12']++;if (!self) {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['2'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['13']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['2'][1]++;
	   }__cov_S4T0lqgVuop2vs4nYCviBg.s['14']++;return (__cov_S4T0lqgVuop2vs4nYCviBg.b['4'][0]++, call) && ((__cov_S4T0lqgVuop2vs4nYCviBg.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_S4T0lqgVuop2vs4nYCviBg.b['4'][2]++, typeof call === 'function')) ? (__cov_S4T0lqgVuop2vs4nYCviBg.b['3'][0]++, call) : (__cov_S4T0lqgVuop2vs4nYCviBg.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_S4T0lqgVuop2vs4nYCviBg.f['3']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['16']++;if ((__cov_S4T0lqgVuop2vs4nYCviBg.b['6'][0]++, typeof superClass !== 'function') && (__cov_S4T0lqgVuop2vs4nYCviBg.b['6'][1]++, superClass !== null)) {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['5'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['17']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['5'][1]++;
	   }__cov_S4T0lqgVuop2vs4nYCviBg.s['18']++;subClass.prototype = Object.create((__cov_S4T0lqgVuop2vs4nYCviBg.b['7'][0]++, superClass) && (__cov_S4T0lqgVuop2vs4nYCviBg.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_S4T0lqgVuop2vs4nYCviBg.s['19']++;if (superClass) {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['8'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['20']++;Object.setPrototypeOf ? (__cov_S4T0lqgVuop2vs4nYCviBg.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_S4T0lqgVuop2vs4nYCviBg.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_S4T0lqgVuop2vs4nYCviBg.b['8'][1]++;
	   }
	}__cov_S4T0lqgVuop2vs4nYCviBg.s['21']++;var EVENTS = ['before-filtering', 'before-populating-filter', 'before-page-change', 'before-clearing-filters', 'before-page-length-change', 'before-reset-page', 'before-reset-page-length', 'before-loading-extensions', 'before-loading-themes'];__cov_S4T0lqgVuop2vs4nYCviBg.s['22']++;var Loader = exports.Loader = function (_Feature) {
	   __cov_S4T0lqgVuop2vs4nYCviBg.f['4']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['23']++;_inherits(Loader, _Feature);function Loader(tf) {
	      __cov_S4T0lqgVuop2vs4nYCviBg.f['5']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['25']++;_classCallCheck(this, Loader);__cov_S4T0lqgVuop2vs4nYCviBg.s['26']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'loader'));__cov_S4T0lqgVuop2vs4nYCviBg.s['27']++;var f = _this.config;__cov_S4T0lqgVuop2vs4nYCviBg.s['28']++;_this.targetId = (__cov_S4T0lqgVuop2vs4nYCviBg.b['10'][0]++, f.loader_target_id) || (__cov_S4T0lqgVuop2vs4nYCviBg.b['10'][1]++, null);__cov_S4T0lqgVuop2vs4nYCviBg.s['29']++;_this.cont = null;__cov_S4T0lqgVuop2vs4nYCviBg.s['30']++;_this.text = (__cov_S4T0lqgVuop2vs4nYCviBg.b['11'][0]++, f.loader_text) || (__cov_S4T0lqgVuop2vs4nYCviBg.b['11'][1]++, 'Loading...');__cov_S4T0lqgVuop2vs4nYCviBg.s['31']++;_this.html = (__cov_S4T0lqgVuop2vs4nYCviBg.b['12'][0]++, f.loader_html) || (__cov_S4T0lqgVuop2vs4nYCviBg.b['12'][1]++, null);__cov_S4T0lqgVuop2vs4nYCviBg.s['32']++;_this.cssClass = (__cov_S4T0lqgVuop2vs4nYCviBg.b['13'][0]++, f.loader_css_class) || (__cov_S4T0lqgVuop2vs4nYCviBg.b['13'][1]++, 'loader');__cov_S4T0lqgVuop2vs4nYCviBg.s['33']++;_this.closeDelay = 250;__cov_S4T0lqgVuop2vs4nYCviBg.s['34']++;_this.onShow = (0, _types.isFn)(f.on_show_loader) ? (__cov_S4T0lqgVuop2vs4nYCviBg.b['14'][0]++, f.on_show_loader) : (__cov_S4T0lqgVuop2vs4nYCviBg.b['14'][1]++, _types.EMPTY_FN);__cov_S4T0lqgVuop2vs4nYCviBg.s['35']++;_this.onHide = (0, _types.isFn)(f.on_hide_loader) ? (__cov_S4T0lqgVuop2vs4nYCviBg.b['15'][0]++, f.on_hide_loader) : (__cov_S4T0lqgVuop2vs4nYCviBg.b['15'][1]++, _types.EMPTY_FN);__cov_S4T0lqgVuop2vs4nYCviBg.s['36']++;return _this;
	   }__cov_S4T0lqgVuop2vs4nYCviBg.s['37']++;Loader.prototype.init = function init() {
	      __cov_S4T0lqgVuop2vs4nYCviBg.f['6']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['38']++;var _this2 = this;__cov_S4T0lqgVuop2vs4nYCviBg.s['39']++;if (this.initialized) {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['16'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['40']++;return;
	      } else {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['16'][1]++;
	      }__cov_S4T0lqgVuop2vs4nYCviBg.s['41']++;var tf = this.tf;__cov_S4T0lqgVuop2vs4nYCviBg.s['42']++;var emitter = this.emitter;__cov_S4T0lqgVuop2vs4nYCviBg.s['43']++;var containerDiv = (0, _dom.createElm)('div');__cov_S4T0lqgVuop2vs4nYCviBg.s['44']++;containerDiv.className = this.cssClass;__cov_S4T0lqgVuop2vs4nYCviBg.s['45']++;var targetEl = !this.targetId ? (__cov_S4T0lqgVuop2vs4nYCviBg.b['17'][0]++, tf.tbl.parentNode) : (__cov_S4T0lqgVuop2vs4nYCviBg.b['17'][1]++, (0, _dom.elm)(this.targetId));__cov_S4T0lqgVuop2vs4nYCviBg.s['46']++;if (!this.targetId) {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['18'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['47']++;targetEl.insertBefore(containerDiv, tf.tbl);
	      } else {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['18'][1]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['48']++;targetEl.appendChild(containerDiv);
	      }__cov_S4T0lqgVuop2vs4nYCviBg.s['49']++;this.cont = containerDiv;__cov_S4T0lqgVuop2vs4nYCviBg.s['50']++;if (!this.html) {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['19'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['51']++;this.cont.appendChild((0, _dom.createText)(this.text));
	      } else {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['19'][1]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['52']++;this.cont.innerHTML = this.html;
	      }__cov_S4T0lqgVuop2vs4nYCviBg.s['53']++;this.show(_const.NONE);__cov_S4T0lqgVuop2vs4nYCviBg.s['54']++;emitter.on(EVENTS, function () {
	         __cov_S4T0lqgVuop2vs4nYCviBg.f['7']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['55']++;return _this2.show('');
	      });__cov_S4T0lqgVuop2vs4nYCviBg.s['56']++;emitter.on(EVENTS, function () {
	         __cov_S4T0lqgVuop2vs4nYCviBg.f['8']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['57']++;return _this2.show(_const.NONE);
	      });__cov_S4T0lqgVuop2vs4nYCviBg.s['58']++;this.initialized = true;
	   };__cov_S4T0lqgVuop2vs4nYCviBg.s['59']++;Loader.prototype.show = function show(p) {
	      __cov_S4T0lqgVuop2vs4nYCviBg.f['9']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['60']++;var _this3 = this;__cov_S4T0lqgVuop2vs4nYCviBg.s['61']++;if (!this.isEnabled()) {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['20'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['62']++;return;
	      } else {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['20'][1]++;
	      }__cov_S4T0lqgVuop2vs4nYCviBg.s['63']++;var displayLoader = function displayLoader() {
	         __cov_S4T0lqgVuop2vs4nYCviBg.f['10']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['64']++;if (!_this3.cont) {
	            __cov_S4T0lqgVuop2vs4nYCviBg.b['21'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['65']++;return;
	         } else {
	            __cov_S4T0lqgVuop2vs4nYCviBg.b['21'][1]++;
	         }__cov_S4T0lqgVuop2vs4nYCviBg.s['66']++;if (p !== _const.NONE) {
	            __cov_S4T0lqgVuop2vs4nYCviBg.b['22'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['67']++;_this3.onShow(_this3);
	         } else {
	            __cov_S4T0lqgVuop2vs4nYCviBg.b['22'][1]++;
	         }__cov_S4T0lqgVuop2vs4nYCviBg.s['68']++;_this3.cont.style.display = p;__cov_S4T0lqgVuop2vs4nYCviBg.s['69']++;if (p === _const.NONE) {
	            __cov_S4T0lqgVuop2vs4nYCviBg.b['23'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['70']++;_this3.onHide(_this3);
	         } else {
	            __cov_S4T0lqgVuop2vs4nYCviBg.b['23'][1]++;
	         }
	      };__cov_S4T0lqgVuop2vs4nYCviBg.s['71']++;var t = p === _const.NONE ? (__cov_S4T0lqgVuop2vs4nYCviBg.b['24'][0]++, this.closeDelay) : (__cov_S4T0lqgVuop2vs4nYCviBg.b['24'][1]++, 1);__cov_S4T0lqgVuop2vs4nYCviBg.s['72']++;_root.root.setTimeout(displayLoader, t);
	   };__cov_S4T0lqgVuop2vs4nYCviBg.s['73']++;Loader.prototype.destroy = function destroy() {
	      __cov_S4T0lqgVuop2vs4nYCviBg.f['11']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['74']++;var _this4 = this;__cov_S4T0lqgVuop2vs4nYCviBg.s['75']++;if (!this.initialized) {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['25'][0]++;__cov_S4T0lqgVuop2vs4nYCviBg.s['76']++;return;
	      } else {
	         __cov_S4T0lqgVuop2vs4nYCviBg.b['25'][1]++;
	      }__cov_S4T0lqgVuop2vs4nYCviBg.s['77']++;var emitter = this.emitter;__cov_S4T0lqgVuop2vs4nYCviBg.s['78']++;(0, _dom.removeElm)(this.cont);__cov_S4T0lqgVuop2vs4nYCviBg.s['79']++;this.cont = null;__cov_S4T0lqgVuop2vs4nYCviBg.s['80']++;emitter.off(EVENTS, function () {
	         __cov_S4T0lqgVuop2vs4nYCviBg.f['12']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['81']++;return _this4.show('');
	      });__cov_S4T0lqgVuop2vs4nYCviBg.s['82']++;emitter.off(EVENTS, function () {
	         __cov_S4T0lqgVuop2vs4nYCviBg.f['13']++;__cov_S4T0lqgVuop2vs4nYCviBg.s['83']++;return _this4.show(_const.NONE);
	      });__cov_S4T0lqgVuop2vs4nYCviBg.s['84']++;this.initialized = false;
	   };__cov_S4T0lqgVuop2vs4nYCviBg.s['85']++;return Loader;
	}(_feature.Feature);

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_wkBJkJMOn8$$sXMR56GQ_Q = Function('return this')();
	if (!__cov_wkBJkJMOn8$$sXMR56GQ_Q.__coverage__) {
	   __cov_wkBJkJMOn8$$sXMR56GQ_Q.__coverage__ = {};
	}
	__cov_wkBJkJMOn8$$sXMR56GQ_Q = __cov_wkBJkJMOn8$$sXMR56GQ_Q.__coverage__;
	if (!__cov_wkBJkJMOn8$$sXMR56GQ_Q['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\highlightKeywords.js']) {
	   __cov_wkBJkJMOn8$$sXMR56GQ_Q['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\highlightKeywords.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\highlightKeywords.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 1, "7": 0, "8": 0, "9": 0, "10": 1, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0, 0, 0, 0], "13": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0 }, "fnMap": { "1": { "line": 14, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 22, "name": "(anonymous_2)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 28, "name": "HighlightKeyword", "loc": { "start": { "line": 17, "column": 4 }, "end": { "line": 17, "column": 20 } } }, "4": { "line": 57, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 60, "name": "(anonymous_5)", "loc": { "start": { "line": 45, "column": 12 }, "end": { "line": 45, "column": 12 } } }, "6": { "line": 63, "name": "(anonymous_6)", "loc": { "start": { "line": 49, "column": 12 }, "end": { "line": 49, "column": 12 } } }, "7": { "line": 78, "name": "highlight", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 121, "name": "unhighlight", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 140, "name": "unhighlightAll", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 147, "name": "(anonymous_10)", "loc": { "start": { "line": 123, "column": 42 }, "end": { "line": 123, "column": 51 } } }, "11": { "line": 149, "name": "(anonymous_11)", "loc": { "start": { "line": 125, "column": 28 }, "end": { "line": 125, "column": 28 } } }, "12": { "line": 161, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "13": { "line": 164, "name": "(anonymous_13)", "loc": { "start": { "line": 137, "column": 12 }, "end": { "line": 137, "column": 12 } } }, "14": { "line": 167, "name": "(anonymous_14)", "loc": { "start": { "line": 141, "column": 12 }, "end": { "line": 141, "column": 12 } } }, "15": { "line": 179, "name": "_processTerm", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "end": { "line": 37, "column": 5 }, "start": { "line": 17, "column": 4 } }, "11": { "end": { "line": 17, "column": 20 }, "start": { "line": 17, "column": 20 } }, "12": { "end": { "line": 18, "column": 8 }, "start": { "line": 18, "column": 8 } }, "13": { "end": { "line": 24, "column": 8 }, "start": { "line": 24, "column": 8 } }, "14": { "end": { "line": 30, "column": 8 }, "start": { "line": 30, "column": 8 } }, "15": { "end": { "line": 36, "column": 8 }, "start": { "line": 36, "column": 8 } }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "end": { "line": 42, "column": 11 }, "start": { "line": 42, "column": 11 } }, "18": { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 8 } }, "19": { "end": { "line": 45, "column": 12 }, "start": { "line": 45, "column": 12 } }, "20": { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, "21": { "end": { "line": 49, "column": 12 }, "start": { "line": 49, "column": 12 } }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "end": { "line": 68, "column": 9 }, "start": { "line": 63, "column": 8 } }, "24": { "end": { "line": 64, "column": 12 }, "start": { "line": 64, "column": 12 } }, "25": { "end": { "line": 67, "column": 13 }, "start": { "line": 65, "column": 12 } }, "26": { "end": { "line": 66, "column": 16 }, "start": { "line": 66, "column": 16 } }, "27": { "end": { "line": 93, "column": 9 }, "start": { "line": 70, "column": 8 } }, "28": { "end": { "line": 71, "column": 12 }, "start": { "line": 71, "column": 12 } }, "29": { "end": { "line": 72, "column": 12 }, "start": { "line": 72, "column": 12 } }, "30": { "end": { "line": 92, "column": 13 }, "start": { "line": 74, "column": 12 } }, "31": { "end": { "line": 75, "column": 16 }, "start": { "line": 75, "column": 16 } }, "32": { "end": { "line": 91, "column": 17 }, "start": { "line": 76, "column": 16 } }, "33": { "end": { "line": 78, "column": 20 }, "start": { "line": 78, "column": 20 } }, "34": { "end": { "line": 85, "column": 20 }, "start": { "line": 85, "column": 20 } }, "35": { "end": { "line": 86, "column": 20 }, "start": { "line": 86, "column": 20 } }, "36": { "end": { "line": 87, "column": 20 }, "start": { "line": 87, "column": 20 } }, "37": { "end": { "line": 88, "column": 20 }, "start": { "line": 88, "column": 20 } }, "38": { "end": { "line": 89, "column": 20 }, "start": { "line": 89, "column": 20 } }, "39": { "end": { "line": 90, "column": 20 }, "start": { "line": 90, "column": 20 } }, "40": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "41": { "end": { "line": 102, "column": 8 }, "start": { "line": 102, "column": 8 } }, "42": { "end": { "line": 112, "column": 9 }, "start": { "line": 103, "column": 8 } }, "43": { "end": { "line": 104, "column": 12 }, "start": { "line": 104, "column": 12 } }, "44": { "end": { "line": 105, "column": 12 }, "start": { "line": 105, "column": 12 } }, "45": { "end": { "line": 111, "column": 13 }, "start": { "line": 107, "column": 12 } }, "46": { "end": { "line": 108, "column": 16 }, "start": { "line": 108, "column": 16 } }, "47": { "end": { "line": 109, "column": 16 }, "start": { "line": 109, "column": 16 } }, "48": { "end": { "line": 110, "column": 16 }, "start": { "line": 110, "column": 16 } }, "49": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "50": { "end": { "line": 118, "column": 21 }, "start": { "line": 118, "column": 21 } }, "51": { "end": { "line": 121, "column": 9 }, "start": { "line": 119, "column": 8 } }, "52": { "end": { "line": 120, "column": 12 }, "start": { "line": 120, "column": 12 } }, "53": { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 8 } }, "54": { "end": { "line": 129, "column": 13 }, "start": { "line": 124, "column": 12 } }, "55": { "end": { "line": 125, "column": 16 }, "start": { "line": 125, "column": 16 } }, "56": { "end": { "line": 125, "column": 28 }, "start": { "line": 125, "column": 28 } }, "57": { "end": { "line": 128, "column": 16 }, "start": { "line": 128, "column": 16 } }, "58": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "59": { "end": { "line": 134, "column": 14 }, "start": { "line": 134, "column": 14 } }, "60": { "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 8 } }, "61": { "end": { "line": 137, "column": 12 }, "start": { "line": 137, "column": 12 } }, "62": { "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 8 } }, "63": { "end": { "line": 141, "column": 12 }, "start": { "line": 141, "column": 12 } }, "64": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "65": { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 8 } }, "66": { "end": { "line": 152, "column": 8 }, "start": { "line": 152, "column": 8 } }, "67": { "end": { "line": 153, "column": 8 }, "start": { "line": 153, "column": 8 } }, "68": { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }, "69": { "end": { "line": 155, "column": 8 }, "start": { "line": 155, "column": 8 } }, "70": { "end": { "line": 156, "column": 8 }, "start": { "line": 156, "column": 8 } }, "71": { "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }, "72": { "end": { "line": 158, "column": 8 }, "start": { "line": 158, "column": 8 } }, "73": { "end": { "line": 159, "column": 8 }, "start": { "line": 159, "column": 8 } }, "74": { "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 8 } }, "75": { "end": { "line": 162, "column": 8 }, "start": { "line": 162, "column": 8 } }, "76": { "end": { "line": 171, "column": 9 }, "start": { "line": 168, "column": 8 } }, "77": { "end": { "line": 170, "column": 12 }, "start": { "line": 170, "column": 12 } }, "78": { "end": { "line": 175, "column": 9 }, "start": { "line": 173, "column": 8 } }, "79": { "end": { "line": 174, "column": 12 }, "start": { "line": 174, "column": 12 } }, "80": { "end": { "line": 177, "column": 8 }, "start": { "line": 177, "column": 8 } }, "81": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 14, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 37, "type": "binary-expr", "locations": [{ "end": { "line": 24, "column": 33 }, "start": { "line": 24, "column": 33 } }, { "end": { "line": 24, "column": 8 }, "start": { "line": 24, "column": 58 } }] }, "3": { "line": 80, "type": "if", "locations": [{ "end": { "line": 63, "column": 8 }, "start": { "line": 63, "column": 8 } }, { "end": { "line": 63, "column": 8 }, "start": { "line": 63, "column": 8 } }] }, "4": { "line": 87, "type": "if", "locations": [{ "end": { "line": 70, "column": 8 }, "start": { "line": 70, "column": 8 } }, { "end": { "line": 70, "column": 8 }, "start": { "line": 70, "column": 8 } }] }, "5": { "line": 91, "type": "if", "locations": [{ "end": { "line": 74, "column": 12 }, "start": { "line": 74, "column": 12 } }, { "end": { "line": 74, "column": 12 }, "start": { "line": 74, "column": 12 } }] }, "6": { "line": 93, "type": "if", "locations": [{ "end": { "line": 76, "column": 16 }, "start": { "line": 76, "column": 16 } }, { "end": { "line": 76, "column": 16 }, "start": { "line": 76, "column": 16 } }] }, "7": { "line": 93, "type": "binary-expr", "locations": [{ "end": { "line": 76, "column": 20 }, "start": { "line": 76, "column": 20 } }, { "end": { "line": 76, "column": 16 }, "start": { "line": 76, "column": 26 } }] }, "8": { "line": 127, "type": "if", "locations": [{ "end": { "line": 107, "column": 12 }, "start": { "line": 107, "column": 12 } }, { "end": { "line": 107, "column": 12 }, "start": { "line": 107, "column": 12 } }] }, "9": { "line": 143, "type": "if", "locations": [{ "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }] }, "10": { "line": 148, "type": "if", "locations": [{ "end": { "line": 124, "column": 12 }, "start": { "line": 124, "column": 12 } }, { "end": { "line": 124, "column": 12 }, "start": { "line": 124, "column": 12 } }] }, "11": { "line": 193, "type": "if", "locations": [{ "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 8 } }, { "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 8 } }] }, "12": { "line": 193, "type": "binary-expr", "locations": [{ "end": { "line": 168, "column": 12 }, "start": { "line": 168, "column": 12 } }, { "end": { "line": 168, "column": 12 }, "start": { "line": 168, "column": 31 } }, { "end": { "line": 168, "column": 12 }, "start": { "line": 168, "column": 50 } }, { "end": { "line": 168, "column": 12 }, "start": { "line": 169, "column": 12 } }, { "end": { "line": 168, "column": 8 }, "start": { "line": 169, "column": 30 } }] }, "13": { "line": 197, "type": "if", "locations": [{ "end": { "line": 173, "column": 8 }, "start": { "line": 173, "column": 8 } }, { "end": { "line": 173, "column": 8 }, "start": { "line": 173, "column": 8 } }] } }, "code": ["import {createText, createElm, getText} from '../dom';", "import {isArray} from '../types';", "import {rgxEsc} from '../string';", "", "/**", " * Highlight matched keywords upon filtering", " *", " * @export", " * @class HighlightKeyword", " */", "export class HighlightKeyword {", "", "    /**", "     * Creates an instance of HighlightKeyword", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        let f = tf.config();", "", "        /**", "         * Css class for highlighted term", "         * @type {String}", "         */", "        this.highlightCssClass = f.highlight_css_class || 'keyword';", "", "        /**", "         * TableFilter instance", "         * @type {TableFilter}", "         */", "        this.tf = tf;", "", "        /**", "         * TableFilter's emitter instance", "         * @type {Emitter}", "         */", "        this.emitter = tf.emitter;", "    }", "", "    /**", "     * Initializes HighlightKeyword instance", "     */", "    init() {", "        this.emitter.on(", "            ['before-filtering', 'destroy'],", "            () => this.unhighlightAll()", "        );", "        this.emitter.on(", "            ['highlight-keyword'],", "            (tf, cell, term) => this._processTerm(cell, term)", "        );", "    }", "", "    /**", "     * Highlight occurences of searched term in passed node", "     * @param  {Node} node", "     * @param  {String} term     Searched term", "     * @param  {String} cssClass Css class name", "     *", "     * TODO: refactor this method", "     */", "    highlight(node, term, cssClass) {", "        // Iterate into this nodes childNodes", "        if (node.hasChildNodes) {", "            let children = node.childNodes;", "            for (let i = 0; i < children.length; i++) {", "                this.highlight(children[i], term, cssClass);", "            }", "        }", "", "        if (node.nodeType === 3) {", "            let nodeVal = node.nodeValue.toLowerCase();", "            let termIdx = nodeVal.indexOf(term.toLowerCase());", "", "            if (termIdx !== -1) {", "                let pn = node.parentNode;", "                if (pn && pn.className !== cssClass) {", "                    // term not highlighted yet", "                    let nv = node.nodeValue,", "                        // Create a load of replacement nodes", "                        before = createText(nv.substr(0, termIdx)),", "                        value = nv.substr(termIdx, term.length),", "                        after = createText(nv.substr(termIdx + term.length)),", "                        text = createText(value),", "                        container = createElm('span');", "                    container.className = cssClass;", "                    container.appendChild(text);", "                    pn.insertBefore(before, node);", "                    pn.insertBefore(container, node);", "                    pn.insertBefore(after, node);", "                    pn.removeChild(node);", "                }", "            }", "        }", "    }", "", "    /**", "     * Removes highlight to nodes matching passed string", "     * @param  {String} term", "     * @param  {String} cssClass Css class to remove", "     */", "    unhighlight(term, cssClass) {", "        let highlightedNodes = this.tf.tbl.querySelectorAll(`.${cssClass}`);", "        for (let i = 0; i < highlightedNodes.length; i++) {", "            let n = highlightedNodes[i];", "            let nodeVal = getText(n);", "", "            if (nodeVal.toLowerCase().indexOf(term.toLowerCase()) !== -1) {", "                let parentNode = n.parentNode;", "                parentNode.replaceChild(createText(nodeVal), n);", "                parentNode.normalize();", "            }", "        }", "    }", "", "    /**", "     * Clear all occurrences of highlighted nodes", "     */", "    unhighlightAll() {", "        if (!this.tf.highlightKeywords) {", "            return;", "        }", "        // iterate filters values to unhighlight all values", "        this.tf.getFiltersValue().forEach((val) => {", "            if (isArray(val)) {", "                val.forEach((item) =>", "                    this.unhighlight(item, this.highlightCssClass));", "            } else {", "                this.unhighlight(val, this.highlightCssClass);", "            }", "        });", "    }", "", "    /**  Remove feature */", "    destroy() {", "        this.emitter.off(", "            ['before-filtering', 'destroy'],", "            () => this.unhighlightAll()", "        );", "        this.emitter.off(", "            ['highlight-keyword'],", "            (tf, cell, term) => this._processTerm(cell, term)", "        );", "    }", "", "    /**", "     * Ensure filtering operators are handled before highlighting any match", "     * @param {any} Table cell to look searched term into", "     * @param {any} Searched termIdx", "     */", "    _processTerm(cell, term) {", "        let tf = this.tf;", "        let reLk = new RegExp(rgxEsc(tf.lkOperator));", "        let reEq = new RegExp(tf.eqOperator);", "        let reSt = new RegExp(tf.stOperator);", "        let reEn = new RegExp(tf.enOperator);", "        let reLe = new RegExp(tf.leOperator);", "        let reGe = new RegExp(tf.geOperator);", "        let reL = new RegExp(tf.lwOperator);", "        let reG = new RegExp(tf.grOperator);", "        let reD = new RegExp(tf.dfOperator);", "", "        term = term", "            .replace(reLk, '')", "            .replace(reEq, '')", "            .replace(reSt, '')", "            .replace(reEn, '');", "", "        if (reLe.test(term) || reGe.test(term) || reL.test(term) ||", "            reG.test(term) || reD.test(term)) {", "            term = getText(cell);", "        }", "", "        if (term === '') {", "            return;", "        }", "", "        this.highlight(cell, term, this.highlightCssClass);", "    }", "}", ""] };
	}
	__cov_wkBJkJMOn8$$sXMR56GQ_Q = __cov_wkBJkJMOn8$$sXMR56GQ_Q['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\highlightKeywords.js'];
	__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['2']++;exports.HighlightKeyword = undefined;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['3']++;var _dom = __webpack_require__(3);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['4']++;var _types = __webpack_require__(4);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['5']++;var _string = __webpack_require__(5);function _classCallCheck(instance, Constructor) {
	   __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['1']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['7']++;if (!(instance instanceof Constructor)) {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['1'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['8']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['1'][1]++;
	   }
	}__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['9']++;var HighlightKeyword = exports.HighlightKeyword = function () {
	   __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['2']++;function HighlightKeyword(tf) {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['3']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['11']++;_classCallCheck(this, HighlightKeyword);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['12']++;var f = tf.config();__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['13']++;this.highlightCssClass = (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['2'][0]++, f.highlight_css_class) || (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['2'][1]++, 'keyword');__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['14']++;this.tf = tf;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['15']++;this.emitter = tf.emitter;
	   }__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['16']++;HighlightKeyword.prototype.init = function init() {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['4']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['17']++;var _this = this;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['18']++;this.emitter.on(['before-filtering', 'destroy'], function () {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['5']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['19']++;return _this.unhighlightAll();
	      });__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['20']++;this.emitter.on(['highlight-keyword'], function (tf, cell, term) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['6']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['21']++;return _this._processTerm(cell, term);
	      });
	   };__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['22']++;HighlightKeyword.prototype.highlight = function highlight(node, term, cssClass) {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['7']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['23']++;if (node.hasChildNodes) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['3'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['24']++;var children = node.childNodes;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['25']++;for (var i = 0; i < children.length; i++) {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.s['26']++;this.highlight(children[i], term, cssClass);
	         }
	      } else {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['3'][1]++;
	      }__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['27']++;if (node.nodeType === 3) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['4'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['28']++;var nodeVal = node.nodeValue.toLowerCase();__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['29']++;var termIdx = nodeVal.indexOf(term.toLowerCase());__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['30']++;if (termIdx !== -1) {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['5'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['31']++;var pn = node.parentNode;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['32']++;if ((__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['7'][0]++, pn) && (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['7'][1]++, pn.className !== cssClass)) {
	               __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['6'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['33']++;var nv = node.nodeValue,
	                   before = (0, _dom.createText)(nv.substr(0, termIdx)),
	                   value = nv.substr(termIdx, term.length),
	                   after = (0, _dom.createText)(nv.substr(termIdx + term.length)),
	                   text = (0, _dom.createText)(value),
	                   container = (0, _dom.createElm)('span');__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['34']++;container.className = cssClass;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['35']++;container.appendChild(text);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['36']++;pn.insertBefore(before, node);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['37']++;pn.insertBefore(container, node);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['38']++;pn.insertBefore(after, node);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['39']++;pn.removeChild(node);
	            } else {
	               __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['6'][1]++;
	            }
	         } else {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['5'][1]++;
	         }
	      } else {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['4'][1]++;
	      }
	   };__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['40']++;HighlightKeyword.prototype.unhighlight = function unhighlight(term, cssClass) {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['8']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['41']++;var highlightedNodes = this.tf.tbl.querySelectorAll('.' + cssClass);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['42']++;for (var i = 0; i < highlightedNodes.length; i++) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.s['43']++;var n = highlightedNodes[i];__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['44']++;var nodeVal = (0, _dom.getText)(n);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['45']++;if (nodeVal.toLowerCase().indexOf(term.toLowerCase()) !== -1) {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['8'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['46']++;var parentNode = n.parentNode;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['47']++;parentNode.replaceChild((0, _dom.createText)(nodeVal), n);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['48']++;parentNode.normalize();
	         } else {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['8'][1]++;
	         }
	      }
	   };__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['49']++;HighlightKeyword.prototype.unhighlightAll = function unhighlightAll() {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['9']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['50']++;var _this2 = this;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['51']++;if (!this.tf.highlightKeywords) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['9'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['52']++;return;
	      } else {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['9'][1]++;
	      }__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['53']++;this.tf.getFiltersValue().forEach(function (val) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['10']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['54']++;if ((0, _types.isArray)(val)) {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['10'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['55']++;val.forEach(function (item) {
	               __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['11']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['56']++;return _this2.unhighlight(item, _this2.highlightCssClass);
	            });
	         } else {
	            __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['10'][1]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['57']++;_this2.unhighlight(val, _this2.highlightCssClass);
	         }
	      });
	   };__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['58']++;HighlightKeyword.prototype.destroy = function destroy() {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['12']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['59']++;var _this3 = this;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['60']++;this.emitter.off(['before-filtering', 'destroy'], function () {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['13']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['61']++;return _this3.unhighlightAll();
	      });__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['62']++;this.emitter.off(['highlight-keyword'], function (tf, cell, term) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['14']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['63']++;return _this3._processTerm(cell, term);
	      });
	   };__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['64']++;HighlightKeyword.prototype._processTerm = function _processTerm(cell, term) {
	      __cov_wkBJkJMOn8$$sXMR56GQ_Q.f['15']++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['65']++;var tf = this.tf;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['66']++;var reLk = new RegExp((0, _string.rgxEsc)(tf.lkOperator));__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['67']++;var reEq = new RegExp(tf.eqOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['68']++;var reSt = new RegExp(tf.stOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['69']++;var reEn = new RegExp(tf.enOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['70']++;var reLe = new RegExp(tf.leOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['71']++;var reGe = new RegExp(tf.geOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['72']++;var reL = new RegExp(tf.lwOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['73']++;var reG = new RegExp(tf.grOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['74']++;var reD = new RegExp(tf.dfOperator);__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['75']++;term = term.replace(reLk, '').replace(reEq, '').replace(reSt, '').replace(reEn, '');__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['76']++;if ((__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['12'][0]++, reLe.test(term)) || (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['12'][1]++, reGe.test(term)) || (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['12'][2]++, reL.test(term)) || (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['12'][3]++, reG.test(term)) || (__cov_wkBJkJMOn8$$sXMR56GQ_Q.b['12'][4]++, reD.test(term))) {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['11'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['77']++;term = (0, _dom.getText)(cell);
	      } else {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['11'][1]++;
	      }__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['78']++;if (term === '') {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['13'][0]++;__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['79']++;return;
	      } else {
	         __cov_wkBJkJMOn8$$sXMR56GQ_Q.b['13'][1]++;
	      }__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['80']++;this.highlight(cell, term, this.highlightCssClass);
	   };__cov_wkBJkJMOn8$$sXMR56GQ_Q.s['81']++;return HighlightKeyword;
	}();

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_27S4tWLfm$z0jKE4FBFaQw = Function('return this')();
	if (!__cov_27S4tWLfm$z0jKE4FBFaQw.__coverage__) {
	   __cov_27S4tWLfm$z0jKE4FBFaQw.__coverage__ = {};
	}
	__cov_27S4tWLfm$z0jKE4FBFaQw = __cov_27S4tWLfm$z0jKE4FBFaQw.__coverage__;
	if (!__cov_27S4tWLfm$z0jKE4FBFaQw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\popupFilter.js']) {
	   __cov_27S4tWLfm$z0jKE4FBFaQw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\popupFilter.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\popupFilter.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 1, "10": 0, "11": 0, "12": 1, "13": 0, "14": 0, "15": 0, "16": 1, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 1, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0], "45": [0, 0], "46": [0, 0], "47": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0 }, "fnMap": { "1": { "line": 20, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 22, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 24, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 32, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 39, "name": "PopupFilter", "loc": { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 20 } } }, "6": { "line": 162, "name": "onClick", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 185, "name": "onMouseup", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 213, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 238, "name": "(anonymous_9)", "loc": { "start": { "line": 217, "column": 46 }, "end": { "line": 217, "column": 46 } } }, "10": { "line": 241, "name": "(anonymous_10)", "loc": { "start": { "line": 218, "column": 45 }, "end": { "line": 218, "column": 45 } } }, "11": { "line": 244, "name": "(anonymous_11)", "loc": { "start": { "line": 220, "column": 12 }, "end": { "line": 220, "column": 12 } } }, "12": { "line": 247, "name": "(anonymous_12)", "loc": { "start": { "line": 221, "column": 50 }, "end": { "line": 221, "column": 50 } } }, "13": { "line": 250, "name": "(anonymous_13)", "loc": { "start": { "line": 223, "column": 12 }, "end": { "line": 223, "column": 12 } } }, "14": { "line": 263, "name": "reset", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "15": { "line": 275, "name": "buildIcons", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "16": { "line": 292, "name": "(anonymous_16)", "loc": { "start": { "line": 257, "column": 34 }, "end": { "line": 257, "column": 34 } } }, "17": { "line": 305, "name": "buildAll", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "18": { "line": 318, "name": "build", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "19": { "line": 327, "name": "(anonymous_19)", "loc": { "start": { "line": 286, "column": 30 }, "end": { "line": 286, "column": 30 } } }, "20": { "line": 339, "name": "toggle", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "21": { "line": 353, "name": "open", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "22": { "line": 363, "name": "(anonymous_22)", "loc": { "start": { "line": 314, "column": 32 }, "end": { "line": 314, "column": 32 } } }, "23": { "line": 383, "name": "close", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "24": { "line": 394, "name": "(anonymous_24)", "loc": { "start": { "line": 339, "column": 35 }, "end": { "line": 339, "column": 35 } } }, "25": { "line": 408, "name": "isOpen", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "26": { "line": 418, "name": "closeAll", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "27": { "line": 444, "name": "setIconsState", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "28": { "line": 457, "name": "changeState", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "29": { "line": 469, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "30": { "line": 503, "name": "(anonymous_30)", "loc": { "start": { "line": 435, "column": 47 }, "end": { "line": 435, "column": 47 } } }, "31": { "line": 506, "name": "(anonymous_31)", "loc": { "start": { "line": 436, "column": 46 }, "end": { "line": 436, "column": 46 } } }, "32": { "line": 509, "name": "(anonymous_32)", "loc": { "start": { "line": 438, "column": 12 }, "end": { "line": 438, "column": 12 } } }, "33": { "line": 512, "name": "(anonymous_33)", "loc": { "start": { "line": 439, "column": 51 }, "end": { "line": 439, "column": 51 } } }, "34": { "line": 515, "name": "(anonymous_34)", "loc": { "start": { "line": 441, "column": 12 }, "end": { "line": 441, "column": 12 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "end": { "line": 141, "column": 5 }, "start": { "line": 20, "column": 4 } }, "25": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "26": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "27": { "end": { "line": 24, "column": 8 }, "start": { "line": 24, "column": 8 } }, "28": { "end": { "line": 27, "column": 8 }, "start": { "line": 27, "column": 8 } }, "29": { "end": { "line": 28, "column": 8 }, "start": { "line": 28, "column": 8 } }, "30": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "31": { "end": { "line": 41, "column": 8 }, "start": { "line": 41, "column": 8 } }, "32": { "end": { "line": 48, "column": 8 }, "start": { "line": 48, "column": 8 } }, "33": { "end": { "line": 55, "column": 8 }, "start": { "line": 55, "column": 8 } }, "34": { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 8 } }, "35": { "end": { "line": 69, "column": 8 }, "start": { "line": 69, "column": 8 } }, "36": { "end": { "line": 76, "column": 8 }, "start": { "line": 76, "column": 8 } }, "37": { "end": { "line": 83, "column": 8 }, "start": { "line": 83, "column": 8 } }, "38": { "end": { "line": 90, "column": 8 }, "start": { "line": 90, "column": 8 } }, "39": { "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 8 } }, "40": { "end": { "line": 105, "column": 8 }, "start": { "line": 105, "column": 8 } }, "41": { "end": { "line": 112, "column": 8 }, "start": { "line": 112, "column": 8 } }, "42": { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, "43": { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 8 } }, "44": { "end": { "line": 133, "column": 8 }, "start": { "line": 133, "column": 8 } }, "45": { "end": { "line": 140, "column": 8 }, "start": { "line": 140, "column": 8 } }, "46": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "47": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "48": { "end": { "line": 148, "column": 8 }, "start": { "line": 148, "column": 8 } }, "49": { "end": { "line": 149, "column": 8 }, "start": { "line": 149, "column": 8 } }, "50": { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 8 } }, "51": { "end": { "line": 152, "column": 8 }, "start": { "line": 152, "column": 8 } }, "52": { "end": { "line": 159, "column": 9 }, "start": { "line": 154, "column": 8 } }, "53": { "end": { "line": 155, "column": 12 }, "start": { "line": 155, "column": 12 } }, "54": { "end": { "line": 158, "column": 12 }, "start": { "line": 158, "column": 12 } }, "55": { "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 8 } }, "56": { "end": { "line": 161, "column": 8 }, "start": { "line": 161, "column": 8 } }, "57": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "58": { "end": { "line": 171, "column": 9 }, "start": { "line": 169, "column": 8 } }, "59": { "end": { "line": 170, "column": 12 }, "start": { "line": 170, "column": 12 } }, "60": { "end": { "line": 172, "column": 8 }, "start": { "line": 172, "column": 8 } }, "61": { "end": { "line": 173, "column": 8 }, "start": { "line": 173, "column": 8 } }, "62": { "end": { "line": 174, "column": 8 }, "start": { "line": 174, "column": 8 } }, "63": { "end": { "line": 178, "column": 9 }, "start": { "line": 176, "column": 8 } }, "64": { "end": { "line": 177, "column": 12 }, "start": { "line": 177, "column": 12 } }, "65": { "end": { "line": 182, "column": 9 }, "start": { "line": 180, "column": 8 } }, "66": { "end": { "line": 181, "column": 12 }, "start": { "line": 181, "column": 12 } }, "67": { "end": { "line": 186, "column": 9 }, "start": { "line": 184, "column": 8 } }, "68": { "end": { "line": 185, "column": 12 }, "start": { "line": 185, "column": 12 } }, "69": { "end": { "line": 188, "column": 8 }, "start": { "line": 188, "column": 8 } }, "70": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "71": { "end": { "line": 194, "column": 11 }, "start": { "line": 194, "column": 11 } }, "72": { "end": { "line": 197, "column": 9 }, "start": { "line": 195, "column": 8 } }, "73": { "end": { "line": 196, "column": 12 }, "start": { "line": 196, "column": 12 } }, "74": { "end": { "line": 199, "column": 8 }, "start": { "line": 199, "column": 8 } }, "75": { "end": { "line": 206, "column": 9 }, "start": { "line": 204, "column": 8 } }, "76": { "end": { "line": 205, "column": 12 }, "start": { "line": 205, "column": 12 } }, "77": { "end": { "line": 214, "column": 9 }, "start": { "line": 211, "column": 8 } }, "78": { "end": { "line": 212, "column": 12 }, "start": { "line": 212, "column": 12 } }, "79": { "end": { "line": 213, "column": 12 }, "start": { "line": 213, "column": 12 } }, "80": { "end": { "line": 217, "column": 8 }, "start": { "line": 217, "column": 8 } }, "81": { "end": { "line": 217, "column": 46 }, "start": { "line": 217, "column": 46 } }, "82": { "end": { "line": 218, "column": 8 }, "start": { "line": 218, "column": 8 } }, "83": { "end": { "line": 218, "column": 45 }, "start": { "line": 218, "column": 45 } }, "84": { "end": { "line": 219, "column": 8 }, "start": { "line": 219, "column": 8 } }, "85": { "end": { "line": 220, "column": 12 }, "start": { "line": 220, "column": 12 } }, "86": { "end": { "line": 221, "column": 8 }, "start": { "line": 221, "column": 8 } }, "87": { "end": { "line": 221, "column": 50 }, "start": { "line": 221, "column": 50 } }, "88": { "end": { "line": 222, "column": 8 }, "start": { "line": 222, "column": 8 } }, "89": { "end": { "line": 223, "column": 12 }, "start": { "line": 223, "column": 12 } }, "90": { "end": { "line": 226, "column": 8 }, "start": { "line": 226, "column": 8 } }, "91": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "92": { "end": { "line": 233, "column": 8 }, "start": { "line": 233, "column": 8 } }, "93": { "end": { "line": 234, "column": 8 }, "start": { "line": 234, "column": 8 } }, "94": { "end": { "line": 235, "column": 8 }, "start": { "line": 235, "column": 8 } }, "95": { "end": { "line": 236, "column": 8 }, "start": { "line": 236, "column": 8 } }, "96": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "97": { "end": { "line": 242, "column": 17 }, "start": { "line": 242, "column": 17 } }, "98": { "end": { "line": 243, "column": 8 }, "start": { "line": 243, "column": 8 } }, "99": { "end": { "line": 247, "column": 8 }, "start": { "line": 247, "column": 8 } }, "100": { "end": { "line": 260, "column": 9 }, "start": { "line": 249, "column": 8 } }, "101": { "end": { "line": 252, "column": 13 }, "start": { "line": 250, "column": 12 } }, "102": { "end": { "line": 251, "column": 16 }, "start": { "line": 251, "column": 16 } }, "103": { "end": { "line": 253, "column": 12 }, "start": { "line": 253, "column": 12 } }, "104": { "end": { "line": 254, "column": 12 }, "start": { "line": 254, "column": 12 } }, "105": { "end": { "line": 255, "column": 12 }, "start": { "line": 255, "column": 12 } }, "106": { "end": { "line": 256, "column": 12 }, "start": { "line": 256, "column": 12 } }, "107": { "end": { "line": 257, "column": 12 }, "start": { "line": 257, "column": 12 } }, "108": { "end": { "line": 257, "column": 34 }, "start": { "line": 257, "column": 34 } }, "109": { "end": { "line": 258, "column": 12 }, "start": { "line": 258, "column": 12 } }, "110": { "end": { "line": 259, "column": 12 }, "start": { "line": 259, "column": 12 } }, "111": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "112": { "end": { "line": 269, "column": 9 }, "start": { "line": 267, "column": 8 } }, "113": { "end": { "line": 268, "column": 12 }, "start": { "line": 268, "column": 12 } }, "114": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "115": { "end": { "line": 278, "column": 8 }, "start": { "line": 278, "column": 8 } }, "116": { "end": { "line": 279, "column": 8 }, "start": { "line": 279, "column": 8 } }, "117": { "end": { "line": 280, "column": 8 }, "start": { "line": 280, "column": 8 } }, "118": { "end": { "line": 281, "column": 8 }, "start": { "line": 281, "column": 8 } }, "119": { "end": { "line": 282, "column": 8 }, "start": { "line": 282, "column": 8 } }, "120": { "end": { "line": 284, "column": 8 }, "start": { "line": 284, "column": 8 } }, "121": { "end": { "line": 285, "column": 8 }, "start": { "line": 285, "column": 8 } }, "122": { "end": { "line": 286, "column": 8 }, "start": { "line": 286, "column": 8 } }, "123": { "end": { "line": 286, "column": 30 }, "start": { "line": 286, "column": 30 } }, "124": { "end": { "line": 287, "column": 8 }, "start": { "line": 287, "column": 8 } }, "125": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "126": { "end": { "line": 299, "column": 9 }, "start": { "line": 295, "column": 8 } }, "127": { "end": { "line": 296, "column": 12 }, "start": { "line": 296, "column": 12 } }, "128": { "end": { "line": 298, "column": 12 }, "start": { "line": 298, "column": 12 } }, "129": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "130": { "end": { "line": 306, "column": 19 }, "start": { "line": 306, "column": 19 } }, "131": { "end": { "line": 307, "column": 8 }, "start": { "line": 307, "column": 8 } }, "132": { "end": { "line": 310, "column": 8 }, "start": { "line": 310, "column": 8 } }, "133": { "end": { "line": 312, "column": 8 }, "start": { "line": 312, "column": 8 } }, "134": { "end": { "line": 313, "column": 8 }, "start": { "line": 313, "column": 8 } }, "135": { "end": { "line": 314, "column": 8 }, "start": { "line": 314, "column": 8 } }, "136": { "end": { "line": 314, "column": 32 }, "start": { "line": 314, "column": 32 } }, "137": { "end": { "line": 321, "column": 9 }, "start": { "line": 316, "column": 8 } }, "138": { "end": { "line": 317, "column": 12 }, "start": { "line": 317, "column": 12 } }, "139": { "end": { "line": 320, "column": 13 }, "start": { "line": 318, "column": 12 } }, "140": { "end": { "line": 319, "column": 16 }, "start": { "line": 319, "column": 16 } }, "141": { "end": { "line": 323, "column": 8 }, "start": { "line": 323, "column": 8 } }, "142": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "143": { "end": { "line": 330, "column": 20 }, "start": { "line": 330, "column": 20 } }, "144": { "end": { "line": 331, "column": 8 }, "start": { "line": 331, "column": 8 } }, "145": { "end": { "line": 333, "column": 8 }, "start": { "line": 333, "column": 8 } }, "146": { "end": { "line": 335, "column": 8 }, "start": { "line": 335, "column": 8 } }, "147": { "end": { "line": 338, "column": 9 }, "start": { "line": 336, "column": 8 } }, "148": { "end": { "line": 337, "column": 12 }, "start": { "line": 337, "column": 12 } }, "149": { "end": { "line": 339, "column": 8 }, "start": { "line": 339, "column": 8 } }, "150": { "end": { "line": 339, "column": 35 }, "start": { "line": 339, "column": 35 } }, "151": { "end": { "line": 341, "column": 8 }, "start": { "line": 341, "column": 8 } }, "152": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "153": { "end": { "line": 350, "column": 8 }, "start": { "line": 350, "column": 8 } }, "154": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "155": { "end": { "line": 362, "column": 9 }, "start": { "line": 360, "column": 8 } }, "156": { "end": { "line": 361, "column": 12 }, "start": { "line": 361, "column": 12 } }, "157": { "end": { "line": 376, "column": 9 }, "start": { "line": 363, "column": 8 } }, "158": { "end": { "line": 366, "column": 13 }, "start": { "line": 364, "column": 12 } }, "159": { "end": { "line": 365, "column": 16 }, "start": { "line": 365, "column": 16 } }, "160": { "end": { "line": 367, "column": 12 }, "start": { "line": 367, "column": 12 } }, "161": { "end": { "line": 368, "column": 12 }, "start": { "line": 368, "column": 12 } }, "162": { "end": { "line": 375, "column": 13 }, "start": { "line": 373, "column": 12 } }, "163": { "end": { "line": 374, "column": 16 }, "start": { "line": 374, "column": 16 } }, "164": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "165": { "end": { "line": 385, "column": 9 }, "start": { "line": 383, "column": 8 } }, "166": { "end": { "line": 384, "column": 12 }, "start": { "line": 384, "column": 12 } }, "167": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "168": { "end": { "line": 394, "column": 8 }, "start": { "line": 394, "column": 8 } }, "169": { "end": { "line": 397, "column": 9 }, "start": { "line": 395, "column": 8 } }, "170": { "end": { "line": 396, "column": 12 }, "start": { "line": 396, "column": 12 } }, "171": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "172": { "end": { "line": 403, "column": 14 }, "start": { "line": 403, "column": 14 } }, "173": { "end": { "line": 406, "column": 9 }, "start": { "line": 404, "column": 8 } }, "174": { "end": { "line": 405, "column": 12 }, "start": { "line": 405, "column": 12 } }, "175": { "end": { "line": 408, "column": 8 }, "start": { "line": 408, "column": 8 } }, "176": { "end": { "line": 426, "column": 9 }, "start": { "line": 409, "column": 8 } }, "177": { "end": { "line": 410, "column": 12 }, "start": { "line": 410, "column": 12 } }, "178": { "end": { "line": 416, "column": 13 }, "start": { "line": 413, "column": 12 } }, "179": { "end": { "line": 414, "column": 16 }, "start": { "line": 414, "column": 16 } }, "180": { "end": { "line": 415, "column": 16 }, "start": { "line": 415, "column": 16 } }, "181": { "end": { "line": 417, "column": 12 }, "start": { "line": 417, "column": 12 } }, "182": { "end": { "line": 420, "column": 13 }, "start": { "line": 418, "column": 12 } }, "183": { "end": { "line": 419, "column": 16 }, "start": { "line": 419, "column": 16 } }, "184": { "end": { "line": 421, "column": 12 }, "start": { "line": 421, "column": 12 } }, "185": { "end": { "line": 424, "column": 13 }, "start": { "line": 422, "column": 12 } }, "186": { "end": { "line": 423, "column": 16 }, "start": { "line": 423, "column": 16 } }, "187": { "end": { "line": 425, "column": 12 }, "start": { "line": 425, "column": 12 } }, "188": { "end": { "line": 427, "column": 8 }, "start": { "line": 427, "column": 8 } }, "189": { "end": { "line": 428, "column": 8 }, "start": { "line": 428, "column": 8 } }, "190": { "end": { "line": 429, "column": 8 }, "start": { "line": 429, "column": 8 } }, "191": { "end": { "line": 432, "column": 8 }, "start": { "line": 432, "column": 8 } }, "192": { "end": { "line": 435, "column": 8 }, "start": { "line": 435, "column": 8 } }, "193": { "end": { "line": 435, "column": 47 }, "start": { "line": 435, "column": 47 } }, "194": { "end": { "line": 436, "column": 8 }, "start": { "line": 436, "column": 8 } }, "195": { "end": { "line": 436, "column": 46 }, "start": { "line": 436, "column": 46 } }, "196": { "end": { "line": 437, "column": 8 }, "start": { "line": 437, "column": 8 } }, "197": { "end": { "line": 438, "column": 12 }, "start": { "line": 438, "column": 12 } }, "198": { "end": { "line": 439, "column": 8 }, "start": { "line": 439, "column": 8 } }, "199": { "end": { "line": 439, "column": 51 }, "start": { "line": 439, "column": 51 } }, "200": { "end": { "line": 440, "column": 8 }, "start": { "line": 440, "column": 8 } }, "201": { "end": { "line": 441, "column": 12 }, "start": { "line": 441, "column": 12 } }, "202": { "end": { "line": 443, "column": 8 }, "start": { "line": 443, "column": 8 } }, "203": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 24, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 55, "type": "cond-expr", "locations": [{ "end": { "line": 34, "column": 32 }, "start": { "line": 35, "column": 12 } }, { "end": { "line": 34, "column": 8 }, "start": { "line": 35, "column": 20 } }] }, "11": { "line": 61, "type": "binary-expr", "locations": [{ "end": { "line": 41, "column": 24 }, "start": { "line": 41, "column": 24 } }, { "end": { "line": 41, "column": 8 }, "start": { "line": 42, "column": 12 } }] }, "12": { "line": 67, "type": "binary-expr", "locations": [{ "end": { "line": 48, "column": 30 }, "start": { "line": 48, "column": 30 } }, { "end": { "line": 48, "column": 8 }, "start": { "line": 49, "column": 12 } }] }, "13": { "line": 73, "type": "binary-expr", "locations": [{ "end": { "line": 55, "column": 24 }, "start": { "line": 55, "column": 24 } }, { "end": { "line": 55, "column": 8 }, "start": { "line": 56, "column": 12 } }] }, "14": { "line": 79, "type": "binary-expr", "locations": [{ "end": { "line": 62, "column": 33 }, "start": { "line": 62, "column": 33 } }, { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 58 } }] }, "15": { "line": 86, "type": "cond-expr", "locations": [{ "end": { "line": 70, "column": 12 }, "start": { "line": 70, "column": 60 } }, { "end": { "line": 69, "column": 8 }, "start": { "line": 70, "column": 68 } }] }, "16": { "line": 92, "type": "cond-expr", "locations": [{ "end": { "line": 76, "column": 28 }, "start": { "line": 77, "column": 12 } }, { "end": { "line": 76, "column": 8 }, "start": { "line": 76, "column": 28 } }] }, "17": { "line": 98, "type": "cond-expr", "locations": [{ "end": { "line": 83, "column": 27 }, "start": { "line": 84, "column": 12 } }, { "end": { "line": 83, "column": 8 }, "start": { "line": 83, "column": 27 } }] }, "18": { "line": 104, "type": "cond-expr", "locations": [{ "end": { "line": 90, "column": 29 }, "start": { "line": 91, "column": 12 } }, { "end": { "line": 90, "column": 8 }, "start": { "line": 90, "column": 29 } }] }, "19": { "line": 110, "type": "cond-expr", "locations": [{ "end": { "line": 97, "column": 28 }, "start": { "line": 98, "column": 12 } }, { "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 28 } }] }, "20": { "line": 138, "type": "binary-expr", "locations": [{ "end": { "line": 126, "column": 23 }, "start": { "line": 126, "column": 23 } }, { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 44 } }] }, "21": { "line": 169, "type": "if", "locations": [{ "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }, { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }] }, "22": { "line": 186, "type": "if", "locations": [{ "end": { "line": 169, "column": 8 }, "start": { "line": 169, "column": 8 } }, { "end": { "line": 169, "column": 8 }, "start": { "line": 169, "column": 8 } }] }, "23": { "line": 193, "type": "if", "locations": [{ "end": { "line": 176, "column": 8 }, "start": { "line": 176, "column": 8 } }, { "end": { "line": 176, "column": 8 }, "start": { "line": 176, "column": 8 } }] }, "24": { "line": 197, "type": "binary-expr", "locations": [{ "end": { "line": 180, "column": 15 }, "start": { "line": 180, "column": 15 } }, { "end": { "line": 180, "column": 8 }, "start": { "line": 180, "column": 28 } }] }, "25": { "line": 201, "type": "if", "locations": [{ "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }, { "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }] }, "26": { "line": 216, "type": "if", "locations": [{ "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 8 } }, { "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 8 } }] }, "27": { "line": 225, "type": "if", "locations": [{ "end": { "line": 204, "column": 8 }, "start": { "line": 204, "column": 8 } }, { "end": { "line": 204, "column": 8 }, "start": { "line": 204, "column": 8 } }] }, "28": { "line": 225, "type": "binary-expr", "locations": [{ "end": { "line": 204, "column": 12 }, "start": { "line": 204, "column": 12 } }, { "end": { "line": 204, "column": 8 }, "start": { "line": 204, "column": 34 } }] }, "29": { "line": 232, "type": "if", "locations": [{ "end": { "line": 211, "column": 8 }, "start": { "line": 211, "column": 8 } }, { "end": { "line": 211, "column": 8 }, "start": { "line": 211, "column": 8 } }] }, "30": { "line": 285, "type": "if", "locations": [{ "end": { "line": 250, "column": 12 }, "start": { "line": 250, "column": 12 } }, { "end": { "line": 250, "column": 12 }, "start": { "line": 250, "column": 12 } }] }, "31": { "line": 321, "type": "binary-expr", "locations": [{ "end": { "line": 280, "column": 19 }, "start": { "line": 280, "column": 19 } }, { "end": { "line": 280, "column": 8 }, "start": { "line": 280, "column": 26 } }] }, "32": { "line": 340, "type": "if", "locations": [{ "end": { "line": 295, "column": 8 }, "start": { "line": 295, "column": 8 } }, { "end": { "line": 295, "column": 8 }, "start": { "line": 295, "column": 8 } }] }, "33": { "line": 367, "type": "if", "locations": [{ "end": { "line": 316, "column": 8 }, "start": { "line": 316, "column": 8 } }, { "end": { "line": 316, "column": 8 }, "start": { "line": 316, "column": 8 } }] }, "34": { "line": 369, "type": "if", "locations": [{ "end": { "line": 318, "column": 12 }, "start": { "line": 318, "column": 12 } }, { "end": { "line": 318, "column": 12 }, "start": { "line": 318, "column": 12 } }] }, "35": { "line": 391, "type": "if", "locations": [{ "end": { "line": 336, "column": 8 }, "start": { "line": 336, "column": 8 } }, { "end": { "line": 336, "column": 8 }, "start": { "line": 336, "column": 8 } }] }, "36": { "line": 421, "type": "if", "locations": [{ "end": { "line": 360, "column": 8 }, "start": { "line": 360, "column": 8 } }, { "end": { "line": 360, "column": 8 }, "start": { "line": 360, "column": 8 } }] }, "37": { "line": 421, "type": "binary-expr", "locations": [{ "end": { "line": 360, "column": 12 }, "start": { "line": 360, "column": 12 } }, { "end": { "line": 360, "column": 8 }, "start": { "line": 360, "column": 34 } }] }, "38": { "line": 425, "type": "if", "locations": [{ "end": { "line": 364, "column": 12 }, "start": { "line": 364, "column": 12 } }, { "end": { "line": 364, "column": 12 }, "start": { "line": 364, "column": 12 } }] }, "39": { "line": 429, "type": "binary-expr", "locations": [{ "end": { "line": 369, "column": 17 }, "start": { "line": 369, "column": 17 } }, { "end": { "line": 368, "column": 12 }, "start": { "line": 369, "column": 42 } }] }, "40": { "line": 433, "type": "if", "locations": [{ "end": { "line": 373, "column": 12 }, "start": { "line": 373, "column": 12 } }, { "end": { "line": 373, "column": 12 }, "start": { "line": 373, "column": 12 } }] }, "41": { "line": 433, "type": "binary-expr", "locations": [{ "end": { "line": 373, "column": 16 }, "start": { "line": 373, "column": 16 } }, { "end": { "line": 373, "column": 12 }, "start": { "line": 373, "column": 37 } }] }, "42": { "line": 459, "type": "if", "locations": [{ "end": { "line": 395, "column": 8 }, "start": { "line": 395, "column": 8 } }, { "end": { "line": 395, "column": 8 }, "start": { "line": 395, "column": 8 } }] }, "43": { "line": 460, "type": "cond-expr", "locations": [{ "end": { "line": 396, "column": 23 }, "start": { "line": 396, "column": 32 } }, { "end": { "line": 396, "column": 12 }, "start": { "line": 396, "column": 54 } }] }, "44": { "line": 472, "type": "if", "locations": [{ "end": { "line": 404, "column": 8 }, "start": { "line": 404, "column": 8 } }, { "end": { "line": 404, "column": 8 }, "start": { "line": 404, "column": 8 } }] }, "45": { "line": 481, "type": "if", "locations": [{ "end": { "line": 413, "column": 12 }, "start": { "line": 413, "column": 12 } }, { "end": { "line": 413, "column": 12 }, "start": { "line": 413, "column": 12 } }] }, "46": { "line": 486, "type": "if", "locations": [{ "end": { "line": 418, "column": 12 }, "start": { "line": 418, "column": 12 } }, { "end": { "line": 418, "column": 12 }, "start": { "line": 418, "column": 12 } }] }, "47": { "line": 490, "type": "if", "locations": [{ "end": { "line": 422, "column": 12 }, "start": { "line": 422, "column": 12 } }, { "end": { "line": 422, "column": 12 }, "start": { "line": 422, "column": 12 } }] } }, "code": ["import {Feature} from '../feature';", "import {isFn, isUndef, EMPTY_FN} from '../types';", "import {createElm, removeElm} from '../dom';", "import {addEvt, cancelEvt, stopEvt, targetEvt, removeEvt} from '../event';", "import {INPUT, NONE, CHECKLIST, MULTIPLE} from '../const';", "import {root} from '../root';", "", "/**", " * Pop-up filter component", " * @export", " * @class PopupFilter", " * @extends {Feature}", " */", "export class PopupFilter extends Feature {", "", "    /**", "     * Creates an instance of PopupFilter", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'popupFilters');", "", "        // Configuration object", "        let f = this.config;", "", "        // Enable external filters", "        tf.isExternalFlt = true;", "        tf.externalFltTgtIds = [];", "", "        /**", "         * Close active popup filter upon filtering, enabled by default", "         * @type {Boolean}", "         */", "        this.closeOnFiltering = f.popup_filters_close_on_filtering === false ?", "            false : true;", "", "        /**", "         * Filter icon path", "         * @type {String}", "         */", "        this.iconPath = f.popup_filters_image ||", "            tf.themesPath + 'icn_filter.gif';", "", "        /**", "         * Active filter icon path", "         * @type {string}", "         */", "        this.activeIconPath = f.popup_filters_image_active ||", "            tf.themesPath + 'icn_filterActive.gif';", "", "        /**", "         * HTML for the filter icon", "         * @type {string}", "         */", "        this.iconHtml = f.popup_filters_image_html ||", "            '<img src=\"' + this.iconPath + '\" alt=\"Column filter\" />';", "", "        /**", "         * Css class assigned to filter container element", "         * @type {String}", "         */", "        this.containerCssClass = f.popup_div_css_class || 'popUpFilter';", "", "        /**", "         * Ensure filter's container element width matches column width, enabled", "         * by default", "         * @type {Boolean}", "         */", "        this.adjustToContainer =", "            f.popup_filters_adjust_to_container === false ? false : true;", "", "        /**", "         * Callback fired before a popup filter is opened", "         * @type {Function}", "         */", "        this.onBeforeOpen = isFn(f.on_before_popup_filter_open) ?", "            f.on_before_popup_filter_open : EMPTY_FN;", "", "        /**", "         * Callback fired after a popup filter is opened", "         * @type {Function}", "         */", "        this.onAfterOpen = isFn(f.on_after_popup_filter_open) ?", "            f.on_after_popup_filter_open : EMPTY_FN;", "", "        /**", "         * Callback fired before a popup filter is closed", "         * @type {Function}", "         */", "        this.onBeforeClose = isFn(f.on_before_popup_filter_close) ?", "            f.on_before_popup_filter_close : EMPTY_FN;", "", "        /**", "         * Callback fired after a popup filter is closed", "         * @type {Function}", "         */", "        this.onAfterClose = isFn(f.on_after_popup_filter_close) ?", "            f.on_after_popup_filter_close : EMPTY_FN;", "", "        /**", "         * Collection of filters spans", "         * @type {Array}", "         * @private", "         */", "        this.fltSpans = [];", "", "        /**", "         * Collection of filters icons", "         * @type {Array}", "         * @private", "         */", "        this.fltIcons = [];", "", "        /**", "         * Collection of filters icons cached after pop-up filters are removed", "         * @type {Array}", "         * @private", "         */", "        this.filtersCache = null;", "", "        /**", "         * Collection of filters containers", "         * @type {Array}", "         * @private", "         */", "        this.fltElms = this.filtersCache || [];", "", "        /**", "         * Prefix for pop-up filter container ID", "         * @type {String}", "         * @private", "         */", "        this.prfxDiv = 'popup_';", "", "        /**", "         * Column index of popup filter currently active", "         * @type {Number}", "         * @private", "         */", "        this.activeFilterIdx = -1;", "    }", "", "    /**", "     * Click event handler for pop-up filter icon", "     * @private", "     */", "    onClick(evt) {", "        let elm = targetEvt(evt).parentNode;", "        let colIndex = parseInt(elm.getAttribute('ci'), 10);", "", "        this.closeAll(colIndex);", "        this.toggle(colIndex);", "", "        if (this.adjustToContainer) {", "            let cont = this.fltElms[colIndex],", "                header = this.tf.getHeaderElement(colIndex),", "                headerWidth = header.clientWidth * 0.95;", "            cont.style.width = parseInt(headerWidth, 10) + 'px';", "        }", "        cancelEvt(evt);", "        stopEvt(evt);", "    }", "", "    /**", "     * Mouse-up event handler handling popup filter auto-close behaviour", "     * @private", "     */", "    onMouseup(evt) {", "        if (this.activeFilterIdx === -1) {", "            return;", "        }", "        let targetElm = targetEvt(evt);", "        let activeFlt = this.fltElms[this.activeFilterIdx];", "        let icon = this.fltIcons[this.activeFilterIdx];", "", "        if (icon === targetElm) {", "            return;", "        }", "", "        while (targetElm && targetElm !== activeFlt) {", "            targetElm = targetElm.parentNode;", "        }", "", "        if (targetElm !== activeFlt) {", "            this.close(this.activeFilterIdx);", "        }", "", "        return;", "    }", "", "    /**", "     * Initialize DOM elements", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        let tf = this.tf;", "", "        // Override headers row index if no grouped headers", "        // TODO: Because of the filters row generation, headers row index needs", "        // adjusting: prevent useless row generation", "        if (tf.headersRow <= 1 && isNaN(tf.config().headers_row_index)) {", "            tf.headersRow = 0;", "        }", "", "        // Adjust headers row index for grid-layout mode", "        // TODO: Because of the filters row generation, headers row index needs", "        // adjusting: prevent useless row generation", "        if (tf.gridLayout) {", "            tf.headersRow--;", "            this.buildIcons();", "        }", "", "        // subscribe to events", "        this.emitter.on(['before-filtering'], () => this.setIconsState());", "        this.emitter.on(['after-filtering'], () => this.closeAll());", "        this.emitter.on(['cell-processed'],", "            (tf, cellIndex) => this.changeState(cellIndex, true));", "        this.emitter.on(['filters-row-inserted'], () => this.buildIcons());", "        this.emitter.on(['before-filter-init'],", "            (tf, colIndex) => this.build(colIndex));", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Reset previously destroyed feature", "     */", "    reset() {", "        this.enable();", "        this.init();", "        this.buildIcons();", "        this.buildAll();", "    }", "", "    /**", "     * Build all filters icons", "     */", "    buildIcons() {", "        let tf = this.tf;", "", "        // TODO: Because of the filters row generation, headers row index needs", "        // adjusting: prevent useless row generation", "        tf.headersRow++;", "", "        for (let i = 0; i < tf.nbCells; i++) {", "            if (tf.getFilterType(i) === NONE) {", "                continue;", "            }", "            let icon = createElm('span', ['ci', i]);", "            icon.innerHTML = this.iconHtml;", "            let header = tf.getHeaderElement(i);", "            header.appendChild(icon);", "            addEvt(icon, 'click', (evt) => this.onClick(evt));", "            this.fltSpans[i] = icon;", "            this.fltIcons[i] = icon.firstChild;", "        }", "    }", "", "    /**", "     * Build all pop-up filters elements", "     */", "    buildAll() {", "        for (let i = 0; i < this.filtersCache.length; i++) {", "            this.build(i, this.filtersCache[i]);", "        }", "    }", "", "    /**", "     * Build a specified pop-up filter elements", "     * @param  {Number} colIndex Column index", "     * @param  {Object} div      Optional container DOM element", "     */", "    build(colIndex, div) {", "        let tf = this.tf;", "        let contId = `${this.prfxDiv}${tf.id}_${colIndex}`;", "        let cont = div || createElm('div', ['id', contId]);", "        cont.className = this.containerCssClass;", "        tf.externalFltTgtIds.push(cont.id);", "", "        let header = tf.getHeaderElement(colIndex);", "        header.insertBefore(cont, header.firstChild);", "        addEvt(cont, 'click', (evt) => stopEvt(evt));", "        this.fltElms[colIndex] = cont;", "    }", "", "    /**", "     * Toggle visibility of specified filter", "     * @param  {Number} colIndex Column index", "     */", "    toggle(colIndex) {", "        if (!this.isOpen(colIndex)) {", "            this.open(colIndex);", "        } else {", "            this.close(colIndex);", "        }", "    }", "", "    /**", "     * Open popup filter of specified column", "     * @param {Number} colIndex Column index", "     */", "    open(colIndex) {", "        let tf = this.tf,", "            container = this.fltElms[colIndex];", "", "        this.onBeforeOpen(this, container, colIndex);", "", "        container.style.display = 'block';", "        this.activeFilterIdx = colIndex;", "        addEvt(root, 'mouseup', (evt) => this.onMouseup(evt));", "", "        if (tf.getFilterType(colIndex) === INPUT) {", "            let flt = tf.getFilterElement(colIndex);", "            if (flt) {", "                flt.focus();", "            }", "        }", "", "        this.onAfterOpen(this, container, colIndex);", "    }", "", "    /**", "     * Close popup filter of specified column", "     * @param {Number} colIndex Column index", "     */", "    close(colIndex) {", "        let container = this.fltElms[colIndex];", "", "        this.onBeforeClose(this, container, colIndex);", "", "        container.style.display = NONE;", "        if (this.activeFilterIdx === colIndex) {", "            this.activeFilterIdx = -1;", "        }", "        removeEvt(root, 'mouseup', (evt) => this.onMouseup(evt));", "", "        this.onAfterClose(this, container, colIndex);", "    }", "", "    /**", "     * Check if popup filter for specified column is open", "     * @param {Number} colIndex Column index", "     * @returns {Boolean}", "     */", "    isOpen(colIndex) {", "        return this.fltElms[colIndex].style.display === 'block';", "    }", "", "    /**", "     * Close all filters excepted for the specified one if any", "     * @param  {Number} exceptIdx Column index of the filter to not close", "     */", "    closeAll(exceptIdx) {", "        // Do not close filters only if argument is undefined and close on", "        // filtering option is disabled", "        if (isUndef(exceptIdx) && !this.closeOnFiltering) {", "            return;", "        }", "        for (let i = 0; i < this.fltElms.length; i++) {", "            if (i === exceptIdx) {", "                continue;", "            }", "            let fltType = tf.getFilterType(i);", "            let isMultipleFilter =", "                (fltType === CHECKLIST || fltType === MULTIPLE);", "", "            // Always hide all single selection filter types but hide multiple", "            // selection filter types only if index set", "            if (!isMultipleFilter || !isUndef(exceptIdx)) {", "                this.close(i);", "            }", "        }", "    }", "", "    /**", "     * Build all the icons representing the pop-up filters", "     */", "    setIconsState() {", "        for (let i = 0; i < this.fltIcons.length; i++) {", "            this.changeState(i, false);", "        }", "    }", "", "    /**", "     * Apply specified icon state", "     * @param  {Number} colIndex Column index", "     * @param  {Boolean} active   Apply active state", "     */", "    changeState(colIndex, active) {", "        let icon = this.fltIcons[colIndex];", "        if (icon) {", "            icon.src = active ? this.activeIconPath : this.iconPath;", "        }", "    }", "", "    /**", "     * Remove pop-up filters", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        this.filtersCache = [];", "        for (let i = 0; i < this.fltElms.length; i++) {", "            let container = this.fltElms[i],", "                icon = this.fltSpans[i],", "                iconImg = this.fltIcons[i];", "            if (container) {", "                removeElm(container);", "                this.filtersCache[i] = container;", "            }", "            container = null;", "            if (icon) {", "                removeElm(icon);", "            }", "            icon = null;", "            if (iconImg) {", "                removeElm(iconImg);", "            }", "            iconImg = null;", "        }", "        this.fltElms = [];", "        this.fltSpans = [];", "        this.fltIcons = [];", "", "        // TODO: expose an API to handle external filter IDs", "        tf.externalFltTgtIds = [];", "", "        // unsubscribe to events", "        this.emitter.off(['before-filtering'], () => this.setIconsState());", "        this.emitter.off(['after-filtering'], () => this.closeAll());", "        this.emitter.off(['cell-processed'],", "            (tf, cellIndex) => this.changeState(cellIndex, true));", "        this.emitter.off(['filters-row-inserted'], () => this.buildIcons());", "        this.emitter.off(['before-filter-init'],", "            (tf, colIndex) => this.build(colIndex));", "", "        this.initialized = false;", "    }", "", "}", ""] };
	}
	__cov_27S4tWLfm$z0jKE4FBFaQw = __cov_27S4tWLfm$z0jKE4FBFaQw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\popupFilter.js'];
	__cov_27S4tWLfm$z0jKE4FBFaQw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_27S4tWLfm$z0jKE4FBFaQw.s['2']++;exports.PopupFilter = undefined;__cov_27S4tWLfm$z0jKE4FBFaQw.s['3']++;var _feature = __webpack_require__(10);__cov_27S4tWLfm$z0jKE4FBFaQw.s['4']++;var _types = __webpack_require__(4);__cov_27S4tWLfm$z0jKE4FBFaQw.s['5']++;var _dom = __webpack_require__(3);__cov_27S4tWLfm$z0jKE4FBFaQw.s['6']++;var _event = __webpack_require__(1);__cov_27S4tWLfm$z0jKE4FBFaQw.s['7']++;var _const = __webpack_require__(11);__cov_27S4tWLfm$z0jKE4FBFaQw.s['8']++;var _root = __webpack_require__(2);function _classCallCheck(instance, Constructor) {
	   __cov_27S4tWLfm$z0jKE4FBFaQw.f['1']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['10']++;if (!(instance instanceof Constructor)) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['1'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['11']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_27S4tWLfm$z0jKE4FBFaQw.f['2']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['13']++;if (!self) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['2'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['14']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['2'][1]++;
	   }__cov_27S4tWLfm$z0jKE4FBFaQw.s['15']++;return (__cov_27S4tWLfm$z0jKE4FBFaQw.b['4'][0]++, call) && ((__cov_27S4tWLfm$z0jKE4FBFaQw.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['4'][2]++, typeof call === 'function')) ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['3'][0]++, call) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_27S4tWLfm$z0jKE4FBFaQw.f['3']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['17']++;if ((__cov_27S4tWLfm$z0jKE4FBFaQw.b['6'][0]++, typeof superClass !== 'function') && (__cov_27S4tWLfm$z0jKE4FBFaQw.b['6'][1]++, superClass !== null)) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['5'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['18']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['5'][1]++;
	   }__cov_27S4tWLfm$z0jKE4FBFaQw.s['19']++;subClass.prototype = Object.create((__cov_27S4tWLfm$z0jKE4FBFaQw.b['7'][0]++, superClass) && (__cov_27S4tWLfm$z0jKE4FBFaQw.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_27S4tWLfm$z0jKE4FBFaQw.s['20']++;if (superClass) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['8'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['21']++;Object.setPrototypeOf ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.b['8'][1]++;
	   }
	}__cov_27S4tWLfm$z0jKE4FBFaQw.s['22']++;var PopupFilter = exports.PopupFilter = function (_Feature) {
	   __cov_27S4tWLfm$z0jKE4FBFaQw.f['4']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['23']++;_inherits(PopupFilter, _Feature);function PopupFilter(tf) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['5']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['25']++;_classCallCheck(this, PopupFilter);__cov_27S4tWLfm$z0jKE4FBFaQw.s['26']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'popupFilters'));__cov_27S4tWLfm$z0jKE4FBFaQw.s['27']++;var f = _this.config;__cov_27S4tWLfm$z0jKE4FBFaQw.s['28']++;tf.isExternalFlt = true;__cov_27S4tWLfm$z0jKE4FBFaQw.s['29']++;tf.externalFltTgtIds = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['30']++;_this.closeOnFiltering = f.popup_filters_close_on_filtering === false ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['10'][0]++, false) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['10'][1]++, true);__cov_27S4tWLfm$z0jKE4FBFaQw.s['31']++;_this.iconPath = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['11'][0]++, f.popup_filters_image) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['11'][1]++, tf.themesPath + 'icn_filter.gif');__cov_27S4tWLfm$z0jKE4FBFaQw.s['32']++;_this.activeIconPath = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['12'][0]++, f.popup_filters_image_active) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['12'][1]++, tf.themesPath + 'icn_filterActive.gif');__cov_27S4tWLfm$z0jKE4FBFaQw.s['33']++;_this.iconHtml = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['13'][0]++, f.popup_filters_image_html) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['13'][1]++, '<img src="' + _this.iconPath + '" alt="Column filter" />');__cov_27S4tWLfm$z0jKE4FBFaQw.s['34']++;_this.containerCssClass = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['14'][0]++, f.popup_div_css_class) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['14'][1]++, 'popUpFilter');__cov_27S4tWLfm$z0jKE4FBFaQw.s['35']++;_this.adjustToContainer = f.popup_filters_adjust_to_container === false ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['15'][0]++, false) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['15'][1]++, true);__cov_27S4tWLfm$z0jKE4FBFaQw.s['36']++;_this.onBeforeOpen = (0, _types.isFn)(f.on_before_popup_filter_open) ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['16'][0]++, f.on_before_popup_filter_open) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['16'][1]++, _types.EMPTY_FN);__cov_27S4tWLfm$z0jKE4FBFaQw.s['37']++;_this.onAfterOpen = (0, _types.isFn)(f.on_after_popup_filter_open) ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['17'][0]++, f.on_after_popup_filter_open) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['17'][1]++, _types.EMPTY_FN);__cov_27S4tWLfm$z0jKE4FBFaQw.s['38']++;_this.onBeforeClose = (0, _types.isFn)(f.on_before_popup_filter_close) ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['18'][0]++, f.on_before_popup_filter_close) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['18'][1]++, _types.EMPTY_FN);__cov_27S4tWLfm$z0jKE4FBFaQw.s['39']++;_this.onAfterClose = (0, _types.isFn)(f.on_after_popup_filter_close) ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['19'][0]++, f.on_after_popup_filter_close) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['19'][1]++, _types.EMPTY_FN);__cov_27S4tWLfm$z0jKE4FBFaQw.s['40']++;_this.fltSpans = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['41']++;_this.fltIcons = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['42']++;_this.filtersCache = null;__cov_27S4tWLfm$z0jKE4FBFaQw.s['43']++;_this.fltElms = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['20'][0]++, _this.filtersCache) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['20'][1]++, []);__cov_27S4tWLfm$z0jKE4FBFaQw.s['44']++;_this.prfxDiv = 'popup_';__cov_27S4tWLfm$z0jKE4FBFaQw.s['45']++;_this.activeFilterIdx = -1;__cov_27S4tWLfm$z0jKE4FBFaQw.s['46']++;return _this;
	   }__cov_27S4tWLfm$z0jKE4FBFaQw.s['47']++;PopupFilter.prototype.onClick = function onClick(evt) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['6']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['48']++;var elm = (0, _event.targetEvt)(evt).parentNode;__cov_27S4tWLfm$z0jKE4FBFaQw.s['49']++;var colIndex = parseInt(elm.getAttribute('ci'), 10);__cov_27S4tWLfm$z0jKE4FBFaQw.s['50']++;this.closeAll(colIndex);__cov_27S4tWLfm$z0jKE4FBFaQw.s['51']++;this.toggle(colIndex);__cov_27S4tWLfm$z0jKE4FBFaQw.s['52']++;if (this.adjustToContainer) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['21'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['53']++;var cont = this.fltElms[colIndex],
	             header = this.tf.getHeaderElement(colIndex),
	             headerWidth = header.clientWidth * 0.95;__cov_27S4tWLfm$z0jKE4FBFaQw.s['54']++;cont.style.width = parseInt(headerWidth, 10) + 'px';
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['21'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['55']++;(0, _event.cancelEvt)(evt);__cov_27S4tWLfm$z0jKE4FBFaQw.s['56']++;(0, _event.stopEvt)(evt);
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['57']++;PopupFilter.prototype.onMouseup = function onMouseup(evt) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['7']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['58']++;if (this.activeFilterIdx === -1) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['22'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['59']++;return;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['22'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['60']++;var targetElm = (0, _event.targetEvt)(evt);__cov_27S4tWLfm$z0jKE4FBFaQw.s['61']++;var activeFlt = this.fltElms[this.activeFilterIdx];__cov_27S4tWLfm$z0jKE4FBFaQw.s['62']++;var icon = this.fltIcons[this.activeFilterIdx];__cov_27S4tWLfm$z0jKE4FBFaQw.s['63']++;if (icon === targetElm) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['23'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['64']++;return;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['23'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['65']++;while ((__cov_27S4tWLfm$z0jKE4FBFaQw.b['24'][0]++, targetElm) && (__cov_27S4tWLfm$z0jKE4FBFaQw.b['24'][1]++, targetElm !== activeFlt)) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.s['66']++;targetElm = targetElm.parentNode;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['67']++;if (targetElm !== activeFlt) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['25'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['68']++;this.close(this.activeFilterIdx);
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['25'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['69']++;return;
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['70']++;PopupFilter.prototype.init = function init() {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['8']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['71']++;var _this2 = this;__cov_27S4tWLfm$z0jKE4FBFaQw.s['72']++;if (this.initialized) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['26'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['73']++;return;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['26'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['74']++;var tf = this.tf;__cov_27S4tWLfm$z0jKE4FBFaQw.s['75']++;if ((__cov_27S4tWLfm$z0jKE4FBFaQw.b['28'][0]++, tf.headersRow <= 1) && (__cov_27S4tWLfm$z0jKE4FBFaQw.b['28'][1]++, isNaN(tf.config().headers_row_index))) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['27'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['76']++;tf.headersRow = 0;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['27'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['77']++;if (tf.gridLayout) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['29'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['78']++;tf.headersRow--;__cov_27S4tWLfm$z0jKE4FBFaQw.s['79']++;this.buildIcons();
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['29'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['80']++;this.emitter.on(['before-filtering'], function () {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['9']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['81']++;return _this2.setIconsState();
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['82']++;this.emitter.on(['after-filtering'], function () {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['10']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['83']++;return _this2.closeAll();
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['84']++;this.emitter.on(['cell-processed'], function (tf, cellIndex) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['11']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['85']++;return _this2.changeState(cellIndex, true);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['86']++;this.emitter.on(['filters-row-inserted'], function () {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['12']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['87']++;return _this2.buildIcons();
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['88']++;this.emitter.on(['before-filter-init'], function (tf, colIndex) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['13']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['89']++;return _this2.build(colIndex);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['90']++;this.initialized = true;
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['91']++;PopupFilter.prototype.reset = function reset() {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['14']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['92']++;this.enable();__cov_27S4tWLfm$z0jKE4FBFaQw.s['93']++;this.init();__cov_27S4tWLfm$z0jKE4FBFaQw.s['94']++;this.buildIcons();__cov_27S4tWLfm$z0jKE4FBFaQw.s['95']++;this.buildAll();
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['96']++;PopupFilter.prototype.buildIcons = function buildIcons() {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['15']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['97']++;var _this3 = this;__cov_27S4tWLfm$z0jKE4FBFaQw.s['98']++;var tf = this.tf;__cov_27S4tWLfm$z0jKE4FBFaQw.s['99']++;tf.headersRow++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['100']++;for (var i = 0; i < tf.nbCells; i++) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.s['101']++;if (tf.getFilterType(i) === _const.NONE) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['30'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['102']++;continue;
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['30'][1]++;
	         }__cov_27S4tWLfm$z0jKE4FBFaQw.s['103']++;var icon = (0, _dom.createElm)('span', ['ci', i]);__cov_27S4tWLfm$z0jKE4FBFaQw.s['104']++;icon.innerHTML = this.iconHtml;__cov_27S4tWLfm$z0jKE4FBFaQw.s['105']++;var header = tf.getHeaderElement(i);__cov_27S4tWLfm$z0jKE4FBFaQw.s['106']++;header.appendChild(icon);__cov_27S4tWLfm$z0jKE4FBFaQw.s['107']++;(0, _event.addEvt)(icon, 'click', function (evt) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.f['16']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['108']++;return _this3.onClick(evt);
	         });__cov_27S4tWLfm$z0jKE4FBFaQw.s['109']++;this.fltSpans[i] = icon;__cov_27S4tWLfm$z0jKE4FBFaQw.s['110']++;this.fltIcons[i] = icon.firstChild;
	      }
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['111']++;PopupFilter.prototype.buildAll = function buildAll() {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['17']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['112']++;for (var i = 0; i < this.filtersCache.length; i++) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.s['113']++;this.build(i, this.filtersCache[i]);
	      }
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['114']++;PopupFilter.prototype.build = function build(colIndex, div) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['18']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['115']++;var tf = this.tf;__cov_27S4tWLfm$z0jKE4FBFaQw.s['116']++;var contId = '' + this.prfxDiv + tf.id + '_' + colIndex;__cov_27S4tWLfm$z0jKE4FBFaQw.s['117']++;var cont = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['31'][0]++, div) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['31'][1]++, (0, _dom.createElm)('div', ['id', contId]));__cov_27S4tWLfm$z0jKE4FBFaQw.s['118']++;cont.className = this.containerCssClass;__cov_27S4tWLfm$z0jKE4FBFaQw.s['119']++;tf.externalFltTgtIds.push(cont.id);__cov_27S4tWLfm$z0jKE4FBFaQw.s['120']++;var header = tf.getHeaderElement(colIndex);__cov_27S4tWLfm$z0jKE4FBFaQw.s['121']++;header.insertBefore(cont, header.firstChild);__cov_27S4tWLfm$z0jKE4FBFaQw.s['122']++;(0, _event.addEvt)(cont, 'click', function (evt) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['19']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['123']++;return (0, _event.stopEvt)(evt);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['124']++;this.fltElms[colIndex] = cont;
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['125']++;PopupFilter.prototype.toggle = function toggle(colIndex) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['20']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['126']++;if (!this.isOpen(colIndex)) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['32'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['127']++;this.open(colIndex);
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['32'][1]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['128']++;this.close(colIndex);
	      }
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['129']++;PopupFilter.prototype.open = function open(colIndex) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['21']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['130']++;var _this4 = this;__cov_27S4tWLfm$z0jKE4FBFaQw.s['131']++;var tf = this.tf,
	          container = this.fltElms[colIndex];__cov_27S4tWLfm$z0jKE4FBFaQw.s['132']++;this.onBeforeOpen(this, container, colIndex);__cov_27S4tWLfm$z0jKE4FBFaQw.s['133']++;container.style.display = 'block';__cov_27S4tWLfm$z0jKE4FBFaQw.s['134']++;this.activeFilterIdx = colIndex;__cov_27S4tWLfm$z0jKE4FBFaQw.s['135']++;(0, _event.addEvt)(_root.root, 'mouseup', function (evt) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['22']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['136']++;return _this4.onMouseup(evt);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['137']++;if (tf.getFilterType(colIndex) === _const.INPUT) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['33'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['138']++;var flt = tf.getFilterElement(colIndex);__cov_27S4tWLfm$z0jKE4FBFaQw.s['139']++;if (flt) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['34'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['140']++;flt.focus();
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['34'][1]++;
	         }
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['33'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['141']++;this.onAfterOpen(this, container, colIndex);
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['142']++;PopupFilter.prototype.close = function close(colIndex) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['23']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['143']++;var _this5 = this;__cov_27S4tWLfm$z0jKE4FBFaQw.s['144']++;var container = this.fltElms[colIndex];__cov_27S4tWLfm$z0jKE4FBFaQw.s['145']++;this.onBeforeClose(this, container, colIndex);__cov_27S4tWLfm$z0jKE4FBFaQw.s['146']++;container.style.display = _const.NONE;__cov_27S4tWLfm$z0jKE4FBFaQw.s['147']++;if (this.activeFilterIdx === colIndex) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['35'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['148']++;this.activeFilterIdx = -1;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['35'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['149']++;(0, _event.removeEvt)(_root.root, 'mouseup', function (evt) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['24']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['150']++;return _this5.onMouseup(evt);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['151']++;this.onAfterClose(this, container, colIndex);
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['152']++;PopupFilter.prototype.isOpen = function isOpen(colIndex) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['25']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['153']++;return this.fltElms[colIndex].style.display === 'block';
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['154']++;PopupFilter.prototype.closeAll = function closeAll(exceptIdx) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['26']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['155']++;if ((__cov_27S4tWLfm$z0jKE4FBFaQw.b['37'][0]++, (0, _types.isUndef)(exceptIdx)) && (__cov_27S4tWLfm$z0jKE4FBFaQw.b['37'][1]++, !this.closeOnFiltering)) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['36'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['156']++;return;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['36'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['157']++;for (var i = 0; i < this.fltElms.length; i++) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.s['158']++;if (i === exceptIdx) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['38'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['159']++;continue;
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['38'][1]++;
	         }__cov_27S4tWLfm$z0jKE4FBFaQw.s['160']++;var fltType = tf.getFilterType(i);__cov_27S4tWLfm$z0jKE4FBFaQw.s['161']++;var isMultipleFilter = (__cov_27S4tWLfm$z0jKE4FBFaQw.b['39'][0]++, fltType === _const.CHECKLIST) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['39'][1]++, fltType === _const.MULTIPLE);__cov_27S4tWLfm$z0jKE4FBFaQw.s['162']++;if ((__cov_27S4tWLfm$z0jKE4FBFaQw.b['41'][0]++, !isMultipleFilter) || (__cov_27S4tWLfm$z0jKE4FBFaQw.b['41'][1]++, !(0, _types.isUndef)(exceptIdx))) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['40'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['163']++;this.close(i);
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['40'][1]++;
	         }
	      }
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['164']++;PopupFilter.prototype.setIconsState = function setIconsState() {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['27']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['165']++;for (var i = 0; i < this.fltIcons.length; i++) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.s['166']++;this.changeState(i, false);
	      }
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['167']++;PopupFilter.prototype.changeState = function changeState(colIndex, active) {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['28']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['168']++;var icon = this.fltIcons[colIndex];__cov_27S4tWLfm$z0jKE4FBFaQw.s['169']++;if (icon) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['42'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['170']++;icon.src = active ? (__cov_27S4tWLfm$z0jKE4FBFaQw.b['43'][0]++, this.activeIconPath) : (__cov_27S4tWLfm$z0jKE4FBFaQw.b['43'][1]++, this.iconPath);
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['42'][1]++;
	      }
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['171']++;PopupFilter.prototype.destroy = function destroy() {
	      __cov_27S4tWLfm$z0jKE4FBFaQw.f['29']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['172']++;var _this6 = this;__cov_27S4tWLfm$z0jKE4FBFaQw.s['173']++;if (!this.initialized) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['44'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['174']++;return;
	      } else {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.b['44'][1]++;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['175']++;this.filtersCache = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['176']++;for (var i = 0; i < this.fltElms.length; i++) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.s['177']++;var container = this.fltElms[i],
	             icon = this.fltSpans[i],
	             iconImg = this.fltIcons[i];__cov_27S4tWLfm$z0jKE4FBFaQw.s['178']++;if (container) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['45'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['179']++;(0, _dom.removeElm)(container);__cov_27S4tWLfm$z0jKE4FBFaQw.s['180']++;this.filtersCache[i] = container;
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['45'][1]++;
	         }__cov_27S4tWLfm$z0jKE4FBFaQw.s['181']++;container = null;__cov_27S4tWLfm$z0jKE4FBFaQw.s['182']++;if (icon) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['46'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['183']++;(0, _dom.removeElm)(icon);
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['46'][1]++;
	         }__cov_27S4tWLfm$z0jKE4FBFaQw.s['184']++;icon = null;__cov_27S4tWLfm$z0jKE4FBFaQw.s['185']++;if (iconImg) {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['47'][0]++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['186']++;(0, _dom.removeElm)(iconImg);
	         } else {
	            __cov_27S4tWLfm$z0jKE4FBFaQw.b['47'][1]++;
	         }__cov_27S4tWLfm$z0jKE4FBFaQw.s['187']++;iconImg = null;
	      }__cov_27S4tWLfm$z0jKE4FBFaQw.s['188']++;this.fltElms = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['189']++;this.fltSpans = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['190']++;this.fltIcons = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['191']++;tf.externalFltTgtIds = [];__cov_27S4tWLfm$z0jKE4FBFaQw.s['192']++;this.emitter.off(['before-filtering'], function () {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['30']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['193']++;return _this6.setIconsState();
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['194']++;this.emitter.off(['after-filtering'], function () {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['31']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['195']++;return _this6.closeAll();
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['196']++;this.emitter.off(['cell-processed'], function (tf, cellIndex) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['32']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['197']++;return _this6.changeState(cellIndex, true);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['198']++;this.emitter.off(['filters-row-inserted'], function () {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['33']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['199']++;return _this6.buildIcons();
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['200']++;this.emitter.off(['before-filter-init'], function (tf, colIndex) {
	         __cov_27S4tWLfm$z0jKE4FBFaQw.f['34']++;__cov_27S4tWLfm$z0jKE4FBFaQw.s['201']++;return _this6.build(colIndex);
	      });__cov_27S4tWLfm$z0jKE4FBFaQw.s['202']++;this.initialized = false;
	   };__cov_27S4tWLfm$z0jKE4FBFaQw.s['203']++;return PopupFilter;
	}(_feature.Feature);

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_LhocFo5vI7yXpU2WOWSMRw = Function('return this')();
	if (!__cov_LhocFo5vI7yXpU2WOWSMRw.__coverage__) {
	   __cov_LhocFo5vI7yXpU2WOWSMRw.__coverage__ = {};
	}
	__cov_LhocFo5vI7yXpU2WOWSMRw = __cov_LhocFo5vI7yXpU2WOWSMRw.__coverage__;
	if (!__cov_LhocFo5vI7yXpU2WOWSMRw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dropdown.js']) {
	   __cov_LhocFo5vI7yXpU2WOWSMRw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dropdown.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dropdown.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 1, "11": 0, "12": 0, "13": 1, "14": 0, "15": 0, "16": 0, "17": 1, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 1, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "212": 0, "213": 0, "214": 0, "215": 0, "216": 0, "217": 0, "218": 0, "219": 0, "220": 0, "221": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0, 0, 0, 0, 0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0], "45": [0, 0], "46": [0, 0], "47": [0, 0], "48": [0, 0], "49": [0, 0], "50": [0, 0], "51": [0, 0], "52": [0, 0], "53": [0, 0], "54": [0, 0], "55": [0, 0, 0], "56": [0, 0], "57": [0, 0, 0], "58": [0, 0], "59": [0, 0], "60": [0, 0], "61": [0, 0], "62": [0, 0], "63": [0, 0], "64": [0, 0], "65": [0, 0], "66": [0, 0], "67": [0, 0], "68": [0, 0], "69": [0, 0], "70": [0, 0], "71": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0 }, "fnMap": { "1": { "line": 22, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 24, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 26, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 34, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 41, "name": "Dropdown", "loc": { "start": { "line": 21, "column": 4 }, "end": { "line": 21, "column": 20 } } }, "6": { "line": 96, "name": "onSlcFocus", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 113, "name": "onSlcChange", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 124, "name": "refreshAll", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 131, "name": "(anonymous_9)", "loc": { "start": { "line": 103, "column": 21 }, "end": { "line": 103, "column": 33 } } }, "10": { "line": 146, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 178, "name": "(anonymous_11)", "loc": { "start": { "line": 151, "column": 30 }, "end": { "line": 151, "column": 30 } } }, "12": { "line": 181, "name": "(anonymous_12)", "loc": { "start": { "line": 152, "column": 29 }, "end": { "line": 152, "column": 29 } } }, "13": { "line": 185, "name": "(anonymous_13)", "loc": { "start": { "line": 156, "column": 12 }, "end": { "line": 156, "column": 12 } } }, "14": { "line": 188, "name": "(anonymous_14)", "loc": { "start": { "line": 161, "column": 12 }, "end": { "line": 161, "column": 12 } } }, "15": { "line": 191, "name": "(anonymous_15)", "loc": { "start": { "line": 163, "column": 42 }, "end": { "line": 163, "column": 42 } } }, "16": { "line": 206, "name": "build", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "17": { "line": 350, "name": "addOptions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "18": { "line": 390, "name": "addFirstOption", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "19": { "line": 416, "name": "selectOptions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "20": { "line": 424, "name": "(anonymous_20)", "loc": { "start": { "line": 388, "column": 37 }, "end": { "line": 388, "column": 49 } } }, "21": { "line": 444, "name": "getValues", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "22": { "line": 451, "name": "(anonymous_22)", "loc": { "start": { "line": 414, "column": 16 }, "end": { "line": 414, "column": 16 } } }, "23": { "line": 455, "name": "(anonymous_23)", "loc": { "start": { "line": 416, "column": 41 }, "end": { "line": 416, "column": 53 } } }, "24": { "line": 470, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "25": { "line": 473, "name": "(anonymous_25)", "loc": { "start": { "line": 432, "column": 12 }, "end": { "line": 432, "column": 12 } } }, "26": { "line": 476, "name": "(anonymous_26)", "loc": { "start": { "line": 437, "column": 12 }, "end": { "line": 437, "column": 12 } } }, "27": { "line": 479, "name": "(anonymous_27)", "loc": { "start": { "line": 439, "column": 43 }, "end": { "line": 439, "column": 43 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "9": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "end": { "line": 9, "column": 0 }, "start": { "line": 9, "column": 0 } }, "24": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "25": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "26": { "end": { "line": 66, "column": 5 }, "start": { "line": 21, "column": 4 } }, "27": { "end": { "line": 21, "column": 20 }, "start": { "line": 21, "column": 20 } }, "28": { "end": { "line": 21, "column": 20 }, "start": { "line": 21, "column": 20 } }, "29": { "end": { "line": 25, "column": 8 }, "start": { "line": 25, "column": 8 } }, "30": { "end": { "line": 31, "column": 8 }, "start": { "line": 31, "column": 8 } }, "31": { "end": { "line": 38, "column": 8 }, "start": { "line": 38, "column": 8 } }, "32": { "end": { "line": 44, "column": 8 }, "start": { "line": 44, "column": 8 } }, "33": { "end": { "line": 51, "column": 8 }, "start": { "line": 51, "column": 8 } }, "34": { "end": { "line": 58, "column": 8 }, "start": { "line": 58, "column": 8 } }, "35": { "end": { "line": 65, "column": 8 }, "start": { "line": 65, "column": 8 } }, "36": { "end": { "line": 21, "column": 20 }, "start": { "line": 21, "column": 20 } }, "37": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "38": { "end": { "line": 75, "column": 8 }, "start": { "line": 75, "column": 8 } }, "39": { "end": { "line": 76, "column": 8 }, "start": { "line": 76, "column": 8 } }, "40": { "end": { "line": 81, "column": 9 }, "start": { "line": 78, "column": 8 } }, "41": { "end": { "line": 79, "column": 12 }, "start": { "line": 79, "column": 12 } }, "42": { "end": { "line": 80, "column": 12 }, "start": { "line": 80, "column": 12 } }, "43": { "end": { "line": 82, "column": 8 }, "start": { "line": 82, "column": 8 } }, "44": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "45": { "end": { "line": 92, "column": 9 }, "start": { "line": 90, "column": 8 } }, "46": { "end": { "line": 91, "column": 12 }, "start": { "line": 91, "column": 12 } }, "47": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "48": { "end": { "line": 98, "column": 17 }, "start": { "line": 98, "column": 17 } }, "49": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "50": { "end": { "line": 100, "column": 8 }, "start": { "line": 100, "column": 8 } }, "51": { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 8 } }, "52": { "end": { "line": 102, "column": 8 }, "start": { "line": 102, "column": 8 } }, "53": { "end": { "line": 103, "column": 8 }, "start": { "line": 103, "column": 8 } }, "54": { "end": { "line": 104, "column": 12 }, "start": { "line": 104, "column": 12 } }, "55": { "end": { "line": 105, "column": 12 }, "start": { "line": 105, "column": 12 } }, "56": { "end": { "line": 106, "column": 12 }, "start": { "line": 106, "column": 12 } }, "57": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "58": { "end": { "line": 116, "column": 42 }, "start": { "line": 116, "column": 42 } }, "59": { "end": { "line": 117, "column": 8 }, "start": { "line": 117, "column": 8 } }, "60": { "end": { "line": 118, "column": 8 }, "start": { "line": 118, "column": 8 } }, "61": { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, "62": { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }, "63": { "end": { "line": 130, "column": 9 }, "start": { "line": 127, "column": 8 } }, "64": { "end": { "line": 128, "column": 12 }, "start": { "line": 128, "column": 12 } }, "65": { "end": { "line": 129, "column": 12 }, "start": { "line": 129, "column": 12 } }, "66": { "end": { "line": 131, "column": 8 }, "start": { "line": 131, "column": 8 } }, "67": { "end": { "line": 139, "column": 9 }, "start": { "line": 135, "column": 8 } }, "68": { "end": { "line": 136, "column": 12 }, "start": { "line": 136, "column": 12 } }, "69": { "end": { "line": 138, "column": 12 }, "start": { "line": 138, "column": 12 } }, "70": { "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 8 } }, "71": { "end": { "line": 149, "column": 9 }, "start": { "line": 143, "column": 8 } }, "72": { "end": { "line": 144, "column": 12 }, "start": { "line": 144, "column": 12 } }, "73": { "end": { "line": 147, "column": 12 }, "start": { "line": 147, "column": 12 } }, "74": { "end": { "line": 148, "column": 12 }, "start": { "line": 148, "column": 12 } }, "75": { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 8 } }, "76": { "end": { "line": 151, "column": 30 }, "start": { "line": 151, "column": 30 } }, "77": { "end": { "line": 152, "column": 8 }, "start": { "line": 152, "column": 8 } }, "78": { "end": { "line": 152, "column": 29 }, "start": { "line": 152, "column": 29 } }, "79": { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }, "80": { "end": { "line": 156, "column": 12 }, "start": { "line": 156, "column": 12 } }, "81": { "end": { "line": 159, "column": 8 }, "start": { "line": 159, "column": 8 } }, "82": { "end": { "line": 161, "column": 12 }, "start": { "line": 161, "column": 12 } }, "83": { "end": { "line": 163, "column": 8 }, "start": { "line": 163, "column": 8 } }, "84": { "end": { "line": 163, "column": 42 }, "start": { "line": 163, "column": 42 } }, "85": { "end": { "line": 166, "column": 8 }, "start": { "line": 166, "column": 8 } }, "86": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "87": { "end": { "line": 174, "column": 38 }, "start": { "line": 174, "column": 38 } }, "88": { "end": { "line": 175, "column": 8 }, "start": { "line": 175, "column": 8 } }, "89": { "end": { "line": 176, "column": 8 }, "start": { "line": 176, "column": 8 } }, "90": { "end": { "line": 178, "column": 8 }, "start": { "line": 178, "column": 8 } }, "91": { "end": { "line": 180, "column": 8 }, "start": { "line": 180, "column": 8 } }, "92": { "end": { "line": 181, "column": 8 }, "start": { "line": 181, "column": 8 } }, "93": { "end": { "line": 183, "column": 8 }, "start": { "line": 183, "column": 8 } }, "94": { "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }, "95": { "end": { "line": 185, "column": 8 }, "start": { "line": 185, "column": 8 } }, "96": { "end": { "line": 186, "column": 8 }, "start": { "line": 186, "column": 8 } }, "97": { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }, "98": { "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 8 } }, "99": { "end": { "line": 193, "column": 8 }, "start": { "line": 193, "column": 8 } }, "100": { "end": { "line": 196, "column": 9 }, "start": { "line": 194, "column": 8 } }, "101": { "end": { "line": 195, "column": 12 }, "start": { "line": 195, "column": 12 } }, "102": { "end": { "line": 198, "column": 8 }, "start": { "line": 198, "column": 8 } }, "103": { "end": { "line": 203, "column": 9 }, "start": { "line": 200, "column": 8 } }, "104": { "end": { "line": 201, "column": 12 }, "start": { "line": 201, "column": 12 } }, "105": { "end": { "line": 202, "column": 12 }, "start": { "line": 202, "column": 12 } }, "106": { "end": { "line": 174, "column": 38 }, "start": { "line": 205, "column": 8 } }, "107": { "end": { "line": 210, "column": 13 }, "start": { "line": 208, "column": 12 } }, "108": { "end": { "line": 209, "column": 16 }, "start": { "line": 209, "column": 16 } }, "109": { "end": { "line": 212, "column": 12 }, "start": { "line": 212, "column": 12 } }, "110": { "end": { "line": 218, "column": 13 }, "start": { "line": 216, "column": 12 } }, "111": { "end": { "line": 217, "column": 16 }, "start": { "line": 217, "column": 16 } }, "112": { "end": { "line": 205, "column": 49 }, "start": { "line": 221, "column": 12 } }, "113": { "end": { "line": 224, "column": 17 }, "start": { "line": 222, "column": 16 } }, "114": { "end": { "line": 223, "column": 20 }, "start": { "line": 223, "column": 20 } }, "115": { "end": { "line": 229, "column": 17 }, "start": { "line": 225, "column": 16 } }, "116": { "end": { "line": 228, "column": 20 }, "start": { "line": 228, "column": 20 } }, "117": { "end": { "line": 231, "column": 16 }, "start": { "line": 231, "column": 16 } }, "118": { "end": { "line": 238, "column": 17 }, "start": { "line": 236, "column": 16 } }, "119": { "end": { "line": 237, "column": 20 }, "start": { "line": 237, "column": 20 } }, "120": { "end": { "line": 249, "column": 17 }, "start": { "line": 240, "column": 16 } }, "121": { "end": { "line": 241, "column": 20 }, "start": { "line": 241, "column": 20 } }, "122": { "end": { "line": 244, "column": 21 }, "start": { "line": 242, "column": 20 } }, "123": { "end": { "line": 243, "column": 24 }, "start": { "line": 243, "column": 24 } }, "124": { "end": { "line": 248, "column": 21 }, "start": { "line": 245, "column": 20 } }, "125": { "end": { "line": 247, "column": 24 }, "start": { "line": 247, "column": 24 } }, "126": { "end": { "line": 258, "column": 9 }, "start": { "line": 254, "column": 8 } }, "127": { "end": { "line": 255, "column": 12 }, "start": { "line": 255, "column": 12 } }, "128": { "end": { "line": 256, "column": 12 }, "start": { "line": 256, "column": 12 } }, "129": { "end": { "line": 257, "column": 12 }, "start": { "line": 257, "column": 12 } }, "130": { "end": { "line": 270, "column": 9 }, "start": { "line": 260, "column": 8 } }, "131": { "end": { "line": 269, "column": 13 }, "start": { "line": 261, "column": 12 } }, "132": { "end": { "line": 262, "column": 16 }, "start": { "line": 262, "column": 16 } }, "133": { "end": { "line": 265, "column": 17 }, "start": { "line": 263, "column": 16 } }, "134": { "end": { "line": 264, "column": 20 }, "start": { "line": 264, "column": 20 } }, "135": { "end": { "line": 267, "column": 16 }, "start": { "line": 267, "column": 16 } }, "136": { "end": { "line": 268, "column": 58 }, "start": { "line": 268, "column": 16 } }, "137": { "end": { "line": 268, "column": 36 }, "start": { "line": 268, "column": 36 } }, "138": { "end": { "line": 286, "column": 9 }, "start": { "line": 273, "column": 8 } }, "139": { "end": { "line": 273, "column": 52 }, "start": { "line": 274, "column": 12 } }, "140": { "end": { "line": 275, "column": 16 }, "start": { "line": 275, "column": 16 } }, "141": { "end": { "line": 278, "column": 17 }, "start": { "line": 276, "column": 16 } }, "142": { "end": { "line": 277, "column": 20 }, "start": { "line": 277, "column": 20 } }, "143": { "end": { "line": 281, "column": 17 }, "start": { "line": 279, "column": 16 } }, "144": { "end": { "line": 280, "column": 20 }, "start": { "line": 280, "column": 20 } }, "145": { "end": { "line": 283, "column": 16 }, "start": { "line": 283, "column": 16 } }, "146": { "end": { "line": 301, "column": 9 }, "start": { "line": 288, "column": 8 } }, "147": { "end": { "line": 288, "column": 53 }, "start": { "line": 289, "column": 12 } }, "148": { "end": { "line": 290, "column": 16 }, "start": { "line": 290, "column": 16 } }, "149": { "end": { "line": 293, "column": 17 }, "start": { "line": 291, "column": 16 } }, "150": { "end": { "line": 292, "column": 20 }, "start": { "line": 292, "column": 20 } }, "151": { "end": { "line": 296, "column": 17 }, "start": { "line": 294, "column": 16 } }, "152": { "end": { "line": 295, "column": 20 }, "start": { "line": 295, "column": 20 } }, "153": { "end": { "line": 298, "column": 16 }, "start": { "line": 298, "column": 16 } }, "154": { "end": { "line": 304, "column": 8 }, "start": { "line": 304, "column": 8 } }, "155": { "end": { "line": 306, "column": 8 }, "start": { "line": 306, "column": 8 } }, "156": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "157": { "end": { "line": 317, "column": 8 }, "start": { "line": 317, "column": 8 } }, "158": { "end": { "line": 320, "column": 8 }, "start": { "line": 320, "column": 8 } }, "159": { "end": { "line": 321, "column": 8 }, "start": { "line": 321, "column": 8 } }, "160": { "end": { "line": 316, "column": 54 }, "start": { "line": 323, "column": 8 } }, "161": { "end": { "line": 326, "column": 13 }, "start": { "line": 324, "column": 12 } }, "162": { "end": { "line": 325, "column": 16 }, "start": { "line": 325, "column": 16 } }, "163": { "end": { "line": 323, "column": 51 }, "start": { "line": 327, "column": 12 } }, "164": { "end": { "line": 323, "column": 51 }, "start": { "line": 328, "column": 12 } }, "165": { "end": { "line": 329, "column": 12 }, "start": { "line": 329, "column": 12 } }, "166": { "end": { "line": 334, "column": 13 }, "start": { "line": 330, "column": 12 } }, "167": { "end": { "line": 333, "column": 16 }, "start": { "line": 333, "column": 16 } }, "168": { "end": { "line": 336, "column": 12 }, "start": { "line": 336, "column": 12 } }, "169": { "end": { "line": 343, "column": 13 }, "start": { "line": 338, "column": 12 } }, "170": { "end": { "line": 340, "column": 16 }, "start": { "line": 340, "column": 16 } }, "171": { "end": { "line": 342, "column": 16 }, "start": { "line": 342, "column": 16 } }, "172": { "end": { "line": 346, "column": 13 }, "start": { "line": 344, "column": 12 } }, "173": { "end": { "line": 345, "column": 16 }, "start": { "line": 345, "column": 16 } }, "174": { "end": { "line": 347, "column": 12 }, "start": { "line": 347, "column": 12 } }, "175": { "end": { "line": 350, "column": 8 }, "start": { "line": 350, "column": 8 } }, "176": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "177": { "end": { "line": 358, "column": 8 }, "start": { "line": 358, "column": 8 } }, "178": { "end": { "line": 359, "column": 8 }, "start": { "line": 359, "column": 8 } }, "179": { "end": { "line": 360, "column": 8 }, "start": { "line": 360, "column": 8 } }, "180": { "end": { "line": 364, "column": 9 }, "start": { "line": 362, "column": 8 } }, "181": { "end": { "line": 363, "column": 12 }, "start": { "line": 363, "column": 12 } }, "182": { "end": { "line": 365, "column": 8 }, "start": { "line": 365, "column": 8 } }, "183": { "end": { "line": 369, "column": 9 }, "start": { "line": 366, "column": 8 } }, "184": { "end": { "line": 367, "column": 12 }, "start": { "line": 367, "column": 12 } }, "185": { "end": { "line": 368, "column": 12 }, "start": { "line": 368, "column": 12 } }, "186": { "end": { "line": 373, "column": 9 }, "start": { "line": 370, "column": 8 } }, "187": { "end": { "line": 371, "column": 12 }, "start": { "line": 371, "column": 12 } }, "188": { "end": { "line": 372, "column": 12 }, "start": { "line": 372, "column": 12 } }, "189": { "end": { "line": 374, "column": 8 }, "start": { "line": 374, "column": 8 } }, "190": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "191": { "end": { "line": 382, "column": 41 }, "start": { "line": 382, "column": 41 } }, "192": { "end": { "line": 383, "column": 8 }, "start": { "line": 383, "column": 8 } }, "193": { "end": { "line": 386, "column": 9 }, "start": { "line": 384, "column": 8 } }, "194": { "end": { "line": 385, "column": 12 }, "start": { "line": 385, "column": 12 } }, "195": { "end": { "line": 387, "column": 8 }, "start": { "line": 387, "column": 8 } }, "196": { "end": { "line": 388, "column": 8 }, "start": { "line": 388, "column": 8 } }, "197": { "end": { "line": 393, "column": 13 }, "start": { "line": 391, "column": 12 } }, "198": { "end": { "line": 392, "column": 16 }, "start": { "line": 392, "column": 16 } }, "199": { "end": { "line": 388, "column": 49 }, "start": { "line": 395, "column": 12 } }, "200": { "end": { "line": 396, "column": 16 }, "start": { "line": 396, "column": 16 } }, "201": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "202": { "end": { "line": 407, "column": 8 }, "start": { "line": 407, "column": 8 } }, "203": { "end": { "line": 408, "column": 8 }, "start": { "line": 408, "column": 8 } }, "204": { "end": { "line": 409, "column": 8 }, "start": { "line": 409, "column": 8 } }, "205": { "end": { "line": 421, "column": 9 }, "start": { "line": 412, "column": 8 } }, "206": { "end": { "line": 413, "column": 12 }, "start": { "line": 413, "column": 12 } }, "207": { "end": { "line": 414, "column": 16 }, "start": { "line": 414, "column": 16 } }, "208": { "end": { "line": 416, "column": 12 }, "start": { "line": 416, "column": 12 } }, "209": { "end": { "line": 419, "column": 17 }, "start": { "line": 417, "column": 16 } }, "210": { "end": { "line": 418, "column": 20 }, "start": { "line": 418, "column": 20 } }, "211": { "end": { "line": 423, "column": 8 }, "start": { "line": 423, "column": 8 } }, "212": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "213": { "end": { "line": 429, "column": 14 }, "start": { "line": 429, "column": 14 } }, "214": { "end": { "line": 430, "column": 8 }, "start": { "line": 430, "column": 8 } }, "215": { "end": { "line": 432, "column": 12 }, "start": { "line": 432, "column": 12 } }, "216": { "end": { "line": 435, "column": 8 }, "start": { "line": 435, "column": 8 } }, "217": { "end": { "line": 437, "column": 12 }, "start": { "line": 437, "column": 12 } }, "218": { "end": { "line": 439, "column": 8 }, "start": { "line": 439, "column": 8 } }, "219": { "end": { "line": 439, "column": 43 }, "start": { "line": 439, "column": 43 } }, "220": { "end": { "line": 440, "column": 8 }, "start": { "line": 440, "column": 8 } }, "221": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 24, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 26, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 26, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 26, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 26, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 26, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 53, "type": "cond-expr", "locations": [{ "end": { "line": 31, "column": 36 }, "start": { "line": 32, "column": 12 } }, { "end": { "line": 31, "column": 8 }, "start": { "line": 32, "column": 20 } }] }, "11": { "line": 59, "type": "binary-expr", "locations": [{ "end": { "line": 38, "column": 28 }, "start": { "line": 38, "column": 28 } }, { "end": { "line": 38, "column": 8 }, "start": { "line": 38, "column": 48 } }] }, "12": { "line": 65, "type": "binary-expr", "locations": [{ "end": { "line": 44, "column": 34 }, "start": { "line": 44, "column": 34 } }, { "end": { "line": 44, "column": 8 }, "start": { "line": 45, "column": 12 } }] }, "13": { "line": 100, "type": "if", "locations": [{ "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 8 } }, { "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 8 } }] }, "14": { "line": 100, "type": "binary-expr", "locations": [{ "end": { "line": 78, "column": 12 }, "start": { "line": 78, "column": 12 } }, { "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 34 } }] }, "15": { "line": 114, "type": "if", "locations": [{ "end": { "line": 90, "column": 8 }, "start": { "line": 90, "column": 8 } }, { "end": { "line": 90, "column": 8 }, "start": { "line": 90, "column": 8 } }] }, "16": { "line": 151, "type": "cond-expr", "locations": [{ "end": { "line": 119, "column": 31 }, "start": { "line": 120, "column": 12 } }, { "end": { "line": 119, "column": 8 }, "start": { "line": 120, "column": 45 } }] }, "17": { "line": 155, "type": "if", "locations": [{ "end": { "line": 127, "column": 8 }, "start": { "line": 127, "column": 8 } }, { "end": { "line": 127, "column": 8 }, "start": { "line": 127, "column": 8 } }] }, "18": { "line": 159, "type": "cond-expr", "locations": [{ "end": { "line": 131, "column": 24 }, "start": { "line": 132, "column": 12 } }, { "end": { "line": 131, "column": 8 }, "start": { "line": 132, "column": 29 } }] }, "19": { "line": 162, "type": "if", "locations": [{ "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 8 } }, { "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 8 } }] }, "20": { "line": 170, "type": "if", "locations": [{ "end": { "line": 143, "column": 8 }, "start": { "line": 143, "column": 8 } }, { "end": { "line": 143, "column": 8 }, "start": { "line": 143, "column": 8 } }] }, "21": { "line": 207, "type": "cond-expr", "locations": [{ "end": { "line": 174, "column": 38 }, "start": { "line": 174, "column": 38 } }, { "end": { "line": 174, "column": 38 }, "start": { "line": 174, "column": 31 } }] }, "22": { "line": 207, "type": "binary-expr", "locations": [{ "end": { "line": 174, "column": 38 }, "start": { "line": 174, "column": 38 } }, { "end": { "line": 174, "column": 38 }, "start": { "line": 174, "column": 38 } }] }, "23": { "line": 228, "type": "if", "locations": [{ "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 8 } }, { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 8 } }] }, "24": { "line": 228, "type": "binary-expr", "locations": [{ "end": { "line": 194, "column": 12 }, "start": { "line": 194, "column": 12 } }, { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 24 } }] }, "25": { "line": 234, "type": "if", "locations": [{ "end": { "line": 200, "column": 8 }, "start": { "line": 200, "column": 8 } }, { "end": { "line": 200, "column": 8 }, "start": { "line": 200, "column": 8 } }] }, "26": { "line": 234, "type": "binary-expr", "locations": [{ "end": { "line": 200, "column": 12 }, "start": { "line": 200, "column": 12 } }, { "end": { "line": 200, "column": 8 }, "start": { "line": 200, "column": 24 } }] }, "27": { "line": 242, "type": "if", "locations": [{ "end": { "line": 208, "column": 12 }, "start": { "line": 208, "column": 12 } }, { "end": { "line": 208, "column": 12 }, "start": { "line": 208, "column": 12 } }] }, "28": { "line": 242, "type": "binary-expr", "locations": [{ "end": { "line": 208, "column": 16 }, "start": { "line": 208, "column": 16 } }, { "end": { "line": 208, "column": 12 }, "start": { "line": 208, "column": 37 } }] }, "29": { "line": 250, "type": "if", "locations": [{ "end": { "line": 216, "column": 12 }, "start": { "line": 216, "column": 12 } }, { "end": { "line": 216, "column": 12 }, "start": { "line": 216, "column": 12 } }] }, "30": { "line": 250, "type": "binary-expr", "locations": [{ "end": { "line": 216, "column": 16 }, "start": { "line": 216, "column": 16 } }, { "end": { "line": 216, "column": 12 }, "start": { "line": 216, "column": 42 } }] }, "31": { "line": 256, "type": "if", "locations": [{ "end": { "line": 222, "column": 16 }, "start": { "line": 222, "column": 16 } }, { "end": { "line": 222, "column": 16 }, "start": { "line": 222, "column": 16 } }] }, "32": { "line": 259, "type": "if", "locations": [{ "end": { "line": 225, "column": 16 }, "start": { "line": 225, "column": 16 } }, { "end": { "line": 225, "column": 16 }, "start": { "line": 225, "column": 16 } }] }, "33": { "line": 259, "type": "binary-expr", "locations": [{ "end": { "line": 225, "column": 20 }, "start": { "line": 225, "column": 20 } }, { "end": { "line": 225, "column": 20 }, "start": { "line": 225, "column": 32 } }, { "end": { "line": 226, "column": 21 }, "start": { "line": 226, "column": 21 } }, { "end": { "line": 225, "column": 20 }, "start": { "line": 226, "column": 35 } }, { "end": { "line": 227, "column": 21 }, "start": { "line": 227, "column": 21 } }, { "end": { "line": 227, "column": 21 }, "start": { "line": 227, "column": 34 } }, { "end": { "line": 225, "column": 16 }, "start": { "line": 227, "column": 47 } }] }, "34": { "line": 269, "type": "if", "locations": [{ "end": { "line": 236, "column": 16 }, "start": { "line": 236, "column": 16 } }, { "end": { "line": 236, "column": 16 }, "start": { "line": 236, "column": 16 } }] }, "35": { "line": 273, "type": "if", "locations": [{ "end": { "line": 240, "column": 16 }, "start": { "line": 240, "column": 16 } }, { "end": { "line": 240, "column": 16 }, "start": { "line": 240, "column": 16 } }] }, "36": { "line": 273, "type": "binary-expr", "locations": [{ "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 20 } }, { "end": { "line": 240, "column": 16 }, "start": { "line": 240, "column": 32 } }] }, "37": { "line": 275, "type": "if", "locations": [{ "end": { "line": 242, "column": 20 }, "start": { "line": 242, "column": 20 } }, { "end": { "line": 242, "column": 20 }, "start": { "line": 242, "column": 20 } }] }, "38": { "line": 278, "type": "if", "locations": [{ "end": { "line": 245, "column": 20 }, "start": { "line": 245, "column": 20 } }, { "end": { "line": 245, "column": 20 }, "start": { "line": 245, "column": 20 } }] }, "39": { "line": 278, "type": "binary-expr", "locations": [{ "end": { "line": 245, "column": 24 }, "start": { "line": 245, "column": 24 } }, { "end": { "line": 245, "column": 20 }, "start": { "line": 246, "column": 24 } }] }, "40": { "line": 286, "type": "if", "locations": [{ "end": { "line": 254, "column": 8 }, "start": { "line": 254, "column": 8 } }, { "end": { "line": 254, "column": 8 }, "start": { "line": 254, "column": 8 } }] }, "41": { "line": 292, "type": "if", "locations": [{ "end": { "line": 260, "column": 8 }, "start": { "line": 260, "column": 8 } }, { "end": { "line": 260, "column": 8 }, "start": { "line": 260, "column": 8 } }] }, "42": { "line": 292, "type": "binary-expr", "locations": [{ "end": { "line": 260, "column": 12 }, "start": { "line": 260, "column": 12 } }, { "end": { "line": 260, "column": 8 }, "start": { "line": 260, "column": 26 } }] }, "43": { "line": 293, "type": "if", "locations": [{ "end": { "line": 261, "column": 12 }, "start": { "line": 261, "column": 12 } }, { "end": { "line": 261, "column": 12 }, "start": { "line": 261, "column": 12 } }] }, "44": { "line": 295, "type": "if", "locations": [{ "end": { "line": 263, "column": 16 }, "start": { "line": 263, "column": 16 } }, { "end": { "line": 263, "column": 16 }, "start": { "line": 263, "column": 16 } }] }, "45": { "line": 300, "type": "if", "locations": [{ "end": { "line": 268, "column": 16 }, "start": { "line": 268, "column": 16 } }, { "end": { "line": 268, "column": 16 }, "start": { "line": 268, "column": 16 } }] }, "46": { "line": 307, "type": "if", "locations": [{ "end": { "line": 273, "column": 8 }, "start": { "line": 273, "column": 8 } }, { "end": { "line": 273, "column": 8 }, "start": { "line": 273, "column": 8 } }] }, "47": { "line": 310, "type": "if", "locations": [{ "end": { "line": 276, "column": 16 }, "start": { "line": 276, "column": 16 } }, { "end": { "line": 276, "column": 16 }, "start": { "line": 276, "column": 16 } }] }, "48": { "line": 313, "type": "if", "locations": [{ "end": { "line": 279, "column": 16 }, "start": { "line": 279, "column": 16 } }, { "end": { "line": 279, "column": 16 }, "start": { "line": 279, "column": 16 } }] }, "49": { "line": 321, "type": "if", "locations": [{ "end": { "line": 288, "column": 8 }, "start": { "line": 288, "column": 8 } }, { "end": { "line": 288, "column": 8 }, "start": { "line": 288, "column": 8 } }] }, "50": { "line": 324, "type": "if", "locations": [{ "end": { "line": 291, "column": 16 }, "start": { "line": 291, "column": 16 } }, { "end": { "line": 291, "column": 16 }, "start": { "line": 291, "column": 16 } }] }, "51": { "line": 327, "type": "if", "locations": [{ "end": { "line": 294, "column": 16 }, "start": { "line": 294, "column": 16 } }, { "end": { "line": 294, "column": 16 }, "start": { "line": 294, "column": 16 } }] }, "52": { "line": 358, "type": "if", "locations": [{ "end": { "line": 324, "column": 12 }, "start": { "line": 324, "column": 12 } }, { "end": { "line": 324, "column": 12 }, "start": { "line": 324, "column": 12 } }] }, "53": { "line": 362, "type": "cond-expr", "locations": [{ "end": { "line": 328, "column": 22 }, "start": { "line": 328, "column": 38 } }, { "end": { "line": 328, "column": 12 }, "start": { "line": 328, "column": 56 } }] }, "54": { "line": 364, "type": "if", "locations": [{ "end": { "line": 330, "column": 12 }, "start": { "line": 330, "column": 12 } }, { "end": { "line": 330, "column": 12 }, "start": { "line": 330, "column": 12 } }] }, "55": { "line": 364, "type": "binary-expr", "locations": [{ "end": { "line": 330, "column": 16 }, "start": { "line": 330, "column": 16 } }, { "end": { "line": 330, "column": 16 }, "start": { "line": 330, "column": 28 } }, { "end": { "line": 330, "column": 12 }, "start": { "line": 331, "column": 16 } }] }, "56": { "line": 370, "type": "if", "locations": [{ "end": { "line": 338, "column": 12 }, "start": { "line": 338, "column": 12 } }, { "end": { "line": 338, "column": 12 }, "start": { "line": 338, "column": 12 } }] }, "57": { "line": 370, "type": "binary-expr", "locations": [{ "end": { "line": 338, "column": 16 }, "start": { "line": 338, "column": 16 } }, { "end": { "line": 338, "column": 16 }, "start": { "line": 338, "column": 38 } }, { "end": { "line": 338, "column": 12 }, "start": { "line": 339, "column": 16 } }] }, "58": { "line": 375, "type": "if", "locations": [{ "end": { "line": 344, "column": 12 }, "start": { "line": 344, "column": 12 } }, { "end": { "line": 344, "column": 12 }, "start": { "line": 344, "column": 12 } }] }, "59": { "line": 393, "type": "cond-expr", "locations": [{ "end": { "line": 360, "column": 30 }, "start": { "line": 361, "column": 12 } }, { "end": { "line": 360, "column": 19 }, "start": { "line": 361, "column": 17 } }] }, "60": { "line": 394, "type": "if", "locations": [{ "end": { "line": 362, "column": 8 }, "start": { "line": 362, "column": 8 } }, { "end": { "line": 362, "column": 8 }, "start": { "line": 362, "column": 8 } }] }, "61": { "line": 398, "type": "if", "locations": [{ "end": { "line": 366, "column": 8 }, "start": { "line": 366, "column": 8 } }, { "end": { "line": 366, "column": 8 }, "start": { "line": 366, "column": 8 } }] }, "62": { "line": 402, "type": "if", "locations": [{ "end": { "line": 370, "column": 8 }, "start": { "line": 370, "column": 8 } }, { "end": { "line": 370, "column": 8 }, "start": { "line": 370, "column": 8 } }] }, "63": { "line": 417, "type": "cond-expr", "locations": [{ "end": { "line": 382, "column": 41 }, "start": { "line": 382, "column": 41 } }, { "end": { "line": 382, "column": 41 }, "start": { "line": 382, "column": 37 } }] }, "64": { "line": 417, "type": "binary-expr", "locations": [{ "end": { "line": 382, "column": 41 }, "start": { "line": 382, "column": 41 } }, { "end": { "line": 382, "column": 41 }, "start": { "line": 382, "column": 41 } }] }, "65": { "line": 420, "type": "if", "locations": [{ "end": { "line": 384, "column": 8 }, "start": { "line": 384, "column": 8 } }, { "end": { "line": 384, "column": 8 }, "start": { "line": 384, "column": 8 } }] }, "66": { "line": 427, "type": "if", "locations": [{ "end": { "line": 391, "column": 12 }, "start": { "line": 391, "column": 12 } }, { "end": { "line": 391, "column": 12 }, "start": { "line": 391, "column": 12 } }] }, "67": { "line": 427, "type": "binary-expr", "locations": [{ "end": { "line": 391, "column": 16 }, "start": { "line": 391, "column": 16 } }, { "end": { "line": 391, "column": 12 }, "start": { "line": 391, "column": 36 } }] }, "68": { "line": 431, "type": "if", "locations": [{ "end": { "line": 395, "column": 12 }, "start": { "line": 395, "column": 12 } }, { "end": { "line": 395, "column": 12 }, "start": { "line": 395, "column": 12 } }] }, "69": { "line": 431, "type": "binary-expr", "locations": [{ "end": { "line": 395, "column": 16 }, "start": { "line": 395, "column": 16 } }, { "end": { "line": 395, "column": 12 }, "start": { "line": 395, "column": 39 } }] }, "70": { "line": 450, "type": "if", "locations": [{ "end": { "line": 412, "column": 8 }, "start": { "line": 412, "column": 8 } }, { "end": { "line": 412, "column": 8 }, "start": { "line": 412, "column": 8 } }] }, "71": { "line": 456, "type": "if", "locations": [{ "end": { "line": 417, "column": 16 }, "start": { "line": 417, "column": 16 } }, { "end": { "line": 417, "column": 16 }, "start": { "line": 417, "column": 16 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, createOpt, elm} from '../dom';", "import {has} from '../array';", "import {matchCase} from '../string';", "import {ignoreCase, numSortAsc, numSortDesc} from '../sort';", "import {addEvt, targetEvt} from '../event';", "import {SELECT, MULTIPLE, NONE} from '../const';", "", "const SORT_ERROR = 'Filter options for column {0} cannot be sorted in ' +", "    '{1} manner.';", "", "/**", " * Dropdown filter UI component", " */", "export class Dropdown extends Feature {", "", "    /**", "     * Creates an instance of Dropdown", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'dropdown');", "", "        // Configuration object", "        let f = this.config;", "", "        /**", "         * Enable the reset filter option as first item", "         * @type {Boolean}", "         */", "        this.enableSlcResetFilter = f.enable_slc_reset_filter === false ?", "            false : true;", "", "        /**", "         * Non empty option text", "         * @type {String}", "         */", "        this.nonEmptyText = f.non_empty_text || '(Non empty)';", "", "        /**", "         * Tooltip text appearing on multiple select", "         * @type {String}", "         */", "        this.multipleSlcTooltip = f.multiple_slc_tooltip ||", "            'Use Ctrl/Cmd key for multiple selections';", "", "        /**", "         * Indicates drop-down has custom options", "         * @private", "         */", "        this.isCustom = null;", "", "        /**", "         * List of options values", "         * @type {Array}", "         * @private", "         */", "        this.opts = null;", "", "        /**", "         * List of options texts for custom values", "         * @type {Array}", "         * @private", "         */", "        this.optsTxt = null;", "    }", "", "", "    /**", "     * Drop-down filter focus event handler", "     * @param {Event} e DOM Event", "     * @private", "     */", "    onSlcFocus(e) {", "        let elm = targetEvt(e);", "        let tf = this.tf;", "        // select is populated when element has focus", "        if (tf.loadFltOnDemand && elm.getAttribute('filled') === '0') {", "            let ct = elm.getAttribute('ct');", "            this.build(ct);", "        }", "        this.emitter.emit('filter-focus', tf, elm);", "    }", "", "    /**", "     * Drop-down filter change event handler", "     * @private", "     */", "    onSlcChange() {", "        if (this.tf.onSlcChange) {", "            this.tf.filter();", "        }", "    }", "", "    /**", "     * Refresh all drop-down filters", "     */", "    refreshAll() {", "        let tf = this.tf;", "        let selectFlts = tf.getFiltersByType(SELECT, true);", "        let multipleFlts = tf.getFiltersByType(MULTIPLE, true);", "        let flts = selectFlts.concat(multipleFlts);", "        flts.forEach((colIdx) => {", "            let values = this.getValues(colIdx);", "            this.build(colIdx, tf.linkedFilters);", "            this.selectOptions(colIdx, values);", "        });", "    }", "", "    /**", "     * Initialize drop-down filter", "     * @param  {Number}     colIndex   Column index", "     * @param  {Boolean}    isExternal External filter flag", "     * @param  {DOMElement} container  Dom element containing the filter", "     */", "    init(colIndex, isExternal, container) {", "        let tf = this.tf;", "        let col = tf.getFilterType(colIndex);", "        let externalFltTgtId = isExternal ?", "            tf.externalFltTgtIds[colIndex] : null;", "", "        let slc = createElm(SELECT,", "            ['id', tf.buildFilterId(colIndex)],", "            ['ct', colIndex], ['filled', '0']", "        );", "", "        if (col === MULTIPLE) {", "            slc.multiple = MULTIPLE;", "            slc.title = this.multipleSlcTooltip;", "        }", "        slc.className = col.toLowerCase() === SELECT ?", "            tf.fltCssClass : tf.fltMultiCssClass;", "", "        //filter is appended in container element", "        if (externalFltTgtId) {", "            elm(externalFltTgtId).appendChild(slc);", "        } else {", "            container.appendChild(slc);", "        }", "", "        tf.fltIds.push(slc.id);", "", "        if (!tf.loadFltOnDemand) {", "            this.build(colIndex);", "        } else {", "            //1st option is created here since build isn't invoked", "            let opt0 = createOpt(tf.getClearFilterText(colIndex), '');", "            slc.appendChild(opt0);", "        }", "", "        addEvt(slc, 'change', () => this.onSlcChange());", "        addEvt(slc, 'focus', (e) => this.onSlcFocus(e));", "", "        this.emitter.on(", "            ['build-select-filter'],", "            (tf, colIndex, isLinked, isExternal) =>", "                this.build(colIndex, isLinked, isExternal)", "        );", "        this.emitter.on(", "            ['select-options'],", "            (tf, colIndex, values) => this.selectOptions(colIndex, values)", "        );", "        this.emitter.on(['rows-changed'], () => this.refreshAll());", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Build drop-down filter UI", "     * @param  {Number}  colIndex    Column index", "     * @param  {Boolean} isLinked    Enable linked filters behaviour", "     */", "    build(colIndex, isLinked = false) {", "        let tf = this.tf;", "        colIndex = parseInt(colIndex, 10);", "", "        this.emitter.emit('before-populating-filter', tf, colIndex);", "", "        this.opts = [];", "        this.optsTxt = [];", "", "        let slcId = tf.fltIds[colIndex];", "        let slc = elm(slcId);", "        let rows = tf.tbl.rows;", "        let nbRows = tf.getRowsNb(true);", "", "        //custom select test", "        this.isCustom = tf.isCustomOptions(colIndex);", "", "        //custom selects text", "        let activeIdx;", "        let activeFilterId = tf.getActiveFilterId();", "        if (isLinked && activeFilterId) {", "            activeIdx = tf.getColumnIndexFromFilterId(activeFilterId);", "        }", "", "        let excludedOpts = null,", "            filteredDataCol = null;", "        if (isLinked && tf.disableExcludedOptions) {", "            excludedOpts = [];", "            filteredDataCol = [];", "        }", "", "        for (let k = tf.refRow; k < nbRows; k++) {", "            // always visible rows don't need to appear on selects as always", "            // valid", "            if (tf.hasVisibleRows && tf.visibleRows.indexOf(k) !== -1) {", "                continue;", "            }", "", "            let cell = rows[k].cells,", "                nchilds = cell.length;", "", "            // checks if row has exact cell #", "            if (nchilds !== tf.nbCells || this.isCustom) {", "                continue;", "            }", "", "            // this loop retrieves cell data", "            for (let j = 0; j < nchilds; j++) {", "                if (colIndex !== j) {", "                    continue;", "                }", "                if (isLinked && !tf.disableExcludedOptions &&", "                    (!tf.paging && !tf.isRowDisplayed(k)) ||", "                    (tf.paging && activeIdx && !tf.isRowValid(k))) {", "                    continue;", "                }", "", "                let cellValue = tf.getCellValue(cell[j]),", "                    //Vary Peter's patch", "                    cellString = matchCase(cellValue, tf.caseSensitive);", "", "                // checks if celldata is already in array", "                if (!has(this.opts, cellString, tf.caseSensitive)) {", "                    this.opts.push(cellValue);", "                }", "", "                if (isLinked && tf.disableExcludedOptions) {", "                    let filteredCol = filteredDataCol[j];", "                    if (!filteredCol) {", "                        filteredCol = tf.getFilteredDataCol(j);", "                    }", "                    if (!has(filteredCol, cellString, tf.caseSensitive) &&", "                        !has(excludedOpts, cellString, tf.caseSensitive)) {", "                        excludedOpts.push(cellValue);", "                    }", "                }", "            }//for j", "        }//for k", "", "        //Retrieves custom values", "        if (this.isCustom) {", "            let customValues = tf.getCustomOptions(colIndex);", "            this.opts = customValues[0];", "            this.optsTxt = customValues[1];", "        }", "", "        if (tf.sortSlc && !this.isCustom) {", "            if (!tf.caseSensitive) {", "                this.opts.sort(ignoreCase);", "                if (excludedOpts) {", "                    excludedOpts.sort(ignoreCase);", "                }", "            } else {", "                this.opts.sort();", "                if (excludedOpts) { excludedOpts.sort(); }", "            }", "        }", "", "        //asc sort", "        if (tf.sortNumAsc.indexOf(colIndex) !== -1) {", "            try {", "                this.opts.sort(numSortAsc);", "                if (excludedOpts) {", "                    excludedOpts.sort(numSortAsc);", "                }", "                if (this.isCustom) {", "                    this.optsTxt.sort(numSortAsc);", "                }", "            } catch (e) {", "                throw new Error(SORT_ERROR.replace('{0}', colIndex)", "                    .replace('{1}', 'ascending'));", "            }//in case there are alphanumeric values", "        }", "        //desc sort", "        if (tf.sortNumDesc.indexOf(colIndex) !== -1) {", "            try {", "                this.opts.sort(numSortDesc);", "                if (excludedOpts) {", "                    excludedOpts.sort(numSortDesc);", "                }", "                if (this.isCustom) {", "                    this.optsTxt.sort(numSortDesc);", "                }", "            } catch (e) {", "                throw new Error(SORT_ERROR.replace('{0}', colIndex)", "                    .replace('{1}', 'ascending'));", "            }//in case there are alphanumeric values", "        }", "", "        //populates drop-down", "        this.addOptions(colIndex, slc, isLinked, excludedOpts);", "", "        this.emitter.emit('after-populating-filter', tf, colIndex, slc);", "    }", "", "    /**", "     * Add drop-down options", "     * @param {Number} colIndex     Column index", "     * @param {Object} slc          Select Dom element", "     * @param {Boolean} isLinked    Enable linked refresh behaviour", "     * @param {Array} excludedOpts  Array of excluded options", "     */", "    addOptions(colIndex, slc, isLinked, excludedOpts) {", "        let tf = this.tf,", "            slcValue = slc.value;", "", "        slc.innerHTML = '';", "        slc = this.addFirstOption(slc);", "", "        for (let y = 0; y < this.opts.length; y++) {", "            if (this.opts[y] === '') {", "                continue;", "            }", "            let val = this.opts[y]; //option value", "            let lbl = this.isCustom ? this.optsTxt[y] : val; //option text", "            let isDisabled = false;", "            if (isLinked && tf.disableExcludedOptions &&", "                has(excludedOpts, matchCase(val, tf.caseSensitive),", "                    tf.caseSensitive)) {", "                isDisabled = true;", "            }", "", "            let opt;", "            //fill select on demand", "            if (tf.loadFltOnDemand && slcValue === this.opts[y] &&", "                tf.getFilterType(colIndex) === SELECT) {", "                opt = createOpt(lbl, val, true);", "            } else {", "                opt = createOpt(lbl, val, false);", "            }", "            if (isDisabled) {", "                opt.disabled = true;", "            }", "            slc.appendChild(opt);", "        }// for y", "", "        slc.setAttribute('filled', '1');", "    }", "", "    /**", "     * Add drop-down header option", "     * @param {Object} slc Select DOM element", "     */", "    addFirstOption(slc) {", "        let tf = this.tf;", "        let colIdx = tf.getColumnIndexFromFilterId(slc.id);", "        let opt0 = createOpt((!this.enableSlcResetFilter ?", "            '' : tf.getClearFilterText(colIdx)), '');", "        if (!this.enableSlcResetFilter) {", "            opt0.style.display = NONE;", "        }", "        slc.appendChild(opt0);", "        if (tf.enableEmptyOption) {", "            let opt1 = createOpt(tf.emptyText, tf.emOperator);", "            slc.appendChild(opt1);", "        }", "        if (tf.enableNonEmptyOption) {", "            let opt2 = createOpt(tf.nonEmptyText, tf.nmOperator);", "            slc.appendChild(opt2);", "        }", "        return slc;", "    }", "", "    /**", "     * Select filter options programmatically", "     * @param  {Number} colIndex Column index", "     * @param  {Array}  values   Array of option values to select", "     */", "    selectOptions(colIndex, values = []) {", "        let tf = this.tf;", "        if (values.length === 0) {", "            return;", "        }", "        let slc = tf.getFilterElement(colIndex);", "        [].forEach.call(slc.options, (option) => {", "            // Empty value means clear all selections and first option is the", "            // clear all option", "            if (values[0] === '' || option.value === '') {", "                option.selected = false;", "            }", "", "            if (option.value !== '' && has(values, option.value, true)) {", "                option.selected = true;", "            }//if", "        });", "    }", "", "    /**", "     * Get filter values for a given column index", "     * @param {Number} colIndex Column index", "     * @returns {Array}  values  Array of selected values", "     */", "    getValues(colIndex) {", "        let tf = this.tf;", "        let slc = tf.getFilterElement(colIndex);", "        let values = [];", "", "        // IE >= 9 does not support the selectedOptions property :(", "        if (slc.selectedOptions) {", "            [].forEach.call(slc.selectedOptions,", "                option => values.push(option.value));", "        } else {", "            [].forEach.call(slc.options, (option) => {", "                if (option.selected) {", "                    values.push(option.value);", "                }", "            });", "        }", "", "        return values;", "    }", "", "    /**", "     * Destroy Dropdown instance", "     */", "    destroy() {", "        this.emitter.off(", "            ['build-select-filter'],", "            (colIndex, isLinked, isExternal) =>", "                this.build(colIndex, isLinked, isExternal)", "        );", "        this.emitter.off(", "            ['select-options'],", "            (tf, colIndex, values) => this.selectOptions(colIndex, values)", "        );", "        this.emitter.off(['rows-changed'], () => this.refreshAll());", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_LhocFo5vI7yXpU2WOWSMRw = __cov_LhocFo5vI7yXpU2WOWSMRw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dropdown.js'];
	__cov_LhocFo5vI7yXpU2WOWSMRw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_LhocFo5vI7yXpU2WOWSMRw.s['2']++;exports.Dropdown = undefined;__cov_LhocFo5vI7yXpU2WOWSMRw.s['3']++;var _feature = __webpack_require__(10);__cov_LhocFo5vI7yXpU2WOWSMRw.s['4']++;var _dom = __webpack_require__(3);__cov_LhocFo5vI7yXpU2WOWSMRw.s['5']++;var _array = __webpack_require__(16);__cov_LhocFo5vI7yXpU2WOWSMRw.s['6']++;var _string = __webpack_require__(5);__cov_LhocFo5vI7yXpU2WOWSMRw.s['7']++;var _sort = __webpack_require__(17);__cov_LhocFo5vI7yXpU2WOWSMRw.s['8']++;var _event = __webpack_require__(1);__cov_LhocFo5vI7yXpU2WOWSMRw.s['9']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_LhocFo5vI7yXpU2WOWSMRw.f['1']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['11']++;if (!(instance instanceof Constructor)) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['1'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['12']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_LhocFo5vI7yXpU2WOWSMRw.f['2']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['14']++;if (!self) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['2'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['15']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['2'][1]++;
	   }__cov_LhocFo5vI7yXpU2WOWSMRw.s['16']++;return (__cov_LhocFo5vI7yXpU2WOWSMRw.b['4'][0]++, call) && ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_LhocFo5vI7yXpU2WOWSMRw.b['4'][2]++, typeof call === 'function')) ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['3'][0]++, call) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_LhocFo5vI7yXpU2WOWSMRw.f['3']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['18']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['6'][0]++, typeof superClass !== 'function') && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['6'][1]++, superClass !== null)) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['5'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['19']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['5'][1]++;
	   }__cov_LhocFo5vI7yXpU2WOWSMRw.s['20']++;subClass.prototype = Object.create((__cov_LhocFo5vI7yXpU2WOWSMRw.b['7'][0]++, superClass) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_LhocFo5vI7yXpU2WOWSMRw.s['21']++;if (superClass) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['8'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['22']++;Object.setPrototypeOf ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.b['8'][1]++;
	   }
	}__cov_LhocFo5vI7yXpU2WOWSMRw.s['23']++;var SORT_ERROR = 'Filter options for column {0} cannot be sorted in ' + '{1} manner.';__cov_LhocFo5vI7yXpU2WOWSMRw.s['24']++;var Dropdown = exports.Dropdown = function (_Feature) {
	   __cov_LhocFo5vI7yXpU2WOWSMRw.f['4']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['25']++;_inherits(Dropdown, _Feature);function Dropdown(tf) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['5']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['27']++;_classCallCheck(this, Dropdown);__cov_LhocFo5vI7yXpU2WOWSMRw.s['28']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'dropdown'));__cov_LhocFo5vI7yXpU2WOWSMRw.s['29']++;var f = _this.config;__cov_LhocFo5vI7yXpU2WOWSMRw.s['30']++;_this.enableSlcResetFilter = f.enable_slc_reset_filter === false ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['10'][0]++, false) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['10'][1]++, true);__cov_LhocFo5vI7yXpU2WOWSMRw.s['31']++;_this.nonEmptyText = (__cov_LhocFo5vI7yXpU2WOWSMRw.b['11'][0]++, f.non_empty_text) || (__cov_LhocFo5vI7yXpU2WOWSMRw.b['11'][1]++, '(Non empty)');__cov_LhocFo5vI7yXpU2WOWSMRw.s['32']++;_this.multipleSlcTooltip = (__cov_LhocFo5vI7yXpU2WOWSMRw.b['12'][0]++, f.multiple_slc_tooltip) || (__cov_LhocFo5vI7yXpU2WOWSMRw.b['12'][1]++, 'Use Ctrl/Cmd key for multiple selections');__cov_LhocFo5vI7yXpU2WOWSMRw.s['33']++;_this.isCustom = null;__cov_LhocFo5vI7yXpU2WOWSMRw.s['34']++;_this.opts = null;__cov_LhocFo5vI7yXpU2WOWSMRw.s['35']++;_this.optsTxt = null;__cov_LhocFo5vI7yXpU2WOWSMRw.s['36']++;return _this;
	   }__cov_LhocFo5vI7yXpU2WOWSMRw.s['37']++;Dropdown.prototype.onSlcFocus = function onSlcFocus(e) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['6']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['38']++;var elm = (0, _event.targetEvt)(e);__cov_LhocFo5vI7yXpU2WOWSMRw.s['39']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['40']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['14'][0]++, tf.loadFltOnDemand) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['14'][1]++, elm.getAttribute('filled') === '0')) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['13'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['41']++;var ct = elm.getAttribute('ct');__cov_LhocFo5vI7yXpU2WOWSMRw.s['42']++;this.build(ct);
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['13'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['43']++;this.emitter.emit('filter-focus', tf, elm);
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['44']++;Dropdown.prototype.onSlcChange = function onSlcChange() {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['7']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['45']++;if (this.tf.onSlcChange) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['15'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['46']++;this.tf.filter();
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['15'][1]++;
	      }
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['47']++;Dropdown.prototype.refreshAll = function refreshAll() {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['8']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['48']++;var _this2 = this;__cov_LhocFo5vI7yXpU2WOWSMRw.s['49']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['50']++;var selectFlts = tf.getFiltersByType(_const.SELECT, true);__cov_LhocFo5vI7yXpU2WOWSMRw.s['51']++;var multipleFlts = tf.getFiltersByType(_const.MULTIPLE, true);__cov_LhocFo5vI7yXpU2WOWSMRw.s['52']++;var flts = selectFlts.concat(multipleFlts);__cov_LhocFo5vI7yXpU2WOWSMRw.s['53']++;flts.forEach(function (colIdx) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['9']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['54']++;var values = _this2.getValues(colIdx);__cov_LhocFo5vI7yXpU2WOWSMRw.s['55']++;_this2.build(colIdx, tf.linkedFilters);__cov_LhocFo5vI7yXpU2WOWSMRw.s['56']++;_this2.selectOptions(colIdx, values);
	      });
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['57']++;Dropdown.prototype.init = function init(colIndex, isExternal, container) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['10']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['58']++;var _this3 = this;__cov_LhocFo5vI7yXpU2WOWSMRw.s['59']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['60']++;var col = tf.getFilterType(colIndex);__cov_LhocFo5vI7yXpU2WOWSMRw.s['61']++;var externalFltTgtId = isExternal ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['16'][0]++, tf.externalFltTgtIds[colIndex]) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['16'][1]++, null);__cov_LhocFo5vI7yXpU2WOWSMRw.s['62']++;var slc = (0, _dom.createElm)(_const.SELECT, ['id', tf.buildFilterId(colIndex)], ['ct', colIndex], ['filled', '0']);__cov_LhocFo5vI7yXpU2WOWSMRw.s['63']++;if (col === _const.MULTIPLE) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['17'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['64']++;slc.multiple = _const.MULTIPLE;__cov_LhocFo5vI7yXpU2WOWSMRw.s['65']++;slc.title = this.multipleSlcTooltip;
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['17'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['66']++;slc.className = col.toLowerCase() === _const.SELECT ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['18'][0]++, tf.fltCssClass) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['18'][1]++, tf.fltMultiCssClass);__cov_LhocFo5vI7yXpU2WOWSMRw.s['67']++;if (externalFltTgtId) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['19'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['68']++;(0, _dom.elm)(externalFltTgtId).appendChild(slc);
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['19'][1]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['69']++;container.appendChild(slc);
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['70']++;tf.fltIds.push(slc.id);__cov_LhocFo5vI7yXpU2WOWSMRw.s['71']++;if (!tf.loadFltOnDemand) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['20'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['72']++;this.build(colIndex);
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['20'][1]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['73']++;var opt0 = (0, _dom.createOpt)(tf.getClearFilterText(colIndex), '');__cov_LhocFo5vI7yXpU2WOWSMRw.s['74']++;slc.appendChild(opt0);
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['75']++;(0, _event.addEvt)(slc, 'change', function () {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['11']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['76']++;return _this3.onSlcChange();
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['77']++;(0, _event.addEvt)(slc, 'focus', function (e) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['12']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['78']++;return _this3.onSlcFocus(e);
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['79']++;this.emitter.on(['build-select-filter'], function (tf, colIndex, isLinked, isExternal) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['13']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['80']++;return _this3.build(colIndex, isLinked, isExternal);
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['81']++;this.emitter.on(['select-options'], function (tf, colIndex, values) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['14']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['82']++;return _this3.selectOptions(colIndex, values);
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['83']++;this.emitter.on(['rows-changed'], function () {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['15']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['84']++;return _this3.refreshAll();
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['85']++;this.initialized = true;
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['86']++;Dropdown.prototype.build = function build(colIndex) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['16']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['87']++;var isLinked = (__cov_LhocFo5vI7yXpU2WOWSMRw.b['22'][0]++, arguments.length > 1) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['22'][1]++, arguments[1] !== undefined) ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['21'][0]++, arguments[1]) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['21'][1]++, false);__cov_LhocFo5vI7yXpU2WOWSMRw.s['88']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['89']++;colIndex = parseInt(colIndex, 10);__cov_LhocFo5vI7yXpU2WOWSMRw.s['90']++;this.emitter.emit('before-populating-filter', tf, colIndex);__cov_LhocFo5vI7yXpU2WOWSMRw.s['91']++;this.opts = [];__cov_LhocFo5vI7yXpU2WOWSMRw.s['92']++;this.optsTxt = [];__cov_LhocFo5vI7yXpU2WOWSMRw.s['93']++;var slcId = tf.fltIds[colIndex];__cov_LhocFo5vI7yXpU2WOWSMRw.s['94']++;var slc = (0, _dom.elm)(slcId);__cov_LhocFo5vI7yXpU2WOWSMRw.s['95']++;var rows = tf.tbl.rows;__cov_LhocFo5vI7yXpU2WOWSMRw.s['96']++;var nbRows = tf.getRowsNb(true);__cov_LhocFo5vI7yXpU2WOWSMRw.s['97']++;this.isCustom = tf.isCustomOptions(colIndex);__cov_LhocFo5vI7yXpU2WOWSMRw.s['98']++;var activeIdx = void 0;__cov_LhocFo5vI7yXpU2WOWSMRw.s['99']++;var activeFilterId = tf.getActiveFilterId();__cov_LhocFo5vI7yXpU2WOWSMRw.s['100']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['24'][0]++, isLinked) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['24'][1]++, activeFilterId)) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['23'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['101']++;activeIdx = tf.getColumnIndexFromFilterId(activeFilterId);
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['23'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['102']++;var excludedOpts = null,
	          filteredDataCol = null;__cov_LhocFo5vI7yXpU2WOWSMRw.s['103']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['26'][0]++, isLinked) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['26'][1]++, tf.disableExcludedOptions)) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['25'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['104']++;excludedOpts = [];__cov_LhocFo5vI7yXpU2WOWSMRw.s['105']++;filteredDataCol = [];
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['25'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['106']++;for (var k = tf.refRow; k < nbRows; k++) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.s['107']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['28'][0]++, tf.hasVisibleRows) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['28'][1]++, tf.visibleRows.indexOf(k) !== -1)) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['27'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['108']++;continue;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['27'][1]++;
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['109']++;var cell = rows[k].cells,
	             nchilds = cell.length;__cov_LhocFo5vI7yXpU2WOWSMRw.s['110']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['30'][0]++, nchilds !== tf.nbCells) || (__cov_LhocFo5vI7yXpU2WOWSMRw.b['30'][1]++, this.isCustom)) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['29'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['111']++;continue;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['29'][1]++;
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['112']++;for (var j = 0; j < nchilds; j++) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.s['113']++;if (colIndex !== j) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['31'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['114']++;continue;
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['31'][1]++;
	            }__cov_LhocFo5vI7yXpU2WOWSMRw.s['115']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][0]++, isLinked) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][1]++, !tf.disableExcludedOptions) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][2]++, !tf.paging) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][3]++, !tf.isRowDisplayed(k)) || (__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][4]++, tf.paging) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][5]++, activeIdx) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['33'][6]++, !tf.isRowValid(k))) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['32'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['116']++;continue;
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['32'][1]++;
	            }__cov_LhocFo5vI7yXpU2WOWSMRw.s['117']++;var cellValue = tf.getCellValue(cell[j]),
	                cellString = (0, _string.matchCase)(cellValue, tf.caseSensitive);__cov_LhocFo5vI7yXpU2WOWSMRw.s['118']++;if (!(0, _array.has)(this.opts, cellString, tf.caseSensitive)) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['34'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['119']++;this.opts.push(cellValue);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['34'][1]++;
	            }__cov_LhocFo5vI7yXpU2WOWSMRw.s['120']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['36'][0]++, isLinked) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['36'][1]++, tf.disableExcludedOptions)) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['35'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['121']++;var filteredCol = filteredDataCol[j];__cov_LhocFo5vI7yXpU2WOWSMRw.s['122']++;if (!filteredCol) {
	                  __cov_LhocFo5vI7yXpU2WOWSMRw.b['37'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['123']++;filteredCol = tf.getFilteredDataCol(j);
	               } else {
	                  __cov_LhocFo5vI7yXpU2WOWSMRw.b['37'][1]++;
	               }__cov_LhocFo5vI7yXpU2WOWSMRw.s['124']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['39'][0]++, !(0, _array.has)(filteredCol, cellString, tf.caseSensitive)) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['39'][1]++, !(0, _array.has)(excludedOpts, cellString, tf.caseSensitive))) {
	                  __cov_LhocFo5vI7yXpU2WOWSMRw.b['38'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['125']++;excludedOpts.push(cellValue);
	               } else {
	                  __cov_LhocFo5vI7yXpU2WOWSMRw.b['38'][1]++;
	               }
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['35'][1]++;
	            }
	         }
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['126']++;if (this.isCustom) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['40'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['127']++;var customValues = tf.getCustomOptions(colIndex);__cov_LhocFo5vI7yXpU2WOWSMRw.s['128']++;this.opts = customValues[0];__cov_LhocFo5vI7yXpU2WOWSMRw.s['129']++;this.optsTxt = customValues[1];
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['40'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['130']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['42'][0]++, tf.sortSlc) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['42'][1]++, !this.isCustom)) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['41'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['131']++;if (!tf.caseSensitive) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['43'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['132']++;this.opts.sort(_sort.ignoreCase);__cov_LhocFo5vI7yXpU2WOWSMRw.s['133']++;if (excludedOpts) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['44'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['134']++;excludedOpts.sort(_sort.ignoreCase);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['44'][1]++;
	            }
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['43'][1]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['135']++;this.opts.sort();__cov_LhocFo5vI7yXpU2WOWSMRw.s['136']++;if (excludedOpts) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['45'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['137']++;excludedOpts.sort();
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['45'][1]++;
	            }
	         }
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['41'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['138']++;if (tf.sortNumAsc.indexOf(colIndex) !== -1) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['46'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['139']++;try {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.s['140']++;this.opts.sort(_sort.numSortAsc);__cov_LhocFo5vI7yXpU2WOWSMRw.s['141']++;if (excludedOpts) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['47'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['142']++;excludedOpts.sort(_sort.numSortAsc);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['47'][1]++;
	            }__cov_LhocFo5vI7yXpU2WOWSMRw.s['143']++;if (this.isCustom) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['48'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['144']++;this.optsTxt.sort(_sort.numSortAsc);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['48'][1]++;
	            }
	         } catch (e) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.s['145']++;throw new Error(SORT_ERROR.replace('{0}', colIndex).replace('{1}', 'ascending'));
	         }
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['46'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['146']++;if (tf.sortNumDesc.indexOf(colIndex) !== -1) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['49'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['147']++;try {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.s['148']++;this.opts.sort(_sort.numSortDesc);__cov_LhocFo5vI7yXpU2WOWSMRw.s['149']++;if (excludedOpts) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['50'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['150']++;excludedOpts.sort(_sort.numSortDesc);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['50'][1]++;
	            }__cov_LhocFo5vI7yXpU2WOWSMRw.s['151']++;if (this.isCustom) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['51'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['152']++;this.optsTxt.sort(_sort.numSortDesc);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['51'][1]++;
	            }
	         } catch (e) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.s['153']++;throw new Error(SORT_ERROR.replace('{0}', colIndex).replace('{1}', 'ascending'));
	         }
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['49'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['154']++;this.addOptions(colIndex, slc, isLinked, excludedOpts);__cov_LhocFo5vI7yXpU2WOWSMRw.s['155']++;this.emitter.emit('after-populating-filter', tf, colIndex, slc);
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['156']++;Dropdown.prototype.addOptions = function addOptions(colIndex, slc, isLinked, excludedOpts) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['17']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['157']++;var tf = this.tf,
	          slcValue = slc.value;__cov_LhocFo5vI7yXpU2WOWSMRw.s['158']++;slc.innerHTML = '';__cov_LhocFo5vI7yXpU2WOWSMRw.s['159']++;slc = this.addFirstOption(slc);__cov_LhocFo5vI7yXpU2WOWSMRw.s['160']++;for (var y = 0; y < this.opts.length; y++) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.s['161']++;if (this.opts[y] === '') {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['52'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['162']++;continue;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['52'][1]++;
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['163']++;var val = this.opts[y];__cov_LhocFo5vI7yXpU2WOWSMRw.s['164']++;var lbl = this.isCustom ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['53'][0]++, this.optsTxt[y]) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['53'][1]++, val);__cov_LhocFo5vI7yXpU2WOWSMRw.s['165']++;var isDisabled = false;__cov_LhocFo5vI7yXpU2WOWSMRw.s['166']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['55'][0]++, isLinked) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['55'][1]++, tf.disableExcludedOptions) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['55'][2]++, (0, _array.has)(excludedOpts, (0, _string.matchCase)(val, tf.caseSensitive), tf.caseSensitive))) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['54'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['167']++;isDisabled = true;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['54'][1]++;
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['168']++;var opt = void 0;__cov_LhocFo5vI7yXpU2WOWSMRw.s['169']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['57'][0]++, tf.loadFltOnDemand) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['57'][1]++, slcValue === this.opts[y]) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['57'][2]++, tf.getFilterType(colIndex) === _const.SELECT)) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['56'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['170']++;opt = (0, _dom.createOpt)(lbl, val, true);
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['56'][1]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['171']++;opt = (0, _dom.createOpt)(lbl, val, false);
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['172']++;if (isDisabled) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['58'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['173']++;opt.disabled = true;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['58'][1]++;
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['174']++;slc.appendChild(opt);
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['175']++;slc.setAttribute('filled', '1');
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['176']++;Dropdown.prototype.addFirstOption = function addFirstOption(slc) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['18']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['177']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['178']++;var colIdx = tf.getColumnIndexFromFilterId(slc.id);__cov_LhocFo5vI7yXpU2WOWSMRw.s['179']++;var opt0 = (0, _dom.createOpt)(!this.enableSlcResetFilter ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['59'][0]++, '') : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['59'][1]++, tf.getClearFilterText(colIdx)), '');__cov_LhocFo5vI7yXpU2WOWSMRw.s['180']++;if (!this.enableSlcResetFilter) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['60'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['181']++;opt0.style.display = _const.NONE;
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['60'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['182']++;slc.appendChild(opt0);__cov_LhocFo5vI7yXpU2WOWSMRw.s['183']++;if (tf.enableEmptyOption) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['61'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['184']++;var opt1 = (0, _dom.createOpt)(tf.emptyText, tf.emOperator);__cov_LhocFo5vI7yXpU2WOWSMRw.s['185']++;slc.appendChild(opt1);
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['61'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['186']++;if (tf.enableNonEmptyOption) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['62'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['187']++;var opt2 = (0, _dom.createOpt)(tf.nonEmptyText, tf.nmOperator);__cov_LhocFo5vI7yXpU2WOWSMRw.s['188']++;slc.appendChild(opt2);
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['62'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['189']++;return slc;
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['190']++;Dropdown.prototype.selectOptions = function selectOptions(colIndex) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['19']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['191']++;var values = (__cov_LhocFo5vI7yXpU2WOWSMRw.b['64'][0]++, arguments.length > 1) && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['64'][1]++, arguments[1] !== undefined) ? (__cov_LhocFo5vI7yXpU2WOWSMRw.b['63'][0]++, arguments[1]) : (__cov_LhocFo5vI7yXpU2WOWSMRw.b['63'][1]++, []);__cov_LhocFo5vI7yXpU2WOWSMRw.s['192']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['193']++;if (values.length === 0) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['65'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['194']++;return;
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['65'][1]++;
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['195']++;var slc = tf.getFilterElement(colIndex);__cov_LhocFo5vI7yXpU2WOWSMRw.s['196']++;[].forEach.call(slc.options, function (option) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['20']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['197']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['67'][0]++, values[0] === '') || (__cov_LhocFo5vI7yXpU2WOWSMRw.b['67'][1]++, option.value === '')) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['66'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['198']++;option.selected = false;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['66'][1]++;
	         }__cov_LhocFo5vI7yXpU2WOWSMRw.s['199']++;if ((__cov_LhocFo5vI7yXpU2WOWSMRw.b['69'][0]++, option.value !== '') && (__cov_LhocFo5vI7yXpU2WOWSMRw.b['69'][1]++, (0, _array.has)(values, option.value, true))) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['68'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['200']++;option.selected = true;
	         } else {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.b['68'][1]++;
	         }
	      });
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['201']++;Dropdown.prototype.getValues = function getValues(colIndex) {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['21']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['202']++;var tf = this.tf;__cov_LhocFo5vI7yXpU2WOWSMRw.s['203']++;var slc = tf.getFilterElement(colIndex);__cov_LhocFo5vI7yXpU2WOWSMRw.s['204']++;var values = [];__cov_LhocFo5vI7yXpU2WOWSMRw.s['205']++;if (slc.selectedOptions) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['70'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['206']++;[].forEach.call(slc.selectedOptions, function (option) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.f['22']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['207']++;return values.push(option.value);
	         });
	      } else {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.b['70'][1]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['208']++;[].forEach.call(slc.options, function (option) {
	            __cov_LhocFo5vI7yXpU2WOWSMRw.f['23']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['209']++;if (option.selected) {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['71'][0]++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['210']++;values.push(option.value);
	            } else {
	               __cov_LhocFo5vI7yXpU2WOWSMRw.b['71'][1]++;
	            }
	         });
	      }__cov_LhocFo5vI7yXpU2WOWSMRw.s['211']++;return values;
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['212']++;Dropdown.prototype.destroy = function destroy() {
	      __cov_LhocFo5vI7yXpU2WOWSMRw.f['24']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['213']++;var _this4 = this;__cov_LhocFo5vI7yXpU2WOWSMRw.s['214']++;this.emitter.off(['build-select-filter'], function (colIndex, isLinked, isExternal) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['25']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['215']++;return _this4.build(colIndex, isLinked, isExternal);
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['216']++;this.emitter.off(['select-options'], function (tf, colIndex, values) {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['26']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['217']++;return _this4.selectOptions(colIndex, values);
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['218']++;this.emitter.off(['rows-changed'], function () {
	         __cov_LhocFo5vI7yXpU2WOWSMRw.f['27']++;__cov_LhocFo5vI7yXpU2WOWSMRw.s['219']++;return _this4.refreshAll();
	      });__cov_LhocFo5vI7yXpU2WOWSMRw.s['220']++;this.initialized = false;
	   };__cov_LhocFo5vI7yXpU2WOWSMRw.s['221']++;return Dropdown;
	}(_feature.Feature);

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_PXVOUB0TkK_uwKZs0FHNMw = Function('return this')();
	if (!__cov_PXVOUB0TkK_uwKZs0FHNMw.__coverage__) {
	   __cov_PXVOUB0TkK_uwKZs0FHNMw.__coverage__ = {};
	}
	__cov_PXVOUB0TkK_uwKZs0FHNMw = __cov_PXVOUB0TkK_uwKZs0FHNMw.__coverage__;
	if (!__cov_PXVOUB0TkK_uwKZs0FHNMw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\array.js']) {
	   __cov_PXVOUB0TkK_uwKZs0FHNMw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\array.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\array.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 }, "b": { "1": [0, 0] }, "f": { "1": 0 }, "fnMap": { "1": { "line": 17, "name": "has", "loc": { "start": { "line": 14, "column": 19 }, "end": { "line": 14, "column": 48 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "end": { "line": 15, "column": 4 }, "start": { "line": 15, "column": 4 } }, "6": { "end": { "line": 20, "column": 5 }, "start": { "line": 16, "column": 4 } }, "7": { "end": { "line": 19, "column": 9 }, "start": { "line": 17, "column": 8 } }, "8": { "end": { "line": 18, "column": 12 }, "start": { "line": 18, "column": 12 } }, "9": { "end": { "line": 21, "column": 4 }, "start": { "line": 21, "column": 4 } } }, "branchMap": { "1": { "line": 20, "type": "if", "locations": [{ "end": { "line": 17, "column": 8 }, "start": { "line": 17, "column": 8 } }, { "end": { "line": 17, "column": 8 }, "start": { "line": 17, "column": 8 } }] } }, "code": ["/**", " * Array utilities", " */", "", "import {matchCase} from './string';", "", "/**", " * Checks if given item can be found in the passed collection", " * @param  {Array} arr  collection", " * @param  {Any} val  item to search", " * @param  {Boolean} caseSensitive respects case if true", " * @return {Boolean}", " */", "export const has = (arr, val, caseSensitive) => {", "    let sCase = Boolean(caseSensitive);", "    for (var i = 0, l = arr.length; i < l; i++) {", "        if (matchCase(arr[i].toString(), sCase) === val) {", "            return true;", "        }", "    }", "    return false;", "}", ""] };
	}
	__cov_PXVOUB0TkK_uwKZs0FHNMw = __cov_PXVOUB0TkK_uwKZs0FHNMw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\array.js'];
	__cov_PXVOUB0TkK_uwKZs0FHNMw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_PXVOUB0TkK_uwKZs0FHNMw.s['2']++;exports.has = undefined;__cov_PXVOUB0TkK_uwKZs0FHNMw.s['3']++;var _string = __webpack_require__(5);__cov_PXVOUB0TkK_uwKZs0FHNMw.s['4']++;var has = exports.has = function has(arr, val, caseSensitive) {
	   __cov_PXVOUB0TkK_uwKZs0FHNMw.f['1']++;__cov_PXVOUB0TkK_uwKZs0FHNMw.s['5']++;var sCase = Boolean(caseSensitive);__cov_PXVOUB0TkK_uwKZs0FHNMw.s['6']++;for (var i = 0, l = arr.length; i < l; i++) {
	      __cov_PXVOUB0TkK_uwKZs0FHNMw.s['7']++;if ((0, _string.matchCase)(arr[i].toString(), sCase) === val) {
	         __cov_PXVOUB0TkK_uwKZs0FHNMw.b['1'][0]++;__cov_PXVOUB0TkK_uwKZs0FHNMw.s['8']++;return true;
	      } else {
	         __cov_PXVOUB0TkK_uwKZs0FHNMw.b['1'][1]++;
	      }
	   }__cov_PXVOUB0TkK_uwKZs0FHNMw.s['9']++;return false;
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	"use strict";
	
	var __cov_CREybgpbOcqJNLA1JJBXAA = Function('return this')();
	if (!__cov_CREybgpbOcqJNLA1JJBXAA.__coverage__) {
	   __cov_CREybgpbOcqJNLA1JJBXAA.__coverage__ = {};
	}
	__cov_CREybgpbOcqJNLA1JJBXAA = __cov_CREybgpbOcqJNLA1JJBXAA.__coverage__;
	if (!__cov_CREybgpbOcqJNLA1JJBXAA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\sort.js']) {
	   __cov_CREybgpbOcqJNLA1JJBXAA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\sort.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\sort.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0 }, "b": { "1": [0, 0], "2": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0 }, "fnMap": { "1": { "line": 18, "name": "ignoreCase", "loc": { "start": { "line": 13, "column": 26 }, "end": { "line": 13, "column": 36 } } }, "2": { "line": 30, "name": "numSortAsc", "loc": { "start": { "line": 25, "column": 26 }, "end": { "line": 25, "column": 26 } } }, "3": { "line": 40, "name": "numSortDesc", "loc": { "start": { "line": 33, "column": 27 }, "end": { "line": 33, "column": 27 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "end": { "line": 13, "column": 7 }, "start": { "line": 13, "column": 7 } }, "3": { "end": { "line": 14, "column": 4 }, "start": { "line": 14, "column": 4 } }, "4": { "end": { "line": 15, "column": 4 }, "start": { "line": 15, "column": 4 } }, "5": { "end": { "line": 16, "column": 4 }, "start": { "line": 16, "column": 4 } }, "6": { "end": { "line": 25, "column": 7 }, "start": { "line": 25, "column": 7 } }, "7": { "end": { "line": 25, "column": 26 }, "start": { "line": 25, "column": 26 } }, "8": { "end": { "line": 33, "column": 7 }, "start": { "line": 33, "column": 7 } }, "9": { "end": { "line": 33, "column": 27 }, "start": { "line": 33, "column": 27 } } }, "branchMap": { "1": { "line": 21, "type": "cond-expr", "locations": [{ "end": { "line": 16, "column": 12 }, "start": { "line": 16, "column": 22 } }, { "end": { "line": 16, "column": 4 }, "start": { "line": 16, "column": 29 } }] }, "2": { "line": 21, "type": "cond-expr", "locations": [{ "end": { "line": 16, "column": 28 }, "start": { "line": 16, "column": 38 } }, { "end": { "line": 16, "column": 4 }, "start": { "line": 16, "column": 42 } }] } }, "code": ["/**", " * Sorting utilities", " */", "", "/**", " * Case insensitive compare function for passed strings", " * @param  {String} First string", " * @param  {String} Second string", " * @return {Number} -1 if first string lower than second one", " *                  0 if first string same order as second one", " *                  1 if first string greater than second one", " */", "export const ignoreCase = (a, b) => {", "    let x = a.toLowerCase();", "    let y = b.toLowerCase();", "    return ((x < y) ? -1 : ((x > y) ? 1 : 0));", "}", "", "/**", " * Sorts passed numbers in a ascending manner", " * @param {Number} First number", " * @param {Number} Second number", " * @param {Number} Negative, zero or positive number", " */", "export const numSortAsc = (a, b) => (a - b);", "", "/**", " * Sorts passed numbers in a descending manner", " * @param {Number} First number", " * @param {Number} Second number", " * @param {Number} Negative, zero or positive number", " */", "export const numSortDesc = (a, b) => (b - a);", ""] };
	}
	__cov_CREybgpbOcqJNLA1JJBXAA = __cov_CREybgpbOcqJNLA1JJBXAA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\sort.js'];
	__cov_CREybgpbOcqJNLA1JJBXAA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_CREybgpbOcqJNLA1JJBXAA.s['2']++;var ignoreCase = exports.ignoreCase = function ignoreCase(a, b) {
	   __cov_CREybgpbOcqJNLA1JJBXAA.f['1']++;__cov_CREybgpbOcqJNLA1JJBXAA.s['3']++;var x = a.toLowerCase();__cov_CREybgpbOcqJNLA1JJBXAA.s['4']++;var y = b.toLowerCase();__cov_CREybgpbOcqJNLA1JJBXAA.s['5']++;return x < y ? (__cov_CREybgpbOcqJNLA1JJBXAA.b['1'][0]++, -1) : (__cov_CREybgpbOcqJNLA1JJBXAA.b['1'][1]++, x > y ? (__cov_CREybgpbOcqJNLA1JJBXAA.b['2'][0]++, 1) : (__cov_CREybgpbOcqJNLA1JJBXAA.b['2'][1]++, 0));
	};__cov_CREybgpbOcqJNLA1JJBXAA.s['6']++;var numSortAsc = exports.numSortAsc = function numSortAsc(a, b) {
	   __cov_CREybgpbOcqJNLA1JJBXAA.f['2']++;__cov_CREybgpbOcqJNLA1JJBXAA.s['7']++;return a - b;
	};__cov_CREybgpbOcqJNLA1JJBXAA.s['8']++;var numSortDesc = exports.numSortDesc = function numSortDesc(a, b) {
	   __cov_CREybgpbOcqJNLA1JJBXAA.f['3']++;__cov_CREybgpbOcqJNLA1JJBXAA.s['9']++;return b - a;
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_NJw2dcHQDxfEH0J9CTumOQ = Function('return this')();
	if (!__cov_NJw2dcHQDxfEH0J9CTumOQ.__coverage__) {
	   __cov_NJw2dcHQDxfEH0J9CTumOQ.__coverage__ = {};
	}
	__cov_NJw2dcHQDxfEH0J9CTumOQ = __cov_NJw2dcHQDxfEH0J9CTumOQ.__coverage__;
	if (!__cov_NJw2dcHQDxfEH0J9CTumOQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\checkList.js']) {
	   __cov_NJw2dcHQDxfEH0J9CTumOQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\checkList.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\checkList.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 1, "12": 0, "13": 0, "14": 1, "15": 0, "16": 0, "17": 0, "18": 1, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 1, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "212": 0, "213": 0, "214": 0, "215": 0, "216": 0, "217": 0, "218": 0, "219": 0, "220": 0, "221": 0, "222": 0, "223": 0, "224": 0, "225": 0, "226": 0, "227": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "234": 0, "235": 0, "236": 0, "237": 0, "238": 0, "239": 0, "240": 0, "241": 0, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "250": 0, "251": 0, "252": 0, "253": 0, "254": 0, "255": 0, "256": 0, "257": 0, "258": 0, "259": 0, "260": 0, "261": 0, "262": 0, "263": 0, "264": 0, "265": 0, "266": 0, "267": 0, "268": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "277": 0, "278": 0, "279": 0, "280": 0, "281": 0, "282": 0, "283": 0, "284": 0, "285": 0, "286": 0, "287": 0, "288": 0, "289": 0, "290": 0, "291": 0, "292": 0, "293": 0, "294": 0, "295": 0, "296": 0, "297": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0, 0, 0, 0, 0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0], "45": [0, 0], "46": [0, 0], "47": [0, 0], "48": [0, 0], "49": [0, 0], "50": [0, 0], "51": [0, 0], "52": [0, 0], "53": [0, 0], "54": [0, 0], "55": [0, 0], "56": [0, 0, 0], "57": [0, 0], "58": [0, 0], "59": [0, 0], "60": [0, 0], "61": [0, 0], "62": [0, 0], "63": [0, 0], "64": [0, 0], "65": [0, 0], "66": [0, 0], "67": [0, 0], "68": [0, 0], "69": [0, 0], "70": [0, 0], "71": [0, 0], "72": [0, 0], "73": [0, 0], "74": [0, 0], "75": [0, 0, 0], "76": [0, 0], "77": [0, 0], "78": [0, 0], "79": [0, 0], "80": [0, 0], "81": [0, 0], "82": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0 }, "fnMap": { "1": { "line": 24, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 26, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 28, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 36, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 43, "name": "CheckList", "loc": { "start": { "line": 25, "column": 4 }, "end": { "line": 25, "column": 20 } } }, "6": { "line": 143, "name": "optionClick", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 159, "name": "onCheckListClick", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 167, "name": "(anonymous_8)", "loc": { "start": { "line": 144, "column": 36 }, "end": { "line": 144, "column": 36 } } }, "9": { "line": 178, "name": "refreshAll", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 183, "name": "(anonymous_10)", "loc": { "start": { "line": 154, "column": 25 }, "end": { "line": 154, "column": 37 } } }, "11": { "line": 198, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 220, "name": "(anonymous_12)", "loc": { "start": { "line": 190, "column": 37 }, "end": { "line": 190, "column": 37 } } }, "13": { "line": 226, "name": "(anonymous_13)", "loc": { "start": { "line": 196, "column": 12 }, "end": { "line": 196, "column": 12 } } }, "14": { "line": 230, "name": "(anonymous_14)", "loc": { "start": { "line": 201, "column": 12 }, "end": { "line": 201, "column": 12 } } }, "15": { "line": 234, "name": "(anonymous_15)", "loc": { "start": { "line": 204, "column": 42 }, "end": { "line": 204, "column": 42 } } }, "16": { "line": 249, "name": "build", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "17": { "line": 393, "name": "addChecks", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "18": { "line": 411, "name": "(anonymous_18)", "loc": { "start": { "line": 381, "column": 42 }, "end": { "line": 381, "column": 42 } } }, "19": { "line": 432, "name": "addTChecks", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "20": { "line": 442, "name": "(anonymous_20)", "loc": { "start": { "line": 407, "column": 35 }, "end": { "line": 407, "column": 35 } } }, "21": { "line": 454, "name": "(anonymous_21)", "loc": { "start": { "line": 418, "column": 39 }, "end": { "line": 418, "column": 39 } } }, "22": { "line": 464, "name": "(anonymous_22)", "loc": { "start": { "line": 427, "column": 39 }, "end": { "line": 427, "column": 39 } } }, "23": { "line": 479, "name": "setCheckListValues", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "24": { "line": 555, "name": "selectOptions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "25": { "line": 598, "name": "getValues", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "26": { "line": 617, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "27": { "line": 620, "name": "(anonymous_27)", "loc": { "start": { "line": 580, "column": 12 }, "end": { "line": 580, "column": 12 } } }, "28": { "line": 623, "name": "(anonymous_28)", "loc": { "start": { "line": 584, "column": 12 }, "end": { "line": 584, "column": 12 } } }, "29": { "line": 626, "name": "(anonymous_29)", "loc": { "start": { "line": 586, "column": 43 }, "end": { "line": 586, "column": 43 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "6": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "7": { "end": { "line": 8, "column": 0 }, "start": { "line": 8, "column": 0 } }, "8": { "end": { "line": 9, "column": 0 }, "start": { "line": 9, "column": 0 } }, "9": { "end": { "line": 10, "column": 0 }, "start": { "line": 10, "column": 0 } }, "10": { "end": { "line": 11, "column": 0 }, "start": { "line": 11, "column": 0 } }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "end": { "line": 13, "column": 0 }, "start": { "line": 13, "column": 0 } }, "25": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "26": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "27": { "end": { "line": 117, "column": 5 }, "start": { "line": 25, "column": 4 } }, "28": { "end": { "line": 25, "column": 20 }, "start": { "line": 25, "column": 20 } }, "29": { "end": { "line": 25, "column": 20 }, "start": { "line": 25, "column": 20 } }, "30": { "end": { "line": 28, "column": 8 }, "start": { "line": 28, "column": 8 } }, "31": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "32": { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 8 } }, "33": { "end": { "line": 46, "column": 8 }, "start": { "line": 46, "column": 8 } }, "34": { "end": { "line": 52, "column": 8 }, "start": { "line": 52, "column": 8 } }, "35": { "end": { "line": 58, "column": 8 }, "start": { "line": 58, "column": 8 } }, "36": { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 8 } }, "37": { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 8 } }, "38": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "39": { "end": { "line": 88, "column": 8 }, "start": { "line": 88, "column": 8 } }, "40": { "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }, "41": { "end": { "line": 102, "column": 8 }, "start": { "line": 102, "column": 8 } }, "42": { "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }, "43": { "end": { "line": 116, "column": 8 }, "start": { "line": 116, "column": 8 } }, "44": { "end": { "line": 25, "column": 20 }, "start": { "line": 25, "column": 20 } }, "45": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "46": { "end": { "line": 125, "column": 8 }, "start": { "line": 125, "column": 8 } }, "47": { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 8 } }, "48": { "end": { "line": 128, "column": 8 }, "start": { "line": 128, "column": 8 } }, "49": { "end": { "line": 129, "column": 8 }, "start": { "line": 129, "column": 8 } }, "50": { "end": { "line": 130, "column": 8 }, "start": { "line": 130, "column": 8 } }, "51": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "52": { "end": { "line": 138, "column": 26 }, "start": { "line": 138, "column": 26 } }, "53": { "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 8 } }, "54": { "end": { "line": 145, "column": 9 }, "start": { "line": 140, "column": 8 } }, "55": { "end": { "line": 141, "column": 12 }, "start": { "line": 141, "column": 12 } }, "56": { "end": { "line": 142, "column": 12 }, "start": { "line": 142, "column": 12 } }, "57": { "end": { "line": 143, "column": 12 }, "start": { "line": 143, "column": 12 } }, "58": { "end": { "line": 144, "column": 12 }, "start": { "line": 144, "column": 12 } }, "59": { "end": { "line": 144, "column": 36 }, "start": { "line": 144, "column": 36 } }, "60": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "61": { "end": { "line": 151, "column": 17 }, "start": { "line": 151, "column": 17 } }, "62": { "end": { "line": 152, "column": 8 }, "start": { "line": 152, "column": 8 } }, "63": { "end": { "line": 153, "column": 8 }, "start": { "line": 153, "column": 8 } }, "64": { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }, "65": { "end": { "line": 155, "column": 12 }, "start": { "line": 155, "column": 12 } }, "66": { "end": { "line": 156, "column": 12 }, "start": { "line": 156, "column": 12 } }, "67": { "end": { "line": 157, "column": 12 }, "start": { "line": 157, "column": 12 } }, "68": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "69": { "end": { "line": 167, "column": 42 }, "start": { "line": 167, "column": 42 } }, "70": { "end": { "line": 168, "column": 8 }, "start": { "line": 168, "column": 8 } }, "71": { "end": { "line": 169, "column": 8 }, "start": { "line": 169, "column": 8 } }, "72": { "end": { "line": 172, "column": 8 }, "start": { "line": 172, "column": 8 } }, "73": { "end": { "line": 175, "column": 8 }, "start": { "line": 175, "column": 8 } }, "74": { "end": { "line": 182, "column": 9 }, "start": { "line": 178, "column": 8 } }, "75": { "end": { "line": 179, "column": 12 }, "start": { "line": 179, "column": 12 } }, "76": { "end": { "line": 181, "column": 12 }, "start": { "line": 181, "column": 12 } }, "77": { "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }, "78": { "end": { "line": 185, "column": 8 }, "start": { "line": 185, "column": 8 } }, "79": { "end": { "line": 192, "column": 9 }, "start": { "line": 187, "column": 8 } }, "80": { "end": { "line": 188, "column": 12 }, "start": { "line": 188, "column": 12 } }, "81": { "end": { "line": 190, "column": 12 }, "start": { "line": 190, "column": 12 } }, "82": { "end": { "line": 190, "column": 37 }, "start": { "line": 190, "column": 37 } }, "83": { "end": { "line": 191, "column": 12 }, "start": { "line": 191, "column": 12 } }, "84": { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 8 } }, "85": { "end": { "line": 196, "column": 12 }, "start": { "line": 196, "column": 12 } }, "86": { "end": { "line": 199, "column": 8 }, "start": { "line": 199, "column": 8 } }, "87": { "end": { "line": 201, "column": 12 }, "start": { "line": 201, "column": 12 } }, "88": { "end": { "line": 204, "column": 8 }, "start": { "line": 204, "column": 8 } }, "89": { "end": { "line": 204, "column": 42 }, "start": { "line": 204, "column": 42 } }, "90": { "end": { "line": 207, "column": 8 }, "start": { "line": 207, "column": 8 } }, "91": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "92": { "end": { "line": 215, "column": 38 }, "start": { "line": 215, "column": 38 } }, "93": { "end": { "line": 216, "column": 8 }, "start": { "line": 216, "column": 8 } }, "94": { "end": { "line": 217, "column": 8 }, "start": { "line": 217, "column": 8 } }, "95": { "end": { "line": 219, "column": 8 }, "start": { "line": 219, "column": 8 } }, "96": { "end": { "line": 221, "column": 8 }, "start": { "line": 221, "column": 8 } }, "97": { "end": { "line": 222, "column": 8 }, "start": { "line": 222, "column": 8 } }, "98": { "end": { "line": 224, "column": 8 }, "start": { "line": 224, "column": 8 } }, "99": { "end": { "line": 225, "column": 8 }, "start": { "line": 225, "column": 8 } }, "100": { "end": { "line": 228, "column": 8 }, "start": { "line": 228, "column": 8 } }, "101": { "end": { "line": 230, "column": 8 }, "start": { "line": 230, "column": 8 } }, "102": { "end": { "line": 231, "column": 8 }, "start": { "line": 231, "column": 8 } }, "103": { "end": { "line": 232, "column": 8 }, "start": { "line": 232, "column": 8 } }, "104": { "end": { "line": 233, "column": 8 }, "start": { "line": 233, "column": 8 } }, "105": { "end": { "line": 235, "column": 8 }, "start": { "line": 235, "column": 8 } }, "106": { "end": { "line": 236, "column": 8 }, "start": { "line": 236, "column": 8 } }, "107": { "end": { "line": 239, "column": 9 }, "start": { "line": 237, "column": 8 } }, "108": { "end": { "line": 238, "column": 12 }, "start": { "line": 238, "column": 12 } }, "109": { "end": { "line": 241, "column": 8 }, "start": { "line": 241, "column": 8 } }, "110": { "end": { "line": 244, "column": 9 }, "start": { "line": 242, "column": 8 } }, "111": { "end": { "line": 243, "column": 12 }, "start": { "line": 243, "column": 12 } }, "112": { "end": { "line": 246, "column": 8 }, "start": { "line": 246, "column": 8 } }, "113": { "end": { "line": 293, "column": 9 }, "start": { "line": 248, "column": 8 } }, "114": { "end": { "line": 253, "column": 13 }, "start": { "line": 251, "column": 12 } }, "115": { "end": { "line": 252, "column": 16 }, "start": { "line": 252, "column": 16 } }, "116": { "end": { "line": 255, "column": 12 }, "start": { "line": 255, "column": 12 } }, "117": { "end": { "line": 256, "column": 12 }, "start": { "line": 256, "column": 12 } }, "118": { "end": { "line": 261, "column": 13 }, "start": { "line": 259, "column": 12 } }, "119": { "end": { "line": 260, "column": 16 }, "start": { "line": 260, "column": 16 } }, "120": { "end": { "line": 292, "column": 13 }, "start": { "line": 264, "column": 12 } }, "121": { "end": { "line": 267, "column": 17 }, "start": { "line": 265, "column": 16 } }, "122": { "end": { "line": 266, "column": 20 }, "start": { "line": 266, "column": 20 } }, "123": { "end": { "line": 272, "column": 17 }, "start": { "line": 268, "column": 16 } }, "124": { "end": { "line": 271, "column": 20 }, "start": { "line": 271, "column": 20 } }, "125": { "end": { "line": 274, "column": 16 }, "start": { "line": 274, "column": 16 } }, "126": { "end": { "line": 276, "column": 16 }, "start": { "line": 276, "column": 16 } }, "127": { "end": { "line": 280, "column": 17 }, "start": { "line": 278, "column": 16 } }, "128": { "end": { "line": 279, "column": 20 }, "start": { "line": 279, "column": 20 } }, "129": { "end": { "line": 281, "column": 16 }, "start": { "line": 281, "column": 16 } }, "130": { "end": { "line": 291, "column": 17 }, "start": { "line": 282, "column": 16 } }, "131": { "end": { "line": 285, "column": 21 }, "start": { "line": 283, "column": 20 } }, "132": { "end": { "line": 284, "column": 24 }, "start": { "line": 284, "column": 24 } }, "133": { "end": { "line": 290, "column": 21 }, "start": { "line": 286, "column": 20 } }, "134": { "end": { "line": 289, "column": 24 }, "start": { "line": 289, "column": 24 } }, "135": { "end": { "line": 300, "column": 9 }, "start": { "line": 296, "column": 8 } }, "136": { "end": { "line": 297, "column": 12 }, "start": { "line": 297, "column": 12 } }, "137": { "end": { "line": 298, "column": 12 }, "start": { "line": 298, "column": 12 } }, "138": { "end": { "line": 299, "column": 12 }, "start": { "line": 299, "column": 12 } }, "139": { "end": { "line": 314, "column": 9 }, "start": { "line": 302, "column": 8 } }, "140": { "end": { "line": 313, "column": 13 }, "start": { "line": 303, "column": 12 } }, "141": { "end": { "line": 304, "column": 16 }, "start": { "line": 304, "column": 16 } }, "142": { "end": { "line": 307, "column": 17 }, "start": { "line": 305, "column": 16 } }, "143": { "end": { "line": 306, "column": 20 }, "start": { "line": 306, "column": 20 } }, "144": { "end": { "line": 309, "column": 16 }, "start": { "line": 309, "column": 16 } }, "145": { "end": { "line": 312, "column": 17 }, "start": { "line": 310, "column": 16 } }, "146": { "end": { "line": 311, "column": 20 }, "start": { "line": 311, "column": 20 } }, "147": { "end": { "line": 329, "column": 9 }, "start": { "line": 316, "column": 8 } }, "148": { "end": { "line": 316, "column": 52 }, "start": { "line": 317, "column": 12 } }, "149": { "end": { "line": 318, "column": 16 }, "start": { "line": 318, "column": 16 } }, "150": { "end": { "line": 321, "column": 17 }, "start": { "line": 319, "column": 16 } }, "151": { "end": { "line": 320, "column": 20 }, "start": { "line": 320, "column": 20 } }, "152": { "end": { "line": 324, "column": 17 }, "start": { "line": 322, "column": 16 } }, "153": { "end": { "line": 323, "column": 20 }, "start": { "line": 323, "column": 20 } }, "154": { "end": { "line": 326, "column": 16 }, "start": { "line": 326, "column": 16 } }, "155": { "end": { "line": 344, "column": 9 }, "start": { "line": 331, "column": 8 } }, "156": { "end": { "line": 331, "column": 53 }, "start": { "line": 332, "column": 12 } }, "157": { "end": { "line": 333, "column": 16 }, "start": { "line": 333, "column": 16 } }, "158": { "end": { "line": 336, "column": 17 }, "start": { "line": 334, "column": 16 } }, "159": { "end": { "line": 335, "column": 20 }, "start": { "line": 335, "column": 20 } }, "160": { "end": { "line": 339, "column": 17 }, "start": { "line": 337, "column": 16 } }, "161": { "end": { "line": 338, "column": 20 }, "start": { "line": 338, "column": 20 } }, "162": { "end": { "line": 341, "column": 16 }, "start": { "line": 341, "column": 16 } }, "163": { "end": { "line": 346, "column": 8 }, "start": { "line": 346, "column": 8 } }, "164": { "end": { "line": 350, "column": 9 }, "start": { "line": 348, "column": 8 } }, "165": { "end": { "line": 349, "column": 12 }, "start": { "line": 349, "column": 12 } }, "166": { "end": { "line": 351, "column": 8 }, "start": { "line": 351, "column": 8 } }, "167": { "end": { "line": 352, "column": 8 }, "start": { "line": 352, "column": 8 } }, "168": { "end": { "line": 354, "column": 8 }, "start": { "line": 354, "column": 8 } }, "169": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "170": { "end": { "line": 363, "column": 28 }, "start": { "line": 363, "column": 28 } }, "171": { "end": { "line": 364, "column": 8 }, "start": { "line": 364, "column": 8 } }, "172": { "end": { "line": 365, "column": 8 }, "start": { "line": 365, "column": 8 } }, "173": { "end": { "line": 389, "column": 9 }, "start": { "line": 367, "column": 8 } }, "174": { "end": { "line": 367, "column": 51 }, "start": { "line": 368, "column": 12 } }, "175": { "end": { "line": 367, "column": 51 }, "start": { "line": 369, "column": 12 } }, "176": { "end": { "line": 370, "column": 12 }, "start": { "line": 370, "column": 12 } }, "177": { "end": { "line": 371, "column": 12 }, "start": { "line": 371, "column": 12 } }, "178": { "end": { "line": 372, "column": 12 }, "start": { "line": 372, "column": 12 } }, "179": { "end": { "line": 382, "column": 13 }, "start": { "line": 374, "column": 12 } }, "180": { "end": { "line": 377, "column": 16 }, "start": { "line": 377, "column": 16 } }, "181": { "end": { "line": 378, "column": 16 }, "start": { "line": 378, "column": 16 } }, "182": { "end": { "line": 379, "column": 16 }, "start": { "line": 379, "column": 16 } }, "183": { "end": { "line": 381, "column": 16 }, "start": { "line": 381, "column": 16 } }, "184": { "end": { "line": 381, "column": 42 }, "start": { "line": 381, "column": 42 } }, "185": { "end": { "line": 383, "column": 12 }, "start": { "line": 383, "column": 12 } }, "186": { "end": { "line": 388, "column": 13 }, "start": { "line": 385, "column": 12 } }, "187": { "end": { "line": 387, "column": 16 }, "start": { "line": 387, "column": 16 } }, "188": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "189": { "end": { "line": 398, "column": 29 }, "start": { "line": 398, "column": 29 } }, "190": { "end": { "line": 399, "column": 8 }, "start": { "line": 399, "column": 8 } }, "191": { "end": { "line": 400, "column": 8 }, "start": { "line": 400, "column": 8 } }, "192": { "end": { "line": 401, "column": 8 }, "start": { "line": 401, "column": 8 } }, "193": { "end": { "line": 402, "column": 8 }, "start": { "line": 402, "column": 8 } }, "194": { "end": { "line": 404, "column": 8 }, "start": { "line": 404, "column": 8 } }, "195": { "end": { "line": 405, "column": 8 }, "start": { "line": 405, "column": 8 } }, "196": { "end": { "line": 407, "column": 8 }, "start": { "line": 407, "column": 8 } }, "197": { "end": { "line": 407, "column": 35 }, "start": { "line": 407, "column": 35 } }, "198": { "end": { "line": 411, "column": 9 }, "start": { "line": 409, "column": 8 } }, "199": { "end": { "line": 410, "column": 12 }, "start": { "line": 410, "column": 12 } }, "200": { "end": { "line": 420, "column": 9 }, "start": { "line": 413, "column": 8 } }, "201": { "end": { "line": 414, "column": 12 }, "start": { "line": 414, "column": 12 } }, "202": { "end": { "line": 416, "column": 12 }, "start": { "line": 416, "column": 12 } }, "203": { "end": { "line": 417, "column": 12 }, "start": { "line": 417, "column": 12 } }, "204": { "end": { "line": 418, "column": 12 }, "start": { "line": 418, "column": 12 } }, "205": { "end": { "line": 418, "column": 39 }, "start": { "line": 418, "column": 39 } }, "206": { "end": { "line": 419, "column": 12 }, "start": { "line": 419, "column": 12 } }, "207": { "end": { "line": 429, "column": 9 }, "start": { "line": 422, "column": 8 } }, "208": { "end": { "line": 423, "column": 12 }, "start": { "line": 423, "column": 12 } }, "209": { "end": { "line": 425, "column": 12 }, "start": { "line": 425, "column": 12 } }, "210": { "end": { "line": 426, "column": 12 }, "start": { "line": 426, "column": 12 } }, "211": { "end": { "line": 427, "column": 12 }, "start": { "line": 427, "column": 12 } }, "212": { "end": { "line": 427, "column": 39 }, "start": { "line": 427, "column": 39 } }, "213": { "end": { "line": 428, "column": 12 }, "start": { "line": 428, "column": 12 } }, "214": { "end": { "line": 430, "column": 8 }, "start": { "line": 430, "column": 8 } }, "215": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "216": { "end": { "line": 441, "column": 9 }, "start": { "line": 439, "column": 8 } }, "217": { "end": { "line": 440, "column": 12 }, "start": { "line": 440, "column": 12 } }, "218": { "end": { "line": 443, "column": 8 }, "start": { "line": 443, "column": 8 } }, "219": { "end": { "line": 438, "column": 26 }, "start": { "line": 444, "column": 8 } }, "220": { "end": { "line": 446, "column": 8 }, "start": { "line": 446, "column": 8 } }, "221": { "end": { "line": 447, "column": 8 }, "start": { "line": 447, "column": 8 } }, "222": { "end": { "line": 448, "column": 8 }, "start": { "line": 448, "column": 8 } }, "223": { "end": { "line": 450, "column": 8 }, "start": { "line": 450, "column": 8 } }, "224": { "end": { "line": 451, "column": 8 }, "start": { "line": 451, "column": 8 } }, "225": { "end": { "line": 452, "column": 8 }, "start": { "line": 452, "column": 8 } }, "226": { "end": { "line": 438, "column": 26 }, "start": { "line": 453, "column": 8 } }, "227": { "end": { "line": 438, "column": 26 }, "start": { "line": 454, "column": 8 } }, "228": { "end": { "line": 509, "column": 9 }, "start": { "line": 456, "column": 8 } }, "229": { "end": { "line": 488, "column": 13 }, "start": { "line": 458, "column": 12 } }, "230": { "end": { "line": 473, "column": 17 }, "start": { "line": 459, "column": 16 } }, "231": { "end": { "line": 461, "column": 20 }, "start": { "line": 461, "column": 20 } }, "232": { "end": { "line": 472, "column": 21 }, "start": { "line": 463, "column": 20 } }, "233": { "end": { "line": 465, "column": 24 }, "start": { "line": 465, "column": 24 } }, "234": { "end": { "line": 471, "column": 25 }, "start": { "line": 467, "column": 24 } }, "235": { "end": { "line": 468, "column": 28 }, "start": { "line": 468, "column": 28 } }, "236": { "end": { "line": 469, "column": 28 }, "start": { "line": 469, "column": 28 } }, "237": { "end": { "line": 474, "column": 16 }, "start": { "line": 474, "column": 16 } }, "238": { "end": { "line": 475, "column": 16 }, "start": { "line": 475, "column": 16 } }, "239": { "end": { "line": 478, "column": 16 }, "start": { "line": 478, "column": 16 } }, "240": { "end": { "line": 479, "column": 16 }, "start": { "line": 479, "column": 16 } }, "241": { "end": { "line": 481, "column": 16 }, "start": { "line": 481, "column": 16 } }, "242": { "end": { "line": 482, "column": 16 }, "start": { "line": 482, "column": 16 } }, "243": { "end": { "line": 483, "column": 16 }, "start": { "line": 483, "column": 16 } }, "244": { "end": { "line": 487, "column": 17 }, "start": { "line": 485, "column": 16 } }, "245": { "end": { "line": 486, "column": 20 }, "start": { "line": 486, "column": 20 } }, "246": { "end": { "line": 493, "column": 13 }, "start": { "line": 490, "column": 12 } }, "247": { "end": { "line": 491, "column": 16 }, "start": { "line": 491, "column": 16 } }, "248": { "end": { "line": 492, "column": 16 }, "start": { "line": 492, "column": 16 } }, "249": { "end": { "line": 505, "column": 13 }, "start": { "line": 495, "column": 12 } }, "250": { "end": { "line": 496, "column": 16 }, "start": { "line": 496, "column": 16 } }, "251": { "end": { "line": 498, "column": 16 }, "start": { "line": 498, "column": 16 } }, "252": { "end": { "line": 499, "column": 16 }, "start": { "line": 499, "column": 16 } }, "253": { "end": { "line": 501, "column": 16 }, "start": { "line": 501, "column": 16 } }, "254": { "end": { "line": 503, "column": 16 }, "start": { "line": 503, "column": 16 } }, "255": { "end": { "line": 504, "column": 16 }, "start": { "line": 504, "column": 16 } }, "256": { "end": { "line": 508, "column": 13 }, "start": { "line": 506, "column": 12 } }, "257": { "end": { "line": 507, "column": 16 }, "start": { "line": 507, "column": 16 } }, "258": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "259": { "end": { "line": 517, "column": 41 }, "start": { "line": 517, "column": 41 } }, "260": { "end": { "line": 518, "column": 8 }, "start": { "line": 518, "column": 8 } }, "261": { "end": { "line": 519, "column": 8 }, "start": { "line": 519, "column": 8 } }, "262": { "end": { "line": 523, "column": 9 }, "start": { "line": 520, "column": 8 } }, "263": { "end": { "line": 522, "column": 12 }, "start": { "line": 522, "column": 12 } }, "264": { "end": { "line": 525, "column": 8 }, "start": { "line": 525, "column": 8 } }, "265": { "end": { "line": 527, "column": 8 }, "start": { "line": 527, "column": 8 } }, "266": { "end": { "line": 528, "column": 8 }, "start": { "line": 528, "column": 8 } }, "267": { "end": { "line": 552, "column": 9 }, "start": { "line": 530, "column": 8 } }, "268": { "end": { "line": 531, "column": 12 }, "start": { "line": 531, "column": 12 } }, "269": { "end": { "line": 532, "column": 12 }, "start": { "line": 532, "column": 12 } }, "270": { "end": { "line": 533, "column": 12 }, "start": { "line": 533, "column": 12 } }, "271": { "end": { "line": 534, "column": 12 }, "start": { "line": 534, "column": 12 } }, "272": { "end": { "line": 550, "column": 13 }, "start": { "line": 536, "column": 12 } }, "273": { "end": { "line": 537, "column": 16 }, "start": { "line": 537, "column": 16 } }, "274": { "end": { "line": 549, "column": 17 }, "start": { "line": 540, "column": 16 } }, "275": { "end": { "line": 542, "column": 20 }, "start": { "line": 542, "column": 20 } }, "276": { "end": { "line": 549, "column": 17 }, "start": { "line": 544, "column": 21 } }, "277": { "end": { "line": 546, "column": 20 }, "start": { "line": 546, "column": 20 } }, "278": { "end": { "line": 548, "column": 20 }, "start": { "line": 548, "column": 20 } }, "279": { "end": { "line": 551, "column": 12 }, "start": { "line": 551, "column": 12 } }, "280": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "281": { "end": { "line": 561, "column": 8 }, "start": { "line": 561, "column": 8 } }, "282": { "end": { "line": 562, "column": 8 }, "start": { "line": 562, "column": 8 } }, "283": { "end": { "line": 563, "column": 8 }, "start": { "line": 563, "column": 8 } }, "284": { "end": { "line": 564, "column": 8 }, "start": { "line": 564, "column": 8 } }, "285": { "end": { "line": 567, "column": 8 }, "start": { "line": 567, "column": 8 } }, "286": { "end": { "line": 569, "column": 8 }, "start": { "line": 569, "column": 8 } }, "287": { "end": { "line": 571, "column": 8 }, "start": { "line": 571, "column": 8 } }, "288": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "289": { "end": { "line": 577, "column": 14 }, "start": { "line": 577, "column": 14 } }, "290": { "end": { "line": 578, "column": 8 }, "start": { "line": 578, "column": 8 } }, "291": { "end": { "line": 580, "column": 12 }, "start": { "line": 580, "column": 12 } }, "292": { "end": { "line": 582, "column": 8 }, "start": { "line": 582, "column": 8 } }, "293": { "end": { "line": 584, "column": 12 }, "start": { "line": 584, "column": 12 } }, "294": { "end": { "line": 586, "column": 8 }, "start": { "line": 586, "column": 8 } }, "295": { "end": { "line": 586, "column": 43 }, "start": { "line": 586, "column": 43 } }, "296": { "end": { "line": 588, "column": 8 }, "start": { "line": 588, "column": 8 } }, "297": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 26, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 26, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 26, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 28, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 28, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 28, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 28, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 28, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 60, "type": "binary-expr", "locations": [{ "end": { "line": 40, "column": 33 }, "start": { "line": 40, "column": 33 } }, { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 62 } }] }, "11": { "line": 66, "type": "binary-expr", "locations": [{ "end": { "line": 46, "column": 30 }, "start": { "line": 46, "column": 30 } }, { "end": { "line": 46, "column": 8 }, "start": { "line": 46, "column": 55 } }] }, "12": { "line": 72, "type": "binary-expr", "locations": [{ "end": { "line": 52, "column": 28 }, "start": { "line": 52, "column": 28 } }, { "end": { "line": 52, "column": 8 }, "start": { "line": 52, "column": 58 } }] }, "13": { "line": 78, "type": "binary-expr", "locations": [{ "end": { "line": 59, "column": 12 }, "start": { "line": 59, "column": 12 } }, { "end": { "line": 58, "column": 8 }, "start": { "line": 59, "column": 51 } }] }, "14": { "line": 85, "type": "binary-expr", "locations": [{ "end": { "line": 67, "column": 12 }, "start": { "line": 67, "column": 12 } }, { "end": { "line": 66, "column": 8 }, "start": { "line": 67, "column": 41 } }] }, "15": { "line": 91, "type": "binary-expr", "locations": [{ "end": { "line": 73, "column": 36 }, "start": { "line": 73, "column": 36 } }, { "end": { "line": 73, "column": 8 }, "start": { "line": 74, "column": 12 } }] }, "16": { "line": 97, "type": "cond-expr", "locations": [{ "end": { "line": 80, "column": 33 }, "start": { "line": 81, "column": 12 } }, { "end": { "line": 80, "column": 8 }, "start": { "line": 81, "column": 20 } }] }, "17": { "line": 163, "type": "if", "locations": [{ "end": { "line": 140, "column": 8 }, "start": { "line": 140, "column": 8 } }, { "end": { "line": 140, "column": 8 }, "start": { "line": 140, "column": 8 } }] }, "18": { "line": 163, "type": "binary-expr", "locations": [{ "end": { "line": 140, "column": 12 }, "start": { "line": 140, "column": 12 } }, { "end": { "line": 140, "column": 8 }, "start": { "line": 140, "column": 39 } }] }, "19": { "line": 202, "type": "cond-expr", "locations": [{ "end": { "line": 169, "column": 31 }, "start": { "line": 170, "column": 12 } }, { "end": { "line": 169, "column": 8 }, "start": { "line": 170, "column": 45 } }] }, "20": { "line": 208, "type": "if", "locations": [{ "end": { "line": 178, "column": 8 }, "start": { "line": 178, "column": 8 } }, { "end": { "line": 178, "column": 8 }, "start": { "line": 178, "column": 8 } }] }, "21": { "line": 217, "type": "if", "locations": [{ "end": { "line": 187, "column": 8 }, "start": { "line": 187, "column": 8 } }, { "end": { "line": 187, "column": 8 }, "start": { "line": 187, "column": 8 } }] }, "22": { "line": 250, "type": "cond-expr", "locations": [{ "end": { "line": 215, "column": 38 }, "start": { "line": 215, "column": 38 } }, { "end": { "line": 215, "column": 38 }, "start": { "line": 215, "column": 31 } }] }, "23": { "line": 250, "type": "binary-expr", "locations": [{ "end": { "line": 215, "column": 38 }, "start": { "line": 215, "column": 38 } }, { "end": { "line": 215, "column": 38 }, "start": { "line": 215, "column": 38 } }] }, "24": { "line": 271, "type": "if", "locations": [{ "end": { "line": 237, "column": 8 }, "start": { "line": 237, "column": 8 } }, { "end": { "line": 237, "column": 8 }, "start": { "line": 237, "column": 8 } }] }, "25": { "line": 271, "type": "binary-expr", "locations": [{ "end": { "line": 237, "column": 12 }, "start": { "line": 237, "column": 12 } }, { "end": { "line": 237, "column": 8 }, "start": { "line": 237, "column": 24 } }] }, "26": { "line": 276, "type": "if", "locations": [{ "end": { "line": 242, "column": 8 }, "start": { "line": 242, "column": 8 } }, { "end": { "line": 242, "column": 8 }, "start": { "line": 242, "column": 8 } }] }, "27": { "line": 276, "type": "binary-expr", "locations": [{ "end": { "line": 242, "column": 12 }, "start": { "line": 242, "column": 12 } }, { "end": { "line": 242, "column": 8 }, "start": { "line": 242, "column": 24 } }] }, "28": { "line": 285, "type": "if", "locations": [{ "end": { "line": 251, "column": 12 }, "start": { "line": 251, "column": 12 } }, { "end": { "line": 251, "column": 12 }, "start": { "line": 251, "column": 12 } }] }, "29": { "line": 285, "type": "binary-expr", "locations": [{ "end": { "line": 251, "column": 16 }, "start": { "line": 251, "column": 16 } }, { "end": { "line": 251, "column": 12 }, "start": { "line": 251, "column": 37 } }] }, "30": { "line": 293, "type": "if", "locations": [{ "end": { "line": 259, "column": 12 }, "start": { "line": 259, "column": 12 } }, { "end": { "line": 259, "column": 12 }, "start": { "line": 259, "column": 12 } }] }, "31": { "line": 293, "type": "binary-expr", "locations": [{ "end": { "line": 259, "column": 16 }, "start": { "line": 259, "column": 16 } }, { "end": { "line": 259, "column": 12 }, "start": { "line": 259, "column": 41 } }] }, "32": { "line": 299, "type": "if", "locations": [{ "end": { "line": 265, "column": 16 }, "start": { "line": 265, "column": 16 } }, { "end": { "line": 265, "column": 16 }, "start": { "line": 265, "column": 16 } }] }, "33": { "line": 302, "type": "if", "locations": [{ "end": { "line": 268, "column": 16 }, "start": { "line": 268, "column": 16 } }, { "end": { "line": 268, "column": 16 }, "start": { "line": 268, "column": 16 } }] }, "34": { "line": 302, "type": "binary-expr", "locations": [{ "end": { "line": 268, "column": 20 }, "start": { "line": 268, "column": 20 } }, { "end": { "line": 268, "column": 20 }, "start": { "line": 268, "column": 32 } }, { "end": { "line": 269, "column": 21 }, "start": { "line": 269, "column": 21 } }, { "end": { "line": 268, "column": 20 }, "start": { "line": 269, "column": 35 } }, { "end": { "line": 270, "column": 21 }, "start": { "line": 270, "column": 21 } }, { "end": { "line": 270, "column": 21 }, "start": { "line": 270, "column": 34 } }, { "end": { "line": 268, "column": 16 }, "start": { "line": 270, "column": 47 } }] }, "35": { "line": 310, "type": "if", "locations": [{ "end": { "line": 278, "column": 16 }, "start": { "line": 278, "column": 16 } }, { "end": { "line": 278, "column": 16 }, "start": { "line": 278, "column": 16 } }] }, "36": { "line": 314, "type": "if", "locations": [{ "end": { "line": 282, "column": 16 }, "start": { "line": 282, "column": 16 } }, { "end": { "line": 282, "column": 16 }, "start": { "line": 282, "column": 16 } }] }, "37": { "line": 314, "type": "binary-expr", "locations": [{ "end": { "line": 282, "column": 20 }, "start": { "line": 282, "column": 20 } }, { "end": { "line": 282, "column": 16 }, "start": { "line": 282, "column": 32 } }] }, "38": { "line": 315, "type": "if", "locations": [{ "end": { "line": 283, "column": 20 }, "start": { "line": 283, "column": 20 } }, { "end": { "line": 283, "column": 20 }, "start": { "line": 283, "column": 20 } }] }, "39": { "line": 318, "type": "if", "locations": [{ "end": { "line": 286, "column": 20 }, "start": { "line": 286, "column": 20 } }, { "end": { "line": 286, "column": 20 }, "start": { "line": 286, "column": 20 } }] }, "40": { "line": 318, "type": "binary-expr", "locations": [{ "end": { "line": 286, "column": 24 }, "start": { "line": 286, "column": 24 } }, { "end": { "line": 286, "column": 20 }, "start": { "line": 287, "column": 24 } }] }, "41": { "line": 326, "type": "if", "locations": [{ "end": { "line": 296, "column": 8 }, "start": { "line": 296, "column": 8 } }, { "end": { "line": 296, "column": 8 }, "start": { "line": 296, "column": 8 } }] }, "42": { "line": 332, "type": "if", "locations": [{ "end": { "line": 302, "column": 8 }, "start": { "line": 302, "column": 8 } }, { "end": { "line": 302, "column": 8 }, "start": { "line": 302, "column": 8 } }] }, "43": { "line": 332, "type": "binary-expr", "locations": [{ "end": { "line": 302, "column": 12 }, "start": { "line": 302, "column": 12 } }, { "end": { "line": 302, "column": 8 }, "start": { "line": 302, "column": 26 } }] }, "44": { "line": 333, "type": "if", "locations": [{ "end": { "line": 303, "column": 12 }, "start": { "line": 303, "column": 12 } }, { "end": { "line": 303, "column": 12 }, "start": { "line": 303, "column": 12 } }] }, "45": { "line": 335, "type": "if", "locations": [{ "end": { "line": 305, "column": 16 }, "start": { "line": 305, "column": 16 } }, { "end": { "line": 305, "column": 16 }, "start": { "line": 305, "column": 16 } }] }, "46": { "line": 340, "type": "if", "locations": [{ "end": { "line": 310, "column": 16 }, "start": { "line": 310, "column": 16 } }, { "end": { "line": 310, "column": 16 }, "start": { "line": 310, "column": 16 } }] }, "47": { "line": 346, "type": "if", "locations": [{ "end": { "line": 316, "column": 8 }, "start": { "line": 316, "column": 8 } }, { "end": { "line": 316, "column": 8 }, "start": { "line": 316, "column": 8 } }] }, "48": { "line": 349, "type": "if", "locations": [{ "end": { "line": 319, "column": 16 }, "start": { "line": 319, "column": 16 } }, { "end": { "line": 319, "column": 16 }, "start": { "line": 319, "column": 16 } }] }, "49": { "line": 352, "type": "if", "locations": [{ "end": { "line": 322, "column": 16 }, "start": { "line": 322, "column": 16 } }, { "end": { "line": 322, "column": 16 }, "start": { "line": 322, "column": 16 } }] }, "50": { "line": 360, "type": "if", "locations": [{ "end": { "line": 331, "column": 8 }, "start": { "line": 331, "column": 8 } }, { "end": { "line": 331, "column": 8 }, "start": { "line": 331, "column": 8 } }] }, "51": { "line": 363, "type": "if", "locations": [{ "end": { "line": 334, "column": 16 }, "start": { "line": 334, "column": 16 } }, { "end": { "line": 334, "column": 16 }, "start": { "line": 334, "column": 16 } }] }, "52": { "line": 366, "type": "if", "locations": [{ "end": { "line": 337, "column": 16 }, "start": { "line": 337, "column": 16 } }, { "end": { "line": 337, "column": 16 }, "start": { "line": 337, "column": 16 } }] }, "53": { "line": 376, "type": "if", "locations": [{ "end": { "line": 348, "column": 8 }, "start": { "line": 348, "column": 8 } }, { "end": { "line": 348, "column": 8 }, "start": { "line": 348, "column": 8 } }] }, "54": { "line": 401, "type": "cond-expr", "locations": [{ "end": { "line": 369, "column": 22 }, "start": { "line": 369, "column": 38 } }, { "end": { "line": 369, "column": 12 }, "start": { "line": 369, "column": 56 } }] }, "55": { "line": 406, "type": "if", "locations": [{ "end": { "line": 374, "column": 12 }, "start": { "line": 374, "column": 12 } }, { "end": { "line": 374, "column": 12 }, "start": { "line": 374, "column": 12 } }] }, "56": { "line": 406, "type": "binary-expr", "locations": [{ "end": { "line": 374, "column": 16 }, "start": { "line": 374, "column": 16 } }, { "end": { "line": 374, "column": 16 }, "start": { "line": 374, "column": 36 } }, { "end": { "line": 374, "column": 12 }, "start": { "line": 375, "column": 16 } }] }, "57": { "line": 417, "type": "if", "locations": [{ "end": { "line": 385, "column": 12 }, "start": { "line": 385, "column": 12 } }, { "end": { "line": 385, "column": 12 }, "start": { "line": 385, "column": 12 } }] }, "58": { "line": 446, "type": "if", "locations": [{ "end": { "line": 409, "column": 8 }, "start": { "line": 409, "column": 8 } }, { "end": { "line": 409, "column": 8 }, "start": { "line": 409, "column": 8 } }] }, "59": { "line": 450, "type": "if", "locations": [{ "end": { "line": 413, "column": 8 }, "start": { "line": 413, "column": 8 } }, { "end": { "line": 413, "column": 8 }, "start": { "line": 413, "column": 8 } }] }, "60": { "line": 460, "type": "if", "locations": [{ "end": { "line": 422, "column": 8 }, "start": { "line": 422, "column": 8 } }, { "end": { "line": 422, "column": 8 }, "start": { "line": 422, "column": 8 } }] }, "61": { "line": 480, "type": "if", "locations": [{ "end": { "line": 439, "column": 8 }, "start": { "line": 439, "column": 8 } }, { "end": { "line": 439, "column": 8 }, "start": { "line": 439, "column": 8 } }] }, "62": { "line": 497, "type": "if", "locations": [{ "end": { "line": 456, "column": 8 }, "start": { "line": 456, "column": 8 } }, { "end": { "line": 456, "column": 8 }, "start": { "line": 456, "column": 8 } }] }, "63": { "line": 499, "type": "if", "locations": [{ "end": { "line": 458, "column": 12 }, "start": { "line": 458, "column": 12 } }, { "end": { "line": 458, "column": 12 }, "start": { "line": 458, "column": 12 } }] }, "64": { "line": 500, "type": "if", "locations": [{ "end": { "line": 459, "column": 16 }, "start": { "line": 459, "column": 16 } }, { "end": { "line": 459, "column": 16 }, "start": { "line": 459, "column": 16 } }] }, "65": { "line": 500, "type": "binary-expr", "locations": [{ "end": { "line": 459, "column": 21 }, "start": { "line": 459, "column": 21 } }, { "end": { "line": 459, "column": 16 }, "start": { "line": 459, "column": 35 } }] }, "66": { "line": 507, "type": "if", "locations": [{ "end": { "line": 467, "column": 24 }, "start": { "line": 467, "column": 24 } }, { "end": { "line": 467, "column": 24 }, "start": { "line": 467, "column": 24 } }] }, "67": { "line": 516, "type": "cond-expr", "locations": [{ "end": { "line": 478, "column": 27 }, "start": { "line": 478, "column": 40 } }, { "end": { "line": 478, "column": 16 }, "start": { "line": 478, "column": 51 } }] }, "68": { "line": 522, "type": "if", "locations": [{ "end": { "line": 485, "column": 16 }, "start": { "line": 485, "column": 16 } }, { "end": { "line": 485, "column": 16 }, "start": { "line": 485, "column": 16 } }] }, "69": { "line": 527, "type": "if", "locations": [{ "end": { "line": 490, "column": 12 }, "start": { "line": 490, "column": 12 } }, { "end": { "line": 490, "column": 12 }, "start": { "line": 490, "column": 12 } }] }, "70": { "line": 533, "type": "if", "locations": [{ "end": { "line": 495, "column": 12 }, "start": { "line": 495, "column": 12 } }, { "end": { "line": 495, "column": 12 }, "start": { "line": 495, "column": 12 } }] }, "71": { "line": 542, "type": "if", "locations": [{ "end": { "line": 506, "column": 12 }, "start": { "line": 506, "column": 12 } }, { "end": { "line": 506, "column": 12 }, "start": { "line": 506, "column": 12 } }] }, "72": { "line": 556, "type": "cond-expr", "locations": [{ "end": { "line": 517, "column": 41 }, "start": { "line": 517, "column": 41 } }, { "end": { "line": 517, "column": 41 }, "start": { "line": 517, "column": 37 } }] }, "73": { "line": 556, "type": "binary-expr", "locations": [{ "end": { "line": 517, "column": 41 }, "start": { "line": 517, "column": 41 } }, { "end": { "line": 517, "column": 41 }, "start": { "line": 517, "column": 41 } }] }, "74": { "line": 560, "type": "if", "locations": [{ "end": { "line": 520, "column": 8 }, "start": { "line": 520, "column": 8 } }, { "end": { "line": 520, "column": 8 }, "start": { "line": 520, "column": 8 } }] }, "75": { "line": 560, "type": "binary-expr", "locations": [{ "end": { "line": 520, "column": 12 }, "start": { "line": 520, "column": 12 } }, { "end": { "line": 520, "column": 12 }, "start": { "line": 520, "column": 56 } }, { "end": { "line": 520, "column": 8 }, "start": { "line": 521, "column": 12 } }] }, "76": { "line": 575, "type": "if", "locations": [{ "end": { "line": 536, "column": 12 }, "start": { "line": 536, "column": 12 } }, { "end": { "line": 536, "column": 12 }, "start": { "line": 536, "column": 12 } }] }, "77": { "line": 575, "type": "binary-expr", "locations": [{ "end": { "line": 536, "column": 16 }, "start": { "line": 536, "column": 16 } }, { "end": { "line": 536, "column": 12 }, "start": { "line": 536, "column": 33 } }] }, "78": { "line": 579, "type": "if", "locations": [{ "end": { "line": 540, "column": 16 }, "start": { "line": 540, "column": 16 } }, { "end": { "line": 540, "column": 16 }, "start": { "line": 540, "column": 16 } }] }, "79": { "line": 579, "type": "binary-expr", "locations": [{ "end": { "line": 540, "column": 20 }, "start": { "line": 540, "column": 20 } }, { "end": { "line": 540, "column": 16 }, "start": { "line": 541, "column": 20 } }] }, "80": { "line": 581, "type": "if", "locations": [{ "end": { "line": 544, "column": 21 }, "start": { "line": 544, "column": 21 } }, { "end": { "line": 544, "column": 21 }, "start": { "line": 544, "column": 21 } }] }, "81": { "line": 581, "type": "binary-expr", "locations": [{ "end": { "line": 544, "column": 25 }, "start": { "line": 544, "column": 25 } }, { "end": { "line": 544, "column": 21 }, "start": { "line": 545, "column": 20 } }] }, "82": { "line": 602, "type": "cond-expr", "locations": [{ "end": { "line": 564, "column": 21 }, "start": { "line": 564, "column": 40 } }, { "end": { "line": 564, "column": 8 }, "start": { "line": 564, "column": 45 } }] } }, "code": ["import {Feature} from '../feature';", "import {", "    addClass, createCheckItem, createText, createElm, elm, getText,", "    removeClass, tag", "} from '../dom';", "import {has} from '../array';", "import {matchCase, trim, rgxEsc} from '../string';", "import {ignoreCase, numSortAsc, numSortDesc} from '../sort';", "import {addEvt, removeEvt, targetEvt} from '../event';", "import {isEmpty} from '../types';", "import {CHECKLIST, NONE} from '../const';", "", "const SORT_ERROR = 'Filter options for column {0} cannot be sorted in ' +", "    '{1} manner.';", "", "/**", " * Checklist filter UI component", " */", "export class CheckList extends Feature {", "", "    /**", "     * Creates an instance of CheckList", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'checkList');", "", "        let f = this.config;", "", "        /**", "         * List of container DOM elements", "         * @type {Array}", "         */", "        this.containers = [];", "", "        /**", "         * Css class for the container of the checklist filter (div)", "         * @type {String}", "         */", "        this.containerCssClass = f.div_checklist_css_class || 'div_checklist';", "", "        /**", "         * Css class for the checklist filter element (ul)", "         * @type {String}", "         */", "        this.filterCssClass = f.checklist_css_class || 'flt_checklist';", "", "        /**", "         * Css class for the item of a checklist (li)", "         * @type {String}", "         */", "        this.itemCssClass = f.checklist_item_css_class || 'flt_checklist_item';", "", "        /**", "         * Css class for a selected item of a checklist (li)", "         * @type {String}", "         */", "        this.selectedItemCssClass =", "            f.checklist_selected_item_css_class || 'flt_checklist_slc_item';", "", "        /**", "         * Text placed in the filter's container when load filter on demand", "         * feature is enabled", "         * @type {String}", "         */", "        this.activateText =", "            f.activate_checklist_text || 'Click to load filter data';", "", "        /**", "         * Css class for a disabled item of a checklist (li)", "         * @type {String}", "         */", "        this.disabledItemCssClass = f.checklist_item_disabled_css_class ||", "            'flt_checklist_item_disabled';", "", "        /**", "         * Enable the reset filter option as first item", "         * @type {Boolean}", "         */", "        this.enableResetOption = f.enable_checklist_reset_filter === false ?", "            false : true;", "", "        /**", "         * Prefix for container element ID", "         * @type {String}", "         * @private", "         */", "        this.prfx = 'chkdiv_';", "", "        /**", "         * Has custom options", "         * @type {Boolean}", "         * @private", "         */", "        this.isCustom = false;", "", "        /**", "         * List of options values", "         * @type {Array}", "         * @private", "         */", "        this.opts = [];", "", "        /**", "         * List of options texts for custom values", "         * @type {Array}", "         * @private", "         */", "        this.optsTxt = [];", "", "        /**", "         * List of options to be excluded from the checklist filter", "         * @type {Array}", "         * @private", "         */", "        this.excludedOpts = [];", "    }", "", "    /**", "     * Checklist option click event handler", "     * @param {Event} evt", "     * @private", "     */", "    optionClick(evt) {", "        let elm = targetEvt(evt);", "        let tf = this.tf;", "", "        this.emitter.emit('filter-focus', tf, elm);", "        this.setCheckListValues(elm);", "        tf.filter();", "    }", "", "    /**", "     * Checklist container click event handler for load-on-demand feature", "     * @param {Event} evt", "     * @private", "     */", "    onCheckListClick(evt) {", "        let elm = targetEvt(evt);", "        if (this.tf.loadFltOnDemand && elm.getAttribute('filled') === '0') {", "            let ct = elm.getAttribute('ct');", "            let div = this.containers[ct];", "            this.build(ct);", "            removeEvt(div, 'click', (evt) => this.onCheckListClick(evt));", "        }", "    }", "", "    /**", "     * Refresh all checklist filters", "     */", "    refreshAll() {", "        let tf = this.tf;", "        let fltsIdxs = tf.getFiltersByType(CHECKLIST, true);", "        fltsIdxs.forEach((colIdx) => {", "            let values = this.getValues(colIdx);", "            this.build(colIdx, tf.linkedFilters);", "            this.selectOptions(colIdx, values);", "        });", "    }", "", "    /**", "     * Initialize checklist filter", "     * @param  {Number}     colIndex   Column index", "     * @param  {Boolean}    isExternal External filter flag", "     * @param  {DOMElement} container  Dom element containing the filter", "     */", "    init(colIndex, isExternal, container) {", "        let tf = this.tf;", "        let externalFltTgtId = isExternal ?", "            tf.externalFltTgtIds[colIndex] : null;", "", "        let divCont = createElm('div',", "            ['id', `${this.prfx}${colIndex}_${tf.id}`],", "            ['ct', colIndex], ['filled', '0']);", "        divCont.className = this.containerCssClass;", "", "        //filter is appended in desired element", "        if (externalFltTgtId) {", "            elm(externalFltTgtId).appendChild(divCont);", "        } else {", "            container.appendChild(divCont);", "        }", "", "        this.containers[colIndex] = divCont;", "        tf.fltIds.push(tf.buildFilterId(colIndex));", "", "        if (!tf.loadFltOnDemand) {", "            this.build(colIndex);", "        } else {", "            addEvt(divCont, 'click', (evt) => this.onCheckListClick(evt));", "            divCont.appendChild(createText(this.activateText));", "        }", "", "        this.emitter.on(", "            ['build-checklist-filter'],", "            (tf, colIndex, isLinked) => this.build(colIndex, isLinked)", "        );", "", "        this.emitter.on(", "            ['select-checklist-options'],", "            (tf, colIndex, values) => this.selectOptions(colIndex, values)", "        );", "", "        this.emitter.on(['rows-changed'], () => this.refreshAll());", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Build checklist UI", "     * @param  {Number}  colIndex   Column index", "     * @param  {Boolean} isLinked    Enable linked filters behaviour", "     */", "    build(colIndex, isLinked = false) {", "        let tf = this.tf;", "        colIndex = parseInt(colIndex, 10);", "", "        this.emitter.emit('before-populating-filter', tf, colIndex);", "", "        this.opts = [];", "        this.optsTxt = [];", "", "        let flt = this.containers[colIndex];", "        let ul = createElm('ul',", "            ['id', tf.fltIds[colIndex]],", "            ['colIndex', colIndex]);", "        ul.className = this.filterCssClass;", "", "        let rows = tf.tbl.rows;", "        let nbRows = tf.getRowsNb(true);", "        let caseSensitive = tf.caseSensitive;", "        this.isCustom = tf.isCustomOptions(colIndex);", "", "        let activeIdx;", "        let activeFilterId = tf.getActiveFilterId();", "        if (isLinked && activeFilterId) {", "            activeIdx = tf.getColumnIndexFromFilterId(activeFilterId);", "        }", "", "        let filteredDataCol = [];", "        if (isLinked && tf.disableExcludedOptions) {", "            this.excludedOpts = [];", "        }", "", "        flt.innerHTML = '';", "", "        for (let k = tf.refRow; k < nbRows; k++) {", "            // always visible rows don't need to appear on selects as always", "            // valid", "            if (tf.hasVisibleRows && tf.visibleRows.indexOf(k) !== -1) {", "                continue;", "            }", "", "            let cells = rows[k].cells;", "            let ncells = cells.length;", "", "            // checks if row has exact cell #", "            if (ncells !== tf.nbCells || this.isCustom) {", "                continue;", "            }", "", "            // this loop retrieves cell data", "            for (let j = 0; j < ncells; j++) {", "                if (colIndex !== j) {", "                    continue;", "                }", "                if (isLinked && !tf.disableExcludedOptions &&", "                    (!tf.paging && !tf.isRowDisplayed(k)) ||", "                    (tf.paging && activeIdx && !tf.isRowValid(k))) {", "                    continue;", "                }", "", "                let cellValue = tf.getCellValue(cells[j]);", "                //Vary Peter's patch", "                let cellString = matchCase(cellValue, caseSensitive);", "                // checks if celldata is already in array", "                if (!has(this.opts, cellString, caseSensitive)) {", "                    this.opts.push(cellValue);", "                }", "                let filteredCol = filteredDataCol[j];", "                if (isLinked && tf.disableExcludedOptions) {", "                    if (!filteredCol) {", "                        filteredCol = tf.getFilteredDataCol(j);", "                    }", "                    if (!has(filteredCol, cellString, caseSensitive) &&", "                        !has(this.excludedOpts, cellString,", "                            caseSensitive)) {", "                        this.excludedOpts.push(cellValue);", "                    }", "                }", "            }", "        }", "", "        //Retrieves custom values", "        if (this.isCustom) {", "            let customValues = tf.getCustomOptions(colIndex);", "            this.opts = customValues[0];", "            this.optsTxt = customValues[1];", "        }", "", "        if (tf.sortSlc && !this.isCustom) {", "            if (!caseSensitive) {", "                this.opts.sort(ignoreCase);", "                if (this.excludedOpts) {", "                    this.excludedOpts.sort(ignoreCase);", "                }", "            } else {", "                this.opts.sort();", "                if (this.excludedOpts) {", "                    this.excludedOpts.sort();", "                }", "            }", "        }", "        //asc sort", "        if (tf.sortNumAsc.indexOf(colIndex) !== -1) {", "            try {", "                this.opts.sort(numSortAsc);", "                if (this.excludedOpts) {", "                    this.excludedOpts.sort(numSortAsc);", "                }", "                if (this.isCustom) {", "                    this.optsTxt.sort(numSortAsc);", "                }", "            } catch (e) {", "                throw new Error(SORT_ERROR.replace('{0}', colIndex)", "                    .replace('{1}', 'ascending'));", "            }//in case there are alphanumeric values", "        }", "        //desc sort", "        if (tf.sortNumDesc.indexOf(colIndex) !== -1) {", "            try {", "                this.opts.sort(numSortDesc);", "                if (this.excludedOpts) {", "                    this.excludedOpts.sort(numSortDesc);", "                }", "                if (this.isCustom) {", "                    this.optsTxt.sort(numSortDesc);", "                }", "            } catch (e) {", "                throw new Error(SORT_ERROR.replace('{0}', colIndex)", "                    .replace('{1}', 'descending'));", "            }//in case there are alphanumeric values", "        }", "", "        this.addChecks(colIndex, ul);", "", "        if (tf.loadFltOnDemand) {", "            flt.innerHTML = '';", "        }", "        flt.appendChild(ul);", "        flt.setAttribute('filled', '1');", "", "        this.emitter.emit('after-populating-filter', tf, colIndex, flt);", "    }", "", "    /**", "     * Add checklist options", "     * @param {Number} colIndex  Column index", "     * @param {Object} ul        Ul element", "     * @private", "     */", "    addChecks(colIndex, ul) {", "        let tf = this.tf;", "        let chkCt = this.addTChecks(colIndex, ul);", "", "        for (let y = 0; y < this.opts.length; y++) {", "            let val = this.opts[y]; //item value", "            let lbl = this.isCustom ? this.optsTxt[y] : val; //item text", "            let fltId = tf.fltIds[colIndex];", "            let li = createCheckItem(`${fltId}_${(y + chkCt)}`, val, lbl);", "            li.className = this.itemCssClass;", "", "            if (tf.linkedFilters && tf.disableExcludedOptions &&", "                has(this.excludedOpts, matchCase(val, tf.caseSensitive),", "                    tf.caseSensitive)) {", "                addClass(li, this.disabledItemCssClass);", "                li.check.disabled = true;", "                li.disabled = true;", "            } else {", "                addEvt(li.check, 'click', evt => this.optionClick(evt));", "            }", "            ul.appendChild(li);", "", "            if (val === '') {", "                //item is hidden", "                li.style.display = NONE;", "            }", "        }", "    }", "", "    /**", "     * Add checklist header option", "     * @param {Number} colIndex Column index", "     * @param {Object} ul       Ul element", "     * @private", "     */", "    addTChecks(colIndex, ul) {", "        let tf = this.tf;", "        let chkCt = 1;", "        let fltId = tf.fltIds[colIndex];", "        let li0 = createCheckItem(`${fltId}_0`, '',", "            tf.getClearFilterText(colIndex));", "        li0.className = this.itemCssClass;", "        ul.appendChild(li0);", "", "        addEvt(li0.check, 'click', evt => this.optionClick(evt));", "", "        if (!this.enableResetOption) {", "            li0.style.display = NONE;", "        }", "", "        if (tf.enableEmptyOption) {", "            let li1 = createCheckItem(`${fltId}_1`, tf.emOperator,", "                tf.emptyText);", "            li1.className = this.itemCssClass;", "            ul.appendChild(li1);", "            addEvt(li1.check, 'click', evt => this.optionClick(evt));", "            chkCt++;", "        }", "", "        if (tf.enableNonEmptyOption) {", "            let li2 = createCheckItem(`${fltId}_2`, tf.nmOperator,", "                tf.nonEmptyText);", "            li2.className = this.itemCssClass;", "            ul.appendChild(li2);", "            addEvt(li2.check, 'click', evt => this.optionClick(evt));", "            chkCt++;", "        }", "        return chkCt;", "    }", "", "    /**", "     * Store checked options in DOM element attribute", "     * @param {Object} o checklist option DOM element", "     * @private", "     */", "    setCheckListValues(o) {", "        if (!o) {", "            return;", "        }", "", "        let tf = this.tf;", "        let chkValue = o.value; //checked item value", "        // TODO: provide helper to extract column index, ugly!", "        let chkIndex = parseInt(o.id.split('_')[2], 10);", "        let colIdx = tf.getColumnIndexFromFilterId(o.id);", "        let itemTag = 'LI';", "", "        let n = tf.getFilterElement(parseInt(colIdx, 10));", "        let li = n.childNodes[chkIndex];", "        let colIndex = n.getAttribute('colIndex');", "        let fltValue = n.getAttribute('value'); //filter value (ul tag)", "        let fltIndexes = n.getAttribute('indexes'); //selected items (ul tag)", "", "        if (o.checked) {", "            //show all item", "            if (chkValue === '') {", "                if ((fltIndexes && fltIndexes !== '')) {", "                    //items indexes", "                    let indSplit = fltIndexes.split(tf.separator);", "                    //checked items loop", "                    for (let u = 0; u < indSplit.length; u++) {", "                        //checked item", "                        let cChk = elm(tf.fltIds[colIndex] + '_' +", "                            indSplit[u]);", "                        if (cChk) {", "                            cChk.checked = false;", "                            removeClass(n.childNodes[indSplit[u]],", "                                this.selectedItemCssClass);", "                        }", "                    }", "                }", "                n.setAttribute('value', '');", "                n.setAttribute('indexes', '');", "", "            } else {", "                fltValue = (fltValue) ? fltValue : '';", "                chkValue = trim(fltValue + ' ' + chkValue + ' ' +", "                    tf.orOperator);", "                chkIndex = fltIndexes + chkIndex + tf.separator;", "                n.setAttribute('value', chkValue);", "                n.setAttribute('indexes', chkIndex);", "                //1st option unchecked", "                if (elm(tf.fltIds[colIndex] + '_0')) {", "                    elm(tf.fltIds[colIndex] + '_0').checked = false;", "                }", "            }", "", "            if (li.nodeName === itemTag) {", "                removeClass(n.childNodes[0], this.selectedItemCssClass);", "                addClass(li, this.selectedItemCssClass);", "            }", "        } else { //removes values and indexes", "            if (chkValue !== '') {", "                let replaceValue = new RegExp(", "                    rgxEsc(chkValue + ' ' + tf.orOperator));", "                fltValue = fltValue.replace(replaceValue, '');", "                n.setAttribute('value', trim(fltValue));", "", "                let replaceIndex = new RegExp(", "                    rgxEsc(chkIndex + tf.separator));", "                fltIndexes = fltIndexes.replace(replaceIndex, '');", "                n.setAttribute('indexes', fltIndexes);", "            }", "            if (li.nodeName === itemTag) {", "                removeClass(li, this.selectedItemCssClass);", "            }", "        }", "    }", "", "    /**", "     * Select filter options programmatically", "     * @param  {Number} colIndex Column index", "     * @param  {Array}  values   Array of option values to select", "     */", "    selectOptions(colIndex, values = []) {", "        let tf = this.tf;", "        let flt = tf.getFilterElement(colIndex);", "        if (tf.getFilterType(colIndex) !== CHECKLIST || !flt ||", "            values.length === 0) {", "            return;", "        }", "", "        let lisNb = tag(flt, 'li').length;", "", "        flt.setAttribute('value', '');", "        flt.setAttribute('indexes', '');", "", "        for (let k = 0; k < lisNb; k++) {", "            let li = tag(flt, 'li')[k];", "            let lbl = tag(li, 'label')[0];", "            let chk = tag(li, 'input')[0];", "            let lblTxt = matchCase(getText(lbl), tf.caseSensitive);", "", "            if (lblTxt !== '' && has(values, lblTxt, tf.caseSensitive)) {", "                chk.checked = true;", "            } else {", "                // Check non-empty-text or empty-text option", "                if (values.indexOf(tf.nmOperator) !== -1 &&", "                    lblTxt === matchCase(tf.nonEmptyText, tf.caseSensitive)) {", "                    chk.checked = true;", "                }", "                else if (values.indexOf(tf.emOperator) !== -1 &&", "                    lblTxt === matchCase(tf.emptyText, tf.caseSensitive)) {", "                    chk.checked = true;", "                } else {", "                    chk.checked = false;", "                }", "            }", "            this.setCheckListValues(chk);", "        }", "    }", "", "    /**", "     * Get filter values for a given column index", "     * @param {Number} colIndex Column index", "     * @returns {Array} values Collection of selected values", "     */", "    getValues(colIndex) {", "        let tf = this.tf;", "        let flt = tf.getFilterElement(colIndex);", "        let fltAttr = flt.getAttribute('value');", "        let values = isEmpty(fltAttr) ? '' : fltAttr;", "", "        //removes last operator ||", "        values = values.substr(0, values.length - 3);", "        //turn || separated values into array", "        values = values.split(' ' + tf.orOperator + ' ');", "", "        return values;", "    }", "", "    /**", "     * Destroy CheckList instance", "     */", "    destroy() {", "        this.emitter.off(", "            ['build-checklist-filter'],", "            (tf, colIndex, isLinked) => this.build(colIndex, isLinked)", "        );", "        this.emitter.off(", "            ['select-checklist-options'],", "            (tf, colIndex, values) => this.selectOptions(colIndex, values)", "        );", "        this.emitter.off(['rows-changed'], () => this.refreshAll());", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_NJw2dcHQDxfEH0J9CTumOQ = __cov_NJw2dcHQDxfEH0J9CTumOQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\checkList.js'];
	__cov_NJw2dcHQDxfEH0J9CTumOQ.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['2']++;exports.CheckList = undefined;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['3']++;var _feature = __webpack_require__(10);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['4']++;var _dom = __webpack_require__(3);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['5']++;var _array = __webpack_require__(16);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['6']++;var _string = __webpack_require__(5);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['7']++;var _sort = __webpack_require__(17);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['8']++;var _event = __webpack_require__(1);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['9']++;var _types = __webpack_require__(4);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['10']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_NJw2dcHQDxfEH0J9CTumOQ.f['1']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['12']++;if (!(instance instanceof Constructor)) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['1'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['13']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_NJw2dcHQDxfEH0J9CTumOQ.f['2']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['15']++;if (!self) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['2'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['16']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['2'][1]++;
	   }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['17']++;return (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['4'][0]++, call) && ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['4'][2]++, typeof call === 'function')) ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['3'][0]++, call) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_NJw2dcHQDxfEH0J9CTumOQ.f['3']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['19']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['6'][0]++, typeof superClass !== 'function') && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['6'][1]++, superClass !== null)) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['5'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['20']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['5'][1]++;
	   }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['21']++;subClass.prototype = Object.create((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['7'][0]++, superClass) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['22']++;if (superClass) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['8'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['23']++;Object.setPrototypeOf ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.b['8'][1]++;
	   }
	}__cov_NJw2dcHQDxfEH0J9CTumOQ.s['24']++;var SORT_ERROR = 'Filter options for column {0} cannot be sorted in ' + '{1} manner.';__cov_NJw2dcHQDxfEH0J9CTumOQ.s['25']++;var CheckList = exports.CheckList = function (_Feature) {
	   __cov_NJw2dcHQDxfEH0J9CTumOQ.f['4']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['26']++;_inherits(CheckList, _Feature);function CheckList(tf) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['5']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['28']++;_classCallCheck(this, CheckList);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['29']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'checkList'));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['30']++;var f = _this.config;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['31']++;_this.containers = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['32']++;_this.containerCssClass = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['10'][0]++, f.div_checklist_css_class) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['10'][1]++, 'div_checklist');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['33']++;_this.filterCssClass = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['11'][0]++, f.checklist_css_class) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['11'][1]++, 'flt_checklist');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['34']++;_this.itemCssClass = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['12'][0]++, f.checklist_item_css_class) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['12'][1]++, 'flt_checklist_item');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['35']++;_this.selectedItemCssClass = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['13'][0]++, f.checklist_selected_item_css_class) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['13'][1]++, 'flt_checklist_slc_item');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['36']++;_this.activateText = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['14'][0]++, f.activate_checklist_text) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['14'][1]++, 'Click to load filter data');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['37']++;_this.disabledItemCssClass = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['15'][0]++, f.checklist_item_disabled_css_class) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['15'][1]++, 'flt_checklist_item_disabled');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['38']++;_this.enableResetOption = f.enable_checklist_reset_filter === false ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['16'][0]++, false) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['16'][1]++, true);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['39']++;_this.prfx = 'chkdiv_';__cov_NJw2dcHQDxfEH0J9CTumOQ.s['40']++;_this.isCustom = false;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['41']++;_this.opts = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['42']++;_this.optsTxt = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['43']++;_this.excludedOpts = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['44']++;return _this;
	   }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['45']++;CheckList.prototype.optionClick = function optionClick(evt) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['6']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['46']++;var elm = (0, _event.targetEvt)(evt);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['47']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['48']++;this.emitter.emit('filter-focus', tf, elm);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['49']++;this.setCheckListValues(elm);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['50']++;tf.filter();
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['51']++;CheckList.prototype.onCheckListClick = function onCheckListClick(evt) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['7']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['52']++;var _this2 = this;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['53']++;var elm = (0, _event.targetEvt)(evt);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['54']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['18'][0]++, this.tf.loadFltOnDemand) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['18'][1]++, elm.getAttribute('filled') === '0')) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['17'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['55']++;var ct = elm.getAttribute('ct');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['56']++;var div = this.containers[ct];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['57']++;this.build(ct);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['58']++;(0, _event.removeEvt)(div, 'click', function (evt) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.f['8']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['59']++;return _this2.onCheckListClick(evt);
	         });
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['17'][1]++;
	      }
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['60']++;CheckList.prototype.refreshAll = function refreshAll() {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['9']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['61']++;var _this3 = this;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['62']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['63']++;var fltsIdxs = tf.getFiltersByType(_const.CHECKLIST, true);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['64']++;fltsIdxs.forEach(function (colIdx) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['10']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['65']++;var values = _this3.getValues(colIdx);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['66']++;_this3.build(colIdx, tf.linkedFilters);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['67']++;_this3.selectOptions(colIdx, values);
	      });
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['68']++;CheckList.prototype.init = function init(colIndex, isExternal, container) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['11']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['69']++;var _this4 = this;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['70']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['71']++;var externalFltTgtId = isExternal ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['19'][0]++, tf.externalFltTgtIds[colIndex]) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['19'][1]++, null);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['72']++;var divCont = (0, _dom.createElm)('div', ['id', '' + this.prfx + colIndex + '_' + tf.id], ['ct', colIndex], ['filled', '0']);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['73']++;divCont.className = this.containerCssClass;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['74']++;if (externalFltTgtId) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['20'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['75']++;(0, _dom.elm)(externalFltTgtId).appendChild(divCont);
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['20'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['76']++;container.appendChild(divCont);
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['77']++;this.containers[colIndex] = divCont;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['78']++;tf.fltIds.push(tf.buildFilterId(colIndex));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['79']++;if (!tf.loadFltOnDemand) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['21'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['80']++;this.build(colIndex);
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['21'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['81']++;(0, _event.addEvt)(divCont, 'click', function (evt) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.f['12']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['82']++;return _this4.onCheckListClick(evt);
	         });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['83']++;divCont.appendChild((0, _dom.createText)(this.activateText));
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['84']++;this.emitter.on(['build-checklist-filter'], function (tf, colIndex, isLinked) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['13']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['85']++;return _this4.build(colIndex, isLinked);
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['86']++;this.emitter.on(['select-checklist-options'], function (tf, colIndex, values) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['14']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['87']++;return _this4.selectOptions(colIndex, values);
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['88']++;this.emitter.on(['rows-changed'], function () {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['15']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['89']++;return _this4.refreshAll();
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['90']++;this.initialized = true;
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['91']++;CheckList.prototype.build = function build(colIndex) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['16']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['92']++;var isLinked = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['23'][0]++, arguments.length > 1) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['23'][1]++, arguments[1] !== undefined) ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['22'][0]++, arguments[1]) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['22'][1]++, false);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['93']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['94']++;colIndex = parseInt(colIndex, 10);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['95']++;this.emitter.emit('before-populating-filter', tf, colIndex);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['96']++;this.opts = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['97']++;this.optsTxt = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['98']++;var flt = this.containers[colIndex];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['99']++;var ul = (0, _dom.createElm)('ul', ['id', tf.fltIds[colIndex]], ['colIndex', colIndex]);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['100']++;ul.className = this.filterCssClass;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['101']++;var rows = tf.tbl.rows;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['102']++;var nbRows = tf.getRowsNb(true);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['103']++;var caseSensitive = tf.caseSensitive;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['104']++;this.isCustom = tf.isCustomOptions(colIndex);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['105']++;var activeIdx = void 0;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['106']++;var activeFilterId = tf.getActiveFilterId();__cov_NJw2dcHQDxfEH0J9CTumOQ.s['107']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['25'][0]++, isLinked) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['25'][1]++, activeFilterId)) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['24'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['108']++;activeIdx = tf.getColumnIndexFromFilterId(activeFilterId);
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['24'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['109']++;var filteredDataCol = [];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['110']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['27'][0]++, isLinked) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['27'][1]++, tf.disableExcludedOptions)) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['26'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['111']++;this.excludedOpts = [];
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['26'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['112']++;flt.innerHTML = '';__cov_NJw2dcHQDxfEH0J9CTumOQ.s['113']++;for (var k = tf.refRow; k < nbRows; k++) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.s['114']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['29'][0]++, tf.hasVisibleRows) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['29'][1]++, tf.visibleRows.indexOf(k) !== -1)) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['28'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['115']++;continue;
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['28'][1]++;
	         }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['116']++;var cells = rows[k].cells;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['117']++;var ncells = cells.length;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['118']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['31'][0]++, ncells !== tf.nbCells) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['31'][1]++, this.isCustom)) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['30'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['119']++;continue;
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['30'][1]++;
	         }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['120']++;for (var j = 0; j < ncells; j++) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.s['121']++;if (colIndex !== j) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['32'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['122']++;continue;
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['32'][1]++;
	            }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['123']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][0]++, isLinked) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][1]++, !tf.disableExcludedOptions) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][2]++, !tf.paging) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][3]++, !tf.isRowDisplayed(k)) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][4]++, tf.paging) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][5]++, activeIdx) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['34'][6]++, !tf.isRowValid(k))) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['33'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['124']++;continue;
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['33'][1]++;
	            }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['125']++;var cellValue = tf.getCellValue(cells[j]);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['126']++;var cellString = (0, _string.matchCase)(cellValue, caseSensitive);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['127']++;if (!(0, _array.has)(this.opts, cellString, caseSensitive)) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['35'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['128']++;this.opts.push(cellValue);
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['35'][1]++;
	            }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['129']++;var filteredCol = filteredDataCol[j];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['130']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['37'][0]++, isLinked) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['37'][1]++, tf.disableExcludedOptions)) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['36'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['131']++;if (!filteredCol) {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.b['38'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['132']++;filteredCol = tf.getFilteredDataCol(j);
	               } else {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.b['38'][1]++;
	               }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['133']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['40'][0]++, !(0, _array.has)(filteredCol, cellString, caseSensitive)) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['40'][1]++, !(0, _array.has)(this.excludedOpts, cellString, caseSensitive))) {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.b['39'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['134']++;this.excludedOpts.push(cellValue);
	               } else {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.b['39'][1]++;
	               }
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['36'][1]++;
	            }
	         }
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['135']++;if (this.isCustom) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['41'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['136']++;var customValues = tf.getCustomOptions(colIndex);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['137']++;this.opts = customValues[0];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['138']++;this.optsTxt = customValues[1];
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['41'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['139']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['43'][0]++, tf.sortSlc) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['43'][1]++, !this.isCustom)) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['42'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['140']++;if (!caseSensitive) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['44'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['141']++;this.opts.sort(_sort.ignoreCase);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['142']++;if (this.excludedOpts) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['45'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['143']++;this.excludedOpts.sort(_sort.ignoreCase);
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['45'][1]++;
	            }
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['44'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['144']++;this.opts.sort();__cov_NJw2dcHQDxfEH0J9CTumOQ.s['145']++;if (this.excludedOpts) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['46'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['146']++;this.excludedOpts.sort();
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['46'][1]++;
	            }
	         }
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['42'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['147']++;if (tf.sortNumAsc.indexOf(colIndex) !== -1) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['47'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['148']++;try {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.s['149']++;this.opts.sort(_sort.numSortAsc);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['150']++;if (this.excludedOpts) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['48'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['151']++;this.excludedOpts.sort(_sort.numSortAsc);
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['48'][1]++;
	            }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['152']++;if (this.isCustom) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['49'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['153']++;this.optsTxt.sort(_sort.numSortAsc);
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['49'][1]++;
	            }
	         } catch (e) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.s['154']++;throw new Error(SORT_ERROR.replace('{0}', colIndex).replace('{1}', 'ascending'));
	         }
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['47'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['155']++;if (tf.sortNumDesc.indexOf(colIndex) !== -1) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['50'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['156']++;try {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.s['157']++;this.opts.sort(_sort.numSortDesc);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['158']++;if (this.excludedOpts) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['51'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['159']++;this.excludedOpts.sort(_sort.numSortDesc);
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['51'][1]++;
	            }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['160']++;if (this.isCustom) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['52'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['161']++;this.optsTxt.sort(_sort.numSortDesc);
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['52'][1]++;
	            }
	         } catch (e) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.s['162']++;throw new Error(SORT_ERROR.replace('{0}', colIndex).replace('{1}', 'descending'));
	         }
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['50'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['163']++;this.addChecks(colIndex, ul);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['164']++;if (tf.loadFltOnDemand) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['53'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['165']++;flt.innerHTML = '';
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['53'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['166']++;flt.appendChild(ul);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['167']++;flt.setAttribute('filled', '1');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['168']++;this.emitter.emit('after-populating-filter', tf, colIndex, flt);
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['169']++;CheckList.prototype.addChecks = function addChecks(colIndex, ul) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['17']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['170']++;var _this5 = this;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['171']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['172']++;var chkCt = this.addTChecks(colIndex, ul);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['173']++;for (var y = 0; y < this.opts.length; y++) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.s['174']++;var val = this.opts[y];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['175']++;var lbl = this.isCustom ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['54'][0]++, this.optsTxt[y]) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['54'][1]++, val);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['176']++;var fltId = tf.fltIds[colIndex];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['177']++;var li = (0, _dom.createCheckItem)(fltId + '_' + (y + chkCt), val, lbl);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['178']++;li.className = this.itemCssClass;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['179']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['56'][0]++, tf.linkedFilters) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['56'][1]++, tf.disableExcludedOptions) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['56'][2]++, (0, _array.has)(this.excludedOpts, (0, _string.matchCase)(val, tf.caseSensitive), tf.caseSensitive))) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['55'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['180']++;(0, _dom.addClass)(li, this.disabledItemCssClass);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['181']++;li.check.disabled = true;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['182']++;li.disabled = true;
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['55'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['183']++;(0, _event.addEvt)(li.check, 'click', function (evt) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.f['18']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['184']++;return _this5.optionClick(evt);
	            });
	         }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['185']++;ul.appendChild(li);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['186']++;if (val === '') {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['57'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['187']++;li.style.display = _const.NONE;
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['57'][1]++;
	         }
	      }
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['188']++;CheckList.prototype.addTChecks = function addTChecks(colIndex, ul) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['19']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['189']++;var _this6 = this;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['190']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['191']++;var chkCt = 1;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['192']++;var fltId = tf.fltIds[colIndex];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['193']++;var li0 = (0, _dom.createCheckItem)(fltId + '_0', '', tf.getClearFilterText(colIndex));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['194']++;li0.className = this.itemCssClass;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['195']++;ul.appendChild(li0);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['196']++;(0, _event.addEvt)(li0.check, 'click', function (evt) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['20']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['197']++;return _this6.optionClick(evt);
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['198']++;if (!this.enableResetOption) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['58'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['199']++;li0.style.display = _const.NONE;
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['58'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['200']++;if (tf.enableEmptyOption) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['59'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['201']++;var li1 = (0, _dom.createCheckItem)(fltId + '_1', tf.emOperator, tf.emptyText);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['202']++;li1.className = this.itemCssClass;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['203']++;ul.appendChild(li1);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['204']++;(0, _event.addEvt)(li1.check, 'click', function (evt) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.f['21']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['205']++;return _this6.optionClick(evt);
	         });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['206']++;chkCt++;
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['59'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['207']++;if (tf.enableNonEmptyOption) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['60'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['208']++;var li2 = (0, _dom.createCheckItem)(fltId + '_2', tf.nmOperator, tf.nonEmptyText);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['209']++;li2.className = this.itemCssClass;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['210']++;ul.appendChild(li2);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['211']++;(0, _event.addEvt)(li2.check, 'click', function (evt) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.f['22']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['212']++;return _this6.optionClick(evt);
	         });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['213']++;chkCt++;
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['60'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['214']++;return chkCt;
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['215']++;CheckList.prototype.setCheckListValues = function setCheckListValues(o) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['23']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['216']++;if (!o) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['61'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['217']++;return;
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['61'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['218']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['219']++;var chkValue = o.value;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['220']++;var chkIndex = parseInt(o.id.split('_')[2], 10);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['221']++;var colIdx = tf.getColumnIndexFromFilterId(o.id);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['222']++;var itemTag = 'LI';__cov_NJw2dcHQDxfEH0J9CTumOQ.s['223']++;var n = tf.getFilterElement(parseInt(colIdx, 10));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['224']++;var li = n.childNodes[chkIndex];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['225']++;var colIndex = n.getAttribute('colIndex');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['226']++;var fltValue = n.getAttribute('value');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['227']++;var fltIndexes = n.getAttribute('indexes');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['228']++;if (o.checked) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['62'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['229']++;if (chkValue === '') {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['63'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['230']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['65'][0]++, fltIndexes) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['65'][1]++, fltIndexes !== '')) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['64'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['231']++;var indSplit = fltIndexes.split(tf.separator);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['232']++;for (var u = 0; u < indSplit.length; u++) {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.s['233']++;var cChk = (0, _dom.elm)(tf.fltIds[colIndex] + '_' + indSplit[u]);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['234']++;if (cChk) {
	                     __cov_NJw2dcHQDxfEH0J9CTumOQ.b['66'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['235']++;cChk.checked = false;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['236']++;(0, _dom.removeClass)(n.childNodes[indSplit[u]], this.selectedItemCssClass);
	                  } else {
	                     __cov_NJw2dcHQDxfEH0J9CTumOQ.b['66'][1]++;
	                  }
	               }
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['64'][1]++;
	            }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['237']++;n.setAttribute('value', '');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['238']++;n.setAttribute('indexes', '');
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['63'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['239']++;fltValue = fltValue ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['67'][0]++, fltValue) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['67'][1]++, '');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['240']++;chkValue = (0, _string.trim)(fltValue + ' ' + chkValue + ' ' + tf.orOperator);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['241']++;chkIndex = fltIndexes + chkIndex + tf.separator;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['242']++;n.setAttribute('value', chkValue);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['243']++;n.setAttribute('indexes', chkIndex);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['244']++;if ((0, _dom.elm)(tf.fltIds[colIndex] + '_0')) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['68'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['245']++;(0, _dom.elm)(tf.fltIds[colIndex] + '_0').checked = false;
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['68'][1]++;
	            }
	         }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['246']++;if (li.nodeName === itemTag) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['69'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['247']++;(0, _dom.removeClass)(n.childNodes[0], this.selectedItemCssClass);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['248']++;(0, _dom.addClass)(li, this.selectedItemCssClass);
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['69'][1]++;
	         }
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['62'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['249']++;if (chkValue !== '') {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['70'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['250']++;var replaceValue = new RegExp((0, _string.rgxEsc)(chkValue + ' ' + tf.orOperator));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['251']++;fltValue = fltValue.replace(replaceValue, '');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['252']++;n.setAttribute('value', (0, _string.trim)(fltValue));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['253']++;var replaceIndex = new RegExp((0, _string.rgxEsc)(chkIndex + tf.separator));__cov_NJw2dcHQDxfEH0J9CTumOQ.s['254']++;fltIndexes = fltIndexes.replace(replaceIndex, '');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['255']++;n.setAttribute('indexes', fltIndexes);
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['70'][1]++;
	         }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['256']++;if (li.nodeName === itemTag) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['71'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['257']++;(0, _dom.removeClass)(li, this.selectedItemCssClass);
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['71'][1]++;
	         }
	      }
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['258']++;CheckList.prototype.selectOptions = function selectOptions(colIndex) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['24']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['259']++;var values = (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['73'][0]++, arguments.length > 1) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['73'][1]++, arguments[1] !== undefined) ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['72'][0]++, arguments[1]) : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['72'][1]++, []);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['260']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['261']++;var flt = tf.getFilterElement(colIndex);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['262']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['75'][0]++, tf.getFilterType(colIndex) !== _const.CHECKLIST) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['75'][1]++, !flt) || (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['75'][2]++, values.length === 0)) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['74'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['263']++;return;
	      } else {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.b['74'][1]++;
	      }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['264']++;var lisNb = (0, _dom.tag)(flt, 'li').length;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['265']++;flt.setAttribute('value', '');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['266']++;flt.setAttribute('indexes', '');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['267']++;for (var k = 0; k < lisNb; k++) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.s['268']++;var li = (0, _dom.tag)(flt, 'li')[k];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['269']++;var lbl = (0, _dom.tag)(li, 'label')[0];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['270']++;var chk = (0, _dom.tag)(li, 'input')[0];__cov_NJw2dcHQDxfEH0J9CTumOQ.s['271']++;var lblTxt = (0, _string.matchCase)((0, _dom.getText)(lbl), tf.caseSensitive);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['272']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['77'][0]++, lblTxt !== '') && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['77'][1]++, (0, _array.has)(values, lblTxt, tf.caseSensitive))) {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['76'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['273']++;chk.checked = true;
	         } else {
	            __cov_NJw2dcHQDxfEH0J9CTumOQ.b['76'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['274']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['79'][0]++, values.indexOf(tf.nmOperator) !== -1) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['79'][1]++, lblTxt === (0, _string.matchCase)(tf.nonEmptyText, tf.caseSensitive))) {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['78'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['275']++;chk.checked = true;
	            } else {
	               __cov_NJw2dcHQDxfEH0J9CTumOQ.b['78'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['276']++;if ((__cov_NJw2dcHQDxfEH0J9CTumOQ.b['81'][0]++, values.indexOf(tf.emOperator) !== -1) && (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['81'][1]++, lblTxt === (0, _string.matchCase)(tf.emptyText, tf.caseSensitive))) {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.b['80'][0]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['277']++;chk.checked = true;
	               } else {
	                  __cov_NJw2dcHQDxfEH0J9CTumOQ.b['80'][1]++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['278']++;chk.checked = false;
	               }
	            }
	         }__cov_NJw2dcHQDxfEH0J9CTumOQ.s['279']++;this.setCheckListValues(chk);
	      }
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['280']++;CheckList.prototype.getValues = function getValues(colIndex) {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['25']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['281']++;var tf = this.tf;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['282']++;var flt = tf.getFilterElement(colIndex);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['283']++;var fltAttr = flt.getAttribute('value');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['284']++;var values = (0, _types.isEmpty)(fltAttr) ? (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['82'][0]++, '') : (__cov_NJw2dcHQDxfEH0J9CTumOQ.b['82'][1]++, fltAttr);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['285']++;values = values.substr(0, values.length - 3);__cov_NJw2dcHQDxfEH0J9CTumOQ.s['286']++;values = values.split(' ' + tf.orOperator + ' ');__cov_NJw2dcHQDxfEH0J9CTumOQ.s['287']++;return values;
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['288']++;CheckList.prototype.destroy = function destroy() {
	      __cov_NJw2dcHQDxfEH0J9CTumOQ.f['26']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['289']++;var _this7 = this;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['290']++;this.emitter.off(['build-checklist-filter'], function (tf, colIndex, isLinked) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['27']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['291']++;return _this7.build(colIndex, isLinked);
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['292']++;this.emitter.off(['select-checklist-options'], function (tf, colIndex, values) {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['28']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['293']++;return _this7.selectOptions(colIndex, values);
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['294']++;this.emitter.off(['rows-changed'], function () {
	         __cov_NJw2dcHQDxfEH0J9CTumOQ.f['29']++;__cov_NJw2dcHQDxfEH0J9CTumOQ.s['295']++;return _this7.refreshAll();
	      });__cov_NJw2dcHQDxfEH0J9CTumOQ.s['296']++;this.initialized = false;
	   };__cov_NJw2dcHQDxfEH0J9CTumOQ.s['297']++;return CheckList;
	}(_feature.Feature);

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_o9UTP1rd8l4sOOn0BxKPZg = Function('return this')();
	if (!__cov_o9UTP1rd8l4sOOn0BxKPZg.__coverage__) {
	   __cov_o9UTP1rd8l4sOOn0BxKPZg.__coverage__ = {};
	}
	__cov_o9UTP1rd8l4sOOn0BxKPZg = __cov_o9UTP1rd8l4sOOn0BxKPZg.__coverage__;
	if (!__cov_o9UTP1rd8l4sOOn0BxKPZg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\rowsCounter.js']) {
	   __cov_o9UTP1rd8l4sOOn0BxKPZg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\rowsCounter.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\rowsCounter.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 1, "7": 0, "8": 0, "9": 1, "10": 0, "11": 0, "12": 0, "13": 1, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 1, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0 }, "fnMap": { "1": { "line": 14, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 16, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 18, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 26, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 33, "name": "RowsCounter", "loc": { "start": { "line": 17, "column": 4 }, "end": { "line": 17, "column": 20 } } }, "6": { "line": 107, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 144, "name": "(anonymous_7)", "loc": { "start": { "line": 125, "column": 12 }, "end": { "line": 125, "column": 12 } } }, "8": { "line": 147, "name": "(anonymous_8)", "loc": { "start": { "line": 126, "column": 42 }, "end": { "line": 126, "column": 42 } } }, "9": { "line": 163, "name": "refresh", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 198, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 214, "name": "(anonymous_11)", "loc": { "start": { "line": 192, "column": 12 }, "end": { "line": 192, "column": 12 } } }, "12": { "line": 217, "name": "(anonymous_12)", "loc": { "start": { "line": 193, "column": 43 }, "end": { "line": 193, "column": 43 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "end": { "line": 83, "column": 5 }, "start": { "line": 17, "column": 4 } }, "22": { "end": { "line": 17, "column": 20 }, "start": { "line": 17, "column": 20 } }, "23": { "end": { "line": 17, "column": 20 }, "start": { "line": 17, "column": 20 } }, "24": { "end": { "line": 21, "column": 8 }, "start": { "line": 21, "column": 8 } }, "25": { "end": { "line": 27, "column": 8 }, "start": { "line": 27, "column": 8 } }, "26": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "27": { "end": { "line": 41, "column": 8 }, "start": { "line": 41, "column": 8 } }, "28": { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, "29": { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }, "30": { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 8 } }, "31": { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 8 } }, "32": { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 8 } }, "33": { "end": { "line": 81, "column": 8 }, "start": { "line": 81, "column": 8 } }, "34": { "end": { "line": 17, "column": 20 }, "start": { "line": 17, "column": 20 } }, "35": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "36": { "end": { "line": 88, "column": 11 }, "start": { "line": 88, "column": 11 } }, "37": { "end": { "line": 91, "column": 9 }, "start": { "line": 89, "column": 8 } }, "38": { "end": { "line": 90, "column": 12 }, "start": { "line": 90, "column": 12 } }, "39": { "end": { "line": 93, "column": 8 }, "start": { "line": 93, "column": 8 } }, "40": { "end": { "line": 96, "column": 8 }, "start": { "line": 96, "column": 8 } }, "41": { "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 8 } }, "42": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "43": { "end": { "line": 100, "column": 8 }, "start": { "line": 100, "column": 8 } }, "44": { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 8 } }, "45": { "end": { "line": 106, "column": 9 }, "start": { "line": 104, "column": 8 } }, "46": { "end": { "line": 105, "column": 12 }, "start": { "line": 105, "column": 12 } }, "47": { "end": { "line": 107, "column": 8 }, "start": { "line": 107, "column": 8 } }, "48": { "end": { "line": 119, "column": 9 }, "start": { "line": 110, "column": 8 } }, "49": { "end": { "line": 111, "column": 12 }, "start": { "line": 111, "column": 12 } }, "50": { "end": { "line": 112, "column": 12 }, "start": { "line": 112, "column": 12 } }, "51": { "end": { "line": 113, "column": 12 }, "start": { "line": 113, "column": 12 } }, "52": { "end": { "line": 117, "column": 12 }, "start": { "line": 117, "column": 12 } }, "53": { "end": { "line": 118, "column": 12 }, "start": { "line": 118, "column": 12 } }, "54": { "end": { "line": 120, "column": 8 }, "start": { "line": 120, "column": 8 } }, "55": { "end": { "line": 121, "column": 8 }, "start": { "line": 121, "column": 8 } }, "56": { "end": { "line": 124, "column": 8 }, "start": { "line": 124, "column": 8 } }, "57": { "end": { "line": 125, "column": 12 }, "start": { "line": 125, "column": 12 } }, "58": { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 8 } }, "59": { "end": { "line": 126, "column": 42 }, "start": { "line": 126, "column": 42 } }, "60": { "end": { "line": 129, "column": 8 }, "start": { "line": 129, "column": 8 } }, "61": { "end": { "line": 130, "column": 8 }, "start": { "line": 130, "column": 8 } }, "62": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "63": { "end": { "line": 141, "column": 9 }, "start": { "line": 139, "column": 8 } }, "64": { "end": { "line": 140, "column": 12 }, "start": { "line": 140, "column": 12 } }, "65": { "end": { "line": 143, "column": 8 }, "start": { "line": 143, "column": 8 } }, "66": { "end": { "line": 145, "column": 8 }, "start": { "line": 145, "column": 8 } }, "67": { "end": { "line": 147, "column": 8 }, "start": { "line": 147, "column": 8 } }, "68": { "end": { "line": 168, "column": 9 }, "start": { "line": 148, "column": 8 } }, "69": { "end": { "line": 153, "column": 13 }, "start": { "line": 149, "column": 12 } }, "70": { "end": { "line": 150, "column": 16 }, "start": { "line": 150, "column": 16 } }, "71": { "end": { "line": 152, "column": 16 }, "start": { "line": 152, "column": 16 } }, "72": { "end": { "line": 155, "column": 12 }, "start": { "line": 155, "column": 12 } }, "73": { "end": { "line": 167, "column": 13 }, "start": { "line": 156, "column": 12 } }, "74": { "end": { "line": 158, "column": 16 }, "start": { "line": 158, "column": 16 } }, "75": { "end": { "line": 160, "column": 16 }, "start": { "line": 160, "column": 16 } }, "76": { "end": { "line": 165, "column": 16 }, "start": { "line": 165, "column": 16 } }, "77": { "end": { "line": 170, "column": 8 }, "start": { "line": 170, "column": 8 } }, "78": { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, "79": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "80": { "end": { "line": 177, "column": 14 }, "start": { "line": 177, "column": 14 } }, "81": { "end": { "line": 180, "column": 9 }, "start": { "line": 178, "column": 8 } }, "82": { "end": { "line": 179, "column": 12 }, "start": { "line": 179, "column": 12 } }, "83": { "end": { "line": 186, "column": 9 }, "start": { "line": 182, "column": 8 } }, "84": { "end": { "line": 183, "column": 12 }, "start": { "line": 183, "column": 12 } }, "85": { "end": { "line": 185, "column": 12 }, "start": { "line": 185, "column": 12 } }, "86": { "end": { "line": 187, "column": 8 }, "start": { "line": 187, "column": 8 } }, "87": { "end": { "line": 188, "column": 8 }, "start": { "line": 188, "column": 8 } }, "88": { "end": { "line": 191, "column": 8 }, "start": { "line": 191, "column": 8 } }, "89": { "end": { "line": 192, "column": 12 }, "start": { "line": 192, "column": 12 } }, "90": { "end": { "line": 193, "column": 8 }, "start": { "line": 193, "column": 8 } }, "91": { "end": { "line": 193, "column": 43 }, "start": { "line": 193, "column": 43 } }, "92": { "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 8 } }, "93": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 14, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 16, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 16, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 18, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 18, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 18, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 45, "type": "binary-expr", "locations": [{ "end": { "line": 27, "column": 24 }, "start": { "line": 27, "column": 24 } }, { "end": { "line": 27, "column": 8 }, "start": { "line": 27, "column": 52 } }] }, "11": { "line": 65, "type": "binary-expr", "locations": [{ "end": { "line": 47, "column": 20 }, "start": { "line": 47, "column": 20 } }, { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 43 } }] }, "12": { "line": 72, "type": "binary-expr", "locations": [{ "end": { "line": 54, "column": 35 }, "start": { "line": 54, "column": 35 } }, { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 63 } }] }, "13": { "line": 80, "type": "binary-expr", "locations": [{ "end": { "line": 62, "column": 24 }, "start": { "line": 62, "column": 24 } }, { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 39 } }] }, "14": { "line": 86, "type": "binary-expr", "locations": [{ "end": { "line": 68, "column": 24 }, "start": { "line": 68, "column": 24 } }, { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 48 } }] }, "15": { "line": 92, "type": "cond-expr", "locations": [{ "end": { "line": 74, "column": 38 }, "start": { "line": 75, "column": 12 } }, { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 38 } }] }, "16": { "line": 98, "type": "cond-expr", "locations": [{ "end": { "line": 81, "column": 37 }, "start": { "line": 82, "column": 12 } }, { "end": { "line": 81, "column": 8 }, "start": { "line": 81, "column": 37 } }] }, "17": { "line": 110, "type": "if", "locations": [{ "end": { "line": 89, "column": 8 }, "start": { "line": 89, "column": 8 } }, { "end": { "line": 89, "column": 8 }, "start": { "line": 89, "column": 8 } }] }, "18": { "line": 125, "type": "if", "locations": [{ "end": { "line": 104, "column": 8 }, "start": { "line": 104, "column": 8 } }, { "end": { "line": 104, "column": 8 }, "start": { "line": 104, "column": 8 } }] }, "19": { "line": 128, "type": "cond-expr", "locations": [{ "end": { "line": 107, "column": 23 }, "start": { "line": 107, "column": 40 } }, { "end": { "line": 107, "column": 8 }, "start": { "line": 107, "column": 50 } }] }, "20": { "line": 131, "type": "if", "locations": [{ "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }, { "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }] }, "21": { "line": 164, "type": "if", "locations": [{ "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 8 } }, { "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 8 } }] }, "22": { "line": 164, "type": "binary-expr", "locations": [{ "end": { "line": 139, "column": 12 }, "start": { "line": 139, "column": 12 } }, { "end": { "line": 139, "column": 8 }, "start": { "line": 139, "column": 33 } }] }, "23": { "line": 173, "type": "if", "locations": [{ "end": { "line": 148, "column": 8 }, "start": { "line": 148, "column": 8 } }, { "end": { "line": 148, "column": 8 }, "start": { "line": 148, "column": 8 } }] }, "24": { "line": 174, "type": "if", "locations": [{ "end": { "line": 149, "column": 12 }, "start": { "line": 149, "column": 12 } }, { "end": { "line": 149, "column": 12 }, "start": { "line": 149, "column": 12 } }] }, "25": { "line": 174, "type": "binary-expr", "locations": [{ "end": { "line": 149, "column": 16 }, "start": { "line": 149, "column": 16 } }, { "end": { "line": 149, "column": 12 }, "start": { "line": 149, "column": 21 } }] }, "26": { "line": 181, "type": "if", "locations": [{ "end": { "line": 156, "column": 12 }, "start": { "line": 156, "column": 12 } }, { "end": { "line": 156, "column": 12 }, "start": { "line": 156, "column": 12 } }] }, "27": { "line": 183, "type": "cond-expr", "locations": [{ "end": { "line": 159, "column": 21 }, "start": { "line": 159, "column": 49 } }, { "end": { "line": 158, "column": 37 }, "start": { "line": 159, "column": 53 } }] }, "28": { "line": 184, "type": "cond-expr", "locations": [{ "end": { "line": 161, "column": 20 }, "start": { "line": 163, "column": 24 } }, { "end": { "line": 160, "column": 16 }, "start": { "line": 164, "column": 24 } }] }, "29": { "line": 201, "type": "if", "locations": [{ "end": { "line": 178, "column": 8 }, "start": { "line": 178, "column": 8 } }, { "end": { "line": 178, "column": 8 }, "start": { "line": 178, "column": 8 } }] }, "30": { "line": 205, "type": "if", "locations": [{ "end": { "line": 182, "column": 8 }, "start": { "line": 182, "column": 8 } }, { "end": { "line": 182, "column": 8 }, "start": { "line": 182, "column": 8 } }] }, "31": { "line": 205, "type": "binary-expr", "locations": [{ "end": { "line": 182, "column": 12 }, "start": { "line": 182, "column": 12 } }, { "end": { "line": 182, "column": 8 }, "start": { "line": 182, "column": 30 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, createText, elm, removeElm} from '../dom';", "import {isFn, EMPTY_FN} from '../types';", "", "/**", " * Rows counter UI component", " * @export", " * @class RowsCounter", " * @extends {Feature}", " */", "export class RowsCounter extends Feature {", "", "    /**", "     * Creates an instance of RowsCounter", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'rowsCounter');", "", "        // TableFilter configuration", "        let f = this.config;", "", "        /**", "         * ID of custom container element", "         * @type {String}", "         */", "        this.targetId = f.rows_counter_target_id || null;", "", "        /**", "         * Container DOM element", "         * @type {DOMElement}", "         * @private", "         */", "        this.container = null;", "", "        /**", "         * Container DOM element for label displaying the total number of rows", "         * @type {DOMElement}", "         * @private", "         */", "        this.label = null;", "", "        /**", "         * Text preceding the total number of rows", "         * @type {String}", "         */", "        this.text = f.rows_counter_text || 'Rows: ';", "", "        /**", "         * Separator symbol appearing between the first and last visible rows of", "         * current page when paging is enabled. ie: Rows: 31-40 / 70", "         * @type {String}", "         */", "        this.fromToTextSeparator = f.from_to_text_separator || '-';", "", "        /**", "         * Separator symbol appearing between the first and last visible rows of", "         * current page and the total number of filterable rows when paging is", "         * enabled. ie: Rows: 31-40 / 70", "         * @type {String}", "         */", "        this.overText = f.over_text || ' / ';", "", "        /**", "         * Css class for container element", "         * @type {String}", "         */", "        this.cssClass = f.tot_rows_css_class || 'tot';", "", "        /**", "         * Callback fired before the counter is refreshed", "         * @type {Function}", "         */", "        this.onBeforeRefreshCounter = isFn(f.on_before_refresh_counter) ?", "            f.on_before_refresh_counter : EMPTY_FN;", "", "        /**", "         * Callback fired after the counter is refreshed", "         * @type {Function}", "         */", "        this.onAfterRefreshCounter = isFn(f.on_after_refresh_counter) ?", "            f.on_after_refresh_counter : EMPTY_FN;", "    }", "", "    /**", "     * Initializes RowsCounter instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        let tf = this.tf;", "", "        //rows counter container", "        let countDiv = createElm('div');", "        countDiv.className = this.cssClass;", "        //rows counter label", "        let countSpan = createElm('span');", "        let countText = createElm('span');", "        countText.appendChild(createText(this.text));", "", "        // counter is added to defined element", "        if (!this.targetId) {", "            tf.setToolbar();", "        }", "        let targetEl = !this.targetId ? tf.lDiv : elm(this.targetId);", "", "        //default container: 'lDiv'", "        if (!this.targetId) {", "            countDiv.appendChild(countText);", "            countDiv.appendChild(countSpan);", "            targetEl.appendChild(countDiv);", "        }", "        else {", "            //custom container, no need to append statusDiv", "            targetEl.appendChild(countText);", "            targetEl.appendChild(countSpan);", "        }", "        this.container = countDiv;", "        this.label = countSpan;", "", "        // subscribe to events", "        this.emitter.on(['after-filtering', 'grouped-by-page'],", "            () => this.refresh(tf.getValidRowsNb()));", "        this.emitter.on(['rows-changed'], () => this.refresh());", "", "        /** @inherited */", "        this.initialized = true;", "        this.refresh();", "    }", "", "    /**", "     * Refreshes the rows counter", "     * @param {Number} p Optional parameter the total number of rows to display", "     * @returns", "     */", "    refresh(p) {", "        if (!this.initialized || !this.isEnabled()) {", "            return;", "        }", "", "        let tf = this.tf;", "", "        this.onBeforeRefreshCounter(tf, this.label);", "", "        let totTxt;", "        if (!tf.paging) {", "            if (p && p !== '') {", "                totTxt = p;", "            } else {", "                totTxt = tf.getFilterableRowsNb() - tf.nbHiddenRows;", "            }", "        } else {", "            let paging = tf.feature('paging');", "            if (paging) {", "                //paging start row", "                let pagingStartRow = parseInt(paging.startPagingRow, 10) +", "                    ((tf.getValidRowsNb() > 0) ? 1 : 0);", "                let pagingEndRow =", "                    (pagingStartRow + paging.pagingLength) - 1 <=", "                    tf.getValidRowsNb() ?", "                        pagingStartRow + paging.pagingLength - 1 :", "                        tf.getValidRowsNb();", "                totTxt = pagingStartRow + this.fromToTextSeparator +", "                    pagingEndRow + this.overText + tf.getValidRowsNb();", "            }", "        }", "", "        this.label.innerHTML = totTxt;", "        this.onAfterRefreshCounter(tf, this.label, totTxt);", "    }", "", "    /**", "     * Remove feature", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        if (!this.targetId && this.container) {", "            removeElm(this.container);", "        } else {", "            elm(this.targetId).innerHTML = '';", "        }", "        this.label = null;", "        this.container = null;", "", "        // unsubscribe to events", "        this.emitter.off(['after-filtering', 'grouped-by-page'],", "            () => this.refresh(tf.getValidRowsNb()));", "        this.emitter.off(['rows-changed'], () => this.refresh());", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_o9UTP1rd8l4sOOn0BxKPZg = __cov_o9UTP1rd8l4sOOn0BxKPZg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\rowsCounter.js'];
	__cov_o9UTP1rd8l4sOOn0BxKPZg.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_o9UTP1rd8l4sOOn0BxKPZg.s['2']++;exports.RowsCounter = undefined;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['3']++;var _feature = __webpack_require__(10);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['4']++;var _dom = __webpack_require__(3);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['5']++;var _types = __webpack_require__(4);function _classCallCheck(instance, Constructor) {
	   __cov_o9UTP1rd8l4sOOn0BxKPZg.f['1']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['7']++;if (!(instance instanceof Constructor)) {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['1'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['8']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_o9UTP1rd8l4sOOn0BxKPZg.f['2']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['10']++;if (!self) {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['2'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['11']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['2'][1]++;
	   }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['12']++;return (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['4'][0]++, call) && ((__cov_o9UTP1rd8l4sOOn0BxKPZg.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['4'][2]++, typeof call === 'function')) ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['3'][0]++, call) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_o9UTP1rd8l4sOOn0BxKPZg.f['3']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['14']++;if ((__cov_o9UTP1rd8l4sOOn0BxKPZg.b['6'][0]++, typeof superClass !== 'function') && (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['6'][1]++, superClass !== null)) {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['5'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['15']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['5'][1]++;
	   }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['16']++;subClass.prototype = Object.create((__cov_o9UTP1rd8l4sOOn0BxKPZg.b['7'][0]++, superClass) && (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_o9UTP1rd8l4sOOn0BxKPZg.s['17']++;if (superClass) {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['8'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['18']++;Object.setPrototypeOf ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.b['8'][1]++;
	   }
	}__cov_o9UTP1rd8l4sOOn0BxKPZg.s['19']++;var RowsCounter = exports.RowsCounter = function (_Feature) {
	   __cov_o9UTP1rd8l4sOOn0BxKPZg.f['4']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['20']++;_inherits(RowsCounter, _Feature);function RowsCounter(tf) {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.f['5']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['22']++;_classCallCheck(this, RowsCounter);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['23']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'rowsCounter'));__cov_o9UTP1rd8l4sOOn0BxKPZg.s['24']++;var f = _this.config;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['25']++;_this.targetId = (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['10'][0]++, f.rows_counter_target_id) || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['10'][1]++, null);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['26']++;_this.container = null;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['27']++;_this.label = null;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['28']++;_this.text = (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['11'][0]++, f.rows_counter_text) || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['11'][1]++, 'Rows: ');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['29']++;_this.fromToTextSeparator = (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['12'][0]++, f.from_to_text_separator) || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['12'][1]++, '-');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['30']++;_this.overText = (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['13'][0]++, f.over_text) || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['13'][1]++, ' / ');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['31']++;_this.cssClass = (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['14'][0]++, f.tot_rows_css_class) || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['14'][1]++, 'tot');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['32']++;_this.onBeforeRefreshCounter = (0, _types.isFn)(f.on_before_refresh_counter) ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['15'][0]++, f.on_before_refresh_counter) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['15'][1]++, _types.EMPTY_FN);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['33']++;_this.onAfterRefreshCounter = (0, _types.isFn)(f.on_after_refresh_counter) ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['16'][0]++, f.on_after_refresh_counter) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['16'][1]++, _types.EMPTY_FN);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['34']++;return _this;
	   }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['35']++;RowsCounter.prototype.init = function init() {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.f['6']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['36']++;var _this2 = this;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['37']++;if (this.initialized) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['17'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['38']++;return;
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['17'][1]++;
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['39']++;var tf = this.tf;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['40']++;var countDiv = (0, _dom.createElm)('div');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['41']++;countDiv.className = this.cssClass;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['42']++;var countSpan = (0, _dom.createElm)('span');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['43']++;var countText = (0, _dom.createElm)('span');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['44']++;countText.appendChild((0, _dom.createText)(this.text));__cov_o9UTP1rd8l4sOOn0BxKPZg.s['45']++;if (!this.targetId) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['18'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['46']++;tf.setToolbar();
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['18'][1]++;
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['47']++;var targetEl = !this.targetId ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['19'][0]++, tf.lDiv) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['19'][1]++, (0, _dom.elm)(this.targetId));__cov_o9UTP1rd8l4sOOn0BxKPZg.s['48']++;if (!this.targetId) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['20'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['49']++;countDiv.appendChild(countText);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['50']++;countDiv.appendChild(countSpan);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['51']++;targetEl.appendChild(countDiv);
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['20'][1]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['52']++;targetEl.appendChild(countText);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['53']++;targetEl.appendChild(countSpan);
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['54']++;this.container = countDiv;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['55']++;this.label = countSpan;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['56']++;this.emitter.on(['after-filtering', 'grouped-by-page'], function () {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.f['7']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['57']++;return _this2.refresh(tf.getValidRowsNb());
	      });__cov_o9UTP1rd8l4sOOn0BxKPZg.s['58']++;this.emitter.on(['rows-changed'], function () {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.f['8']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['59']++;return _this2.refresh();
	      });__cov_o9UTP1rd8l4sOOn0BxKPZg.s['60']++;this.initialized = true;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['61']++;this.refresh();
	   };__cov_o9UTP1rd8l4sOOn0BxKPZg.s['62']++;RowsCounter.prototype.refresh = function refresh(p) {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.f['9']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['63']++;if ((__cov_o9UTP1rd8l4sOOn0BxKPZg.b['22'][0]++, !this.initialized) || (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['22'][1]++, !this.isEnabled())) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['21'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['64']++;return;
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['21'][1]++;
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['65']++;var tf = this.tf;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['66']++;this.onBeforeRefreshCounter(tf, this.label);__cov_o9UTP1rd8l4sOOn0BxKPZg.s['67']++;var totTxt = void 0;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['68']++;if (!tf.paging) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['23'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['69']++;if ((__cov_o9UTP1rd8l4sOOn0BxKPZg.b['25'][0]++, p) && (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['25'][1]++, p !== '')) {
	            __cov_o9UTP1rd8l4sOOn0BxKPZg.b['24'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['70']++;totTxt = p;
	         } else {
	            __cov_o9UTP1rd8l4sOOn0BxKPZg.b['24'][1]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['71']++;totTxt = tf.getFilterableRowsNb() - tf.nbHiddenRows;
	         }
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['23'][1]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['72']++;var paging = tf.feature('paging');__cov_o9UTP1rd8l4sOOn0BxKPZg.s['73']++;if (paging) {
	            __cov_o9UTP1rd8l4sOOn0BxKPZg.b['26'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['74']++;var pagingStartRow = parseInt(paging.startPagingRow, 10) + (tf.getValidRowsNb() > 0 ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['27'][0]++, 1) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['27'][1]++, 0));__cov_o9UTP1rd8l4sOOn0BxKPZg.s['75']++;var pagingEndRow = pagingStartRow + paging.pagingLength - 1 <= tf.getValidRowsNb() ? (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['28'][0]++, pagingStartRow + paging.pagingLength - 1) : (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['28'][1]++, tf.getValidRowsNb());__cov_o9UTP1rd8l4sOOn0BxKPZg.s['76']++;totTxt = pagingStartRow + this.fromToTextSeparator + pagingEndRow + this.overText + tf.getValidRowsNb();
	         } else {
	            __cov_o9UTP1rd8l4sOOn0BxKPZg.b['26'][1]++;
	         }
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['77']++;this.label.innerHTML = totTxt;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['78']++;this.onAfterRefreshCounter(tf, this.label, totTxt);
	   };__cov_o9UTP1rd8l4sOOn0BxKPZg.s['79']++;RowsCounter.prototype.destroy = function destroy() {
	      __cov_o9UTP1rd8l4sOOn0BxKPZg.f['10']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['80']++;var _this3 = this;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['81']++;if (!this.initialized) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['29'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['82']++;return;
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['29'][1]++;
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['83']++;if ((__cov_o9UTP1rd8l4sOOn0BxKPZg.b['31'][0]++, !this.targetId) && (__cov_o9UTP1rd8l4sOOn0BxKPZg.b['31'][1]++, this.container)) {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['30'][0]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['84']++;(0, _dom.removeElm)(this.container);
	      } else {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.b['30'][1]++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['85']++;(0, _dom.elm)(this.targetId).innerHTML = '';
	      }__cov_o9UTP1rd8l4sOOn0BxKPZg.s['86']++;this.label = null;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['87']++;this.container = null;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['88']++;this.emitter.off(['after-filtering', 'grouped-by-page'], function () {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.f['11']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['89']++;return _this3.refresh(tf.getValidRowsNb());
	      });__cov_o9UTP1rd8l4sOOn0BxKPZg.s['90']++;this.emitter.off(['rows-changed'], function () {
	         __cov_o9UTP1rd8l4sOOn0BxKPZg.f['12']++;__cov_o9UTP1rd8l4sOOn0BxKPZg.s['91']++;return _this3.refresh();
	      });__cov_o9UTP1rd8l4sOOn0BxKPZg.s['92']++;this.initialized = false;
	   };__cov_o9UTP1rd8l4sOOn0BxKPZg.s['93']++;return RowsCounter;
	}(_feature.Feature);

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_ghskLXdP3kS$tmw2XOv1uA = Function('return this')();
	if (!__cov_ghskLXdP3kS$tmw2XOv1uA.__coverage__) {
	   __cov_ghskLXdP3kS$tmw2XOv1uA.__coverage__ = {};
	}
	__cov_ghskLXdP3kS$tmw2XOv1uA = __cov_ghskLXdP3kS$tmw2XOv1uA.__coverage__;
	if (!__cov_ghskLXdP3kS$tmw2XOv1uA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\statusBar.js']) {
	   __cov_ghskLXdP3kS$tmw2XOv1uA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\statusBar.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\statusBar.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 1, "8": 0, "9": 0, "10": 1, "11": 0, "12": 0, "13": 0, "14": 1, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 1, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0 }, "fnMap": { "1": { "line": 16, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 18, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 20, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 31, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 38, "name": "StatusBar", "loc": { "start": { "line": 30, "column": 4 }, "end": { "line": 30, "column": 20 } } }, "6": { "line": 177, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 219, "name": "(anonymous_7)", "loc": { "start": { "line": 210, "column": 41 }, "end": { "line": 210, "column": 41 } } }, "8": { "line": 222, "name": "(anonymous_8)", "loc": { "start": { "line": 212, "column": 12 }, "end": { "line": 212, "column": 12 } } }, "9": { "line": 225, "name": "(anonymous_9)", "loc": { "start": { "line": 214, "column": 12 }, "end": { "line": 214, "column": 12 } } }, "10": { "line": 228, "name": "(anonymous_10)", "loc": { "start": { "line": 215, "column": 48 }, "end": { "line": 215, "column": 48 } } }, "11": { "line": 231, "name": "(anonymous_11)", "loc": { "start": { "line": 218, "column": 12 }, "end": { "line": 218, "column": 12 } } }, "12": { "line": 234, "name": "(anonymous_12)", "loc": { "start": { "line": 220, "column": 12 }, "end": { "line": 220, "column": 12 } } }, "13": { "line": 237, "name": "(anonymous_13)", "loc": { "start": { "line": 222, "column": 12 }, "end": { "line": 222, "column": 12 } } }, "14": { "line": 240, "name": "(anonymous_14)", "loc": { "start": { "line": 224, "column": 12 }, "end": { "line": 224, "column": 12 } } }, "15": { "line": 243, "name": "(anonymous_15)", "loc": { "start": { "line": 226, "column": 12 }, "end": { "line": 226, "column": 12 } } }, "16": { "line": 247, "name": "(anonymous_16)", "loc": { "start": { "line": 228, "column": 27 }, "end": { "line": 228, "column": 27 } } }, "17": { "line": 263, "name": "message", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "18": { "line": 275, "name": "(anonymous_18)", "loc": { "start": { "line": 248, "column": 24 }, "end": { "line": 248, "column": 30 } } }, "19": { "line": 290, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "20": { "line": 308, "name": "(anonymous_20)", "loc": { "start": { "line": 277, "column": 42 }, "end": { "line": 277, "column": 42 } } }, "21": { "line": 311, "name": "(anonymous_21)", "loc": { "start": { "line": 279, "column": 12 }, "end": { "line": 279, "column": 12 } } }, "22": { "line": 314, "name": "(anonymous_22)", "loc": { "start": { "line": 281, "column": 12 }, "end": { "line": 281, "column": 12 } } }, "23": { "line": 317, "name": "(anonymous_23)", "loc": { "start": { "line": 283, "column": 12 }, "end": { "line": 283, "column": 12 } } }, "24": { "line": 320, "name": "(anonymous_24)", "loc": { "start": { "line": 285, "column": 12 }, "end": { "line": 285, "column": 12 } } }, "25": { "line": 323, "name": "(anonymous_25)", "loc": { "start": { "line": 286, "column": 43 }, "end": { "line": 286, "column": 43 } } }, "26": { "line": 326, "name": "(anonymous_26)", "loc": { "start": { "line": 289, "column": 12 }, "end": { "line": 289, "column": 12 } } }, "27": { "line": 329, "name": "(anonymous_27)", "loc": { "start": { "line": 291, "column": 12 }, "end": { "line": 291, "column": 12 } } }, "28": { "line": 332, "name": "(anonymous_28)", "loc": { "start": { "line": 293, "column": 12 }, "end": { "line": 293, "column": 12 } } }, "29": { "line": 336, "name": "(anonymous_29)", "loc": { "start": { "line": 295, "column": 28 }, "end": { "line": 295, "column": 28 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "end": { "line": 165, "column": 5 }, "start": { "line": 30, "column": 4 } }, "24": { "end": { "line": 30, "column": 20 }, "start": { "line": 30, "column": 20 } }, "25": { "end": { "line": 30, "column": 20 }, "start": { "line": 30, "column": 20 } }, "26": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "27": { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 8 } }, "28": { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, "29": { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }, "30": { "end": { "line": 61, "column": 8 }, "start": { "line": 61, "column": 8 } }, "31": { "end": { "line": 67, "column": 8 }, "start": { "line": 67, "column": 8 } }, "32": { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 8 } }, "33": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "34": { "end": { "line": 86, "column": 8 }, "start": { "line": 86, "column": 8 } }, "35": { "end": { "line": 93, "column": 8 }, "start": { "line": 93, "column": 8 } }, "36": { "end": { "line": 100, "column": 8 }, "start": { "line": 100, "column": 8 } }, "37": { "end": { "line": 106, "column": 8 }, "start": { "line": 106, "column": 8 } }, "38": { "end": { "line": 112, "column": 8 }, "start": { "line": 112, "column": 8 } }, "39": { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, "40": { "end": { "line": 125, "column": 8 }, "start": { "line": 125, "column": 8 } }, "41": { "end": { "line": 131, "column": 8 }, "start": { "line": 131, "column": 8 } }, "42": { "end": { "line": 138, "column": 8 }, "start": { "line": 138, "column": 8 } }, "43": { "end": { "line": 144, "column": 8 }, "start": { "line": 144, "column": 8 } }, "44": { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 8 } }, "45": { "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }, "46": { "end": { "line": 164, "column": 8 }, "start": { "line": 164, "column": 8 } }, "47": { "end": { "line": 30, "column": 20 }, "start": { "line": 30, "column": 20 } }, "48": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "49": { "end": { "line": 170, "column": 11 }, "start": { "line": 170, "column": 11 } }, "50": { "end": { "line": 173, "column": 9 }, "start": { "line": 171, "column": 8 } }, "51": { "end": { "line": 172, "column": 12 }, "start": { "line": 172, "column": 12 } }, "52": { "end": { "line": 175, "column": 8 }, "start": { "line": 175, "column": 8 } }, "53": { "end": { "line": 176, "column": 8 }, "start": { "line": 176, "column": 8 } }, "54": { "end": { "line": 179, "column": 8 }, "start": { "line": 179, "column": 8 } }, "55": { "end": { "line": 180, "column": 8 }, "start": { "line": 180, "column": 8 } }, "56": { "end": { "line": 183, "column": 8 }, "start": { "line": 183, "column": 8 } }, "57": { "end": { "line": 185, "column": 8 }, "start": { "line": 185, "column": 8 } }, "58": { "end": { "line": 186, "column": 8 }, "start": { "line": 186, "column": 8 } }, "59": { "end": { "line": 191, "column": 9 }, "start": { "line": 189, "column": 8 } }, "60": { "end": { "line": 190, "column": 12 }, "start": { "line": 190, "column": 12 } }, "61": { "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 8 } }, "62": { "end": { "line": 203, "column": 9 }, "start": { "line": 195, "column": 8 } }, "63": { "end": { "line": 196, "column": 12 }, "start": { "line": 196, "column": 12 } }, "64": { "end": { "line": 197, "column": 12 }, "start": { "line": 197, "column": 12 } }, "65": { "end": { "line": 198, "column": 12 }, "start": { "line": 198, "column": 12 } }, "66": { "end": { "line": 201, "column": 12 }, "start": { "line": 201, "column": 12 } }, "67": { "end": { "line": 202, "column": 12 }, "start": { "line": 202, "column": 12 } }, "68": { "end": { "line": 205, "column": 8 }, "start": { "line": 205, "column": 8 } }, "69": { "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 8 } }, "70": { "end": { "line": 207, "column": 8 }, "start": { "line": 207, "column": 8 } }, "71": { "end": { "line": 210, "column": 8 }, "start": { "line": 210, "column": 8 } }, "72": { "end": { "line": 210, "column": 41 }, "start": { "line": 210, "column": 41 } }, "73": { "end": { "line": 211, "column": 8 }, "start": { "line": 211, "column": 8 } }, "74": { "end": { "line": 212, "column": 12 }, "start": { "line": 212, "column": 12 } }, "75": { "end": { "line": 213, "column": 8 }, "start": { "line": 213, "column": 8 } }, "76": { "end": { "line": 214, "column": 12 }, "start": { "line": 214, "column": 12 } }, "77": { "end": { "line": 215, "column": 8 }, "start": { "line": 215, "column": 8 } }, "78": { "end": { "line": 215, "column": 48 }, "start": { "line": 215, "column": 48 } }, "79": { "end": { "line": 217, "column": 8 }, "start": { "line": 217, "column": 8 } }, "80": { "end": { "line": 218, "column": 12 }, "start": { "line": 218, "column": 12 } }, "81": { "end": { "line": 219, "column": 8 }, "start": { "line": 219, "column": 8 } }, "82": { "end": { "line": 220, "column": 12 }, "start": { "line": 220, "column": 12 } }, "83": { "end": { "line": 221, "column": 8 }, "start": { "line": 221, "column": 8 } }, "84": { "end": { "line": 222, "column": 12 }, "start": { "line": 222, "column": 12 } }, "85": { "end": { "line": 223, "column": 8 }, "start": { "line": 223, "column": 8 } }, "86": { "end": { "line": 224, "column": 12 }, "start": { "line": 224, "column": 12 } }, "87": { "end": { "line": 225, "column": 8 }, "start": { "line": 225, "column": 8 } }, "88": { "end": { "line": 226, "column": 12 }, "start": { "line": 226, "column": 12 } }, "89": { "end": { "line": 228, "column": 8 }, "start": { "line": 228, "column": 8 } }, "90": { "end": { "line": 228, "column": 27 }, "start": { "line": 228, "column": 27 } }, "91": { "end": { "line": 233, "column": 8 }, "start": { "line": 233, "column": 8 } }, "92": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "93": { "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 20 } }, "94": { "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 20 } }, "95": { "end": { "line": 243, "column": 9 }, "start": { "line": 241, "column": 8 } }, "96": { "end": { "line": 242, "column": 12 }, "start": { "line": 242, "column": 12 } }, "97": { "end": { "line": 245, "column": 8 }, "start": { "line": 245, "column": 8 } }, "98": { "end": { "line": 247, "column": 8 }, "start": { "line": 247, "column": 8 } }, "99": { "end": { "line": 248, "column": 8 }, "start": { "line": 248, "column": 8 } }, "100": { "end": { "line": 251, "column": 13 }, "start": { "line": 249, "column": 12 } }, "101": { "end": { "line": 250, "column": 16 }, "start": { "line": 250, "column": 16 } }, "102": { "end": { "line": 252, "column": 12 }, "start": { "line": 252, "column": 12 } }, "103": { "end": { "line": 254, "column": 12 }, "start": { "line": 254, "column": 12 } }, "104": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "105": { "end": { "line": 261, "column": 14 }, "start": { "line": 261, "column": 14 } }, "106": { "end": { "line": 264, "column": 9 }, "start": { "line": 262, "column": 8 } }, "107": { "end": { "line": 263, "column": 12 }, "start": { "line": 263, "column": 12 } }, "108": { "end": { "line": 266, "column": 8 }, "start": { "line": 266, "column": 8 } }, "109": { "end": { "line": 268, "column": 8 }, "start": { "line": 268, "column": 8 } }, "110": { "end": { "line": 271, "column": 9 }, "start": { "line": 269, "column": 8 } }, "111": { "end": { "line": 270, "column": 12 }, "start": { "line": 270, "column": 12 } }, "112": { "end": { "line": 272, "column": 8 }, "start": { "line": 272, "column": 8 } }, "113": { "end": { "line": 273, "column": 8 }, "start": { "line": 273, "column": 8 } }, "114": { "end": { "line": 274, "column": 8 }, "start": { "line": 274, "column": 8 } }, "115": { "end": { "line": 277, "column": 8 }, "start": { "line": 277, "column": 8 } }, "116": { "end": { "line": 277, "column": 42 }, "start": { "line": 277, "column": 42 } }, "117": { "end": { "line": 278, "column": 8 }, "start": { "line": 278, "column": 8 } }, "118": { "end": { "line": 279, "column": 12 }, "start": { "line": 279, "column": 12 } }, "119": { "end": { "line": 280, "column": 8 }, "start": { "line": 280, "column": 8 } }, "120": { "end": { "line": 281, "column": 12 }, "start": { "line": 281, "column": 12 } }, "121": { "end": { "line": 282, "column": 8 }, "start": { "line": 282, "column": 8 } }, "122": { "end": { "line": 283, "column": 12 }, "start": { "line": 283, "column": 12 } }, "123": { "end": { "line": 284, "column": 8 }, "start": { "line": 284, "column": 8 } }, "124": { "end": { "line": 285, "column": 12 }, "start": { "line": 285, "column": 12 } }, "125": { "end": { "line": 286, "column": 8 }, "start": { "line": 286, "column": 8 } }, "126": { "end": { "line": 286, "column": 43 }, "start": { "line": 286, "column": 43 } }, "127": { "end": { "line": 288, "column": 8 }, "start": { "line": 288, "column": 8 } }, "128": { "end": { "line": 289, "column": 12 }, "start": { "line": 289, "column": 12 } }, "129": { "end": { "line": 290, "column": 8 }, "start": { "line": 290, "column": 8 } }, "130": { "end": { "line": 291, "column": 12 }, "start": { "line": 291, "column": 12 } }, "131": { "end": { "line": 292, "column": 8 }, "start": { "line": 292, "column": 8 } }, "132": { "end": { "line": 293, "column": 12 }, "start": { "line": 293, "column": 12 } }, "133": { "end": { "line": 295, "column": 8 }, "start": { "line": 295, "column": 8 } }, "134": { "end": { "line": 295, "column": 28 }, "start": { "line": 295, "column": 28 } }, "135": { "end": { "line": 297, "column": 8 }, "start": { "line": 297, "column": 8 } }, "136": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 18, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 18, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 20, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 50, "type": "binary-expr", "locations": [{ "end": { "line": 40, "column": 24 }, "start": { "line": 40, "column": 24 } }, { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 50 } }] }, "11": { "line": 77, "type": "binary-expr", "locations": [{ "end": { "line": 67, "column": 20 }, "start": { "line": 67, "column": 20 } }, { "end": { "line": 67, "column": 8 }, "start": { "line": 67, "column": 41 } }] }, "12": { "line": 83, "type": "binary-expr", "locations": [{ "end": { "line": 73, "column": 24 }, "start": { "line": 73, "column": 24 } }, { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 50 } }] }, "13": { "line": 96, "type": "cond-expr", "locations": [{ "end": { "line": 86, "column": 31 }, "start": { "line": 87, "column": 12 } }, { "end": { "line": 86, "column": 8 }, "start": { "line": 86, "column": 31 } }] }, "14": { "line": 102, "type": "cond-expr", "locations": [{ "end": { "line": 93, "column": 30 }, "start": { "line": 94, "column": 12 } }, { "end": { "line": 93, "column": 8 }, "start": { "line": 93, "column": 30 } }] }, "15": { "line": 108, "type": "binary-expr", "locations": [{ "end": { "line": 100, "column": 25 }, "start": { "line": 100, "column": 25 } }, { "end": { "line": 100, "column": 8 }, "start": { "line": 100, "column": 41 } }] }, "16": { "line": 114, "type": "binary-expr", "locations": [{ "end": { "line": 106, "column": 27 }, "start": { "line": 106, "column": 27 } }, { "end": { "line": 106, "column": 8 }, "start": { "line": 106, "column": 45 } }] }, "17": { "line": 120, "type": "binary-expr", "locations": [{ "end": { "line": 112, "column": 36 }, "start": { "line": 112, "column": 36 } }, { "end": { "line": 112, "column": 8 }, "start": { "line": 113, "column": 12 } }] }, "18": { "line": 126, "type": "binary-expr", "locations": [{ "end": { "line": 119, "column": 29 }, "start": { "line": 119, "column": 29 } }, { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 50 } }] }, "19": { "line": 132, "type": "binary-expr", "locations": [{ "end": { "line": 125, "column": 24 }, "start": { "line": 125, "column": 24 } }, { "end": { "line": 125, "column": 8 }, "start": { "line": 125, "column": 39 } }] }, "20": { "line": 138, "type": "binary-expr", "locations": [{ "end": { "line": 131, "column": 32 }, "start": { "line": 131, "column": 32 } }, { "end": { "line": 131, "column": 8 }, "start": { "line": 132, "column": 12 } }] }, "21": { "line": 144, "type": "binary-expr", "locations": [{ "end": { "line": 138, "column": 28 }, "start": { "line": 138, "column": 28 } }, { "end": { "line": 138, "column": 8 }, "start": { "line": 138, "column": 48 } }] }, "22": { "line": 150, "type": "binary-expr", "locations": [{ "end": { "line": 144, "column": 34 }, "start": { "line": 144, "column": 34 } }, { "end": { "line": 144, "column": 8 }, "start": { "line": 145, "column": 12 } }] }, "23": { "line": 156, "type": "binary-expr", "locations": [{ "end": { "line": 151, "column": 23 }, "start": { "line": 151, "column": 23 } }, { "end": { "line": 151, "column": 8 }, "start": { "line": 151, "column": 37 } }] }, "24": { "line": 162, "type": "binary-expr", "locations": [{ "end": { "line": 157, "column": 33 }, "start": { "line": 157, "column": 33 } }, { "end": { "line": 157, "column": 8 }, "start": { "line": 158, "column": 12 } }] }, "25": { "line": 168, "type": "binary-expr", "locations": [{ "end": { "line": 164, "column": 29 }, "start": { "line": 164, "column": 29 } }, { "end": { "line": 164, "column": 8 }, "start": { "line": 164, "column": 50 } }] }, "26": { "line": 180, "type": "if", "locations": [{ "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }] }, "27": { "line": 198, "type": "if", "locations": [{ "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }, { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }] }, "28": { "line": 201, "type": "cond-expr", "locations": [{ "end": { "line": 192, "column": 23 }, "start": { "line": 192, "column": 42 } }, { "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 52 } }] }, "29": { "line": 204, "type": "if", "locations": [{ "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 8 } }, { "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 8 } }] }, "30": { "line": 266, "type": "cond-expr", "locations": [{ "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 20 } }, { "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 16 } }] }, "31": { "line": 266, "type": "binary-expr", "locations": [{ "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 20 } }, { "end": { "line": 240, "column": 20 }, "start": { "line": 240, "column": 20 } }] }, "32": { "line": 268, "type": "if", "locations": [{ "end": { "line": 241, "column": 8 }, "start": { "line": 241, "column": 8 } }, { "end": { "line": 241, "column": 8 }, "start": { "line": 241, "column": 8 } }] }, "33": { "line": 274, "type": "cond-expr", "locations": [{ "end": { "line": 247, "column": 16 }, "start": { "line": 247, "column": 27 } }, { "end": { "line": 247, "column": 8 }, "start": { "line": 247, "column": 40 } }] }, "34": { "line": 276, "type": "if", "locations": [{ "end": { "line": 249, "column": 12 }, "start": { "line": 249, "column": 12 } }, { "end": { "line": 249, "column": 12 }, "start": { "line": 249, "column": 12 } }] }, "35": { "line": 293, "type": "if", "locations": [{ "end": { "line": 262, "column": 8 }, "start": { "line": 262, "column": 8 } }, { "end": { "line": 262, "column": 8 }, "start": { "line": 262, "column": 8 } }] }, "36": { "line": 300, "type": "if", "locations": [{ "end": { "line": 269, "column": 8 }, "start": { "line": 269, "column": 8 } }, { "end": { "line": 269, "column": 8 }, "start": { "line": 269, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {root} from '../root';", "import {createElm, createText, elm, removeElm} from '../dom';", "import {isFn, EMPTY_FN} from '../types';", "", "const EVENTS = [", "    'after-filtering',", "    'after-populating-filter',", "    'after-page-change',", "    'after-clearing-filters',", "    'after-page-length-change',", "    'after-reset-page',", "    'after-reset-page-length',", "    'after-loading-extensions',", "    'after-loading-themes'", "];", "", "/**", " * Status bar UI component", " * @export", " * @class StatusBar", " * @extends {Feature}", " */", "export class StatusBar extends Feature {", "", "    /**", "     * Creates an instance of StatusBar", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'statusBar');", "", "        // Configuration object", "        let f = this.config;", "", "        /**", "         * ID of custom container element", "         * @type {String}", "         */", "        this.targetId = f.status_bar_target_id || null;", "", "        /**", "         * Container DOM element", "         * @type {DOMElement}", "         * @private", "         */", "        this.container = null;", "", "        /**", "         * Message container DOM element", "         * @type {DOMElement}", "         * @private", "         */", "        this.msgContainer = null;", "", "        /**", "         * Label container DOM element", "         * @type {DOMElement}", "         * @private", "         */", "        this.labelContainer = null;", "", "        /**", "         * Text preceding status message", "         * @type {String}", "         */", "        this.text = f.status_bar_text || '';", "", "        /**", "         * Css class for container element", "         * @type {String}", "         */", "        this.cssClass = f.status_bar_css_class || 'status';", "", "        /**", "         * Message visibility duration in milliseconds", "         * @type {Number}", "         * @private", "         */", "        this.delay = 250;", "", "        /**", "         * Callback fired before the message is displayed", "         * @type {Function}", "         */", "        this.onBeforeShowMsg = isFn(f.on_before_show_msg) ?", "            f.on_before_show_msg : EMPTY_FN;", "", "        /**", "         * Callback fired after the message is displayed", "         * @type {Function}", "         */", "        this.onAfterShowMsg = isFn(f.on_after_show_msg) ?", "            f.on_after_show_msg : EMPTY_FN;", "", "        /**", "         * Message appearing upon filtering", "         * @type {String}", "         */", "        this.msgFilter = f.msg_filter || 'Filtering data...';", "", "        /**", "         * Message appearing when a drop-down filter is populated", "         * @type {String}", "         */", "        this.msgPopulate = f.msg_populate || 'Populating filter...';", "", "        /**", "         * Message appearing when a checklist filter is populated", "         * @type {String}", "         */", "        this.msgPopulateCheckList = f.msg_populate_checklist ||", "            'Populating list...';", "", "        /**", "         * Message appearing when a pagination page is changed", "         * @type {String}", "         */", "        this.msgChangePage = f.msg_change_page || 'Collecting paging data...';", "", "        /**", "         * Message appearing when filters are cleared", "         * @type {String}", "         */", "        this.msgClear = f.msg_clear || 'Clearing filters...';", "", "        /**", "         * Message appearing when the page length is changed", "         * @type {String}", "         */", "        this.msgChangeResults = f.msg_change_results ||", "            'Changing results per page...';", "", "        /**", "         * Message appearing when the page is re-set", "         * @type {String}", "         */", "        this.msgResetPage = f.msg_reset_page || 'Re-setting page...';", "", "        /**", "         * Message appearing when the page length is re-set", "         * @type {String}", "         */", "        this.msgResetPageLength = f.msg_reset_page_length ||", "            'Re-setting page length...';", "", "        /**", "         * Message appearing upon column sorting", "         * @type {String}", "         */", "        this.msgSort = f.msg_sort || 'Sorting data...';", "", "        /**", "         * Message appearing when extensions are loading", "         * @type {String}", "         */", "        this.msgLoadExtensions = f.msg_load_extensions ||", "            'Loading extensions...';", "", "        /**", "         * Message appearing when themes are loading", "         * @type {String}", "         */", "        this.msgLoadThemes = f.msg_load_themes || 'Loading theme(s)...';", "    }", "", "    /**", "     * Initializes StatusBar instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        let tf = this.tf;", "        let emitter = this.emitter;", "", "        //status bar container", "        let statusDiv = createElm('div');", "        statusDiv.className = this.cssClass;", "", "        //status bar label", "        let statusSpan = createElm('span');", "        //preceding text", "        let statusSpanText = createElm('span');", "        statusSpanText.appendChild(createText(this.text));", "", "        // target element container", "        if (!this.targetId) {", "            tf.setToolbar();", "        }", "        let targetEl = (!this.targetId) ? tf.lDiv : elm(this.targetId);", "", "        //default container: 'lDiv'", "        if (!this.targetId) {", "            statusDiv.appendChild(statusSpanText);", "            statusDiv.appendChild(statusSpan);", "            targetEl.appendChild(statusDiv);", "        } else {", "            // custom container, no need to append statusDiv", "            targetEl.appendChild(statusSpanText);", "            targetEl.appendChild(statusSpan);", "        }", "", "        this.container = statusDiv;", "        this.msgContainer = statusSpan;", "        this.labelContainer = statusSpanText;", "", "        // Subscribe to events", "        emitter.on(['before-filtering'], () => this.message(this.msgFilter));", "        emitter.on(['before-populating-filter'],", "            () => this.message(this.msgPopulate));", "        emitter.on(['before-page-change'],", "            () => this.message(this.msgChangePage));", "        emitter.on(['before-clearing-filters'], () =>", "            this.message(this.msgClear));", "        emitter.on(['before-page-length-change'],", "            () => this.message(this.msgChangeResults));", "        emitter.on(['before-reset-page'],", "            () => this.message(this.msgResetPage));", "        emitter.on(['before-reset-page-length'],", "            () => this.message(this.msgResetPageLength));", "        emitter.on(['before-loading-extensions'],", "            () => this.message(this.msgLoadExtensions));", "        emitter.on(['before-loading-themes'],", "            () => this.message(this.msgLoadThemes));", "", "        emitter.on(EVENTS, () => this.message(''));", "", "        /**", "         * @inherited", "         */", "        this.initialized = true;", "    }", "", "    /**", "     * Display status message", "     * @param {String} [t=''] Message to be displayed", "     */", "    message(t = '') {", "        if (!this.isEnabled()) {", "            return;", "        }", "", "        this.onBeforeShowMsg(this.tf, t);", "", "        let d = t === '' ? this.delay : 1;", "        root.setTimeout(() => {", "            if (!this.initialized) {", "                return;", "            }", "            this.msgContainer.innerHTML = t;", "", "            this.onAfterShowMsg(this.tf, t);", "        }, d);", "    }", "", "    /**", "     * Destroy StatusBar instance", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        let emitter = this.emitter;", "", "        this.container.innerHTML = '';", "        if (!this.targetId) {", "            removeElm(this.container);", "        }", "        this.labelContainer = null;", "        this.msgContainer = null;", "        this.container = null;", "", "        // Unsubscribe to events", "        emitter.off(['before-filtering'], () => this.message(this.msgFilter));", "        emitter.off(['before-populating-filter'],", "            () => this.message(this.msgPopulate));", "        emitter.off(['before-page-change'],", "            () => this.message(this.msgChangePage));", "        emitter.off(['before-clearing-filters'],", "            () => this.message(this.msgClear));", "        emitter.off(['before-page-length-change'],", "            () => this.message(this.msgChangeResults));", "        emitter.off(['before-reset-page'], () =>", "            this.message(this.msgResetPage));", "        emitter.off(['before-reset-page-length'],", "            () => this.message(this.msgResetPageLength));", "        emitter.off(['before-loading-extensions'],", "            () => this.message(this.msgLoadExtensions));", "        emitter.off(['before-loading-themes'],", "            () => this.message(this.msgLoadThemes));", "", "        emitter.off(EVENTS, () => this.message(''));", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_ghskLXdP3kS$tmw2XOv1uA = __cov_ghskLXdP3kS$tmw2XOv1uA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\statusBar.js'];
	__cov_ghskLXdP3kS$tmw2XOv1uA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_ghskLXdP3kS$tmw2XOv1uA.s['2']++;exports.StatusBar = undefined;__cov_ghskLXdP3kS$tmw2XOv1uA.s['3']++;var _feature = __webpack_require__(10);__cov_ghskLXdP3kS$tmw2XOv1uA.s['4']++;var _root = __webpack_require__(2);__cov_ghskLXdP3kS$tmw2XOv1uA.s['5']++;var _dom = __webpack_require__(3);__cov_ghskLXdP3kS$tmw2XOv1uA.s['6']++;var _types = __webpack_require__(4);function _classCallCheck(instance, Constructor) {
	   __cov_ghskLXdP3kS$tmw2XOv1uA.f['1']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['8']++;if (!(instance instanceof Constructor)) {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['1'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['9']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_ghskLXdP3kS$tmw2XOv1uA.f['2']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['11']++;if (!self) {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['2'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['12']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['2'][1]++;
	   }__cov_ghskLXdP3kS$tmw2XOv1uA.s['13']++;return (__cov_ghskLXdP3kS$tmw2XOv1uA.b['4'][0]++, call) && ((__cov_ghskLXdP3kS$tmw2XOv1uA.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['4'][2]++, typeof call === 'function')) ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['3'][0]++, call) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_ghskLXdP3kS$tmw2XOv1uA.f['3']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['15']++;if ((__cov_ghskLXdP3kS$tmw2XOv1uA.b['6'][0]++, typeof superClass !== 'function') && (__cov_ghskLXdP3kS$tmw2XOv1uA.b['6'][1]++, superClass !== null)) {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['5'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['16']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['5'][1]++;
	   }__cov_ghskLXdP3kS$tmw2XOv1uA.s['17']++;subClass.prototype = Object.create((__cov_ghskLXdP3kS$tmw2XOv1uA.b['7'][0]++, superClass) && (__cov_ghskLXdP3kS$tmw2XOv1uA.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_ghskLXdP3kS$tmw2XOv1uA.s['18']++;if (superClass) {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['8'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['19']++;Object.setPrototypeOf ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.b['8'][1]++;
	   }
	}__cov_ghskLXdP3kS$tmw2XOv1uA.s['20']++;var EVENTS = ['after-filtering', 'after-populating-filter', 'after-page-change', 'after-clearing-filters', 'after-page-length-change', 'after-reset-page', 'after-reset-page-length', 'after-loading-extensions', 'after-loading-themes'];__cov_ghskLXdP3kS$tmw2XOv1uA.s['21']++;var StatusBar = exports.StatusBar = function (_Feature) {
	   __cov_ghskLXdP3kS$tmw2XOv1uA.f['4']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['22']++;_inherits(StatusBar, _Feature);function StatusBar(tf) {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.f['5']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['24']++;_classCallCheck(this, StatusBar);__cov_ghskLXdP3kS$tmw2XOv1uA.s['25']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'statusBar'));__cov_ghskLXdP3kS$tmw2XOv1uA.s['26']++;var f = _this.config;__cov_ghskLXdP3kS$tmw2XOv1uA.s['27']++;_this.targetId = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['10'][0]++, f.status_bar_target_id) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['10'][1]++, null);__cov_ghskLXdP3kS$tmw2XOv1uA.s['28']++;_this.container = null;__cov_ghskLXdP3kS$tmw2XOv1uA.s['29']++;_this.msgContainer = null;__cov_ghskLXdP3kS$tmw2XOv1uA.s['30']++;_this.labelContainer = null;__cov_ghskLXdP3kS$tmw2XOv1uA.s['31']++;_this.text = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['11'][0]++, f.status_bar_text) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['11'][1]++, '');__cov_ghskLXdP3kS$tmw2XOv1uA.s['32']++;_this.cssClass = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['12'][0]++, f.status_bar_css_class) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['12'][1]++, 'status');__cov_ghskLXdP3kS$tmw2XOv1uA.s['33']++;_this.delay = 250;__cov_ghskLXdP3kS$tmw2XOv1uA.s['34']++;_this.onBeforeShowMsg = (0, _types.isFn)(f.on_before_show_msg) ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['13'][0]++, f.on_before_show_msg) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['13'][1]++, _types.EMPTY_FN);__cov_ghskLXdP3kS$tmw2XOv1uA.s['35']++;_this.onAfterShowMsg = (0, _types.isFn)(f.on_after_show_msg) ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['14'][0]++, f.on_after_show_msg) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['14'][1]++, _types.EMPTY_FN);__cov_ghskLXdP3kS$tmw2XOv1uA.s['36']++;_this.msgFilter = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['15'][0]++, f.msg_filter) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['15'][1]++, 'Filtering data...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['37']++;_this.msgPopulate = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['16'][0]++, f.msg_populate) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['16'][1]++, 'Populating filter...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['38']++;_this.msgPopulateCheckList = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['17'][0]++, f.msg_populate_checklist) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['17'][1]++, 'Populating list...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['39']++;_this.msgChangePage = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['18'][0]++, f.msg_change_page) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['18'][1]++, 'Collecting paging data...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['40']++;_this.msgClear = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['19'][0]++, f.msg_clear) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['19'][1]++, 'Clearing filters...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['41']++;_this.msgChangeResults = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['20'][0]++, f.msg_change_results) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['20'][1]++, 'Changing results per page...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['42']++;_this.msgResetPage = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['21'][0]++, f.msg_reset_page) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['21'][1]++, 'Re-setting page...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['43']++;_this.msgResetPageLength = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['22'][0]++, f.msg_reset_page_length) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['22'][1]++, 'Re-setting page length...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['44']++;_this.msgSort = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['23'][0]++, f.msg_sort) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['23'][1]++, 'Sorting data...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['45']++;_this.msgLoadExtensions = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['24'][0]++, f.msg_load_extensions) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['24'][1]++, 'Loading extensions...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['46']++;_this.msgLoadThemes = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['25'][0]++, f.msg_load_themes) || (__cov_ghskLXdP3kS$tmw2XOv1uA.b['25'][1]++, 'Loading theme(s)...');__cov_ghskLXdP3kS$tmw2XOv1uA.s['47']++;return _this;
	   }__cov_ghskLXdP3kS$tmw2XOv1uA.s['48']++;StatusBar.prototype.init = function init() {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.f['6']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['49']++;var _this2 = this;__cov_ghskLXdP3kS$tmw2XOv1uA.s['50']++;if (this.initialized) {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['26'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['51']++;return;
	      } else {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['26'][1]++;
	      }__cov_ghskLXdP3kS$tmw2XOv1uA.s['52']++;var tf = this.tf;__cov_ghskLXdP3kS$tmw2XOv1uA.s['53']++;var emitter = this.emitter;__cov_ghskLXdP3kS$tmw2XOv1uA.s['54']++;var statusDiv = (0, _dom.createElm)('div');__cov_ghskLXdP3kS$tmw2XOv1uA.s['55']++;statusDiv.className = this.cssClass;__cov_ghskLXdP3kS$tmw2XOv1uA.s['56']++;var statusSpan = (0, _dom.createElm)('span');__cov_ghskLXdP3kS$tmw2XOv1uA.s['57']++;var statusSpanText = (0, _dom.createElm)('span');__cov_ghskLXdP3kS$tmw2XOv1uA.s['58']++;statusSpanText.appendChild((0, _dom.createText)(this.text));__cov_ghskLXdP3kS$tmw2XOv1uA.s['59']++;if (!this.targetId) {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['27'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['60']++;tf.setToolbar();
	      } else {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['27'][1]++;
	      }__cov_ghskLXdP3kS$tmw2XOv1uA.s['61']++;var targetEl = !this.targetId ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['28'][0]++, tf.lDiv) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['28'][1]++, (0, _dom.elm)(this.targetId));__cov_ghskLXdP3kS$tmw2XOv1uA.s['62']++;if (!this.targetId) {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['29'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['63']++;statusDiv.appendChild(statusSpanText);__cov_ghskLXdP3kS$tmw2XOv1uA.s['64']++;statusDiv.appendChild(statusSpan);__cov_ghskLXdP3kS$tmw2XOv1uA.s['65']++;targetEl.appendChild(statusDiv);
	      } else {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['29'][1]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['66']++;targetEl.appendChild(statusSpanText);__cov_ghskLXdP3kS$tmw2XOv1uA.s['67']++;targetEl.appendChild(statusSpan);
	      }__cov_ghskLXdP3kS$tmw2XOv1uA.s['68']++;this.container = statusDiv;__cov_ghskLXdP3kS$tmw2XOv1uA.s['69']++;this.msgContainer = statusSpan;__cov_ghskLXdP3kS$tmw2XOv1uA.s['70']++;this.labelContainer = statusSpanText;__cov_ghskLXdP3kS$tmw2XOv1uA.s['71']++;emitter.on(['before-filtering'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['7']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['72']++;return _this2.message(_this2.msgFilter);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['73']++;emitter.on(['before-populating-filter'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['8']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['74']++;return _this2.message(_this2.msgPopulate);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['75']++;emitter.on(['before-page-change'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['9']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['76']++;return _this2.message(_this2.msgChangePage);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['77']++;emitter.on(['before-clearing-filters'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['10']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['78']++;return _this2.message(_this2.msgClear);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['79']++;emitter.on(['before-page-length-change'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['11']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['80']++;return _this2.message(_this2.msgChangeResults);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['81']++;emitter.on(['before-reset-page'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['12']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['82']++;return _this2.message(_this2.msgResetPage);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['83']++;emitter.on(['before-reset-page-length'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['13']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['84']++;return _this2.message(_this2.msgResetPageLength);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['85']++;emitter.on(['before-loading-extensions'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['14']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['86']++;return _this2.message(_this2.msgLoadExtensions);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['87']++;emitter.on(['before-loading-themes'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['15']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['88']++;return _this2.message(_this2.msgLoadThemes);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['89']++;emitter.on(EVENTS, function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['16']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['90']++;return _this2.message('');
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['91']++;this.initialized = true;
	   };__cov_ghskLXdP3kS$tmw2XOv1uA.s['92']++;StatusBar.prototype.message = function message() {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.f['17']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['93']++;var _this3 = this;__cov_ghskLXdP3kS$tmw2XOv1uA.s['94']++;var t = (__cov_ghskLXdP3kS$tmw2XOv1uA.b['31'][0]++, arguments.length > 0) && (__cov_ghskLXdP3kS$tmw2XOv1uA.b['31'][1]++, arguments[0] !== undefined) ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['30'][0]++, arguments[0]) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['30'][1]++, '');__cov_ghskLXdP3kS$tmw2XOv1uA.s['95']++;if (!this.isEnabled()) {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['32'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['96']++;return;
	      } else {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['32'][1]++;
	      }__cov_ghskLXdP3kS$tmw2XOv1uA.s['97']++;this.onBeforeShowMsg(this.tf, t);__cov_ghskLXdP3kS$tmw2XOv1uA.s['98']++;var d = t === '' ? (__cov_ghskLXdP3kS$tmw2XOv1uA.b['33'][0]++, this.delay) : (__cov_ghskLXdP3kS$tmw2XOv1uA.b['33'][1]++, 1);__cov_ghskLXdP3kS$tmw2XOv1uA.s['99']++;_root.root.setTimeout(function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['18']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['100']++;if (!_this3.initialized) {
	            __cov_ghskLXdP3kS$tmw2XOv1uA.b['34'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['101']++;return;
	         } else {
	            __cov_ghskLXdP3kS$tmw2XOv1uA.b['34'][1]++;
	         }__cov_ghskLXdP3kS$tmw2XOv1uA.s['102']++;_this3.msgContainer.innerHTML = t;__cov_ghskLXdP3kS$tmw2XOv1uA.s['103']++;_this3.onAfterShowMsg(_this3.tf, t);
	      }, d);
	   };__cov_ghskLXdP3kS$tmw2XOv1uA.s['104']++;StatusBar.prototype.destroy = function destroy() {
	      __cov_ghskLXdP3kS$tmw2XOv1uA.f['19']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['105']++;var _this4 = this;__cov_ghskLXdP3kS$tmw2XOv1uA.s['106']++;if (!this.initialized) {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['35'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['107']++;return;
	      } else {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['35'][1]++;
	      }__cov_ghskLXdP3kS$tmw2XOv1uA.s['108']++;var emitter = this.emitter;__cov_ghskLXdP3kS$tmw2XOv1uA.s['109']++;this.container.innerHTML = '';__cov_ghskLXdP3kS$tmw2XOv1uA.s['110']++;if (!this.targetId) {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['36'][0]++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['111']++;(0, _dom.removeElm)(this.container);
	      } else {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.b['36'][1]++;
	      }__cov_ghskLXdP3kS$tmw2XOv1uA.s['112']++;this.labelContainer = null;__cov_ghskLXdP3kS$tmw2XOv1uA.s['113']++;this.msgContainer = null;__cov_ghskLXdP3kS$tmw2XOv1uA.s['114']++;this.container = null;__cov_ghskLXdP3kS$tmw2XOv1uA.s['115']++;emitter.off(['before-filtering'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['20']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['116']++;return _this4.message(_this4.msgFilter);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['117']++;emitter.off(['before-populating-filter'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['21']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['118']++;return _this4.message(_this4.msgPopulate);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['119']++;emitter.off(['before-page-change'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['22']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['120']++;return _this4.message(_this4.msgChangePage);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['121']++;emitter.off(['before-clearing-filters'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['23']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['122']++;return _this4.message(_this4.msgClear);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['123']++;emitter.off(['before-page-length-change'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['24']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['124']++;return _this4.message(_this4.msgChangeResults);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['125']++;emitter.off(['before-reset-page'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['25']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['126']++;return _this4.message(_this4.msgResetPage);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['127']++;emitter.off(['before-reset-page-length'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['26']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['128']++;return _this4.message(_this4.msgResetPageLength);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['129']++;emitter.off(['before-loading-extensions'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['27']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['130']++;return _this4.message(_this4.msgLoadExtensions);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['131']++;emitter.off(['before-loading-themes'], function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['28']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['132']++;return _this4.message(_this4.msgLoadThemes);
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['133']++;emitter.off(EVENTS, function () {
	         __cov_ghskLXdP3kS$tmw2XOv1uA.f['29']++;__cov_ghskLXdP3kS$tmw2XOv1uA.s['134']++;return _this4.message('');
	      });__cov_ghskLXdP3kS$tmw2XOv1uA.s['135']++;this.initialized = false;
	   };__cov_ghskLXdP3kS$tmw2XOv1uA.s['136']++;return StatusBar;
	}(_feature.Feature);

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_VMH1Wq34YEAuNhlvEXCoKw = Function('return this')();
	if (!__cov_VMH1Wq34YEAuNhlvEXCoKw.__coverage__) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.__coverage__ = {};
	}
	__cov_VMH1Wq34YEAuNhlvEXCoKw = __cov_VMH1Wq34YEAuNhlvEXCoKw.__coverage__;
	if (!__cov_VMH1Wq34YEAuNhlvEXCoKw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\paging.js']) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\paging.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\paging.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 1, "12": 0, "13": 0, "14": 1, "15": 0, "16": 0, "17": 0, "18": 1, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 1, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "212": 0, "213": 0, "214": 0, "215": 0, "216": 0, "217": 0, "218": 0, "219": 0, "220": 0, "221": 0, "222": 0, "223": 0, "224": 0, "225": 0, "226": 0, "227": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "234": 0, "235": 0, "236": 0, "237": 0, "238": 0, "239": 0, "240": 0, "241": 0, "242": 0, "243": 0, "244": 0, "245": 0, "246": 0, "247": 0, "248": 0, "249": 0, "250": 0, "251": 0, "252": 0, "253": 0, "254": 0, "255": 0, "256": 0, "257": 0, "258": 0, "259": 0, "260": 0, "261": 0, "262": 0, "263": 0, "264": 0, "265": 0, "266": 0, "267": 0, "268": 0, "269": 0, "270": 0, "271": 0, "272": 0, "273": 0, "274": 0, "275": 0, "276": 0, "277": 0, "278": 0, "279": 0, "280": 0, "281": 0, "282": 0, "283": 0, "284": 0, "285": 0, "286": 0, "287": 0, "288": 0, "289": 0, "290": 0, "291": 0, "292": 0, "293": 0, "294": 0, "295": 0, "296": 0, "297": 0, "298": 0, "299": 0, "300": 0, "301": 0, "302": 0, "303": 0, "304": 0, "305": 0, "306": 0, "307": 0, "308": 0, "309": 0, "310": 0, "311": 0, "312": 0, "313": 0, "314": 0, "315": 0, "316": 0, "317": 0, "318": 0, "319": 0, "320": 0, "321": 0, "322": 0, "323": 0, "324": 0, "325": 0, "326": 0, "327": 0, "328": 0, "329": 0, "330": 0, "331": 0, "332": 0, "333": 0, "334": 0, "335": 0, "336": 0, "337": 0, "338": 0, "339": 0, "340": 0, "341": 0, "342": 0, "343": 0, "344": 0, "345": 0, "346": 0, "347": 0, "348": 0, "349": 0, "350": 0, "351": 0, "352": 0, "353": 0, "354": 0, "355": 0, "356": 0, "357": 0, "358": 0, "359": 0, "360": 0, "361": 0, "362": 0, "363": 0, "364": 0, "365": 0, "366": 0, "367": 0, "368": 0, "369": 0, "370": 0, "371": 0, "372": 0, "373": 0, "374": 0, "375": 0, "376": 0, "377": 0, "378": 0, "379": 0, "380": 0, "381": 0, "382": 0, "383": 0, "384": 0, "385": 0, "386": 0, "387": 0, "388": 0, "389": 0, "390": 0, "391": 0, "392": 0, "393": 0, "394": 0, "395": 0, "396": 0, "397": 0, "398": 0, "399": 0, "400": 0, "401": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0], "45": [0, 0], "46": [0, 0], "47": [0, 0], "48": [0, 0], "49": [0, 0], "50": [0, 0], "51": [0, 0], "52": [0, 0], "53": [0, 0], "54": [0, 0], "55": [0, 0], "56": [0, 0], "57": [0, 0], "58": [0, 0], "59": [0, 0], "60": [0, 0], "61": [0, 0], "62": [0, 0], "63": [0, 0], "64": [0, 0], "65": [0, 0], "66": [0, 0], "67": [0, 0], "68": [0, 0], "69": [0, 0], "70": [0, 0], "71": [0, 0], "72": [0, 0], "73": [0, 0], "74": [0, 0], "75": [0, 0], "76": [0, 0], "77": [0, 0], "78": [0, 0], "79": [0, 0, 0, 0, 0], "80": [0, 0], "81": [0, 0], "82": [0, 0], "83": [0, 0], "84": [0, 0], "85": [0, 0], "86": [0, 0], "87": [0, 0], "88": [0, 0, 0], "89": [0, 0], "90": [0, 0], "91": [0, 0], "92": [0, 0], "93": [0, 0], "94": [0, 0], "95": [0, 0], "96": [0, 0], "97": [0, 0], "98": [0, 0], "99": [0, 0], "100": [0, 0], "101": [0, 0], "102": [0, 0], "103": [0, 0], "104": [0, 0], "105": [0, 0], "106": [0, 0], "107": [0, 0], "108": [0, 0], "109": [0, 0], "110": [0, 0], "111": [0, 0], "112": [0, 0], "113": [0, 0], "114": [0, 0], "115": [0, 0], "116": [0, 0], "117": [0, 0], "118": [0, 0], "119": [0, 0], "120": [0, 0], "121": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0 }, "fnMap": { "1": { "line": 8, "name": "(anonymous_1)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 8, "name": "(anonymous_2)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 20, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 22, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 24, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "6": { "line": 32, "name": "(anonymous_6)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 39, "name": "Paging", "loc": { "start": { "line": 19, "column": 4 }, "end": { "line": 19, "column": 20 } } }, "8": { "line": 292, "name": "slcIndex", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 284, "column": 23 } } }, "9": { "line": 295, "name": "nbOpts", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 289, "column": 21 } } }, "10": { "line": 298, "name": "next", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 294, "column": 19 } } }, "11": { "line": 302, "name": "prev", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 299, "column": 19 } } }, "12": { "line": 306, "name": "last", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 304, "column": 19 } } }, "13": { "line": 309, "name": "first", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 307, "column": 20 } } }, "14": { "line": 312, "name": "_detectKey", "loc": { "start": { "line": 283, "column": 19 }, "end": { "line": 310, "column": 26 } } }, "15": { "line": 339, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "16": { "line": 361, "name": "(anonymous_16)", "loc": { "start": { "line": 353, "column": 29 }, "end": { "line": 353, "column": 40 } } }, "17": { "line": 469, "name": "(anonymous_17)", "loc": { "start": { "line": 477, "column": 45 }, "end": { "line": 477, "column": 45 } } }, "18": { "line": 472, "name": "(anonymous_18)", "loc": { "start": { "line": 479, "column": 12 }, "end": { "line": 479, "column": 12 } } }, "19": { "line": 475, "name": "(anonymous_19)", "loc": { "start": { "line": 481, "column": 12 }, "end": { "line": 481, "column": 12 } } }, "20": { "line": 489, "name": "reset", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "21": { "line": 509, "name": "resetPagingInfo", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "22": { "line": 522, "name": "setPagingInfo", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "23": { "line": 562, "name": "groupByPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "24": { "line": 601, "name": "getPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "25": { "line": 612, "name": "setPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "26": { "line": 647, "name": "setResultsPerPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "27": { "line": 657, "name": "(anonymous_27)", "loc": { "start": { "line": 645, "column": 31 }, "end": { "line": 645, "column": 39 } } }, "28": { "line": 699, "name": "removeResultsPerPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "29": { "line": 720, "name": "changePage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "30": { "line": 758, "name": "changeResultsPerPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "31": { "line": 772, "name": "onChangeResultsPerPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "32": { "line": 807, "name": "resetPage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "33": { "line": 825, "name": "resetPageLength", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "34": { "line": 845, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "35": { "line": 906, "name": "(anonymous_35)", "loc": { "start": { "line": 887, "column": 46 }, "end": { "line": 887, "column": 46 } } }, "36": { "line": 909, "name": "(anonymous_36)", "loc": { "start": { "line": 889, "column": 12 }, "end": { "line": 889, "column": 12 } } }, "37": { "line": 912, "name": "(anonymous_37)", "loc": { "start": { "line": 891, "column": 12 }, "end": { "line": 891, "column": 12 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "6": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "7": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "8": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "9": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "10": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "25": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "26": { "end": { "line": 328, "column": 5 }, "start": { "line": 19, "column": 4 } }, "27": { "end": { "line": 19, "column": 20 }, "start": { "line": 19, "column": 20 } }, "28": { "end": { "line": 19, "column": 20 }, "start": { "line": 19, "column": 20 } }, "29": { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 8 } }, "30": { "end": { "line": 29, "column": 8 }, "start": { "line": 29, "column": 8 } }, "31": { "end": { "line": 35, "column": 8 }, "start": { "line": 35, "column": 8 } }, "32": { "end": { "line": 41, "column": 8 }, "start": { "line": 41, "column": 8 } }, "33": { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, "34": { "end": { "line": 53, "column": 8 }, "start": { "line": 53, "column": 8 } }, "35": { "end": { "line": 59, "column": 8 }, "start": { "line": 59, "column": 8 } }, "36": { "end": { "line": 65, "column": 8 }, "start": { "line": 65, "column": 8 } }, "37": { "end": { "line": 71, "column": 8 }, "start": { "line": 71, "column": 8 } }, "38": { "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 8 } }, "39": { "end": { "line": 84, "column": 8 }, "start": { "line": 84, "column": 8 } }, "40": { "end": { "line": 90, "column": 8 }, "start": { "line": 90, "column": 8 } }, "41": { "end": { "line": 96, "column": 8 }, "start": { "line": 96, "column": 8 } }, "42": { "end": { "line": 103, "column": 8 }, "start": { "line": 103, "column": 8 } }, "43": { "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }, "44": { "end": { "line": 117, "column": 8 }, "start": { "line": 117, "column": 8 } }, "45": { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 8 } }, "46": { "end": { "line": 129, "column": 8 }, "start": { "line": 129, "column": 8 } }, "47": { "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 8 } }, "48": { "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 8 } }, "49": { "end": { "line": 147, "column": 8 }, "start": { "line": 147, "column": 8 } }, "50": { "end": { "line": 156, "column": 8 }, "start": { "line": 156, "column": 8 } }, "51": { "end": { "line": 165, "column": 8 }, "start": { "line": 165, "column": 8 } }, "52": { "end": { "line": 174, "column": 8 }, "start": { "line": 174, "column": 8 } }, "53": { "end": { "line": 183, "column": 8 }, "start": { "line": 183, "column": 8 } }, "54": { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }, "55": { "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 8 } }, "56": { "end": { "line": 201, "column": 8 }, "start": { "line": 201, "column": 8 } }, "57": { "end": { "line": 207, "column": 8 }, "start": { "line": 207, "column": 8 } }, "58": { "end": { "line": 213, "column": 8 }, "start": { "line": 213, "column": 8 } }, "59": { "end": { "line": 220, "column": 8 }, "start": { "line": 220, "column": 8 } }, "60": { "end": { "line": 228, "column": 8 }, "start": { "line": 228, "column": 8 } }, "61": { "end": { "line": 234, "column": 8 }, "start": { "line": 234, "column": 8 } }, "62": { "end": { "line": 240, "column": 8 }, "start": { "line": 240, "column": 8 } }, "63": { "end": { "line": 246, "column": 8 }, "start": { "line": 246, "column": 8 } }, "64": { "end": { "line": 252, "column": 8 }, "start": { "line": 252, "column": 8 } }, "65": { "end": { "line": 258, "column": 8 }, "start": { "line": 258, "column": 8 } }, "66": { "end": { "line": 264, "column": 8 }, "start": { "line": 264, "column": 8 } }, "67": { "end": { "line": 270, "column": 8 }, "start": { "line": 270, "column": 8 } }, "68": { "end": { "line": 272, "column": 8 }, "start": { "line": 272, "column": 8 } }, "69": { "end": { "line": 273, "column": 8 }, "start": { "line": 273, "column": 8 } }, "70": { "end": { "line": 275, "column": 8 }, "start": { "line": 275, "column": 8 } }, "71": { "end": { "line": 277, "column": 8 }, "start": { "line": 277, "column": 8 } }, "72": { "end": { "line": 283, "column": 8 }, "start": { "line": 283, "column": 8 } }, "73": { "end": { "line": 285, "column": 16 }, "start": { "line": 285, "column": 16 } }, "74": { "end": { "line": 290, "column": 16 }, "start": { "line": 290, "column": 16 } }, "75": { "end": { "line": 295, "column": 16 }, "start": { "line": 295, "column": 16 } }, "76": { "end": { "line": 297, "column": 16 }, "start": { "line": 297, "column": 16 } }, "77": { "end": { "line": 300, "column": 16 }, "start": { "line": 300, "column": 16 } }, "78": { "end": { "line": 302, "column": 16 }, "start": { "line": 302, "column": 16 } }, "79": { "end": { "line": 305, "column": 16 }, "start": { "line": 305, "column": 16 } }, "80": { "end": { "line": 308, "column": 16 }, "start": { "line": 308, "column": 16 } }, "81": { "end": { "line": 311, "column": 16 }, "start": { "line": 311, "column": 16 } }, "82": { "end": { "line": 320, "column": 17 }, "start": { "line": 312, "column": 16 } }, "83": { "end": { "line": 318, "column": 21 }, "start": { "line": 313, "column": 20 } }, "84": { "end": { "line": 314, "column": 24 }, "start": { "line": 314, "column": 24 } }, "85": { "end": { "line": 315, "column": 24 }, "start": { "line": 315, "column": 24 } }, "86": { "end": { "line": 317, "column": 24 }, "start": { "line": 317, "column": 24 } }, "87": { "end": { "line": 319, "column": 20 }, "start": { "line": 319, "column": 20 } }, "88": { "end": { "line": 19, "column": 20 }, "start": { "line": 19, "column": 20 } }, "89": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "90": { "end": { "line": 333, "column": 11 }, "start": { "line": 333, "column": 11 } }, "91": { "end": { "line": 334, "column": 8 }, "start": { "line": 334, "column": 8 } }, "92": { "end": { "line": 335, "column": 8 }, "start": { "line": 335, "column": 8 } }, "93": { "end": { "line": 336, "column": 8 }, "start": { "line": 336, "column": 8 } }, "94": { "end": { "line": 340, "column": 9 }, "start": { "line": 338, "column": 8 } }, "95": { "end": { "line": 339, "column": 12 }, "start": { "line": 339, "column": 12 } }, "96": { "end": { "line": 351, "column": 9 }, "start": { "line": 344, "column": 8 } }, "97": { "end": { "line": 350, "column": 13 }, "start": { "line": 345, "column": 12 } }, "98": { "end": { "line": 346, "column": 16 }, "start": { "line": 346, "column": 16 } }, "99": { "end": { "line": 348, "column": 16 }, "start": { "line": 348, "column": 16 } }, "100": { "end": { "line": 349, "column": 16 }, "start": { "line": 349, "column": 16 } }, "101": { "end": { "line": 353, "column": 8 }, "start": { "line": 353, "column": 8 } }, "102": { "end": { "line": 354, "column": 12 }, "start": { "line": 354, "column": 12 } }, "103": { "end": { "line": 355, "column": 12 }, "start": { "line": 355, "column": 12 } }, "104": { "end": { "line": 363, "column": 9 }, "start": { "line": 359, "column": 8 } }, "105": { "end": { "line": 360, "column": 12 }, "start": { "line": 360, "column": 12 } }, "106": { "end": { "line": 361, "column": 12 }, "start": { "line": 361, "column": 12 } }, "107": { "end": { "line": 362, "column": 12 }, "start": { "line": 362, "column": 12 } }, "108": { "end": { "line": 370, "column": 9 }, "start": { "line": 366, "column": 8 } }, "109": { "end": { "line": 367, "column": 12 }, "start": { "line": 367, "column": 12 } }, "110": { "end": { "line": 368, "column": 12 }, "start": { "line": 368, "column": 12 } }, "111": { "end": { "line": 369, "column": 12 }, "start": { "line": 369, "column": 12 } }, "112": { "end": { "line": 373, "column": 8 }, "start": { "line": 373, "column": 8 } }, "113": { "end": { "line": 374, "column": 8 }, "start": { "line": 374, "column": 8 } }, "114": { "end": { "line": 375, "column": 8 }, "start": { "line": 375, "column": 8 } }, "115": { "end": { "line": 376, "column": 8 }, "start": { "line": 376, "column": 8 } }, "116": { "end": { "line": 435, "column": 9 }, "start": { "line": 378, "column": 8 } }, "117": { "end": { "line": 392, "column": 13 }, "start": { "line": 380, "column": 12 } }, "118": { "end": { "line": 381, "column": 16 }, "start": { "line": 381, "column": 16 } }, "119": { "end": { "line": 386, "column": 16 }, "start": { "line": 386, "column": 16 } }, "120": { "end": { "line": 387, "column": 16 }, "start": { "line": 387, "column": 16 } }, "121": { "end": { "line": 388, "column": 16 }, "start": { "line": 388, "column": 16 } }, "122": { "end": { "line": 390, "column": 16 }, "start": { "line": 390, "column": 16 } }, "123": { "end": { "line": 391, "column": 16 }, "start": { "line": 391, "column": 16 } }, "124": { "end": { "line": 406, "column": 13 }, "start": { "line": 394, "column": 12 } }, "125": { "end": { "line": 395, "column": 16 }, "start": { "line": 395, "column": 16 } }, "126": { "end": { "line": 400, "column": 16 }, "start": { "line": 400, "column": 16 } }, "127": { "end": { "line": 401, "column": 16 }, "start": { "line": 401, "column": 16 } }, "128": { "end": { "line": 402, "column": 16 }, "start": { "line": 402, "column": 16 } }, "129": { "end": { "line": 404, "column": 16 }, "start": { "line": 404, "column": 16 } }, "130": { "end": { "line": 405, "column": 16 }, "start": { "line": 405, "column": 16 } }, "131": { "end": { "line": 420, "column": 13 }, "start": { "line": 408, "column": 12 } }, "132": { "end": { "line": 409, "column": 16 }, "start": { "line": 409, "column": 16 } }, "133": { "end": { "line": 414, "column": 16 }, "start": { "line": 414, "column": 16 } }, "134": { "end": { "line": 415, "column": 16 }, "start": { "line": 415, "column": 16 } }, "135": { "end": { "line": 416, "column": 16 }, "start": { "line": 416, "column": 16 } }, "136": { "end": { "line": 418, "column": 16 }, "start": { "line": 418, "column": 16 } }, "137": { "end": { "line": 419, "column": 16 }, "start": { "line": 419, "column": 16 } }, "138": { "end": { "line": 434, "column": 13 }, "start": { "line": 422, "column": 12 } }, "139": { "end": { "line": 423, "column": 16 }, "start": { "line": 423, "column": 16 } }, "140": { "end": { "line": 428, "column": 16 }, "start": { "line": 428, "column": 16 } }, "141": { "end": { "line": 429, "column": 16 }, "start": { "line": 429, "column": 16 } }, "142": { "end": { "line": 430, "column": 16 }, "start": { "line": 430, "column": 16 } }, "143": { "end": { "line": 432, "column": 16 }, "start": { "line": 432, "column": 16 } }, "144": { "end": { "line": 433, "column": 16 }, "start": { "line": 433, "column": 16 } }, "145": { "end": { "line": 440, "column": 9 }, "start": { "line": 438, "column": 8 } }, "146": { "end": { "line": 439, "column": 12 }, "start": { "line": 439, "column": 12 } }, "147": { "end": { "line": 441, "column": 8 }, "start": { "line": 441, "column": 8 } }, "148": { "end": { "line": 442, "column": 8 }, "start": { "line": 442, "column": 8 } }, "149": { "end": { "line": 443, "column": 8 }, "start": { "line": 443, "column": 8 } }, "150": { "end": { "line": 445, "column": 8 }, "start": { "line": 445, "column": 8 } }, "151": { "end": { "line": 446, "column": 8 }, "start": { "line": 446, "column": 8 } }, "152": { "end": { "line": 447, "column": 8 }, "start": { "line": 447, "column": 8 } }, "153": { "end": { "line": 448, "column": 8 }, "start": { "line": 448, "column": 8 } }, "154": { "end": { "line": 449, "column": 8 }, "start": { "line": 449, "column": 8 } }, "155": { "end": { "line": 450, "column": 8 }, "start": { "line": 450, "column": 8 } }, "156": { "end": { "line": 451, "column": 8 }, "start": { "line": 451, "column": 8 } }, "157": { "end": { "line": 452, "column": 8 }, "start": { "line": 452, "column": 8 } }, "158": { "end": { "line": 453, "column": 8 }, "start": { "line": 453, "column": 8 } }, "159": { "end": { "line": 454, "column": 8 }, "start": { "line": 454, "column": 8 } }, "160": { "end": { "line": 455, "column": 8 }, "start": { "line": 455, "column": 8 } }, "161": { "end": { "line": 456, "column": 8 }, "start": { "line": 456, "column": 8 } }, "162": { "end": { "line": 457, "column": 8 }, "start": { "line": 457, "column": 8 } }, "163": { "end": { "line": 458, "column": 8 }, "start": { "line": 458, "column": 8 } }, "164": { "end": { "line": 459, "column": 8 }, "start": { "line": 459, "column": 8 } }, "165": { "end": { "line": 461, "column": 8 }, "start": { "line": 461, "column": 8 } }, "166": { "end": { "line": 462, "column": 8 }, "start": { "line": 462, "column": 8 } }, "167": { "end": { "line": 463, "column": 8 }, "start": { "line": 463, "column": 8 } }, "168": { "end": { "line": 464, "column": 8 }, "start": { "line": 464, "column": 8 } }, "169": { "end": { "line": 465, "column": 8 }, "start": { "line": 465, "column": 8 } }, "170": { "end": { "line": 466, "column": 8 }, "start": { "line": 466, "column": 8 } }, "171": { "end": { "line": 467, "column": 8 }, "start": { "line": 467, "column": 8 } }, "172": { "end": { "line": 468, "column": 8 }, "start": { "line": 468, "column": 8 } }, "173": { "end": { "line": 470, "column": 8 }, "start": { "line": 470, "column": 8 } }, "174": { "end": { "line": 475, "column": 9 }, "start": { "line": 472, "column": 8 } }, "175": { "end": { "line": 473, "column": 12 }, "start": { "line": 473, "column": 12 } }, "176": { "end": { "line": 474, "column": 12 }, "start": { "line": 474, "column": 12 } }, "177": { "end": { "line": 477, "column": 8 }, "start": { "line": 477, "column": 8 } }, "178": { "end": { "line": 477, "column": 45 }, "start": { "line": 477, "column": 45 } }, "179": { "end": { "line": 478, "column": 8 }, "start": { "line": 478, "column": 8 } }, "180": { "end": { "line": 479, "column": 12 }, "start": { "line": 479, "column": 12 } }, "181": { "end": { "line": 480, "column": 8 }, "start": { "line": 480, "column": 8 } }, "182": { "end": { "line": 481, "column": 12 }, "start": { "line": 481, "column": 12 } }, "183": { "end": { "line": 484, "column": 8 }, "start": { "line": 484, "column": 8 } }, "184": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "185": { "end": { "line": 491, "column": 31 }, "start": { "line": 491, "column": 31 } }, "186": { "end": { "line": 492, "column": 8 }, "start": { "line": 492, "column": 8 } }, "187": { "end": { "line": 495, "column": 9 }, "start": { "line": 493, "column": 8 } }, "188": { "end": { "line": 494, "column": 12 }, "start": { "line": 494, "column": 12 } }, "189": { "end": { "line": 496, "column": 8 }, "start": { "line": 496, "column": 8 } }, "190": { "end": { "line": 497, "column": 8 }, "start": { "line": 497, "column": 8 } }, "191": { "end": { "line": 501, "column": 9 }, "start": { "line": 499, "column": 8 } }, "192": { "end": { "line": 500, "column": 12 }, "start": { "line": 500, "column": 12 } }, "193": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "194": { "end": { "line": 508, "column": 8 }, "start": { "line": 508, "column": 8 } }, "195": { "end": { "line": 509, "column": 8 }, "start": { "line": 509, "column": 8 } }, "196": { "end": { "line": 510, "column": 8 }, "start": { "line": 510, "column": 8 } }, "197": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "198": { "end": { "line": 519, "column": 8 }, "start": { "line": 519, "column": 8 } }, "199": { "end": { "line": 520, "column": 8 }, "start": { "line": 520, "column": 8 } }, "200": { "end": { "line": 523, "column": 8 }, "start": { "line": 523, "column": 8 } }, "201": { "end": { "line": 526, "column": 8 }, "start": { "line": 526, "column": 8 } }, "202": { "end": { "line": 528, "column": 8 }, "start": { "line": 528, "column": 8 } }, "203": { "end": { "line": 532, "column": 9 }, "start": { "line": 530, "column": 8 } }, "204": { "end": { "line": 531, "column": 12 }, "start": { "line": 531, "column": 12 } }, "205": { "end": { "line": 549, "column": 9 }, "start": { "line": 534, "column": 8 } }, "206": { "end": { "line": 535, "column": 12 }, "start": { "line": 535, "column": 12 } }, "207": { "end": { "line": 544, "column": 13 }, "start": { "line": 536, "column": 12 } }, "208": { "end": { "line": 540, "column": 17 }, "start": { "line": 537, "column": 16 } }, "209": { "end": { "line": 538, "column": 20 }, "start": { "line": 538, "column": 20 } }, "210": { "end": { "line": 539, "column": 20 }, "start": { "line": 539, "column": 20 } }, "211": { "end": { "line": 543, "column": 16 }, "start": { "line": 543, "column": 16 } }, "212": { "end": { "line": 548, "column": 12 }, "start": { "line": 548, "column": 12 } }, "213": { "end": { "line": 550, "column": 8 }, "start": { "line": 550, "column": 8 } }, "214": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "215": { "end": { "line": 558, "column": 8 }, "start": { "line": 558, "column": 8 } }, "216": { "end": { "line": 559, "column": 8 }, "start": { "line": 559, "column": 8 } }, "217": { "end": { "line": 560, "column": 8 }, "start": { "line": 560, "column": 8 } }, "218": { "end": { "line": 561, "column": 8 }, "start": { "line": 561, "column": 8 } }, "219": { "end": { "line": 566, "column": 9 }, "start": { "line": 564, "column": 8 } }, "220": { "end": { "line": 565, "column": 12 }, "start": { "line": 565, "column": 12 } }, "221": { "end": { "line": 584, "column": 9 }, "start": { "line": 569, "column": 8 } }, "222": { "end": { "line": 570, "column": 12 }, "start": { "line": 570, "column": 12 } }, "223": { "end": { "line": 571, "column": 12 }, "start": { "line": 571, "column": 12 } }, "224": { "end": { "line": 572, "column": 12 }, "start": { "line": 572, "column": 12 } }, "225": { "end": { "line": 573, "column": 12 }, "start": { "line": 573, "column": 12 } }, "226": { "end": { "line": 582, "column": 13 }, "start": { "line": 575, "column": 12 } }, "227": { "end": { "line": 579, "column": 17 }, "start": { "line": 576, "column": 16 } }, "228": { "end": { "line": 577, "column": 20 }, "start": { "line": 577, "column": 20 } }, "229": { "end": { "line": 578, "column": 20 }, "start": { "line": 578, "column": 20 } }, "230": { "end": { "line": 581, "column": 16 }, "start": { "line": 581, "column": 16 } }, "231": { "end": { "line": 583, "column": 12 }, "start": { "line": 583, "column": 12 } }, "232": { "end": { "line": 587, "column": 8 }, "start": { "line": 587, "column": 8 } }, "233": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "234": { "end": { "line": 595, "column": 8 }, "start": { "line": 595, "column": 8 } }, "235": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "236": { "end": { "line": 604, "column": 8 }, "start": { "line": 604, "column": 8 } }, "237": { "end": { "line": 607, "column": 9 }, "start": { "line": 605, "column": 8 } }, "238": { "end": { "line": 606, "column": 12 }, "start": { "line": 606, "column": 12 } }, "239": { "end": { "line": 608, "column": 8 }, "start": { "line": 608, "column": 8 } }, "240": { "end": { "line": 631, "column": 9 }, "start": { "line": 610, "column": 8 } }, "241": { "end": { "line": 611, "column": 12 }, "start": { "line": 611, "column": 12 } }, "242": { "end": { "line": 613, "column": 20 }, "start": { "line": 613, "column": 20 } }, "243": { "end": { "line": 614, "column": 20 }, "start": { "line": 614, "column": 20 } }, "244": { "end": { "line": 616, "column": 20 }, "start": { "line": 616, "column": 20 } }, "245": { "end": { "line": 617, "column": 20 }, "start": { "line": 617, "column": 20 } }, "246": { "end": { "line": 619, "column": 20 }, "start": { "line": 619, "column": 20 } }, "247": { "end": { "line": 620, "column": 20 }, "start": { "line": 620, "column": 20 } }, "248": { "end": { "line": 622, "column": 20 }, "start": { "line": 622, "column": 20 } }, "249": { "end": { "line": 623, "column": 20 }, "start": { "line": 623, "column": 20 } }, "250": { "end": { "line": 625, "column": 20 }, "start": { "line": 625, "column": 20 } }, "251": { "end": { "line": 626, "column": 20 }, "start": { "line": 626, "column": 20 } }, "252": { "end": { "line": 631, "column": 9 }, "start": { "line": 629, "column": 13 } }, "253": { "end": { "line": 630, "column": 12 }, "start": { "line": 630, "column": 12 } }, "254": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "255": { "end": { "line": 637, "column": 24 }, "start": { "line": 637, "column": 24 } }, "256": { "end": { "line": 638, "column": 8 }, "start": { "line": 638, "column": 8 } }, "257": { "end": { "line": 639, "column": 8 }, "start": { "line": 639, "column": 8 } }, "258": { "end": { "line": 643, "column": 9 }, "start": { "line": 641, "column": 8 } }, "259": { "end": { "line": 642, "column": 12 }, "start": { "line": 642, "column": 12 } }, "260": { "end": { "line": 645, "column": 8 }, "start": { "line": 645, "column": 8 } }, "261": { "end": { "line": 646, "column": 12 }, "start": { "line": 646, "column": 12 } }, "262": { "end": { "line": 647, "column": 12 }, "start": { "line": 647, "column": 12 } }, "263": { "end": { "line": 650, "column": 8 }, "start": { "line": 650, "column": 8 } }, "264": { "end": { "line": 651, "column": 8 }, "start": { "line": 651, "column": 8 } }, "265": { "end": { "line": 652, "column": 8 }, "start": { "line": 652, "column": 8 } }, "266": { "end": { "line": 654, "column": 8 }, "start": { "line": 654, "column": 8 } }, "267": { "end": { "line": 655, "column": 8 }, "start": { "line": 655, "column": 8 } }, "268": { "end": { "line": 660, "column": 9 }, "start": { "line": 658, "column": 8 } }, "269": { "end": { "line": 659, "column": 12 }, "start": { "line": 659, "column": 12 } }, "270": { "end": { "line": 661, "column": 8 }, "start": { "line": 661, "column": 8 } }, "271": { "end": { "line": 663, "column": 8 }, "start": { "line": 663, "column": 8 } }, "272": { "end": { "line": 665, "column": 8 }, "start": { "line": 665, "column": 8 } }, "273": { "end": { "line": 672, "column": 9 }, "start": { "line": 666, "column": 8 } }, "274": { "end": { "line": 667, "column": 12 }, "start": { "line": 667, "column": 12 } }, "275": { "end": { "line": 668, "column": 12 }, "start": { "line": 668, "column": 12 } }, "276": { "end": { "line": 670, "column": 12 }, "start": { "line": 670, "column": 12 } }, "277": { "end": { "line": 671, "column": 12 }, "start": { "line": 671, "column": 12 } }, "278": { "end": { "line": 677, "column": 9 }, "start": { "line": 674, "column": 8 } }, "279": { "end": { "line": 675, "column": 12 }, "start": { "line": 675, "column": 12 } }, "280": { "end": { "line": 676, "column": 12 }, "start": { "line": 676, "column": 12 } }, "281": { "end": { "line": 678, "column": 8 }, "start": { "line": 678, "column": 8 } }, "282": { "end": { "line": 679, "column": 8 }, "start": { "line": 679, "column": 8 } }, "283": { "end": { "line": 680, "column": 8 }, "start": { "line": 680, "column": 8 } }, "284": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "285": { "end": { "line": 687, "column": 8 }, "start": { "line": 687, "column": 8 } }, "286": { "end": { "line": 691, "column": 9 }, "start": { "line": 688, "column": 8 } }, "287": { "end": { "line": 690, "column": 12 }, "start": { "line": 690, "column": 12 } }, "288": { "end": { "line": 694, "column": 9 }, "start": { "line": 692, "column": 8 } }, "289": { "end": { "line": 693, "column": 12 }, "start": { "line": 693, "column": 12 } }, "290": { "end": { "line": 697, "column": 9 }, "start": { "line": 695, "column": 8 } }, "291": { "end": { "line": 696, "column": 12 }, "start": { "line": 696, "column": 12 } }, "292": { "end": { "line": 698, "column": 8 }, "start": { "line": 698, "column": 8 } }, "293": { "end": { "line": 699, "column": 8 }, "start": { "line": 699, "column": 8 } }, "294": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "295": { "end": { "line": 707, "column": 8 }, "start": { "line": 707, "column": 8 } }, "296": { "end": { "line": 711, "column": 9 }, "start": { "line": 709, "column": 8 } }, "297": { "end": { "line": 710, "column": 12 }, "start": { "line": 710, "column": 12 } }, "298": { "end": { "line": 713, "column": 8 }, "start": { "line": 713, "column": 8 } }, "299": { "end": { "line": 718, "column": 9 }, "start": { "line": 715, "column": 8 } }, "300": { "end": { "line": 716, "column": 12 }, "start": { "line": 716, "column": 12 } }, "301": { "end": { "line": 735, "column": 9 }, "start": { "line": 719, "column": 8 } }, "302": { "end": { "line": 720, "column": 12 }, "start": { "line": 720, "column": 12 } }, "303": { "end": { "line": 722, "column": 12 }, "start": { "line": 722, "column": 12 } }, "304": { "end": { "line": 727, "column": 13 }, "start": { "line": 723, "column": 12 } }, "305": { "end": { "line": 724, "column": 16 }, "start": { "line": 724, "column": 16 } }, "306": { "end": { "line": 726, "column": 16 }, "start": { "line": 726, "column": 16 } }, "307": { "end": { "line": 729, "column": 12 }, "start": { "line": 729, "column": 12 } }, "308": { "end": { "line": 732, "column": 12 }, "start": { "line": 732, "column": 12 } }, "309": { "end": { "line": 734, "column": 12 }, "start": { "line": 734, "column": 12 } }, "310": { "end": { "line": 737, "column": 8 }, "start": { "line": 737, "column": 8 } }, "311": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "312": { "end": { "line": 747, "column": 9 }, "start": { "line": 745, "column": 8 } }, "313": { "end": { "line": 746, "column": 12 }, "start": { "line": 746, "column": 12 } }, "314": { "end": { "line": 749, "column": 8 }, "start": { "line": 749, "column": 8 } }, "315": { "end": { "line": 750, "column": 8 }, "start": { "line": 750, "column": 8 } }, "316": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "317": { "end": { "line": 757, "column": 8 }, "start": { "line": 757, "column": 8 } }, "318": { "end": { "line": 761, "column": 9 }, "start": { "line": 759, "column": 8 } }, "319": { "end": { "line": 760, "column": 12 }, "start": { "line": 760, "column": 12 } }, "320": { "end": { "line": 763, "column": 8 }, "start": { "line": 763, "column": 8 } }, "321": { "end": { "line": 765, "column": 8 }, "start": { "line": 765, "column": 8 } }, "322": { "end": { "line": 766, "column": 8 }, "start": { "line": 766, "column": 8 } }, "323": { "end": { "line": 767, "column": 8 }, "start": { "line": 767, "column": 8 } }, "324": { "end": { "line": 770, "column": 8 }, "start": { "line": 770, "column": 8 } }, "325": { "end": { "line": 771, "column": 8 }, "start": { "line": 771, "column": 8 } }, "326": { "end": { "line": 785, "column": 9 }, "start": { "line": 773, "column": 8 } }, "327": { "end": { "line": 776, "column": 13 }, "start": { "line": 774, "column": 12 } }, "328": { "end": { "line": 775, "column": 16 }, "start": { "line": 775, "column": 16 } }, "329": { "end": { "line": 777, "column": 12 }, "start": { "line": 777, "column": 12 } }, "330": { "end": { "line": 784, "column": 13 }, "start": { "line": 779, "column": 12 } }, "331": { "end": { "line": 780, "column": 16 }, "start": { "line": 780, "column": 16 } }, "332": { "end": { "line": 783, "column": 16 }, "start": { "line": 783, "column": 16 } }, "333": { "end": { "line": 787, "column": 8 }, "start": { "line": 787, "column": 8 } }, "334": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "335": { "end": { "line": 794, "column": 8 }, "start": { "line": 794, "column": 8 } }, "336": { "end": { "line": 797, "column": 9 }, "start": { "line": 795, "column": 8 } }, "337": { "end": { "line": 796, "column": 12 }, "start": { "line": 796, "column": 12 } }, "338": { "end": { "line": 798, "column": 8 }, "start": { "line": 798, "column": 8 } }, "339": { "end": { "line": 799, "column": 8 }, "start": { "line": 799, "column": 8 } }, "340": { "end": { "line": 802, "column": 9 }, "start": { "line": 800, "column": 8 } }, "341": { "end": { "line": 801, "column": 12 }, "start": { "line": 801, "column": 12 } }, "342": { "end": { "line": 803, "column": 8 }, "start": { "line": 803, "column": 8 } }, "343": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "344": { "end": { "line": 810, "column": 8 }, "start": { "line": 810, "column": 8 } }, "345": { "end": { "line": 813, "column": 9 }, "start": { "line": 811, "column": 8 } }, "346": { "end": { "line": 812, "column": 12 }, "start": { "line": 812, "column": 12 } }, "347": { "end": { "line": 814, "column": 8 }, "start": { "line": 814, "column": 8 } }, "348": { "end": { "line": 815, "column": 8 }, "start": { "line": 815, "column": 8 } }, "349": { "end": { "line": 820, "column": 9 }, "start": { "line": 817, "column": 8 } }, "350": { "end": { "line": 818, "column": 12 }, "start": { "line": 818, "column": 12 } }, "351": { "end": { "line": 819, "column": 12 }, "start": { "line": 819, "column": 12 } }, "352": { "end": { "line": 821, "column": 8 }, "start": { "line": 821, "column": 8 } }, "353": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "354": { "end": { "line": 827, "column": 14 }, "start": { "line": 827, "column": 14 } }, "355": { "end": { "line": 830, "column": 9 }, "start": { "line": 828, "column": 8 } }, "356": { "end": { "line": 829, "column": 12 }, "start": { "line": 829, "column": 12 } }, "357": { "end": { "line": 832, "column": 8 }, "start": { "line": 832, "column": 8 } }, "358": { "end": { "line": 842, "column": 9 }, "start": { "line": 834, "column": 8 } }, "359": { "end": { "line": 840, "column": 13 }, "start": { "line": 835, "column": 12 } }, "360": { "end": { "line": 836, "column": 16 }, "start": { "line": 836, "column": 16 } }, "361": { "end": { "line": 840, "column": 13 }, "start": { "line": 838, "column": 17 } }, "362": { "end": { "line": 839, "column": 16 }, "start": { "line": 839, "column": 16 } }, "363": { "end": { "line": 841, "column": 12 }, "start": { "line": 841, "column": 12 } }, "364": { "end": { "line": 848, "column": 9 }, "start": { "line": 844, "column": 8 } }, "365": { "end": { "line": 845, "column": 12 }, "start": { "line": 845, "column": 12 } }, "366": { "end": { "line": 846, "column": 12 }, "start": { "line": 846, "column": 12 } }, "367": { "end": { "line": 847, "column": 12 }, "start": { "line": 847, "column": 12 } }, "368": { "end": { "line": 854, "column": 9 }, "start": { "line": 850, "column": 8 } }, "369": { "end": { "line": 851, "column": 12 }, "start": { "line": 851, "column": 12 } }, "370": { "end": { "line": 852, "column": 12 }, "start": { "line": 852, "column": 12 } }, "371": { "end": { "line": 853, "column": 12 }, "start": { "line": 853, "column": 12 } }, "372": { "end": { "line": 860, "column": 9 }, "start": { "line": 856, "column": 8 } }, "373": { "end": { "line": 857, "column": 12 }, "start": { "line": 857, "column": 12 } }, "374": { "end": { "line": 858, "column": 12 }, "start": { "line": 858, "column": 12 } }, "375": { "end": { "line": 859, "column": 12 }, "start": { "line": 859, "column": 12 } }, "376": { "end": { "line": 866, "column": 9 }, "start": { "line": 862, "column": 8 } }, "377": { "end": { "line": 863, "column": 12 }, "start": { "line": 863, "column": 12 } }, "378": { "end": { "line": 864, "column": 12 }, "start": { "line": 864, "column": 12 } }, "379": { "end": { "line": 865, "column": 12 }, "start": { "line": 865, "column": 12 } }, "380": { "end": { "line": 871, "column": 9 }, "start": { "line": 868, "column": 8 } }, "381": { "end": { "line": 869, "column": 12 }, "start": { "line": 869, "column": 12 } }, "382": { "end": { "line": 870, "column": 12 }, "start": { "line": 870, "column": 12 } }, "383": { "end": { "line": 876, "column": 9 }, "start": { "line": 873, "column": 8 } }, "384": { "end": { "line": 874, "column": 12 }, "start": { "line": 874, "column": 12 } }, "385": { "end": { "line": 875, "column": 12 }, "start": { "line": 875, "column": 12 } }, "386": { "end": { "line": 881, "column": 9 }, "start": { "line": 878, "column": 8 } }, "387": { "end": { "line": 879, "column": 12 }, "start": { "line": 879, "column": 12 } }, "388": { "end": { "line": 880, "column": 12 }, "start": { "line": 880, "column": 12 } }, "389": { "end": { "line": 885, "column": 9 }, "start": { "line": 883, "column": 8 } }, "390": { "end": { "line": 884, "column": 12 }, "start": { "line": 884, "column": 12 } }, "391": { "end": { "line": 887, "column": 8 }, "start": { "line": 887, "column": 8 } }, "392": { "end": { "line": 887, "column": 46 }, "start": { "line": 887, "column": 46 } }, "393": { "end": { "line": 888, "column": 8 }, "start": { "line": 888, "column": 8 } }, "394": { "end": { "line": 889, "column": 12 }, "start": { "line": 889, "column": 12 } }, "395": { "end": { "line": 890, "column": 8 }, "start": { "line": 890, "column": 8 } }, "396": { "end": { "line": 891, "column": 12 }, "start": { "line": 891, "column": 12 } }, "397": { "end": { "line": 893, "column": 8 }, "start": { "line": 893, "column": 8 } }, "398": { "end": { "line": 894, "column": 8 }, "start": { "line": 894, "column": 8 } }, "399": { "end": { "line": 895, "column": 8 }, "start": { "line": 895, "column": 8 } }, "400": { "end": { "line": 896, "column": 8 }, "start": { "line": 896, "column": 8 } }, "401": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 8, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 8, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 8, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 8, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "11": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "12": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "13": { "line": 24, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "14": { "line": 51, "type": "binary-expr", "locations": [{ "end": { "line": 29, "column": 31 }, "start": { "line": 29, "column": 31 } }, { "end": { "line": 29, "column": 8 }, "start": { "line": 29, "column": 57 } }] }, "15": { "line": 69, "type": "binary-expr", "locations": [{ "end": { "line": 47, "column": 27 }, "start": { "line": 47, "column": 27 } }, { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 49 } }] }, "16": { "line": 75, "type": "cond-expr", "locations": [{ "end": { "line": 53, "column": 28 }, "start": { "line": 53, "column": 54 } }, { "end": { "line": 53, "column": 8 }, "start": { "line": 53, "column": 72 } }] }, "17": { "line": 81, "type": "binary-expr", "locations": [{ "end": { "line": 59, "column": 35 }, "start": { "line": 59, "column": 35 } }, { "end": { "line": 59, "column": 8 }, "start": { "line": 59, "column": 67 } }] }, "18": { "line": 87, "type": "binary-expr", "locations": [{ "end": { "line": 65, "column": 29 }, "start": { "line": 65, "column": 29 } }, { "end": { "line": 65, "column": 8 }, "start": { "line": 65, "column": 55 } }] }, "19": { "line": 93, "type": "binary-expr", "locations": [{ "end": { "line": 71, "column": 29 }, "start": { "line": 71, "column": 29 } }, { "end": { "line": 71, "column": 8 }, "start": { "line": 71, "column": 55 } }] }, "20": { "line": 100, "type": "binary-expr", "locations": [{ "end": { "line": 78, "column": 30 }, "start": { "line": 78, "column": 30 } }, { "end": { "line": 78, "column": 8 }, "start": { "line": 78, "column": 52 } }] }, "21": { "line": 112, "type": "binary-expr", "locations": [{ "end": { "line": 90, "column": 34 }, "start": { "line": 90, "column": 34 } }, { "end": { "line": 90, "column": 8 }, "start": { "line": 90, "column": 61 } }] }, "22": { "line": 118, "type": "binary-expr", "locations": [{ "end": { "line": 96, "column": 35 }, "start": { "line": 96, "column": 35 } }, { "end": { "line": 96, "column": 8 }, "start": { "line": 96, "column": 63 } }] }, "23": { "line": 145, "type": "binary-expr", "locations": [{ "end": { "line": 123, "column": 31 }, "start": { "line": 123, "column": 31 } }, { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 55 } }] }, "24": { "line": 151, "type": "binary-expr", "locations": [{ "end": { "line": 129, "column": 31 }, "start": { "line": 129, "column": 31 } }, { "end": { "line": 129, "column": 8 }, "start": { "line": 129, "column": 55 } }] }, "25": { "line": 157, "type": "binary-expr", "locations": [{ "end": { "line": 135, "column": 31 }, "start": { "line": 135, "column": 31 } }, { "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 55 } }] }, "26": { "line": 163, "type": "binary-expr", "locations": [{ "end": { "line": 141, "column": 32 }, "start": { "line": 141, "column": 32 } }, { "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 57 } }] }, "27": { "line": 169, "type": "binary-expr", "locations": [{ "end": { "line": 147, "column": 31 }, "start": { "line": 147, "column": 31 } }, { "end": { "line": 147, "column": 31 }, "start": { "line": 148, "column": 13 } }] }, "28": { "line": 169, "type": "cond-expr", "locations": [{ "end": { "line": 148, "column": 13 }, "start": { "line": 148, "column": 31 } }, { "end": { "line": 147, "column": 31 }, "start": { "line": 149, "column": 16 } }] }, "29": { "line": 175, "type": "binary-expr", "locations": [{ "end": { "line": 156, "column": 31 }, "start": { "line": 156, "column": 31 } }, { "end": { "line": 156, "column": 31 }, "start": { "line": 157, "column": 13 } }] }, "30": { "line": 175, "type": "cond-expr", "locations": [{ "end": { "line": 157, "column": 13 }, "start": { "line": 157, "column": 31 } }, { "end": { "line": 156, "column": 31 }, "start": { "line": 158, "column": 16 } }] }, "31": { "line": 181, "type": "binary-expr", "locations": [{ "end": { "line": 165, "column": 32 }, "start": { "line": 165, "column": 32 } }, { "end": { "line": 165, "column": 32 }, "start": { "line": 166, "column": 13 } }] }, "32": { "line": 181, "type": "cond-expr", "locations": [{ "end": { "line": 166, "column": 13 }, "start": { "line": 166, "column": 31 } }, { "end": { "line": 165, "column": 32 }, "start": { "line": 167, "column": 16 } }] }, "33": { "line": 187, "type": "binary-expr", "locations": [{ "end": { "line": 174, "column": 31 }, "start": { "line": 174, "column": 31 } }, { "end": { "line": 174, "column": 31 }, "start": { "line": 175, "column": 13 } }] }, "34": { "line": 187, "type": "cond-expr", "locations": [{ "end": { "line": 175, "column": 13 }, "start": { "line": 175, "column": 31 } }, { "end": { "line": 174, "column": 31 }, "start": { "line": 176, "column": 16 } }] }, "35": { "line": 193, "type": "binary-expr", "locations": [{ "end": { "line": 183, "column": 24 }, "start": { "line": 183, "column": 24 } }, { "end": { "line": 183, "column": 8 }, "start": { "line": 183, "column": 39 } }] }, "36": { "line": 199, "type": "binary-expr", "locations": [{ "end": { "line": 189, "column": 22 }, "start": { "line": 189, "column": 22 } }, { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 35 } }] }, "37": { "line": 205, "type": "binary-expr", "locations": [{ "end": { "line": 195, "column": 32 }, "start": { "line": 195, "column": 32 } }, { "end": { "line": 195, "column": 8 }, "start": { "line": 195, "column": 56 } }] }, "38": { "line": 211, "type": "cond-expr", "locations": [{ "end": { "line": 201, "column": 29 }, "start": { "line": 201, "column": 55 } }, { "end": { "line": 201, "column": 8 }, "start": { "line": 201, "column": 63 } }] }, "39": { "line": 217, "type": "binary-expr", "locations": [{ "end": { "line": 207, "column": 32 }, "start": { "line": 207, "column": 32 } }, { "end": { "line": 207, "column": 8 }, "start": { "line": 207, "column": 32 } }] }, "40": { "line": 223, "type": "cond-expr", "locations": [{ "end": { "line": 213, "column": 34 }, "start": { "line": 214, "column": 12 } }, { "end": { "line": 213, "column": 8 }, "start": { "line": 213, "column": 34 } }] }, "41": { "line": 229, "type": "cond-expr", "locations": [{ "end": { "line": 220, "column": 33 }, "start": { "line": 221, "column": 12 } }, { "end": { "line": 220, "column": 8 }, "start": { "line": 220, "column": 33 } }] }, "42": { "line": 293, "type": "cond-expr", "locations": [{ "end": { "line": 285, "column": 23 }, "start": { "line": 286, "column": 20 } }, { "end": { "line": 285, "column": 16 }, "start": { "line": 287, "column": 20 } }] }, "43": { "line": 296, "type": "cond-expr", "locations": [{ "end": { "line": 290, "column": 23 }, "start": { "line": 291, "column": 20 } }, { "end": { "line": 290, "column": 16 }, "start": { "line": 292, "column": 21 } }] }, "44": { "line": 299, "type": "cond-expr", "locations": [{ "end": { "line": 295, "column": 32 }, "start": { "line": 296, "column": 20 } }, { "end": { "line": 295, "column": 16 }, "start": { "line": 296, "column": 43 } }] }, "45": { "line": 303, "type": "cond-expr", "locations": [{ "end": { "line": 300, "column": 32 }, "start": { "line": 301, "column": 20 } }, { "end": { "line": 300, "column": 16 }, "start": { "line": 301, "column": 43 } }] }, "46": { "line": 314, "type": "if", "locations": [{ "end": { "line": 312, "column": 16 }, "start": { "line": 312, "column": 16 } }, { "end": { "line": 312, "column": 16 }, "start": { "line": 312, "column": 16 } }] }, "47": { "line": 315, "type": "if", "locations": [{ "end": { "line": 313, "column": 20 }, "start": { "line": 313, "column": 20 } }, { "end": { "line": 313, "column": 20 }, "start": { "line": 313, "column": 20 } }] }, "48": { "line": 346, "type": "if", "locations": [{ "end": { "line": 338, "column": 8 }, "start": { "line": 338, "column": 8 } }, { "end": { "line": 338, "column": 8 }, "start": { "line": 338, "column": 8 } }] }, "49": { "line": 352, "type": "if", "locations": [{ "end": { "line": 344, "column": 8 }, "start": { "line": 344, "column": 8 } }, { "end": { "line": 344, "column": 8 }, "start": { "line": 344, "column": 8 } }] }, "50": { "line": 353, "type": "if", "locations": [{ "end": { "line": 345, "column": 12 }, "start": { "line": 345, "column": 12 } }, { "end": { "line": 345, "column": 12 }, "start": { "line": 345, "column": 12 } }] }, "51": { "line": 367, "type": "if", "locations": [{ "end": { "line": 359, "column": 8 }, "start": { "line": 359, "column": 8 } }, { "end": { "line": 359, "column": 8 }, "start": { "line": 359, "column": 8 } }] }, "52": { "line": 374, "type": "if", "locations": [{ "end": { "line": 366, "column": 8 }, "start": { "line": 366, "column": 8 } }, { "end": { "line": 366, "column": 8 }, "start": { "line": 366, "column": 8 } }] }, "53": { "line": 386, "type": "if", "locations": [{ "end": { "line": 378, "column": 8 }, "start": { "line": 378, "column": 8 } }, { "end": { "line": 378, "column": 8 }, "start": { "line": 378, "column": 8 } }] }, "54": { "line": 388, "type": "if", "locations": [{ "end": { "line": 380, "column": 12 }, "start": { "line": 380, "column": 12 } }, { "end": { "line": 380, "column": 12 }, "start": { "line": 380, "column": 12 } }] }, "55": { "line": 398, "type": "if", "locations": [{ "end": { "line": 394, "column": 12 }, "start": { "line": 394, "column": 12 } }, { "end": { "line": 394, "column": 12 }, "start": { "line": 394, "column": 12 } }] }, "56": { "line": 408, "type": "if", "locations": [{ "end": { "line": 408, "column": 12 }, "start": { "line": 408, "column": 12 } }, { "end": { "line": 408, "column": 12 }, "start": { "line": 408, "column": 12 } }] }, "57": { "line": 418, "type": "if", "locations": [{ "end": { "line": 422, "column": 12 }, "start": { "line": 422, "column": 12 } }, { "end": { "line": 422, "column": 12 }, "start": { "line": 422, "column": 12 } }] }, "58": { "line": 430, "type": "if", "locations": [{ "end": { "line": 438, "column": 8 }, "start": { "line": 438, "column": 8 } }, { "end": { "line": 438, "column": 8 }, "start": { "line": 438, "column": 8 } }] }, "59": { "line": 433, "type": "cond-expr", "locations": [{ "end": { "line": 441, "column": 23 }, "start": { "line": 441, "column": 43 } }, { "end": { "line": 441, "column": 8 }, "start": { "line": 441, "column": 53 } }] }, "60": { "line": 464, "type": "if", "locations": [{ "end": { "line": 472, "column": 8 }, "start": { "line": 472, "column": 8 } }, { "end": { "line": 472, "column": 8 }, "start": { "line": 472, "column": 8 } }] }, "61": { "line": 490, "type": "cond-expr", "locations": [{ "end": { "line": 491, "column": 31 }, "start": { "line": 491, "column": 31 } }, { "end": { "line": 491, "column": 31 }, "start": { "line": 491, "column": 24 } }] }, "62": { "line": 490, "type": "binary-expr", "locations": [{ "end": { "line": 491, "column": 31 }, "start": { "line": 491, "column": 31 } }, { "end": { "line": 491, "column": 31 }, "start": { "line": 491, "column": 31 } }] }, "63": { "line": 493, "type": "if", "locations": [{ "end": { "line": 493, "column": 8 }, "start": { "line": 493, "column": 8 } }, { "end": { "line": 493, "column": 8 }, "start": { "line": 493, "column": 8 } }] }, "64": { "line": 499, "type": "if", "locations": [{ "end": { "line": 499, "column": 8 }, "start": { "line": 499, "column": 8 } }, { "end": { "line": 499, "column": 8 }, "start": { "line": 499, "column": 8 } }] }, "65": { "line": 524, "type": "cond-expr", "locations": [{ "end": { "line": 520, "column": 19 }, "start": { "line": 520, "column": 39 } }, { "end": { "line": 520, "column": 8 }, "start": { "line": 520, "column": 49 } }] }, "66": { "line": 527, "type": "binary-expr", "locations": [{ "end": { "line": 523, "column": 28 }, "start": { "line": 523, "column": 28 } }, { "end": { "line": 523, "column": 8 }, "start": { "line": 523, "column": 41 } }] }, "67": { "line": 534, "type": "if", "locations": [{ "end": { "line": 530, "column": 8 }, "start": { "line": 530, "column": 8 } }, { "end": { "line": 530, "column": 8 }, "start": { "line": 530, "column": 8 } }] }, "68": { "line": 538, "type": "if", "locations": [{ "end": { "line": 534, "column": 8 }, "start": { "line": 534, "column": 8 } }, { "end": { "line": 534, "column": 8 }, "start": { "line": 534, "column": 8 } }] }, "69": { "line": 540, "type": "if", "locations": [{ "end": { "line": 536, "column": 12 }, "start": { "line": 536, "column": 12 } }, { "end": { "line": 536, "column": 12 }, "start": { "line": 536, "column": 12 } }] }, "70": { "line": 569, "type": "if", "locations": [{ "end": { "line": 564, "column": 8 }, "start": { "line": 564, "column": 8 } }, { "end": { "line": 564, "column": 8 }, "start": { "line": 564, "column": 8 } }] }, "71": { "line": 580, "type": "if", "locations": [{ "end": { "line": 575, "column": 12 }, "start": { "line": 575, "column": 12 } }, { "end": { "line": 575, "column": 12 }, "start": { "line": 575, "column": 12 } }] }, "72": { "line": 580, "type": "binary-expr", "locations": [{ "end": { "line": 575, "column": 16 }, "start": { "line": 575, "column": 16 } }, { "end": { "line": 575, "column": 12 }, "start": { "line": 575, "column": 39 } }] }, "73": { "line": 581, "type": "if", "locations": [{ "end": { "line": 576, "column": 16 }, "start": { "line": 576, "column": 16 } }, { "end": { "line": 576, "column": 16 }, "start": { "line": 576, "column": 16 } }] }, "74": { "line": 581, "type": "binary-expr", "locations": [{ "end": { "line": 576, "column": 20 }, "start": { "line": 576, "column": 20 } }, { "end": { "line": 576, "column": 16 }, "start": { "line": 576, "column": 42 } }] }, "75": { "line": 614, "type": "if", "locations": [{ "end": { "line": 605, "column": 8 }, "start": { "line": 605, "column": 8 } }, { "end": { "line": 605, "column": 8 }, "start": { "line": 605, "column": 8 } }] }, "76": { "line": 614, "type": "binary-expr", "locations": [{ "end": { "line": 605, "column": 12 }, "start": { "line": 605, "column": 12 } }, { "end": { "line": 605, "column": 8 }, "start": { "line": 605, "column": 35 } }] }, "77": { "line": 618, "type": "cond-expr", "locations": [{ "end": { "line": 609, "column": 12 }, "start": { "line": 609, "column": 12 } }, { "end": { "line": 608, "column": 8 }, "start": { "line": 609, "column": 12 } }] }, "78": { "line": 619, "type": "if", "locations": [{ "end": { "line": 610, "column": 8 }, "start": { "line": 610, "column": 8 } }, { "end": { "line": 610, "column": 8 }, "start": { "line": 610, "column": 8 } }] }, "79": { "line": 620, "type": "switch", "locations": [{ "end": { "line": 614, "column": 20 }, "start": { "line": 612, "column": 16 } }, { "end": { "line": 617, "column": 20 }, "start": { "line": 615, "column": 16 } }, { "end": { "line": 620, "column": 20 }, "start": { "line": 618, "column": 16 } }, { "end": { "line": 623, "column": 20 }, "start": { "line": 621, "column": 16 } }, { "end": { "line": 626, "column": 20 }, "start": { "line": 624, "column": 16 } }] }, "80": { "line": 637, "type": "if", "locations": [{ "end": { "line": 629, "column": 13 }, "start": { "line": 629, "column": 13 } }, { "end": { "line": 629, "column": 13 }, "start": { "line": 629, "column": 13 } }] }, "81": { "line": 653, "type": "if", "locations": [{ "end": { "line": 641, "column": 8 }, "start": { "line": 641, "column": 8 } }, { "end": { "line": 641, "column": 8 }, "start": { "line": 641, "column": 8 } }] }, "82": { "line": 653, "type": "binary-expr", "locations": [{ "end": { "line": 641, "column": 12 }, "start": { "line": 641, "column": 12 } }, { "end": { "line": 641, "column": 8 }, "start": { "line": 641, "column": 38 } }] }, "83": { "line": 670, "type": "if", "locations": [{ "end": { "line": 658, "column": 8 }, "start": { "line": 658, "column": 8 } }, { "end": { "line": 658, "column": 8 }, "start": { "line": 658, "column": 8 } }] }, "84": { "line": 673, "type": "cond-expr", "locations": [{ "end": { "line": 661, "column": 23 }, "start": { "line": 662, "column": 12 } }, { "end": { "line": 661, "column": 8 }, "start": { "line": 662, "column": 22 } }] }, "85": { "line": 677, "type": "if", "locations": [{ "end": { "line": 666, "column": 8 }, "start": { "line": 666, "column": 8 } }, { "end": { "line": 666, "column": 8 }, "start": { "line": 666, "column": 8 } }] }, "86": { "line": 677, "type": "binary-expr", "locations": [{ "end": { "line": 666, "column": 12 }, "start": { "line": 666, "column": 12 } }, { "end": { "line": 666, "column": 8 }, "start": { "line": 666, "column": 20 } }] }, "87": { "line": 701, "type": "if", "locations": [{ "end": { "line": 688, "column": 8 }, "start": { "line": 688, "column": 8 } }, { "end": { "line": 688, "column": 8 }, "start": { "line": 688, "column": 8 } }] }, "88": { "line": 701, "type": "binary-expr", "locations": [{ "end": { "line": 688, "column": 12 }, "start": { "line": 688, "column": 12 } }, { "end": { "line": 688, "column": 12 }, "start": { "line": 688, "column": 35 } }, { "end": { "line": 688, "column": 8 }, "start": { "line": 689, "column": 12 } }] }, "89": { "line": 704, "type": "if", "locations": [{ "end": { "line": 692, "column": 8 }, "start": { "line": 692, "column": 8 } }, { "end": { "line": 692, "column": 8 }, "start": { "line": 692, "column": 8 } }] }, "90": { "line": 707, "type": "if", "locations": [{ "end": { "line": 695, "column": 8 }, "start": { "line": 695, "column": 8 } }, { "end": { "line": 695, "column": 8 }, "start": { "line": 695, "column": 8 } }] }, "91": { "line": 723, "type": "if", "locations": [{ "end": { "line": 709, "column": 8 }, "start": { "line": 709, "column": 8 } }, { "end": { "line": 709, "column": 8 }, "start": { "line": 709, "column": 8 } }] }, "92": { "line": 729, "type": "if", "locations": [{ "end": { "line": 715, "column": 8 }, "start": { "line": 715, "column": 8 } }, { "end": { "line": 715, "column": 8 }, "start": { "line": 715, "column": 8 } }] }, "93": { "line": 730, "type": "cond-expr", "locations": [{ "end": { "line": 716, "column": 20 }, "start": { "line": 717, "column": 16 } }, { "end": { "line": 716, "column": 12 }, "start": { "line": 717, "column": 55 } }] }, "94": { "line": 732, "type": "if", "locations": [{ "end": { "line": 719, "column": 8 }, "start": { "line": 719, "column": 8 } }, { "end": { "line": 719, "column": 8 }, "start": { "line": 719, "column": 8 } }] }, "95": { "line": 732, "type": "binary-expr", "locations": [{ "end": { "line": 719, "column": 12 }, "start": { "line": 719, "column": 12 } }, { "end": { "line": 719, "column": 8 }, "start": { "line": 719, "column": 26 } }] }, "96": { "line": 736, "type": "if", "locations": [{ "end": { "line": 723, "column": 12 }, "start": { "line": 723, "column": 12 } }, { "end": { "line": 723, "column": 12 }, "start": { "line": 723, "column": 12 } }] }, "97": { "line": 742, "type": "cond-expr", "locations": [{ "end": { "line": 729, "column": 34 }, "start": { "line": 730, "column": 16 } }, { "end": { "line": 729, "column": 12 }, "start": { "line": 730, "column": 40 } }] }, "98": { "line": 759, "type": "if", "locations": [{ "end": { "line": 745, "column": 8 }, "start": { "line": 745, "column": 8 } }, { "end": { "line": 745, "column": 8 }, "start": { "line": 745, "column": 8 } }] }, "99": { "line": 759, "type": "binary-expr", "locations": [{ "end": { "line": 745, "column": 12 }, "start": { "line": 745, "column": 12 } }, { "end": { "line": 745, "column": 8 }, "start": { "line": 745, "column": 33 } }] }, "100": { "line": 775, "type": "if", "locations": [{ "end": { "line": 759, "column": 8 }, "start": { "line": 759, "column": 8 } }, { "end": { "line": 759, "column": 8 }, "start": { "line": 759, "column": 8 } }] }, "101": { "line": 783, "type": "cond-expr", "locations": [{ "end": { "line": 767, "column": 31 }, "start": { "line": 768, "column": 12 } }, { "end": { "line": 767, "column": 8 }, "start": { "line": 769, "column": 12 } }] }, "102": { "line": 787, "type": "if", "locations": [{ "end": { "line": 773, "column": 8 }, "start": { "line": 773, "column": 8 } }, { "end": { "line": 773, "column": 8 }, "start": { "line": 773, "column": 8 } }] }, "103": { "line": 788, "type": "if", "locations": [{ "end": { "line": 774, "column": 12 }, "start": { "line": 774, "column": 12 } }, { "end": { "line": 774, "column": 12 }, "start": { "line": 774, "column": 12 } }] }, "104": { "line": 793, "type": "if", "locations": [{ "end": { "line": 779, "column": 12 }, "start": { "line": 779, "column": 12 } }, { "end": { "line": 779, "column": 12 }, "start": { "line": 779, "column": 12 } }] }, "105": { "line": 794, "type": "cond-expr", "locations": [{ "end": { "line": 781, "column": 20 }, "start": { "line": 782, "column": 25 } }, { "end": { "line": 780, "column": 16 }, "start": { "line": 782, "column": 62 } }] }, "106": { "line": 809, "type": "if", "locations": [{ "end": { "line": 795, "column": 8 }, "start": { "line": 795, "column": 8 } }, { "end": { "line": 795, "column": 8 }, "start": { "line": 795, "column": 8 } }] }, "107": { "line": 814, "type": "if", "locations": [{ "end": { "line": 800, "column": 8 }, "start": { "line": 800, "column": 8 } }, { "end": { "line": 800, "column": 8 }, "start": { "line": 800, "column": 8 } }] }, "108": { "line": 827, "type": "if", "locations": [{ "end": { "line": 811, "column": 8 }, "start": { "line": 811, "column": 8 } }, { "end": { "line": 811, "column": 8 }, "start": { "line": 811, "column": 8 } }] }, "109": { "line": 833, "type": "if", "locations": [{ "end": { "line": 817, "column": 8 }, "start": { "line": 817, "column": 8 } }, { "end": { "line": 817, "column": 8 }, "start": { "line": 817, "column": 8 } }] }, "110": { "line": 848, "type": "if", "locations": [{ "end": { "line": 828, "column": 8 }, "start": { "line": 828, "column": 8 } }, { "end": { "line": 828, "column": 8 }, "start": { "line": 828, "column": 8 } }] }, "111": { "line": 854, "type": "if", "locations": [{ "end": { "line": 834, "column": 8 }, "start": { "line": 834, "column": 8 } }, { "end": { "line": 834, "column": 8 }, "start": { "line": 834, "column": 8 } }] }, "112": { "line": 855, "type": "if", "locations": [{ "end": { "line": 835, "column": 12 }, "start": { "line": 835, "column": 12 } }, { "end": { "line": 835, "column": 12 }, "start": { "line": 835, "column": 12 } }] }, "113": { "line": 857, "type": "if", "locations": [{ "end": { "line": 838, "column": 17 }, "start": { "line": 838, "column": 17 } }, { "end": { "line": 838, "column": 17 }, "start": { "line": 838, "column": 17 } }] }, "114": { "line": 863, "type": "if", "locations": [{ "end": { "line": 844, "column": 8 }, "start": { "line": 844, "column": 8 } }, { "end": { "line": 844, "column": 8 }, "start": { "line": 844, "column": 8 } }] }, "115": { "line": 869, "type": "if", "locations": [{ "end": { "line": 850, "column": 8 }, "start": { "line": 850, "column": 8 } }, { "end": { "line": 850, "column": 8 }, "start": { "line": 850, "column": 8 } }] }, "116": { "line": 875, "type": "if", "locations": [{ "end": { "line": 856, "column": 8 }, "start": { "line": 856, "column": 8 } }, { "end": { "line": 856, "column": 8 }, "start": { "line": 856, "column": 8 } }] }, "117": { "line": 881, "type": "if", "locations": [{ "end": { "line": 862, "column": 8 }, "start": { "line": 862, "column": 8 } }, { "end": { "line": 862, "column": 8 }, "start": { "line": 862, "column": 8 } }] }, "118": { "line": 887, "type": "if", "locations": [{ "end": { "line": 868, "column": 8 }, "start": { "line": 868, "column": 8 } }, { "end": { "line": 868, "column": 8 }, "start": { "line": 868, "column": 8 } }] }, "119": { "line": 892, "type": "if", "locations": [{ "end": { "line": 873, "column": 8 }, "start": { "line": 873, "column": 8 } }, { "end": { "line": 873, "column": 8 }, "start": { "line": 873, "column": 8 } }] }, "120": { "line": 897, "type": "if", "locations": [{ "end": { "line": 878, "column": 8 }, "start": { "line": 878, "column": 8 } }, { "end": { "line": 878, "column": 8 }, "start": { "line": 878, "column": 8 } }] }, "121": { "line": 902, "type": "if", "locations": [{ "end": { "line": 883, "column": 8 }, "start": { "line": 883, "column": 8 } }, { "end": { "line": 883, "column": 8 }, "start": { "line": 883, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, createOpt, createText, elm, removeElm} from '../dom';", "import {isArray, isFn, isNull, EMPTY_FN} from '../types';", "import {addEvt, keyCode, removeEvt} from '../event';", "import {INPUT, SELECT, NONE, ENTER_KEY} from '../const';", "", "/**", " * Paging UI component", " * @export", " * @class Paging", " * @extends {Feature}", " */", "export class Paging extends Feature {", "", "    /**", "     * Creates an instance of Paging", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'paging');", "", "        // Configuration object", "        var f = this.config;", "", "        /**", "         * Css class for the paging buttons (previous, next, etc.)", "         * @type {String}", "         */", "        this.btnPageCssClass = f.paging_btn_css_class || 'pgInp';", "", "         /**", "         * Main select DOM element", "         * @type {DOMElement}", "         */", "        this.pagingSlc = null;", "", "        /**", "         * Results per page select DOM element", "         * @type {DOMElement}", "         */", "        this.resultsPerPageSlc = null;", "", "        /**", "         * ID of custom container element", "         * @type {String}", "         */", "        this.pagingTgtId = f.paging_target_id || null;", "", "        /**", "         * Number of rows contained in a page", "         * @type {Number}", "         */", "        this.pagingLength = !isNaN(f.paging_length) ? f.paging_length : 10;", "", "        /**", "         * ID of custom container element for the results per page selector", "         * @type {String}", "         */", "        this.resultsPerPageTgtId = f.results_per_page_target_id || null;", "", "        /**", "         * Css class for the paging select element", "         * @type {String}", "         */", "        this.pgSlcCssClass = f.paging_slc_css_class || 'pgSlc';", "", "        /**", "         * Css class for the paging input element", "         * @type {String}", "         */", "        this.pgInpCssClass = f.paging_inp_css_class || 'pgNbInp';", "", "        /**", "         * Label and values for the results per page select, example of usage:", "         * ['Records: ', [10,25,50,100]]", "         * @type {Array}", "         */", "        this.resultsPerPage = f.results_per_page || null;", "", "        /**", "         * Determines if results per page is configured", "         * @type {Boolean}", "         */", "        this.hasResultsPerPage = isArray(this.resultsPerPage);", "", "        /**", "         * Css class for the results per page select", "         * @type {String}", "         */", "        this.resultsSlcCssClass = f.results_slc_css_class || 'rspg';", "", "        /**", "         * Css class for the label preceding results per page select", "         * @type {String}", "         */", "        this.resultsSpanCssClass = f.results_span_css_class || 'rspgSpan';", "", "        /**", "         * Index of the first row of current page", "         * @type {Number}", "         * @private", "         */", "        this.startPagingRow = 0;", "", "        /**", "         * Total number of pages", "         * @type {Number}", "         * @private", "         */", "        this.nbPages = 0;", "", "        /**", "         * Current page number", "         * @type {Number}", "         * @private", "         */", "        this.currentPageNb = 1;", "", "        /**", "         * Next page button text", "         * @type {String}", "         */", "        this.btnNextPageText = f.btn_next_page_text || '>';", "", "        /**", "         * Previous page button text", "         * @type {String}", "         */", "        this.btnPrevPageText = f.btn_prev_page_text || '<';", "", "        /**", "         * Last page button text", "         * @type {String}", "         */", "        this.btnLastPageText = f.btn_last_page_text || '>|';", "", "        /**", "         * First page button text", "         * @type {String}", "         */", "        this.btnFirstPageText = f.btn_first_page_text || '|<';", "", "        /**", "         * Next page button HTML", "         * @type {String}", "         */", "        this.btnNextPageHtml = f.btn_next_page_html ||", "            (!tf.enableIcons ? null :", "                '<input type=\"button\" value=\"\" class=\"' + this.btnPageCssClass +", "                ' nextPage\" title=\"Next page\" />');", "", "        /**", "         * Previous page button HTML", "         * @type {String}", "         */", "        this.btnPrevPageHtml = f.btn_prev_page_html ||", "            (!tf.enableIcons ? null :", "                '<input type=\"button\" value=\"\" class=\"' + this.btnPageCssClass +", "                ' previousPage\" title=\"Previous page\" />');", "", "        /**", "         * First page button HTML", "         * @type {String}", "         */", "        this.btnFirstPageHtml = f.btn_first_page_html ||", "            (!tf.enableIcons ? null :", "                '<input type=\"button\" value=\"\" class=\"' + this.btnPageCssClass +", "                ' firstPage\" title=\"First page\" />');", "", "        /**", "         * Last page button HTML", "         * @type {String}", "         */", "        this.btnLastPageHtml = f.btn_last_page_html ||", "            (!tf.enableIcons ? null :", "                '<input type=\"button\" value=\"\" class=\"' + this.btnPageCssClass +", "                ' lastPage\" title=\"Last page\" />');", "", "        /**", "         * Text preceeding page selector drop-down", "         * @type {String}", "         */", "        this.pageText = f.page_text || ' Page ';", "", "        /**", "         * Text after page selector drop-down", "         * @type {String}", "         */", "        this.ofText = f.of_text || ' of ';", "", "        /**", "         * Css class for the span containing total number of pages", "         * @type {String}", "         */", "        this.nbPgSpanCssClass = f.nb_pages_css_class || 'nbpg';", "", "        /**", "         * Determines if paging buttons are enabled (default: true)", "         * @type {Boolean}", "         */", "        this.hasPagingBtns = f.paging_btns === false ? false : true;", "", "        /**", "         * Defines page selector type, two possible values: 'select', 'input'", "         * @type {String}", "         */", "        this.pageSelectorType = f.page_selector_type || SELECT;", "", "        /**", "         * Callback fired before the page is changed", "         * @type {Function}", "         */", "        this.onBeforeChangePage = isFn(f.on_before_change_page) ?", "            f.on_before_change_page : EMPTY_FN;", "", "        /**", "         * Callback fired after the page is changed", "         * @type {Function}", "         */", "        this.onAfterChangePage = isFn(f.on_after_change_page) ?", "            f.on_after_change_page : EMPTY_FN;", "", "        /**", "         * Label preciding results per page select", "         * @type {DOMElement}", "         * @private", "         */", "        this.slcResultsTxt = null;", "        /**", "         * Span containing next page button", "         * @type {DOMElement}", "         * @private", "         */", "        this.btnNextCont = null;", "        /**", "         * Span containing previous page button", "         * @type {DOMElement}", "         * @private", "         */", "        this.btnPrevCont = null;", "        /**", "         * Span containing last page button", "         * @type {DOMElement}", "         * @private", "         */", "        this.btnLastCont = null;", "        /**", "         * Span containing first page button", "         * @type {DOMElement}", "         * @private", "         */", "        this.btnFirstCont = null;", "        /**", "         * Span for tot nb pages", "         * @type {DOMElement}", "         * @private", "         */", "        this.pgCont = null;", "        /**", "         * Span preceding pages select (contains 'Page')", "         * @type {DOMElement}", "         * @private", "         */", "        this.pgBefore = null;", "        /**", "         * Span following pages select (contains ' of ')", "         * @type {DOMElement}", "         * @private", "         */", "        this.pgAfter = null;", "", "        var start_row = tf.refRow;", "        var nrows = tf.getRowsNb(true);", "        //calculates page nb", "        this.nbPages = Math.ceil((nrows - start_row) / this.pagingLength);", "", "        var o = this;", "        /**", "         * Paging DOM events handlers", "         * @type {String}", "         * @private", "         */", "        this.evt = {", "            slcIndex() {", "                return (o.pageSelectorType === SELECT) ?", "                    o.pagingSlc.options.selectedIndex :", "                    parseInt(o.pagingSlc.value, 10) - 1;", "            },", "            nbOpts() {", "                return (o.pageSelectorType === SELECT) ?", "                    parseInt(o.pagingSlc.options.length, 10) - 1 :", "                    (o.nbPages - 1);", "            },", "            next() {", "                var nextIndex = o.evt.slcIndex() < o.evt.nbOpts() ?", "                    o.evt.slcIndex() + 1 : 0;", "                o.changePage(nextIndex);", "            },", "            prev() {", "                var prevIndex = o.evt.slcIndex() > 0 ?", "                    o.evt.slcIndex() - 1 : o.evt.nbOpts();", "                o.changePage(prevIndex);", "            },", "            last() {", "                o.changePage(o.evt.nbOpts());", "            },", "            first() {", "                o.changePage(0);", "            },", "            _detectKey(e) {", "                var key = keyCode(e);", "                if (key === ENTER_KEY) {", "                    if (tf.sorted) {", "                        tf.filter();", "                        o.changePage(o.evt.slcIndex());", "                    } else {", "                        o.changePage();", "                    }", "                    this.blur();", "                }", "            },", "            slcPagesChange: null,", "            nextEvt: null,", "            prevEvt: null,", "            lastEvt: null,", "            firstEvt: null", "        };", "    }", "", "    /**", "     * Initialize DOM elements", "     */", "    init() {", "        var slcPages;", "        var tf = this.tf;", "        var evt = this.evt;", "", "        if (this.initialized) {", "            return;", "        }", "", "        // Check resultsPerPage is in expected format and initialise the", "        // results per page component", "        if (this.hasResultsPerPage) {", "            if (this.resultsPerPage.length < 2) {", "                this.hasResultsPerPage = false;", "            } else {", "                this.pagingLength = this.resultsPerPage[1][0];", "                this.setResultsPerPage();", "            }", "        }", "", "        evt.slcPagesChange = (event) => {", "            var slc = event.target;", "            this.changePage(slc.selectedIndex);", "        };", "", "        // Paging drop-down list selector", "        if (this.pageSelectorType === SELECT) {", "            slcPages = createElm(SELECT);", "            slcPages.className = this.pgSlcCssClass;", "            addEvt(slcPages, 'change', evt.slcPagesChange);", "        }", "", "        // Paging input selector", "        if (this.pageSelectorType === INPUT) {", "            slcPages = createElm(INPUT, ['value', this.currentPageNb]);", "            slcPages.className = this.pgInpCssClass;", "            addEvt(slcPages, 'keypress', evt._detectKey);", "        }", "", "        // btns containers", "        var btnNextSpan = createElm('span');", "        var btnPrevSpan = createElm('span');", "        var btnLastSpan = createElm('span');", "        var btnFirstSpan = createElm('span');", "", "        if (this.hasPagingBtns) {", "            // Next button", "            if (!this.btnNextPageHtml) {", "                var btnNext = createElm(INPUT,", "                    ['type', 'button'],", "                    ['value', this.btnNextPageText],", "                    ['title', 'Next']", "                );", "                btnNext.className = this.btnPageCssClass;", "                addEvt(btnNext, 'click', evt.next);", "                btnNextSpan.appendChild(btnNext);", "            } else {", "                btnNextSpan.innerHTML = this.btnNextPageHtml;", "                addEvt(btnNextSpan, 'click', evt.next);", "            }", "            // Previous button", "            if (!this.btnPrevPageHtml) {", "                var btnPrev = createElm(INPUT,", "                    ['type', 'button'],", "                    ['value', this.btnPrevPageText],", "                    ['title', 'Previous']", "                );", "                btnPrev.className = this.btnPageCssClass;", "                addEvt(btnPrev, 'click', evt.prev);", "                btnPrevSpan.appendChild(btnPrev);", "            } else {", "                btnPrevSpan.innerHTML = this.btnPrevPageHtml;", "                addEvt(btnPrevSpan, 'click', evt.prev);", "            }", "            // Last button", "            if (!this.btnLastPageHtml) {", "                var btnLast = createElm(INPUT,", "                    ['type', 'button'],", "                    ['value', this.btnLastPageText],", "                    ['title', 'Last']", "                );", "                btnLast.className = this.btnPageCssClass;", "                addEvt(btnLast, 'click', evt.last);", "                btnLastSpan.appendChild(btnLast);", "            } else {", "                btnLastSpan.innerHTML = this.btnLastPageHtml;", "                addEvt(btnLastSpan, 'click', evt.last);", "            }", "            // First button", "            if (!this.btnFirstPageHtml) {", "                var btnFirst = createElm(INPUT,", "                    ['type', 'button'],", "                    ['value', this.btnFirstPageText],", "                    ['title', 'First']", "                );", "                btnFirst.className = this.btnPageCssClass;", "                addEvt(btnFirst, 'click', evt.first);", "                btnFirstSpan.appendChild(btnFirst);", "            } else {", "                btnFirstSpan.innerHTML = this.btnFirstPageHtml;", "                addEvt(btnFirstSpan, 'click', evt.first);", "            }", "        }", "", "        // paging elements (buttons+drop-down list) are added to defined element", "        if (!this.pagingTgtId) {", "            tf.setToolbar();", "        }", "        var targetEl = !this.pagingTgtId ? tf.mDiv : elm(this.pagingTgtId);", "        targetEl.appendChild(btnFirstSpan);", "        targetEl.appendChild(btnPrevSpan);", "", "        var pgBeforeSpan = createElm('span');", "        pgBeforeSpan.appendChild(createText(this.pageText));", "        pgBeforeSpan.className = this.nbPgSpanCssClass;", "        targetEl.appendChild(pgBeforeSpan);", "        targetEl.appendChild(slcPages);", "        var pgAfterSpan = createElm('span');", "        pgAfterSpan.appendChild(createText(this.ofText));", "        pgAfterSpan.className = this.nbPgSpanCssClass;", "        targetEl.appendChild(pgAfterSpan);", "        var pgSpan = createElm('span');", "        pgSpan.className = this.nbPgSpanCssClass;", "        pgSpan.appendChild(createText(' ' + this.nbPages + ' '));", "        targetEl.appendChild(pgSpan);", "        targetEl.appendChild(btnNextSpan);", "        targetEl.appendChild(btnLastSpan);", "", "        this.btnNextCont = btnNextSpan;", "        this.btnPrevCont = btnPrevSpan;", "        this.btnLastCont = btnLastSpan;", "        this.btnFirstCont = btnFirstSpan;", "        this.pgCont = pgSpan;", "        this.pgBefore = pgBeforeSpan;", "        this.pgAfter = pgAfterSpan;", "        this.pagingSlc = slcPages;", "", "        this.setPagingInfo();", "", "        if (!tf.fltGrid) {", "            tf.validateAllRows();", "            this.setPagingInfo(tf.validRowsIndex);", "        }", "", "        this.emitter.on(['after-filtering'], () => this.resetPagingInfo());", "        this.emitter.on(['change-page'],", "            (tf, pageNumber) => this.setPage(pageNumber));", "        this.emitter.on(['change-page-results'],", "            (tf, pageLength) => this.changeResultsPerPage(pageLength));", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Reset paging when filters are already instantiated", "     * @param {Boolean} filterTable Execute filtering once paging instanciated", "     */", "    reset(filterTable = false) {", "        var tf = this.tf;", "        if (this.isEnabled()) {", "            return;", "        }", "        this.enable();", "        this.init();", "", "        if (filterTable) {", "            tf.filter();", "        }", "    }", "", "    /**", "     * Reset paging info from scratch after a filtering process", "     */", "    resetPagingInfo() {", "        this.startPagingRow = 0;", "        this.currentPageNb = 1;", "        this.setPagingInfo(this.tf.validRowsIndex);", "    }", "", "    /**", "     * Calculate number of pages based on valid rows", "     * Refresh paging select according to number of pages", "     * @param {Array} validRows Collection of valid rows", "     */", "    setPagingInfo(validRows) {", "        var tf = this.tf;", "        var mdiv = !this.pagingTgtId ? tf.mDiv : elm(this.pagingTgtId);", "", "        //store valid rows indexes", "        tf.validRowsIndex = validRows || tf.getValidRows(true);", "", "        //calculate nb of pages", "        this.nbPages = Math.ceil(tf.validRowsIndex.length / this.pagingLength);", "        //refresh page nb span", "        this.pgCont.innerHTML = this.nbPages;", "        //select clearing shortcut", "        if (this.pageSelectorType === SELECT) {", "            this.pagingSlc.innerHTML = '';", "        }", "", "        if (this.nbPages > 0) {", "            mdiv.style.visibility = 'visible';", "            if (this.pageSelectorType === SELECT) {", "                for (var z = 0; z < this.nbPages; z++) {", "                    var opt = createOpt(z + 1, z * this.pagingLength, false);", "                    this.pagingSlc.options[z] = opt;", "                }", "            } else {", "                //input type", "                this.pagingSlc.value = this.currentPageNb;", "            }", "", "        } else {", "            /*** if no results paging select and buttons are hidden ***/", "            mdiv.style.visibility = 'hidden';", "        }", "        this.groupByPage(tf.validRowsIndex);", "    }", "", "    /**", "     * Group table rows by page and display valid rows", "     * @param  {Array} validRows Collection of valid rows", "     */", "    groupByPage(validRows) {", "        var tf = this.tf;", "        var rows = tf.tbl.rows;", "        var startPagingRow = parseInt(this.startPagingRow, 10);", "        var endPagingRow = startPagingRow + parseInt(this.pagingLength, 10);", "", "        //store valid rows indexes", "        if (validRows) {", "            tf.validRowsIndex = validRows;", "        }", "", "        //this loop shows valid rows of current page", "        for (var h = 0, len = tf.getValidRowsNb(true); h < len; h++) {", "            var validRowIdx = tf.validRowsIndex[h];", "            var r = rows[validRowIdx];", "            var isRowValid = r.getAttribute('validRow');", "            var rowDisplayed = false;", "", "            if (h >= startPagingRow && h < endPagingRow) {", "                if (isNull(isRowValid) || Boolean(isRowValid === 'true')) {", "                    r.style.display = '';", "                    rowDisplayed = true;", "                }", "            } else {", "                r.style.display = NONE;", "            }", "            this.emitter.emit('row-paged', tf, validRowIdx, h, rowDisplayed);", "        }", "", "        // broadcast grouping by page", "        this.emitter.emit('grouped-by-page', tf, this);", "    }", "", "    /**", "     * Return the current page number", "     * @return {Number} Page number", "     */", "    getPage() {", "        return this.currentPageNb;", "    }", "", "    /**", "     * Show page defined by passed argument (string or number):", "     * @param {String}/{Number} cmd possible string values: 'next',", "     *   'previous', 'last', 'first' or page number as per param", "     */", "    setPage(cmd) {", "        var tf = this.tf;", "        if (!tf.isInitialized() || !this.isEnabled()) {", "            return;", "        }", "        var btnEvt = this.evt,", "            cmdtype = typeof cmd;", "        if (cmdtype === 'string') {", "            switch (cmd.toLowerCase()) {", "                case 'next':", "                    btnEvt.next();", "                    break;", "                case 'previous':", "                    btnEvt.prev();", "                    break;", "                case 'last':", "                    btnEvt.last();", "                    break;", "                case 'first':", "                    btnEvt.first();", "                    break;", "                default:", "                    btnEvt.next();", "                    break;", "            }", "        }", "        else if (cmdtype === 'number') {", "            this.changePage(cmd - 1);", "        }", "    }", "", "    /**", "     * Generates UI elements for the number of results per page drop-down", "     */", "    setResultsPerPage() {", "        var tf = this.tf;", "        var evt = this.evt;", "", "        if (this.resultsPerPageSlc || !this.resultsPerPage) {", "            return;", "        }", "", "        evt.slcResultsChange = (ev) => {", "            this.onChangeResultsPerPage();", "            ev.target.blur();", "        };", "", "        var slcR = createElm(SELECT);", "        slcR.className = this.resultsSlcCssClass;", "        var slcRText = this.resultsPerPage[0],", "            slcROpts = this.resultsPerPage[1];", "        var slcRSpan = createElm('span');", "        slcRSpan.className = this.resultsSpanCssClass;", "", "        // results per page select is added to external element", "        if (!this.resultsPerPageTgtId) {", "            tf.setToolbar();", "        }", "        var targetEl = !this.resultsPerPageTgtId ?", "            tf.rDiv : elm(this.resultsPerPageTgtId);", "        slcRSpan.appendChild(createText(slcRText));", "", "        var help = tf.feature('help');", "        if (help && help.btn) {", "            help.btn.parentNode.insertBefore(slcRSpan, help.btn);", "            help.btn.parentNode.insertBefore(slcR, help.btn);", "        } else {", "            targetEl.appendChild(slcRSpan);", "            targetEl.appendChild(slcR);", "        }", "", "        for (var r = 0; r < slcROpts.length; r++) {", "            var currOpt = new Option(slcROpts[r], slcROpts[r], false, false);", "            slcR.options[r] = currOpt;", "        }", "        addEvt(slcR, 'change', evt.slcResultsChange);", "        this.slcResultsTxt = slcRSpan;", "        this.resultsPerPageSlc = slcR;", "    }", "", "    /**", "     * Remove number of results per page UI elements", "     */", "    removeResultsPerPage() {", "        var tf = this.tf;", "        if (!tf.isInitialized() || !this.resultsPerPageSlc ||", "            !this.resultsPerPage) {", "            return;", "        }", "        if (this.resultsPerPageSlc) {", "            removeElm(this.resultsPerPageSlc);", "        }", "        if (this.slcResultsTxt) {", "            removeElm(this.slcResultsTxt);", "        }", "        this.resultsPerPageSlc = null;", "        this.slcResultsTxt = null;", "    }", "", "    /**", "     * Change the page based on passed index", "     * @param {Number} index Index of the page (0-n)", "     */", "    changePage(index) {", "        var tf = this.tf;", "", "        if (!this.isEnabled()) {", "            return;", "        }", "", "        this.emitter.emit('before-page-change', tf, (index + 1));", "", "        if (index === null) {", "            index = this.pageSelectorType === SELECT ?", "                this.pagingSlc.options.selectedIndex : this.pagingSlc.value - 1;", "        }", "        if (index >= 0 && index <= (this.nbPages - 1)) {", "            this.onBeforeChangePage(this, (index + 1));", "", "            this.currentPageNb = parseInt(index, 10) + 1;", "            if (this.pageSelectorType === SELECT) {", "                this.pagingSlc.options[index].selected = true;", "            } else {", "                this.pagingSlc.value = this.currentPageNb;", "            }", "", "            this.startPagingRow = (this.pageSelectorType === SELECT) ?", "                this.pagingSlc.value : (index * this.pagingLength);", "", "            this.groupByPage();", "", "            this.onAfterChangePage(this, (index + 1));", "        }", "", "        this.emitter.emit('after-page-change', tf, (index + 1));", "    }", "", "    /**", "     * Change the number of results per page based on passed value", "     * @param {String} val The number of results per page", "     */", "    changeResultsPerPage(val) {", "        if (!this.isEnabled() || isNaN(val)) {", "            return;", "        }", "", "        this.resultsPerPageSlc.value = val;", "        this.onChangeResultsPerPage();", "    }", "", "    /**", "     * Change rows according to page results drop-down", "     */", "    onChangeResultsPerPage() {", "        var tf = this.tf;", "", "        if (!this.isEnabled()) {", "            return;", "        }", "", "        this.emitter.emit('before-page-length-change', tf);", "", "        var slcR = this.resultsPerPageSlc;", "        var slcIndex = slcR.selectedIndex;", "        var slcPagesSelIndex = (this.pageSelectorType === SELECT) ?", "            this.pagingSlc.selectedIndex :", "            parseInt(this.pagingSlc.value - 1, 10);", "        this.pagingLength = parseInt(slcR.options[slcIndex].value, 10);", "        this.startPagingRow = this.pagingLength * slcPagesSelIndex;", "", "        if (!isNaN(this.pagingLength)) {", "            if (this.startPagingRow >= tf.nbFilterableRows) {", "                this.startPagingRow = (tf.nbFilterableRows - this.pagingLength);", "            }", "            this.setPagingInfo();", "", "            if (this.pageSelectorType === SELECT) {", "                var slcIdx =", "                    (this.pagingSlc.options.length - 1 <= slcPagesSelIndex) ?", "                        (this.pagingSlc.options.length - 1) : slcPagesSelIndex;", "                this.pagingSlc.options[slcIdx].selected = true;", "            }", "        }", "", "        this.emitter.emit('after-page-length-change', tf, this.pagingLength);", "    }", "", "    /**", "     * Re-set page nb at page re-load", "     */", "    resetPage() {", "        var tf = this.tf;", "        if (!this.isEnabled()) {", "            return;", "        }", "        this.emitter.emit('before-reset-page', tf);", "        var pgNb = tf.feature('store').getPageNb();", "        if (pgNb !== '') {", "            this.changePage((pgNb - 1));", "        }", "        this.emitter.emit('after-reset-page', tf, pgNb);", "    }", "", "    /**", "     * Re-set page length value at page re-load", "     */", "    resetPageLength() {", "        var tf = this.tf;", "        if (!this.isEnabled()) {", "            return;", "        }", "        this.emitter.emit('before-reset-page-length', tf);", "        var pglenIndex = tf.feature('store').getPageLength();", "", "        if (pglenIndex !== '') {", "            this.resultsPerPageSlc.options[pglenIndex].selected = true;", "            this.changeResultsPerPage();", "        }", "        this.emitter.emit('after-reset-page-length', tf, pglenIndex);", "    }", "", "    /**", "     * Remove paging feature", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        var evt = this.evt;", "", "        if (this.pagingSlc) {", "            if (this.pageSelectorType === SELECT) {", "                removeEvt(this.pagingSlc, 'change', evt.slcPagesChange);", "            }", "            else if (this.pageSelectorType === INPUT) {", "                removeEvt(this.pagingSlc, 'keypress', evt._detectKey);", "            }", "            removeElm(this.pagingSlc);", "        }", "", "        if (this.btnNextCont) {", "            removeEvt(this.btnNextCont, 'click', evt.next);", "            removeElm(this.btnNextCont);", "            this.btnNextCont = null;", "        }", "", "        if (this.btnPrevCont) {", "            removeEvt(this.btnPrevCont, 'click', evt.prev);", "            removeElm(this.btnPrevCont);", "            this.btnPrevCont = null;", "        }", "", "        if (this.btnLastCont) {", "            removeEvt(this.btnLastCont, 'click', evt.last);", "            removeElm(this.btnLastCont);", "            this.btnLastCont = null;", "        }", "", "        if (this.btnFirstCont) {", "            removeEvt(this.btnFirstCont, 'click', evt.first);", "            removeElm(this.btnFirstCont);", "            this.btnFirstCont = null;", "        }", "", "        if (this.pgBefore) {", "            removeElm(this.pgBefore);", "            this.pgBefore = null;", "        }", "", "        if (this.pgAfter) {", "            removeElm(this.pgAfter);", "            this.pgAfter = null;", "        }", "", "        if (this.pgCont) {", "            removeElm(this.pgCont);", "            this.pgCont = null;", "        }", "", "        if (this.hasResultsPerPage) {", "            this.removeResultsPerPage();", "        }", "", "        this.emitter.off(['after-filtering'], () => this.resetPagingInfo());", "        this.emitter.off(['change-page'],", "            (tf, pageNumber) => this.setPage(pageNumber));", "        this.emitter.off(['change-page-results'],", "            (tf, pageLength) => this.changeResultsPerPage(pageLength));", "", "        this.pagingSlc = null;", "        this.nbPages = 0;", "        this.disable();", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_VMH1Wq34YEAuNhlvEXCoKw = __cov_VMH1Wq34YEAuNhlvEXCoKw['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\paging.js'];
	__cov_VMH1Wq34YEAuNhlvEXCoKw.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['2']++;exports.Paging = undefined;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['3']++;var _typeof = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['2'][0]++, typeof Symbol === 'function') && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['2'][1]++, _typeof2(Symbol.iterator) === 'symbol') ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['1'][0]++, function (obj) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.f['1']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['4']++;return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
	}) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['1'][1]++, function (obj) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.f['2']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['5']++;return (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['4'][0]++, obj) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['4'][1]++, typeof Symbol === 'function') && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['4'][2]++, obj.constructor === Symbol) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['4'][3]++, obj !== Symbol.prototype) ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['3'][0]++, 'symbol') : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['3'][1]++, typeof obj === 'undefined' ? 'undefined' : _typeof2(obj));
	});__cov_VMH1Wq34YEAuNhlvEXCoKw.s['6']++;var _feature = __webpack_require__(10);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['7']++;var _dom = __webpack_require__(3);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['8']++;var _types = __webpack_require__(4);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['9']++;var _event = __webpack_require__(1);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['10']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.f['3']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['12']++;if (!(instance instanceof Constructor)) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['5'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['13']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['5'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.f['4']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['15']++;if (!self) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['6'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['16']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['6'][1]++;
	   }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['17']++;return (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['8'][0]++, call) && ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['8'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === 'object') || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['8'][2]++, typeof call === 'function')) ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['7'][0]++, call) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['7'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.f['5']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['19']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['10'][0]++, typeof superClass !== 'function') && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['10'][1]++, superClass !== null)) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['9'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['20']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
	   } else {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['9'][1]++;
	   }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['21']++;subClass.prototype = Object.create((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['11'][0]++, superClass) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['11'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['22']++;if (superClass) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['12'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['23']++;Object.setPrototypeOf ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['13'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['13'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.b['12'][1]++;
	   }
	}__cov_VMH1Wq34YEAuNhlvEXCoKw.s['24']++;var Paging = exports.Paging = function (_Feature) {
	   __cov_VMH1Wq34YEAuNhlvEXCoKw.f['6']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['25']++;_inherits(Paging, _Feature);function Paging(tf) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['7']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['27']++;_classCallCheck(this, Paging);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['28']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'paging'));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['29']++;var f = _this.config;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['30']++;_this.btnPageCssClass = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['14'][0]++, f.paging_btn_css_class) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['14'][1]++, 'pgInp');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['31']++;_this.pagingSlc = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['32']++;_this.resultsPerPageSlc = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['33']++;_this.pagingTgtId = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['15'][0]++, f.paging_target_id) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['15'][1]++, null);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['34']++;_this.pagingLength = !isNaN(f.paging_length) ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['16'][0]++, f.paging_length) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['16'][1]++, 10);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['35']++;_this.resultsPerPageTgtId = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['17'][0]++, f.results_per_page_target_id) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['17'][1]++, null);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['36']++;_this.pgSlcCssClass = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['18'][0]++, f.paging_slc_css_class) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['18'][1]++, 'pgSlc');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['37']++;_this.pgInpCssClass = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['19'][0]++, f.paging_inp_css_class) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['19'][1]++, 'pgNbInp');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['38']++;_this.resultsPerPage = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['20'][0]++, f.results_per_page) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['20'][1]++, null);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['39']++;_this.hasResultsPerPage = (0, _types.isArray)(_this.resultsPerPage);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['40']++;_this.resultsSlcCssClass = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['21'][0]++, f.results_slc_css_class) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['21'][1]++, 'rspg');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['41']++;_this.resultsSpanCssClass = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['22'][0]++, f.results_span_css_class) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['22'][1]++, 'rspgSpan');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['42']++;_this.startPagingRow = 0;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['43']++;_this.nbPages = 0;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['44']++;_this.currentPageNb = 1;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['45']++;_this.btnNextPageText = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['23'][0]++, f.btn_next_page_text) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['23'][1]++, '>');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['46']++;_this.btnPrevPageText = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['24'][0]++, f.btn_prev_page_text) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['24'][1]++, '<');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['47']++;_this.btnLastPageText = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['25'][0]++, f.btn_last_page_text) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['25'][1]++, '>|');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['48']++;_this.btnFirstPageText = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['26'][0]++, f.btn_first_page_text) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['26'][1]++, '|<');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['49']++;_this.btnNextPageHtml = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['27'][0]++, f.btn_next_page_html) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['27'][1]++, !tf.enableIcons ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['28'][0]++, null) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['28'][1]++, '<input type="button" value="" class="' + _this.btnPageCssClass + ' nextPage" title="Next page" />'));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['50']++;_this.btnPrevPageHtml = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['29'][0]++, f.btn_prev_page_html) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['29'][1]++, !tf.enableIcons ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['30'][0]++, null) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['30'][1]++, '<input type="button" value="" class="' + _this.btnPageCssClass + ' previousPage" title="Previous page" />'));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['51']++;_this.btnFirstPageHtml = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['31'][0]++, f.btn_first_page_html) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['31'][1]++, !tf.enableIcons ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['32'][0]++, null) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['32'][1]++, '<input type="button" value="" class="' + _this.btnPageCssClass + ' firstPage" title="First page" />'));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['52']++;_this.btnLastPageHtml = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['33'][0]++, f.btn_last_page_html) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['33'][1]++, !tf.enableIcons ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['34'][0]++, null) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['34'][1]++, '<input type="button" value="" class="' + _this.btnPageCssClass + ' lastPage" title="Last page" />'));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['53']++;_this.pageText = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['35'][0]++, f.page_text) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['35'][1]++, ' Page ');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['54']++;_this.ofText = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['36'][0]++, f.of_text) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['36'][1]++, ' of ');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['55']++;_this.nbPgSpanCssClass = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['37'][0]++, f.nb_pages_css_class) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['37'][1]++, 'nbpg');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['56']++;_this.hasPagingBtns = f.paging_btns === false ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['38'][0]++, false) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['38'][1]++, true);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['57']++;_this.pageSelectorType = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['39'][0]++, f.page_selector_type) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['39'][1]++, _const.SELECT);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['58']++;_this.onBeforeChangePage = (0, _types.isFn)(f.on_before_change_page) ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['40'][0]++, f.on_before_change_page) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['40'][1]++, _types.EMPTY_FN);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['59']++;_this.onAfterChangePage = (0, _types.isFn)(f.on_after_change_page) ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['41'][0]++, f.on_after_change_page) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['41'][1]++, _types.EMPTY_FN);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['60']++;_this.slcResultsTxt = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['61']++;_this.btnNextCont = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['62']++;_this.btnPrevCont = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['63']++;_this.btnLastCont = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['64']++;_this.btnFirstCont = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['65']++;_this.pgCont = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['66']++;_this.pgBefore = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['67']++;_this.pgAfter = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['68']++;var start_row = tf.refRow;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['69']++;var nrows = tf.getRowsNb(true);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['70']++;_this.nbPages = Math.ceil((nrows - start_row) / _this.pagingLength);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['71']++;var o = _this;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['72']++;_this.evt = { slcIndex: function slcIndex() {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['8']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['73']++;return o.pageSelectorType === _const.SELECT ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['42'][0]++, o.pagingSlc.options.selectedIndex) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['42'][1]++, parseInt(o.pagingSlc.value, 10) - 1);
	         }, nbOpts: function nbOpts() {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['9']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['74']++;return o.pageSelectorType === _const.SELECT ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['43'][0]++, parseInt(o.pagingSlc.options.length, 10) - 1) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['43'][1]++, o.nbPages - 1);
	         }, next: function next() {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['10']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['75']++;var nextIndex = o.evt.slcIndex() < o.evt.nbOpts() ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['44'][0]++, o.evt.slcIndex() + 1) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['44'][1]++, 0);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['76']++;o.changePage(nextIndex);
	         }, prev: function prev() {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['11']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['77']++;var prevIndex = o.evt.slcIndex() > 0 ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['45'][0]++, o.evt.slcIndex() - 1) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['45'][1]++, o.evt.nbOpts());__cov_VMH1Wq34YEAuNhlvEXCoKw.s['78']++;o.changePage(prevIndex);
	         }, last: function last() {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['12']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['79']++;o.changePage(o.evt.nbOpts());
	         }, first: function first() {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['13']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['80']++;o.changePage(0);
	         }, _detectKey: function _detectKey(e) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.f['14']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['81']++;var key = (0, _event.keyCode)(e);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['82']++;if (key === _const.ENTER_KEY) {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['46'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['83']++;if (tf.sorted) {
	                  __cov_VMH1Wq34YEAuNhlvEXCoKw.b['47'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['84']++;tf.filter();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['85']++;o.changePage(o.evt.slcIndex());
	               } else {
	                  __cov_VMH1Wq34YEAuNhlvEXCoKw.b['47'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['86']++;o.changePage();
	               }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['87']++;this.blur();
	            } else {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['46'][1]++;
	            }
	         }, slcPagesChange: null, nextEvt: null, prevEvt: null, lastEvt: null, firstEvt: null };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['88']++;return _this;
	   }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['89']++;Paging.prototype.init = function init() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['15']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['90']++;var _this2 = this;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['91']++;var slcPages;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['92']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['93']++;var evt = this.evt;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['94']++;if (this.initialized) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['48'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['95']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['48'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['96']++;if (this.hasResultsPerPage) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['49'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['97']++;if (this.resultsPerPage.length < 2) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['50'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['98']++;this.hasResultsPerPage = false;
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['50'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['99']++;this.pagingLength = this.resultsPerPage[1][0];__cov_VMH1Wq34YEAuNhlvEXCoKw.s['100']++;this.setResultsPerPage();
	         }
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['49'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['101']++;evt.slcPagesChange = function (event) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['16']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['102']++;var slc = event.target;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['103']++;_this2.changePage(slc.selectedIndex);
	      };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['104']++;if (this.pageSelectorType === _const.SELECT) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['51'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['105']++;slcPages = (0, _dom.createElm)(_const.SELECT);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['106']++;slcPages.className = this.pgSlcCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['107']++;(0, _event.addEvt)(slcPages, 'change', evt.slcPagesChange);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['51'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['108']++;if (this.pageSelectorType === _const.INPUT) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['52'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['109']++;slcPages = (0, _dom.createElm)(_const.INPUT, ['value', this.currentPageNb]);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['110']++;slcPages.className = this.pgInpCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['111']++;(0, _event.addEvt)(slcPages, 'keypress', evt._detectKey);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['52'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['112']++;var btnNextSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['113']++;var btnPrevSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['114']++;var btnLastSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['115']++;var btnFirstSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['116']++;if (this.hasPagingBtns) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['53'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['117']++;if (!this.btnNextPageHtml) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['54'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['118']++;var btnNext = (0, _dom.createElm)(_const.INPUT, ['type', 'button'], ['value', this.btnNextPageText], ['title', 'Next']);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['119']++;btnNext.className = this.btnPageCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['120']++;(0, _event.addEvt)(btnNext, 'click', evt.next);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['121']++;btnNextSpan.appendChild(btnNext);
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['54'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['122']++;btnNextSpan.innerHTML = this.btnNextPageHtml;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['123']++;(0, _event.addEvt)(btnNextSpan, 'click', evt.next);
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['124']++;if (!this.btnPrevPageHtml) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['55'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['125']++;var btnPrev = (0, _dom.createElm)(_const.INPUT, ['type', 'button'], ['value', this.btnPrevPageText], ['title', 'Previous']);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['126']++;btnPrev.className = this.btnPageCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['127']++;(0, _event.addEvt)(btnPrev, 'click', evt.prev);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['128']++;btnPrevSpan.appendChild(btnPrev);
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['55'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['129']++;btnPrevSpan.innerHTML = this.btnPrevPageHtml;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['130']++;(0, _event.addEvt)(btnPrevSpan, 'click', evt.prev);
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['131']++;if (!this.btnLastPageHtml) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['56'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['132']++;var btnLast = (0, _dom.createElm)(_const.INPUT, ['type', 'button'], ['value', this.btnLastPageText], ['title', 'Last']);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['133']++;btnLast.className = this.btnPageCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['134']++;(0, _event.addEvt)(btnLast, 'click', evt.last);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['135']++;btnLastSpan.appendChild(btnLast);
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['56'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['136']++;btnLastSpan.innerHTML = this.btnLastPageHtml;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['137']++;(0, _event.addEvt)(btnLastSpan, 'click', evt.last);
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['138']++;if (!this.btnFirstPageHtml) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['57'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['139']++;var btnFirst = (0, _dom.createElm)(_const.INPUT, ['type', 'button'], ['value', this.btnFirstPageText], ['title', 'First']);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['140']++;btnFirst.className = this.btnPageCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['141']++;(0, _event.addEvt)(btnFirst, 'click', evt.first);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['142']++;btnFirstSpan.appendChild(btnFirst);
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['57'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['143']++;btnFirstSpan.innerHTML = this.btnFirstPageHtml;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['144']++;(0, _event.addEvt)(btnFirstSpan, 'click', evt.first);
	         }
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['53'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['145']++;if (!this.pagingTgtId) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['58'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['146']++;tf.setToolbar();
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['58'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['147']++;var targetEl = !this.pagingTgtId ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['59'][0]++, tf.mDiv) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['59'][1]++, (0, _dom.elm)(this.pagingTgtId));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['148']++;targetEl.appendChild(btnFirstSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['149']++;targetEl.appendChild(btnPrevSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['150']++;var pgBeforeSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['151']++;pgBeforeSpan.appendChild((0, _dom.createText)(this.pageText));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['152']++;pgBeforeSpan.className = this.nbPgSpanCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['153']++;targetEl.appendChild(pgBeforeSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['154']++;targetEl.appendChild(slcPages);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['155']++;var pgAfterSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['156']++;pgAfterSpan.appendChild((0, _dom.createText)(this.ofText));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['157']++;pgAfterSpan.className = this.nbPgSpanCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['158']++;targetEl.appendChild(pgAfterSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['159']++;var pgSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['160']++;pgSpan.className = this.nbPgSpanCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['161']++;pgSpan.appendChild((0, _dom.createText)(' ' + this.nbPages + ' '));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['162']++;targetEl.appendChild(pgSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['163']++;targetEl.appendChild(btnNextSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['164']++;targetEl.appendChild(btnLastSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['165']++;this.btnNextCont = btnNextSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['166']++;this.btnPrevCont = btnPrevSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['167']++;this.btnLastCont = btnLastSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['168']++;this.btnFirstCont = btnFirstSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['169']++;this.pgCont = pgSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['170']++;this.pgBefore = pgBeforeSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['171']++;this.pgAfter = pgAfterSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['172']++;this.pagingSlc = slcPages;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['173']++;this.setPagingInfo();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['174']++;if (!tf.fltGrid) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['60'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['175']++;tf.validateAllRows();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['176']++;this.setPagingInfo(tf.validRowsIndex);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['60'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['177']++;this.emitter.on(['after-filtering'], function () {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['17']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['178']++;return _this2.resetPagingInfo();
	      });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['179']++;this.emitter.on(['change-page'], function (tf, pageNumber) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['18']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['180']++;return _this2.setPage(pageNumber);
	      });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['181']++;this.emitter.on(['change-page-results'], function (tf, pageLength) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['19']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['182']++;return _this2.changeResultsPerPage(pageLength);
	      });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['183']++;this.initialized = true;
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['184']++;Paging.prototype.reset = function reset() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['20']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['185']++;var filterTable = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['62'][0]++, arguments.length > 0) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['62'][1]++, arguments[0] !== undefined) ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['61'][0]++, arguments[0]) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['61'][1]++, false);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['186']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['187']++;if (this.isEnabled()) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['63'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['188']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['63'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['189']++;this.enable();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['190']++;this.init();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['191']++;if (filterTable) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['64'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['192']++;tf.filter();
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['64'][1]++;
	      }
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['193']++;Paging.prototype.resetPagingInfo = function resetPagingInfo() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['21']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['194']++;this.startPagingRow = 0;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['195']++;this.currentPageNb = 1;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['196']++;this.setPagingInfo(this.tf.validRowsIndex);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['197']++;Paging.prototype.setPagingInfo = function setPagingInfo(validRows) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['22']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['198']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['199']++;var mdiv = !this.pagingTgtId ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['65'][0]++, tf.mDiv) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['65'][1]++, (0, _dom.elm)(this.pagingTgtId));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['200']++;tf.validRowsIndex = (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['66'][0]++, validRows) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['66'][1]++, tf.getValidRows(true));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['201']++;this.nbPages = Math.ceil(tf.validRowsIndex.length / this.pagingLength);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['202']++;this.pgCont.innerHTML = this.nbPages;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['203']++;if (this.pageSelectorType === _const.SELECT) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['67'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['204']++;this.pagingSlc.innerHTML = '';
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['67'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['205']++;if (this.nbPages > 0) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['68'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['206']++;mdiv.style.visibility = 'visible';__cov_VMH1Wq34YEAuNhlvEXCoKw.s['207']++;if (this.pageSelectorType === _const.SELECT) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['69'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['208']++;for (var z = 0; z < this.nbPages; z++) {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.s['209']++;var opt = (0, _dom.createOpt)(z + 1, z * this.pagingLength, false);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['210']++;this.pagingSlc.options[z] = opt;
	            }
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['69'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['211']++;this.pagingSlc.value = this.currentPageNb;
	         }
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['68'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['212']++;mdiv.style.visibility = 'hidden';
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['213']++;this.groupByPage(tf.validRowsIndex);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['214']++;Paging.prototype.groupByPage = function groupByPage(validRows) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['23']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['215']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['216']++;var rows = tf.tbl.rows;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['217']++;var startPagingRow = parseInt(this.startPagingRow, 10);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['218']++;var endPagingRow = startPagingRow + parseInt(this.pagingLength, 10);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['219']++;if (validRows) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['70'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['220']++;tf.validRowsIndex = validRows;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['70'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['221']++;for (var h = 0, len = tf.getValidRowsNb(true); h < len; h++) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.s['222']++;var validRowIdx = tf.validRowsIndex[h];__cov_VMH1Wq34YEAuNhlvEXCoKw.s['223']++;var r = rows[validRowIdx];__cov_VMH1Wq34YEAuNhlvEXCoKw.s['224']++;var isRowValid = r.getAttribute('validRow');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['225']++;var rowDisplayed = false;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['226']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['72'][0]++, h >= startPagingRow) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['72'][1]++, h < endPagingRow)) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['71'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['227']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['74'][0]++, (0, _types.isNull)(isRowValid)) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['74'][1]++, Boolean(isRowValid === 'true'))) {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['73'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['228']++;r.style.display = '';__cov_VMH1Wq34YEAuNhlvEXCoKw.s['229']++;rowDisplayed = true;
	            } else {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['73'][1]++;
	            }
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['71'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['230']++;r.style.display = _const.NONE;
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['231']++;this.emitter.emit('row-paged', tf, validRowIdx, h, rowDisplayed);
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['232']++;this.emitter.emit('grouped-by-page', tf, this);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['233']++;Paging.prototype.getPage = function getPage() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['24']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['234']++;return this.currentPageNb;
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['235']++;Paging.prototype.setPage = function setPage(cmd) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['25']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['236']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['237']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['76'][0]++, !tf.isInitialized()) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['76'][1]++, !this.isEnabled())) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['75'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['238']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['75'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['239']++;var btnEvt = this.evt,
	          cmdtype = typeof cmd === 'undefined' ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['77'][0]++, 'undefined') : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['77'][1]++, _typeof(cmd));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['240']++;if (cmdtype === 'string') {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['78'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['241']++;switch (cmd.toLowerCase()) {case 'next':
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['79'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['242']++;btnEvt.next();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['243']++;break;case 'previous':
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['79'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['244']++;btnEvt.prev();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['245']++;break;case 'last':
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['79'][2]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['246']++;btnEvt.last();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['247']++;break;case 'first':
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['79'][3]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['248']++;btnEvt.first();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['249']++;break;default:
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['79'][4]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['250']++;btnEvt.next();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['251']++;break;}
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['78'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['252']++;if (cmdtype === 'number') {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['80'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['253']++;this.changePage(cmd - 1);
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['80'][1]++;
	         }
	      }
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['254']++;Paging.prototype.setResultsPerPage = function setResultsPerPage() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['26']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['255']++;var _this3 = this;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['256']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['257']++;var evt = this.evt;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['258']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['82'][0]++, this.resultsPerPageSlc) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['82'][1]++, !this.resultsPerPage)) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['81'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['259']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['81'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['260']++;evt.slcResultsChange = function (ev) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['27']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['261']++;_this3.onChangeResultsPerPage();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['262']++;ev.target.blur();
	      };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['263']++;var slcR = (0, _dom.createElm)(_const.SELECT);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['264']++;slcR.className = this.resultsSlcCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['265']++;var slcRText = this.resultsPerPage[0],
	          slcROpts = this.resultsPerPage[1];__cov_VMH1Wq34YEAuNhlvEXCoKw.s['266']++;var slcRSpan = (0, _dom.createElm)('span');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['267']++;slcRSpan.className = this.resultsSpanCssClass;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['268']++;if (!this.resultsPerPageTgtId) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['83'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['269']++;tf.setToolbar();
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['83'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['270']++;var targetEl = !this.resultsPerPageTgtId ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['84'][0]++, tf.rDiv) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['84'][1]++, (0, _dom.elm)(this.resultsPerPageTgtId));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['271']++;slcRSpan.appendChild((0, _dom.createText)(slcRText));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['272']++;var help = tf.feature('help');__cov_VMH1Wq34YEAuNhlvEXCoKw.s['273']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['86'][0]++, help) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['86'][1]++, help.btn)) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['85'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['274']++;help.btn.parentNode.insertBefore(slcRSpan, help.btn);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['275']++;help.btn.parentNode.insertBefore(slcR, help.btn);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['85'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['276']++;targetEl.appendChild(slcRSpan);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['277']++;targetEl.appendChild(slcR);
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['278']++;for (var r = 0; r < slcROpts.length; r++) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.s['279']++;var currOpt = new Option(slcROpts[r], slcROpts[r], false, false);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['280']++;slcR.options[r] = currOpt;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['281']++;(0, _event.addEvt)(slcR, 'change', evt.slcResultsChange);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['282']++;this.slcResultsTxt = slcRSpan;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['283']++;this.resultsPerPageSlc = slcR;
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['284']++;Paging.prototype.removeResultsPerPage = function removeResultsPerPage() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['28']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['285']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['286']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['88'][0]++, !tf.isInitialized()) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['88'][1]++, !this.resultsPerPageSlc) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['88'][2]++, !this.resultsPerPage)) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['87'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['287']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['87'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['288']++;if (this.resultsPerPageSlc) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['89'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['289']++;(0, _dom.removeElm)(this.resultsPerPageSlc);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['89'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['290']++;if (this.slcResultsTxt) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['90'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['291']++;(0, _dom.removeElm)(this.slcResultsTxt);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['90'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['292']++;this.resultsPerPageSlc = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['293']++;this.slcResultsTxt = null;
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['294']++;Paging.prototype.changePage = function changePage(index) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['29']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['295']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['296']++;if (!this.isEnabled()) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['91'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['297']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['91'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['298']++;this.emitter.emit('before-page-change', tf, index + 1);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['299']++;if (index === null) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['92'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['300']++;index = this.pageSelectorType === _const.SELECT ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['93'][0]++, this.pagingSlc.options.selectedIndex) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['93'][1]++, this.pagingSlc.value - 1);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['92'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['301']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['95'][0]++, index >= 0) && (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['95'][1]++, index <= this.nbPages - 1)) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['94'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['302']++;this.onBeforeChangePage(this, index + 1);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['303']++;this.currentPageNb = parseInt(index, 10) + 1;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['304']++;if (this.pageSelectorType === _const.SELECT) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['96'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['305']++;this.pagingSlc.options[index].selected = true;
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['96'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['306']++;this.pagingSlc.value = this.currentPageNb;
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['307']++;this.startPagingRow = this.pageSelectorType === _const.SELECT ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['97'][0]++, this.pagingSlc.value) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['97'][1]++, index * this.pagingLength);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['308']++;this.groupByPage();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['309']++;this.onAfterChangePage(this, index + 1);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['94'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['310']++;this.emitter.emit('after-page-change', tf, index + 1);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['311']++;Paging.prototype.changeResultsPerPage = function changeResultsPerPage(val) {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['30']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['312']++;if ((__cov_VMH1Wq34YEAuNhlvEXCoKw.b['99'][0]++, !this.isEnabled()) || (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['99'][1]++, isNaN(val))) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['98'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['313']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['98'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['314']++;this.resultsPerPageSlc.value = val;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['315']++;this.onChangeResultsPerPage();
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['316']++;Paging.prototype.onChangeResultsPerPage = function onChangeResultsPerPage() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['31']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['317']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['318']++;if (!this.isEnabled()) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['100'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['319']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['100'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['320']++;this.emitter.emit('before-page-length-change', tf);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['321']++;var slcR = this.resultsPerPageSlc;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['322']++;var slcIndex = slcR.selectedIndex;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['323']++;var slcPagesSelIndex = this.pageSelectorType === _const.SELECT ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['101'][0]++, this.pagingSlc.selectedIndex) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['101'][1]++, parseInt(this.pagingSlc.value - 1, 10));__cov_VMH1Wq34YEAuNhlvEXCoKw.s['324']++;this.pagingLength = parseInt(slcR.options[slcIndex].value, 10);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['325']++;this.startPagingRow = this.pagingLength * slcPagesSelIndex;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['326']++;if (!isNaN(this.pagingLength)) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['102'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['327']++;if (this.startPagingRow >= tf.nbFilterableRows) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['103'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['328']++;this.startPagingRow = tf.nbFilterableRows - this.pagingLength;
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['103'][1]++;
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['329']++;this.setPagingInfo();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['330']++;if (this.pageSelectorType === _const.SELECT) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['104'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['331']++;var slcIdx = this.pagingSlc.options.length - 1 <= slcPagesSelIndex ? (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['105'][0]++, this.pagingSlc.options.length - 1) : (__cov_VMH1Wq34YEAuNhlvEXCoKw.b['105'][1]++, slcPagesSelIndex);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['332']++;this.pagingSlc.options[slcIdx].selected = true;
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['104'][1]++;
	         }
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['102'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['333']++;this.emitter.emit('after-page-length-change', tf, this.pagingLength);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['334']++;Paging.prototype.resetPage = function resetPage() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['32']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['335']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['336']++;if (!this.isEnabled()) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['106'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['337']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['106'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['338']++;this.emitter.emit('before-reset-page', tf);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['339']++;var pgNb = tf.feature('store').getPageNb();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['340']++;if (pgNb !== '') {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['107'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['341']++;this.changePage(pgNb - 1);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['107'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['342']++;this.emitter.emit('after-reset-page', tf, pgNb);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['343']++;Paging.prototype.resetPageLength = function resetPageLength() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['33']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['344']++;var tf = this.tf;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['345']++;if (!this.isEnabled()) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['108'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['346']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['108'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['347']++;this.emitter.emit('before-reset-page-length', tf);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['348']++;var pglenIndex = tf.feature('store').getPageLength();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['349']++;if (pglenIndex !== '') {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['109'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['350']++;this.resultsPerPageSlc.options[pglenIndex].selected = true;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['351']++;this.changeResultsPerPage();
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['109'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['352']++;this.emitter.emit('after-reset-page-length', tf, pglenIndex);
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['353']++;Paging.prototype.destroy = function destroy() {
	      __cov_VMH1Wq34YEAuNhlvEXCoKw.f['34']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['354']++;var _this4 = this;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['355']++;if (!this.initialized) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['110'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['356']++;return;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['110'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['357']++;var evt = this.evt;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['358']++;if (this.pagingSlc) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['111'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['359']++;if (this.pageSelectorType === _const.SELECT) {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['112'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['360']++;(0, _event.removeEvt)(this.pagingSlc, 'change', evt.slcPagesChange);
	         } else {
	            __cov_VMH1Wq34YEAuNhlvEXCoKw.b['112'][1]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['361']++;if (this.pageSelectorType === _const.INPUT) {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['113'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['362']++;(0, _event.removeEvt)(this.pagingSlc, 'keypress', evt._detectKey);
	            } else {
	               __cov_VMH1Wq34YEAuNhlvEXCoKw.b['113'][1]++;
	            }
	         }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['363']++;(0, _dom.removeElm)(this.pagingSlc);
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['111'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['364']++;if (this.btnNextCont) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['114'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['365']++;(0, _event.removeEvt)(this.btnNextCont, 'click', evt.next);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['366']++;(0, _dom.removeElm)(this.btnNextCont);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['367']++;this.btnNextCont = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['114'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['368']++;if (this.btnPrevCont) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['115'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['369']++;(0, _event.removeEvt)(this.btnPrevCont, 'click', evt.prev);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['370']++;(0, _dom.removeElm)(this.btnPrevCont);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['371']++;this.btnPrevCont = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['115'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['372']++;if (this.btnLastCont) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['116'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['373']++;(0, _event.removeEvt)(this.btnLastCont, 'click', evt.last);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['374']++;(0, _dom.removeElm)(this.btnLastCont);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['375']++;this.btnLastCont = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['116'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['376']++;if (this.btnFirstCont) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['117'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['377']++;(0, _event.removeEvt)(this.btnFirstCont, 'click', evt.first);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['378']++;(0, _dom.removeElm)(this.btnFirstCont);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['379']++;this.btnFirstCont = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['117'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['380']++;if (this.pgBefore) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['118'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['381']++;(0, _dom.removeElm)(this.pgBefore);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['382']++;this.pgBefore = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['118'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['383']++;if (this.pgAfter) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['119'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['384']++;(0, _dom.removeElm)(this.pgAfter);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['385']++;this.pgAfter = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['119'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['386']++;if (this.pgCont) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['120'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['387']++;(0, _dom.removeElm)(this.pgCont);__cov_VMH1Wq34YEAuNhlvEXCoKw.s['388']++;this.pgCont = null;
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['120'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['389']++;if (this.hasResultsPerPage) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['121'][0]++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['390']++;this.removeResultsPerPage();
	      } else {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.b['121'][1]++;
	      }__cov_VMH1Wq34YEAuNhlvEXCoKw.s['391']++;this.emitter.off(['after-filtering'], function () {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['35']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['392']++;return _this4.resetPagingInfo();
	      });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['393']++;this.emitter.off(['change-page'], function (tf, pageNumber) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['36']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['394']++;return _this4.setPage(pageNumber);
	      });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['395']++;this.emitter.off(['change-page-results'], function (tf, pageLength) {
	         __cov_VMH1Wq34YEAuNhlvEXCoKw.f['37']++;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['396']++;return _this4.changeResultsPerPage(pageLength);
	      });__cov_VMH1Wq34YEAuNhlvEXCoKw.s['397']++;this.pagingSlc = null;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['398']++;this.nbPages = 0;__cov_VMH1Wq34YEAuNhlvEXCoKw.s['399']++;this.disable();__cov_VMH1Wq34YEAuNhlvEXCoKw.s['400']++;this.initialized = false;
	   };__cov_VMH1Wq34YEAuNhlvEXCoKw.s['401']++;return Paging;
	}(_feature.Feature);

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_Dz1u8FAfstkoOxW_JP5q1g = Function('return this')();
	if (!__cov_Dz1u8FAfstkoOxW_JP5q1g.__coverage__) {
	   __cov_Dz1u8FAfstkoOxW_JP5q1g.__coverage__ = {};
	}
	__cov_Dz1u8FAfstkoOxW_JP5q1g = __cov_Dz1u8FAfstkoOxW_JP5q1g.__coverage__;
	if (!__cov_Dz1u8FAfstkoOxW_JP5q1g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\clearButton.js']) {
	   __cov_Dz1u8FAfstkoOxW_JP5q1g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\clearButton.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\clearButton.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 1, "7": 0, "8": 0, "9": 1, "10": 0, "11": 0, "12": 0, "13": 1, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 1, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 }, "fnMap": { "1": { "line": 14, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 16, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 18, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 23, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 30, "name": "ClearButton", "loc": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 20 } } }, "6": { "line": 89, "name": "onClick", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 101, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 124, "name": "(anonymous_8)", "loc": { "start": { "line": 102, "column": 38 }, "end": { "line": 102, "column": 38 } } }, "9": { "line": 130, "name": "(anonymous_9)", "loc": { "start": { "line": 106, "column": 37 }, "end": { "line": 106, "column": 37 } } }, "10": { "line": 146, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "end": { "line": 65, "column": 5 }, "start": { "line": 14, "column": 4 } }, "22": { "end": { "line": 14, "column": 20 }, "start": { "line": 14, "column": 20 } }, "23": { "end": { "line": 14, "column": 20 }, "start": { "line": 14, "column": 20 } }, "24": { "end": { "line": 17, "column": 8 }, "start": { "line": 17, "column": 8 } }, "25": { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 8 } }, "26": { "end": { "line": 30, "column": 8 }, "start": { "line": 30, "column": 8 } }, "27": { "end": { "line": 37, "column": 8 }, "start": { "line": 37, "column": 8 } }, "28": { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 8 } }, "29": { "end": { "line": 49, "column": 8 }, "start": { "line": 49, "column": 8 } }, "30": { "end": { "line": 55, "column": 8 }, "start": { "line": 55, "column": 8 } }, "31": { "end": { "line": 61, "column": 8 }, "start": { "line": 61, "column": 8 } }, "32": { "end": { "line": 14, "column": 20 }, "start": { "line": 14, "column": 20 } }, "33": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "34": { "end": { "line": 74, "column": 9 }, "start": { "line": 72, "column": 8 } }, "35": { "end": { "line": 73, "column": 12 }, "start": { "line": 73, "column": 12 } }, "36": { "end": { "line": 75, "column": 8 }, "start": { "line": 75, "column": 8 } }, "37": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "38": { "end": { "line": 81, "column": 11 }, "start": { "line": 81, "column": 11 } }, "39": { "end": { "line": 82, "column": 8 }, "start": { "line": 82, "column": 8 } }, "40": { "end": { "line": 86, "column": 9 }, "start": { "line": 84, "column": 8 } }, "41": { "end": { "line": 85, "column": 12 }, "start": { "line": 85, "column": 12 } }, "42": { "end": { "line": 88, "column": 8 }, "start": { "line": 88, "column": 8 } }, "43": { "end": { "line": 93, "column": 9 }, "start": { "line": 91, "column": 8 } }, "44": { "end": { "line": 92, "column": 12 }, "start": { "line": 92, "column": 12 } }, "45": { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }, "46": { "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }, "47": { "end": { "line": 107, "column": 9 }, "start": { "line": 97, "column": 8 } }, "48": { "end": { "line": 98, "column": 12 }, "start": { "line": 98, "column": 12 } }, "49": { "end": { "line": 99, "column": 12 }, "start": { "line": 99, "column": 12 } }, "50": { "end": { "line": 100, "column": 12 }, "start": { "line": 100, "column": 12 } }, "51": { "end": { "line": 101, "column": 12 }, "start": { "line": 101, "column": 12 } }, "52": { "end": { "line": 102, "column": 12 }, "start": { "line": 102, "column": 12 } }, "53": { "end": { "line": 102, "column": 38 }, "start": { "line": 102, "column": 38 } }, "54": { "end": { "line": 104, "column": 12 }, "start": { "line": 104, "column": 12 } }, "55": { "end": { "line": 105, "column": 12 }, "start": { "line": 105, "column": 12 } }, "56": { "end": { "line": 106, "column": 12 }, "start": { "line": 106, "column": 12 } }, "57": { "end": { "line": 106, "column": 37 }, "start": { "line": 106, "column": 37 } }, "58": { "end": { "line": 108, "column": 8 }, "start": { "line": 108, "column": 8 } }, "59": { "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }, "60": { "end": { "line": 112, "column": 8 }, "start": { "line": 112, "column": 8 } }, "61": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "62": { "end": { "line": 121, "column": 9 }, "start": { "line": 119, "column": 8 } }, "63": { "end": { "line": 120, "column": 12 }, "start": { "line": 120, "column": 12 } }, "64": { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }, "65": { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 8 } }, "66": { "end": { "line": 124, "column": 8 }, "start": { "line": 124, "column": 8 } }, "67": { "end": { "line": 125, "column": 8 }, "start": { "line": 125, "column": 8 } }, "68": { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 8 } }, "69": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 14, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 16, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 16, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 18, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 18, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 18, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 41, "type": "binary-expr", "locations": [{ "end": { "line": 23, "column": 24 }, "start": { "line": 23, "column": 24 } }, { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 49 } }] }, "11": { "line": 61, "type": "binary-expr", "locations": [{ "end": { "line": 43, "column": 20 }, "start": { "line": 43, "column": 20 } }, { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 40 } }] }, "12": { "line": 67, "type": "binary-expr", "locations": [{ "end": { "line": 49, "column": 24 }, "start": { "line": 49, "column": 24 } }, { "end": { "line": 49, "column": 8 }, "start": { "line": 49, "column": 49 } }] }, "13": { "line": 73, "type": "binary-expr", "locations": [{ "end": { "line": 55, "column": 23 }, "start": { "line": 55, "column": 23 } }, { "end": { "line": 55, "column": 8 }, "start": { "line": 55, "column": 46 } }] }, "14": { "line": 79, "type": "binary-expr", "locations": [{ "end": { "line": 61, "column": 20 }, "start": { "line": 61, "column": 20 } }, { "end": { "line": 61, "column": 20 }, "start": { "line": 62, "column": 13 } }] }, "15": { "line": 79, "type": "cond-expr", "locations": [{ "end": { "line": 62, "column": 13 }, "start": { "line": 62, "column": 31 } }, { "end": { "line": 61, "column": 20 }, "start": { "line": 63, "column": 16 } }] }, "16": { "line": 90, "type": "if", "locations": [{ "end": { "line": 72, "column": 8 }, "start": { "line": 72, "column": 8 } }, { "end": { "line": 72, "column": 8 }, "start": { "line": 72, "column": 8 } }] }, "17": { "line": 106, "type": "if", "locations": [{ "end": { "line": 84, "column": 8 }, "start": { "line": 84, "column": 8 } }, { "end": { "line": 84, "column": 8 }, "start": { "line": 84, "column": 8 } }] }, "18": { "line": 113, "type": "if", "locations": [{ "end": { "line": 91, "column": 8 }, "start": { "line": 91, "column": 8 } }, { "end": { "line": 91, "column": 8 }, "start": { "line": 91, "column": 8 } }] }, "19": { "line": 116, "type": "cond-expr", "locations": [{ "end": { "line": 94, "column": 23 }, "start": { "line": 94, "column": 40 } }, { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 50 } }] }, "20": { "line": 119, "type": "if", "locations": [{ "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 8 } }, { "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 8 } }] }, "21": { "line": 147, "type": "if", "locations": [{ "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, createText, elm, removeElm} from '../dom';", "import {addEvt} from '../event';", "", "/**", " * Clear button UI component", " */", "export class ClearButton extends Feature {", "", "    /**", "     * Creates an instance of ClearButton", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'btnReset');", "", "        let f = this.config;", "", "        /**", "         * Container element ID", "         * @type {String}", "         */", "        this.targetId = f.btn_reset_target_id || null;", "", "        /**", "         * Clear button container element", "         * @type {DOMElement}", "         * @private", "         */", "        this.container = null;", "", "        /**", "         * Clear button element", "         * @type {DOMElement}", "         * @private", "         */", "        this.element = null;", "", "        /**", "         * Text for the clear button", "         * @type {String}", "         */", "        this.text = f.btn_reset_text || 'Reset';", "", "        /**", "         * Css class for reset button", "         * @type {String}", "         */", "        this.cssClass = f.btn_reset_css_class || 'reset';", "", "        /**", "         * Tooltip text for the clear button", "         * @type {String}", "         */", "        this.tooltip = f.btn_reset_tooltip || 'Clear filters';", "", "        /**", "         * Custom Html string for the clear button", "         * @type {String}", "         */", "        this.html = f.btn_reset_html ||", "            (!tf.enableIcons ? null :", "                '<input type=\"button\" value=\"\" class=\"' + this.cssClass +", "                '\" ' + 'title=\"' + this.tooltip + '\" />');", "    }", "", "    /**", "     * Click event handler for clear button", "     * @private", "     */", "    onClick() {", "        if (!this.isEnabled()) {", "            return;", "        }", "        this.tf.clearFilters();", "    }", "", "    /**", "     * Initialize clear button component", "     */", "    init() {", "        let tf = this.tf;", "", "        if (this.initialized) {", "            return;", "        }", "", "        let cont = createElm('span');", "", "        // reset button is added to defined element", "        if (!this.targetId) {", "            tf.setToolbar();", "        }", "        let targetEl = !this.targetId ? tf.rDiv : elm(this.targetId);", "        targetEl.appendChild(cont);", "", "        if (!this.html) {", "            let fltReset = createElm('a', ['href', 'javascript:void(0);']);", "            fltReset.className = this.cssClass;", "            fltReset.appendChild(createText(this.text));", "            cont.appendChild(fltReset);", "            addEvt(fltReset, 'click', () => this.onClick());", "        } else {", "            cont.innerHTML = this.html;", "            let resetEl = cont.firstChild;", "            addEvt(resetEl, 'click', () => this.onClick());", "        }", "        this.element = cont.firstChild;", "        this.container = cont;", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Destroy ClearButton instance", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "        removeElm(this.element);", "        removeElm(this.container);", "        this.element = null;", "        this.container = null;", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_Dz1u8FAfstkoOxW_JP5q1g = __cov_Dz1u8FAfstkoOxW_JP5q1g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\clearButton.js'];
	__cov_Dz1u8FAfstkoOxW_JP5q1g.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_Dz1u8FAfstkoOxW_JP5q1g.s['2']++;exports.ClearButton = undefined;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['3']++;var _feature = __webpack_require__(10);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['4']++;var _dom = __webpack_require__(3);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['5']++;var _event = __webpack_require__(1);function _classCallCheck(instance, Constructor) {
	   __cov_Dz1u8FAfstkoOxW_JP5q1g.f['1']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['7']++;if (!(instance instanceof Constructor)) {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['1'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['8']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_Dz1u8FAfstkoOxW_JP5q1g.f['2']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['10']++;if (!self) {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['2'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['11']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['2'][1]++;
	   }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['12']++;return (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['4'][0]++, call) && ((__cov_Dz1u8FAfstkoOxW_JP5q1g.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['4'][2]++, typeof call === 'function')) ? (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['3'][0]++, call) : (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_Dz1u8FAfstkoOxW_JP5q1g.f['3']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['14']++;if ((__cov_Dz1u8FAfstkoOxW_JP5q1g.b['6'][0]++, typeof superClass !== 'function') && (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['6'][1]++, superClass !== null)) {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['5'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['15']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['5'][1]++;
	   }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['16']++;subClass.prototype = Object.create((__cov_Dz1u8FAfstkoOxW_JP5q1g.b['7'][0]++, superClass) && (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_Dz1u8FAfstkoOxW_JP5q1g.s['17']++;if (superClass) {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['8'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['18']++;Object.setPrototypeOf ? (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.b['8'][1]++;
	   }
	}__cov_Dz1u8FAfstkoOxW_JP5q1g.s['19']++;var ClearButton = exports.ClearButton = function (_Feature) {
	   __cov_Dz1u8FAfstkoOxW_JP5q1g.f['4']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['20']++;_inherits(ClearButton, _Feature);function ClearButton(tf) {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.f['5']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['22']++;_classCallCheck(this, ClearButton);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['23']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'btnReset'));__cov_Dz1u8FAfstkoOxW_JP5q1g.s['24']++;var f = _this.config;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['25']++;_this.targetId = (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['10'][0]++, f.btn_reset_target_id) || (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['10'][1]++, null);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['26']++;_this.container = null;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['27']++;_this.element = null;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['28']++;_this.text = (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['11'][0]++, f.btn_reset_text) || (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['11'][1]++, 'Reset');__cov_Dz1u8FAfstkoOxW_JP5q1g.s['29']++;_this.cssClass = (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['12'][0]++, f.btn_reset_css_class) || (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['12'][1]++, 'reset');__cov_Dz1u8FAfstkoOxW_JP5q1g.s['30']++;_this.tooltip = (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['13'][0]++, f.btn_reset_tooltip) || (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['13'][1]++, 'Clear filters');__cov_Dz1u8FAfstkoOxW_JP5q1g.s['31']++;_this.html = (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['14'][0]++, f.btn_reset_html) || (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['14'][1]++, !tf.enableIcons ? (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['15'][0]++, null) : (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['15'][1]++, '<input type="button" value="" class="' + _this.cssClass + '" ' + 'title="' + _this.tooltip + '" />'));__cov_Dz1u8FAfstkoOxW_JP5q1g.s['32']++;return _this;
	   }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['33']++;ClearButton.prototype.onClick = function onClick() {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.f['6']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['34']++;if (!this.isEnabled()) {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['16'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['35']++;return;
	      } else {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['16'][1]++;
	      }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['36']++;this.tf.clearFilters();
	   };__cov_Dz1u8FAfstkoOxW_JP5q1g.s['37']++;ClearButton.prototype.init = function init() {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.f['7']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['38']++;var _this2 = this;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['39']++;var tf = this.tf;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['40']++;if (this.initialized) {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['17'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['41']++;return;
	      } else {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['17'][1]++;
	      }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['42']++;var cont = (0, _dom.createElm)('span');__cov_Dz1u8FAfstkoOxW_JP5q1g.s['43']++;if (!this.targetId) {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['18'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['44']++;tf.setToolbar();
	      } else {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['18'][1]++;
	      }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['45']++;var targetEl = !this.targetId ? (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['19'][0]++, tf.rDiv) : (__cov_Dz1u8FAfstkoOxW_JP5q1g.b['19'][1]++, (0, _dom.elm)(this.targetId));__cov_Dz1u8FAfstkoOxW_JP5q1g.s['46']++;targetEl.appendChild(cont);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['47']++;if (!this.html) {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['20'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['48']++;var fltReset = (0, _dom.createElm)('a', ['href', 'javascript:void(0);']);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['49']++;fltReset.className = this.cssClass;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['50']++;fltReset.appendChild((0, _dom.createText)(this.text));__cov_Dz1u8FAfstkoOxW_JP5q1g.s['51']++;cont.appendChild(fltReset);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['52']++;(0, _event.addEvt)(fltReset, 'click', function () {
	            __cov_Dz1u8FAfstkoOxW_JP5q1g.f['8']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['53']++;return _this2.onClick();
	         });
	      } else {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['20'][1]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['54']++;cont.innerHTML = this.html;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['55']++;var resetEl = cont.firstChild;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['56']++;(0, _event.addEvt)(resetEl, 'click', function () {
	            __cov_Dz1u8FAfstkoOxW_JP5q1g.f['9']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['57']++;return _this2.onClick();
	         });
	      }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['58']++;this.element = cont.firstChild;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['59']++;this.container = cont;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['60']++;this.initialized = true;
	   };__cov_Dz1u8FAfstkoOxW_JP5q1g.s['61']++;ClearButton.prototype.destroy = function destroy() {
	      __cov_Dz1u8FAfstkoOxW_JP5q1g.f['10']++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['62']++;if (!this.initialized) {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['21'][0]++;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['63']++;return;
	      } else {
	         __cov_Dz1u8FAfstkoOxW_JP5q1g.b['21'][1]++;
	      }__cov_Dz1u8FAfstkoOxW_JP5q1g.s['64']++;(0, _dom.removeElm)(this.element);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['65']++;(0, _dom.removeElm)(this.container);__cov_Dz1u8FAfstkoOxW_JP5q1g.s['66']++;this.element = null;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['67']++;this.container = null;__cov_Dz1u8FAfstkoOxW_JP5q1g.s['68']++;this.initialized = false;
	   };__cov_Dz1u8FAfstkoOxW_JP5q1g.s['69']++;return ClearButton;
	}(_feature.Feature);

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_b79Z39pZVn1MDyHHDnnXOA = Function('return this')();
	if (!__cov_b79Z39pZVn1MDyHHDnnXOA.__coverage__) {
	   __cov_b79Z39pZVn1MDyHHDnnXOA.__coverage__ = {};
	}
	__cov_b79Z39pZVn1MDyHHDnnXOA = __cov_b79Z39pZVn1MDyHHDnnXOA.__coverage__;
	if (!__cov_b79Z39pZVn1MDyHHDnnXOA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\help.js']) {
	   __cov_b79Z39pZVn1MDyHHDnnXOA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\help.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\help.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 1, "9": 0, "10": 0, "11": 1, "12": 0, "13": 0, "14": 0, "15": 1, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 1, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0 }, "fnMap": { "1": { "line": 18, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 20, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 22, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 31, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 38, "name": "Help", "loc": { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 20 } } }, "6": { "line": 117, "name": "(anonymous_6)", "loc": { "start": { "line": 112, "column": 39 }, "end": { "line": 112, "column": 39 } } }, "7": { "line": 129, "name": "onMouseup", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 148, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 177, "name": "(anonymous_9)", "loc": { "start": { "line": 163, "column": 38 }, "end": { "line": 163, "column": 38 } } }, "10": { "line": 183, "name": "(anonymous_10)", "loc": { "start": { "line": 167, "column": 36 }, "end": { "line": 167, "column": 36 } } }, "11": { "line": 202, "name": "(anonymous_11)", "loc": { "start": { "line": 184, "column": 30 }, "end": { "line": 184, "column": 30 } } }, "12": { "line": 217, "name": "toggle", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "13": { "line": 241, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "22": { "end": { "line": 9, "column": 0 }, "start": { "line": 9, "column": 0 } }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "25": { "end": { "line": 113, "column": 5 }, "start": { "line": 20, "column": 4 } }, "26": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "27": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "28": { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 8 } }, "29": { "end": { "line": 29, "column": 8 }, "start": { "line": 29, "column": 8 } }, "30": { "end": { "line": 35, "column": 8 }, "start": { "line": 35, "column": 8 } }, "31": { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 8 } }, "32": { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 8 } }, "33": { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 8 } }, "34": { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 8 } }, "35": { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 8 } }, "36": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "37": { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 8 } }, "38": { "end": { "line": 93, "column": 8 }, "start": { "line": 93, "column": 8 } }, "39": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "40": { "end": { "line": 105, "column": 8 }, "start": { "line": 105, "column": 8 } }, "41": { "end": { "line": 112, "column": 8 }, "start": { "line": 112, "column": 8 } }, "42": { "end": { "line": 112, "column": 39 }, "start": { "line": 112, "column": 39 } }, "43": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "44": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "45": { "end": { "line": 120, "column": 8 }, "start": { "line": 120, "column": 8 } }, "46": { "end": { "line": 124, "column": 9 }, "start": { "line": 122, "column": 8 } }, "47": { "end": { "line": 123, "column": 12 }, "start": { "line": 123, "column": 12 } }, "48": { "end": { "line": 128, "column": 9 }, "start": { "line": 126, "column": 8 } }, "49": { "end": { "line": 127, "column": 12 }, "start": { "line": 127, "column": 12 } }, "50": { "end": { "line": 130, "column": 8 }, "start": { "line": 130, "column": 8 } }, "51": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "52": { "end": { "line": 136, "column": 11 }, "start": { "line": 136, "column": 11 } }, "53": { "end": { "line": 139, "column": 9 }, "start": { "line": 137, "column": 8 } }, "54": { "end": { "line": 138, "column": 12 }, "start": { "line": 138, "column": 12 } }, "55": { "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 8 } }, "56": { "end": { "line": 143, "column": 8 }, "start": { "line": 143, "column": 8 } }, "57": { "end": { "line": 144, "column": 8 }, "start": { "line": 144, "column": 8 } }, "58": { "end": { "line": 146, "column": 8 }, "start": { "line": 146, "column": 8 } }, "59": { "end": { "line": 151, "column": 9 }, "start": { "line": 149, "column": 8 } }, "60": { "end": { "line": 150, "column": 12 }, "start": { "line": 150, "column": 12 } }, "61": { "end": { "line": 152, "column": 8 }, "start": { "line": 152, "column": 8 } }, "62": { "end": { "line": 153, "column": 8 }, "start": { "line": 153, "column": 8 } }, "63": { "end": { "line": 155, "column": 8 }, "start": { "line": 155, "column": 8 } }, "64": { "end": { "line": 169, "column": 9 }, "start": { "line": 157, "column": 8 } }, "65": { "end": { "line": 158, "column": 12 }, "start": { "line": 158, "column": 12 } }, "66": { "end": { "line": 159, "column": 12 }, "start": { "line": 159, "column": 12 } }, "67": { "end": { "line": 160, "column": 12 }, "start": { "line": 160, "column": 12 } }, "68": { "end": { "line": 161, "column": 12 }, "start": { "line": 161, "column": 12 } }, "69": { "end": { "line": 162, "column": 12 }, "start": { "line": 162, "column": 12 } }, "70": { "end": { "line": 163, "column": 12 }, "start": { "line": 163, "column": 12 } }, "71": { "end": { "line": 163, "column": 38 }, "start": { "line": 163, "column": 38 } }, "72": { "end": { "line": 165, "column": 12 }, "start": { "line": 165, "column": 12 } }, "73": { "end": { "line": 166, "column": 12 }, "start": { "line": 166, "column": 12 } }, "74": { "end": { "line": 167, "column": 12 }, "start": { "line": 167, "column": 12 } }, "75": { "end": { "line": 167, "column": 36 }, "start": { "line": 167, "column": 36 } }, "76": { "end": { "line": 168, "column": 12 }, "start": { "line": 168, "column": 12 } }, "77": { "end": { "line": 182, "column": 9 }, "start": { "line": 171, "column": 8 } }, "78": { "end": { "line": 172, "column": 12 }, "start": { "line": 172, "column": 12 } }, "79": { "end": { "line": 173, "column": 12 }, "start": { "line": 173, "column": 12 } }, "80": { "end": { "line": 177, "column": 13 }, "start": { "line": 175, "column": 12 } }, "81": { "end": { "line": 176, "column": 16 }, "start": { "line": 176, "column": 16 } }, "82": { "end": { "line": 178, "column": 12 }, "start": { "line": 178, "column": 12 } }, "83": { "end": { "line": 181, "column": 13 }, "start": { "line": 179, "column": 12 } }, "84": { "end": { "line": 180, "column": 16 }, "start": { "line": 180, "column": 16 } }, "85": { "end": { "line": 183, "column": 8 }, "start": { "line": 183, "column": 8 } }, "86": { "end": { "line": 184, "column": 8 }, "start": { "line": 184, "column": 8 } }, "87": { "end": { "line": 184, "column": 30 }, "start": { "line": 184, "column": 30 } }, "88": { "end": { "line": 186, "column": 8 }, "start": { "line": 186, "column": 8 } }, "89": { "end": { "line": 187, "column": 8 }, "start": { "line": 187, "column": 8 } }, "90": { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }, "91": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "92": { "end": { "line": 200, "column": 9 }, "start": { "line": 198, "column": 8 } }, "93": { "end": { "line": 199, "column": 12 }, "start": { "line": 199, "column": 12 } }, "94": { "end": { "line": 203, "column": 8 }, "start": { "line": 203, "column": 8 } }, "95": { "end": { "line": 205, "column": 8 }, "start": { "line": 205, "column": 8 } }, "96": { "end": { "line": 211, "column": 9 }, "start": { "line": 206, "column": 8 } }, "97": { "end": { "line": 207, "column": 12 }, "start": { "line": 207, "column": 12 } }, "98": { "end": { "line": 208, "column": 12 }, "start": { "line": 208, "column": 12 } }, "99": { "end": { "line": 210, "column": 12 }, "start": { "line": 210, "column": 12 } }, "100": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "101": { "end": { "line": 220, "column": 9 }, "start": { "line": 218, "column": 8 } }, "102": { "end": { "line": 219, "column": 12 }, "start": { "line": 219, "column": 12 } }, "103": { "end": { "line": 221, "column": 8 }, "start": { "line": 221, "column": 8 } }, "104": { "end": { "line": 222, "column": 8 }, "start": { "line": 222, "column": 8 } }, "105": { "end": { "line": 224, "column": 8 }, "start": { "line": 224, "column": 8 } }, "106": { "end": { "line": 225, "column": 8 }, "start": { "line": 225, "column": 8 } }, "107": { "end": { "line": 227, "column": 8 }, "start": { "line": 227, "column": 8 } }, "108": { "end": { "line": 229, "column": 8 }, "start": { "line": 229, "column": 8 } }, "109": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 20, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 49, "type": "binary-expr", "locations": [{ "end": { "line": 29, "column": 21 }, "start": { "line": 29, "column": 21 } }, { "end": { "line": 29, "column": 8 }, "start": { "line": 29, "column": 54 } }] }, "11": { "line": 55, "type": "binary-expr", "locations": [{ "end": { "line": 35, "column": 25 }, "start": { "line": 35, "column": 25 } }, { "end": { "line": 35, "column": 8 }, "start": { "line": 36, "column": 12 } }] }, "12": { "line": 61, "type": "cond-expr", "locations": [{ "end": { "line": 42, "column": 25 }, "start": { "line": 43, "column": 12 } }, { "end": { "line": 42, "column": 8 }, "start": { "line": 44, "column": 12 } }] }, "13": { "line": 67, "type": "binary-expr", "locations": [{ "end": { "line": 56, "column": 25 }, "start": { "line": 56, "column": 25 } }, { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 53 } }] }, "14": { "line": 73, "type": "binary-expr", "locations": [{ "end": { "line": 62, "column": 23 }, "start": { "line": 62, "column": 23 } }, { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 55 } }] }, "15": { "line": 79, "type": "binary-expr", "locations": [{ "end": { "line": 68, "column": 23 }, "start": { "line": 68, "column": 23 } }, { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 55 } }] }, "16": { "line": 85, "type": "binary-expr", "locations": [{ "end": { "line": 74, "column": 27 }, "start": { "line": 74, "column": 27 } }, { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 64 } }] }, "17": { "line": 91, "type": "binary-expr", "locations": [{ "end": { "line": 80, "column": 28 }, "start": { "line": 80, "column": 28 } }, { "end": { "line": 80, "column": 8 }, "start": { "line": 81, "column": 12 } }] }, "18": { "line": 132, "type": "binary-expr", "locations": [{ "end": { "line": 122, "column": 15 }, "start": { "line": 122, "column": 15 } }, { "end": { "line": 122, "column": 15 }, "start": { "line": 122, "column": 28 } }, { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 55 } }] }, "19": { "line": 136, "type": "if", "locations": [{ "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 8 } }, { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 8 } }] }, "20": { "line": 136, "type": "binary-expr", "locations": [{ "end": { "line": 126, "column": 12 }, "start": { "line": 126, "column": 12 } }, { "end": { "line": 126, "column": 8 }, "start": { "line": 126, "column": 39 } }] }, "21": { "line": 151, "type": "if", "locations": [{ "end": { "line": 137, "column": 8 }, "start": { "line": 137, "column": 8 } }, { "end": { "line": 137, "column": 8 }, "start": { "line": 137, "column": 8 } }] }, "22": { "line": 163, "type": "if", "locations": [{ "end": { "line": 149, "column": 8 }, "start": { "line": 149, "column": 8 } }, { "end": { "line": 149, "column": 8 }, "start": { "line": 149, "column": 8 } }] }, "23": { "line": 166, "type": "cond-expr", "locations": [{ "end": { "line": 152, "column": 23 }, "start": { "line": 152, "column": 37 } }, { "end": { "line": 152, "column": 8 }, "start": { "line": 152, "column": 47 } }] }, "24": { "line": 169, "type": "cond-expr", "locations": [{ "end": { "line": 155, "column": 27 }, "start": { "line": 155, "column": 45 } }, { "end": { "line": 155, "column": 8 }, "start": { "line": 155, "column": 51 } }] }, "25": { "line": 171, "type": "if", "locations": [{ "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }, { "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }] }, "26": { "line": 189, "type": "if", "locations": [{ "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }] }, "27": { "line": 193, "type": "if", "locations": [{ "end": { "line": 175, "column": 12 }, "start": { "line": 175, "column": 12 } }, { "end": { "line": 175, "column": 12 }, "start": { "line": 175, "column": 12 } }] }, "28": { "line": 197, "type": "if", "locations": [{ "end": { "line": 179, "column": 12 }, "start": { "line": 179, "column": 12 } }, { "end": { "line": 179, "column": 12 }, "start": { "line": 179, "column": 12 } }] }, "29": { "line": 220, "type": "if", "locations": [{ "end": { "line": 198, "column": 8 }, "start": { "line": 198, "column": 8 } }, { "end": { "line": 198, "column": 8 }, "start": { "line": 198, "column": 8 } }] }, "30": { "line": 228, "type": "if", "locations": [{ "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 8 } }, { "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 8 } }] }, "31": { "line": 228, "type": "binary-expr", "locations": [{ "end": { "line": 206, "column": 12 }, "start": { "line": 206, "column": 12 } }, { "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 33 } }] }, "32": { "line": 242, "type": "if", "locations": [{ "end": { "line": 218, "column": 8 }, "start": { "line": 218, "column": 8 } }, { "end": { "line": 218, "column": 8 }, "start": { "line": 218, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, createText, elm, removeElm} from '../dom';", "import {addEvt, targetEvt, removeEvt} from '../event';", "import {NONE} from '../const';", "import {root} from '../root';", "", "const WIKI_URL = 'https://github.com/koalyptus/TableFilter/wiki/' +", "    '4.-Filter-operators';", "const WEBSITE_URL = 'http://koalyptus.github.io/TableFilter/';", "", "/**", " * Help UI component", " */", "export class Help extends Feature {", "", "    /**", "     * Creates an instance of Help", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'help');", "", "        let f = this.config;", "", "        /**", "         * ID of main custom container element", "         * @type {String}", "         */", "        this.tgtId = f.help_instructions_target_id || null;", "", "        /**", "         * ID of custom container element for instructions", "         * @type {String}", "         */", "        this.contTgtId = f.help_instructions_container_target_id ||", "            null;", "", "        /**", "         * Instructions text (accepts HTML)", "         * @type {String}", "         */", "        this.instrText = f.help_instructions_text ?", "            f.help_instructions_text :", "            'Use the filters above each column to filter and limit table ' +", "            'data. Advanced searches can be performed by using the following ' +", "            'operators: <br /><b>&lt;</b>, <b>&lt;=</b>, <b>&gt;</b>, ' +", "            '<b>&gt;=</b>, <b>=</b>, <b>*</b>, <b>!</b>, <b>{</b>, <b>}</b>, ' +", "            '<b>||</b>,<b>&amp;&amp;</b>, <b>[empty]</b>, <b>[nonempty]</b>, ' +", "            '<b>rgx:</b><br/><a href=\"' + WIKI_URL + '\" target=\"_blank\">' +", "            'Learn more</a><hr/>';", "", "        /**", "         * Instructions HTML", "         * @type {String}", "         */", "        this.instrHtml = f.help_instructions_html || null;", "", "        /**", "         * Help button text ('?')", "         * @type {String}", "         */", "        this.btnText = f.help_instructions_btn_text || '?';", "", "        /**", "         * Custom help button HTML", "         * @type {String}", "         */", "        this.btnHtml = f.help_instructions_btn_html || null;", "", "        /**", "         * Css class for help button", "         * @type {String}", "         */", "        this.btnCssClass = f.help_instructions_btn_css_class || 'helpBtn';", "", "        /**", "         * Css class for help container element", "         * @type {String}", "         */", "        this.contCssClass = f.help_instructions_container_css_class ||", "            'helpCont';", "", "        /**", "         * Button DOM element", "         * @type {DOMElement}", "         */", "        this.btn = null;", "", "        /**", "         * Help container DOM element", "         * @type {DOMElement}", "         */", "        this.cont = null;", "", "        /**", "         * Bound mouseup wrapper", "         * @private", "         */", "        this.boundMouseup = null;", "", "        /**", "         * Default HTML appended to instructions text", "         * @type {String}", "         */", "        this.defaultHtml = '<div class=\"helpFooter\"><h4>TableFilter ' +", "            'v' + tf.version + '</h4>' + '<a href=\"' + WEBSITE_URL +", "            '\" target=\"_blank\">' + WEBSITE_URL + '</a>' +", "            '<br/><span>&copy;2015-' + tf.year + ' Max Guglielmi</span>' +", "            '<div align=\"center\" style=\"margin-top:8px;\">' +", "            '<a href=\"javascript:void(0);\" class=\"close\">Close</a></div></div>';", "", "        this.emitter.on(['init-help'], () => this.init());", "    }", "", "    /**", "     * Mouse-up event handler handling popup auto-close behaviour", "     * @private", "     */", "    onMouseup(evt) {", "        let targetElm = targetEvt(evt);", "", "        while (targetElm && targetElm !== this.cont && targetElm !== this.btn) {", "            targetElm = targetElm.parentNode;", "        }", "", "        if (targetElm !== this.cont && targetElm !== this.btn) {", "            this.toggle();", "        }", "", "        return;", "    }", "", "    /**", "     * Initialise Help instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        let tf = this.tf;", "", "        let btn = createElm('span');", "        let cont = createElm('div');", "", "        this.boundMouseup = this.onMouseup.bind(this);", "", "        //help button is added to defined element", "        if (!this.tgtId) {", "            tf.setToolbar();", "        }", "        let targetEl = !this.tgtId ? tf.rDiv : elm(this.tgtId);", "        targetEl.appendChild(btn);", "", "        let divContainer = !this.contTgtId ? btn : elm(this.contTgtId);", "", "        if (!this.btnHtml) {", "            divContainer.appendChild(cont);", "            let helplink = createElm('a', ['href', 'javascript:void(0);']);", "            helplink.className = this.btnCssClass;", "            helplink.appendChild(createText(this.btnText));", "            btn.appendChild(helplink);", "            addEvt(helplink, 'click', () => this.toggle());", "        } else {", "            btn.innerHTML = this.btnHtml;", "            let helpEl = btn.firstChild;", "            addEvt(helpEl, 'click', () => this.toggle());", "            divContainer.appendChild(cont);", "        }", "", "        if (!this.instrHtml) {", "            cont.innerHTML = this.instrText;", "            cont.className = this.contCssClass;", "        } else {", "            if (this.contTgtId) {", "                divContainer.appendChild(cont);", "            }", "            cont.innerHTML = this.instrHtml;", "            if (!this.contTgtId) {", "                cont.className = this.contCssClass;", "            }", "        }", "        cont.innerHTML += this.defaultHtml;", "        addEvt(cont, 'click', () => this.toggle());", "", "        this.cont = cont;", "        this.btn = btn;", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Toggle help pop-up", "     */", "    toggle() {", "        // check only if explicitily set to false as in this case undefined", "        // signifies the help feature is enabled by default", "        if (this.enabled === false) {", "            return;", "        }", "", "        // ensure mouseup event handler is removed", "        removeEvt(root, 'mouseup', this.boundMouseup);", "", "        let divDisplay = this.cont.style.display;", "        if (divDisplay === '' || divDisplay === NONE) {", "            this.cont.style.display = 'inline';", "            addEvt(root, 'mouseup', this.boundMouseup);", "        } else {", "            this.cont.style.display = NONE;", "        }", "    }", "", "    /**", "     * Remove help UI", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "        removeElm(this.btn);", "        this.btn = null;", "", "        removeElm(this.cont);", "        this.cont = null;", "", "        this.boundMouseup = null;", "", "        this.initialized = false;", "    }", "", "}", ""] };
	}
	__cov_b79Z39pZVn1MDyHHDnnXOA = __cov_b79Z39pZVn1MDyHHDnnXOA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\help.js'];
	__cov_b79Z39pZVn1MDyHHDnnXOA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_b79Z39pZVn1MDyHHDnnXOA.s['2']++;exports.Help = undefined;__cov_b79Z39pZVn1MDyHHDnnXOA.s['3']++;var _feature = __webpack_require__(10);__cov_b79Z39pZVn1MDyHHDnnXOA.s['4']++;var _dom = __webpack_require__(3);__cov_b79Z39pZVn1MDyHHDnnXOA.s['5']++;var _event = __webpack_require__(1);__cov_b79Z39pZVn1MDyHHDnnXOA.s['6']++;var _const = __webpack_require__(11);__cov_b79Z39pZVn1MDyHHDnnXOA.s['7']++;var _root = __webpack_require__(2);function _classCallCheck(instance, Constructor) {
	   __cov_b79Z39pZVn1MDyHHDnnXOA.f['1']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['9']++;if (!(instance instanceof Constructor)) {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['1'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['10']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_b79Z39pZVn1MDyHHDnnXOA.f['2']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['12']++;if (!self) {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['2'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['13']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['2'][1]++;
	   }__cov_b79Z39pZVn1MDyHHDnnXOA.s['14']++;return (__cov_b79Z39pZVn1MDyHHDnnXOA.b['4'][0]++, call) && ((__cov_b79Z39pZVn1MDyHHDnnXOA.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['4'][2]++, typeof call === 'function')) ? (__cov_b79Z39pZVn1MDyHHDnnXOA.b['3'][0]++, call) : (__cov_b79Z39pZVn1MDyHHDnnXOA.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_b79Z39pZVn1MDyHHDnnXOA.f['3']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['16']++;if ((__cov_b79Z39pZVn1MDyHHDnnXOA.b['6'][0]++, typeof superClass !== 'function') && (__cov_b79Z39pZVn1MDyHHDnnXOA.b['6'][1]++, superClass !== null)) {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['5'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['17']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['5'][1]++;
	   }__cov_b79Z39pZVn1MDyHHDnnXOA.s['18']++;subClass.prototype = Object.create((__cov_b79Z39pZVn1MDyHHDnnXOA.b['7'][0]++, superClass) && (__cov_b79Z39pZVn1MDyHHDnnXOA.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_b79Z39pZVn1MDyHHDnnXOA.s['19']++;if (superClass) {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['8'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['20']++;Object.setPrototypeOf ? (__cov_b79Z39pZVn1MDyHHDnnXOA.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_b79Z39pZVn1MDyHHDnnXOA.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.b['8'][1]++;
	   }
	}__cov_b79Z39pZVn1MDyHHDnnXOA.s['21']++;var WIKI_URL = 'https://github.com/koalyptus/TableFilter/wiki/' + '4.-Filter-operators';__cov_b79Z39pZVn1MDyHHDnnXOA.s['22']++;var WEBSITE_URL = 'http://koalyptus.github.io/TableFilter/';__cov_b79Z39pZVn1MDyHHDnnXOA.s['23']++;var Help = exports.Help = function (_Feature) {
	   __cov_b79Z39pZVn1MDyHHDnnXOA.f['4']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['24']++;_inherits(Help, _Feature);function Help(tf) {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.f['5']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['26']++;_classCallCheck(this, Help);__cov_b79Z39pZVn1MDyHHDnnXOA.s['27']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'help'));__cov_b79Z39pZVn1MDyHHDnnXOA.s['28']++;var f = _this.config;__cov_b79Z39pZVn1MDyHHDnnXOA.s['29']++;_this.tgtId = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['10'][0]++, f.help_instructions_target_id) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['10'][1]++, null);__cov_b79Z39pZVn1MDyHHDnnXOA.s['30']++;_this.contTgtId = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['11'][0]++, f.help_instructions_container_target_id) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['11'][1]++, null);__cov_b79Z39pZVn1MDyHHDnnXOA.s['31']++;_this.instrText = f.help_instructions_text ? (__cov_b79Z39pZVn1MDyHHDnnXOA.b['12'][0]++, f.help_instructions_text) : (__cov_b79Z39pZVn1MDyHHDnnXOA.b['12'][1]++, 'Use the filters above each column to filter and limit table ' + 'data. Advanced searches can be performed by using the following ' + 'operators: <br /><b>&lt;</b>, <b>&lt;=</b>, <b>&gt;</b>, ' + '<b>&gt;=</b>, <b>=</b>, <b>*</b>, <b>!</b>, <b>{</b>, <b>}</b>, ' + '<b>||</b>,<b>&amp;&amp;</b>, <b>[empty]</b>, <b>[nonempty]</b>, ' + '<b>rgx:</b><br/><a href="' + WIKI_URL + '" target="_blank">' + 'Learn more</a><hr/>');__cov_b79Z39pZVn1MDyHHDnnXOA.s['32']++;_this.instrHtml = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['13'][0]++, f.help_instructions_html) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['13'][1]++, null);__cov_b79Z39pZVn1MDyHHDnnXOA.s['33']++;_this.btnText = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['14'][0]++, f.help_instructions_btn_text) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['14'][1]++, '?');__cov_b79Z39pZVn1MDyHHDnnXOA.s['34']++;_this.btnHtml = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['15'][0]++, f.help_instructions_btn_html) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['15'][1]++, null);__cov_b79Z39pZVn1MDyHHDnnXOA.s['35']++;_this.btnCssClass = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['16'][0]++, f.help_instructions_btn_css_class) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['16'][1]++, 'helpBtn');__cov_b79Z39pZVn1MDyHHDnnXOA.s['36']++;_this.contCssClass = (__cov_b79Z39pZVn1MDyHHDnnXOA.b['17'][0]++, f.help_instructions_container_css_class) || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['17'][1]++, 'helpCont');__cov_b79Z39pZVn1MDyHHDnnXOA.s['37']++;_this.btn = null;__cov_b79Z39pZVn1MDyHHDnnXOA.s['38']++;_this.cont = null;__cov_b79Z39pZVn1MDyHHDnnXOA.s['39']++;_this.boundMouseup = null;__cov_b79Z39pZVn1MDyHHDnnXOA.s['40']++;_this.defaultHtml = '<div class="helpFooter"><h4>TableFilter ' + 'v' + tf.version + '</h4>' + '<a href="' + WEBSITE_URL + '" target="_blank">' + WEBSITE_URL + '</a>' + '<br/><span>&copy;2015-' + tf.year + ' Max Guglielmi</span>' + '<div align="center" style="margin-top:8px;">' + '<a href="javascript:void(0);" class="close">Close</a></div></div>';__cov_b79Z39pZVn1MDyHHDnnXOA.s['41']++;_this.emitter.on(['init-help'], function () {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.f['6']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['42']++;return _this.init();
	      });__cov_b79Z39pZVn1MDyHHDnnXOA.s['43']++;return _this;
	   }__cov_b79Z39pZVn1MDyHHDnnXOA.s['44']++;Help.prototype.onMouseup = function onMouseup(evt) {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.f['7']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['45']++;var targetElm = (0, _event.targetEvt)(evt);__cov_b79Z39pZVn1MDyHHDnnXOA.s['46']++;while ((__cov_b79Z39pZVn1MDyHHDnnXOA.b['18'][0]++, targetElm) && (__cov_b79Z39pZVn1MDyHHDnnXOA.b['18'][1]++, targetElm !== this.cont) && (__cov_b79Z39pZVn1MDyHHDnnXOA.b['18'][2]++, targetElm !== this.btn)) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.s['47']++;targetElm = targetElm.parentNode;
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['48']++;if ((__cov_b79Z39pZVn1MDyHHDnnXOA.b['20'][0]++, targetElm !== this.cont) && (__cov_b79Z39pZVn1MDyHHDnnXOA.b['20'][1]++, targetElm !== this.btn)) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['19'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['49']++;this.toggle();
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['19'][1]++;
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['50']++;return;
	   };__cov_b79Z39pZVn1MDyHHDnnXOA.s['51']++;Help.prototype.init = function init() {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.f['8']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['52']++;var _this2 = this;__cov_b79Z39pZVn1MDyHHDnnXOA.s['53']++;if (this.initialized) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['21'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['54']++;return;
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['21'][1]++;
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['55']++;var tf = this.tf;__cov_b79Z39pZVn1MDyHHDnnXOA.s['56']++;var btn = (0, _dom.createElm)('span');__cov_b79Z39pZVn1MDyHHDnnXOA.s['57']++;var cont = (0, _dom.createElm)('div');__cov_b79Z39pZVn1MDyHHDnnXOA.s['58']++;this.boundMouseup = this.onMouseup.bind(this);__cov_b79Z39pZVn1MDyHHDnnXOA.s['59']++;if (!this.tgtId) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['22'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['60']++;tf.setToolbar();
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['22'][1]++;
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['61']++;var targetEl = !this.tgtId ? (__cov_b79Z39pZVn1MDyHHDnnXOA.b['23'][0]++, tf.rDiv) : (__cov_b79Z39pZVn1MDyHHDnnXOA.b['23'][1]++, (0, _dom.elm)(this.tgtId));__cov_b79Z39pZVn1MDyHHDnnXOA.s['62']++;targetEl.appendChild(btn);__cov_b79Z39pZVn1MDyHHDnnXOA.s['63']++;var divContainer = !this.contTgtId ? (__cov_b79Z39pZVn1MDyHHDnnXOA.b['24'][0]++, btn) : (__cov_b79Z39pZVn1MDyHHDnnXOA.b['24'][1]++, (0, _dom.elm)(this.contTgtId));__cov_b79Z39pZVn1MDyHHDnnXOA.s['64']++;if (!this.btnHtml) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['25'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['65']++;divContainer.appendChild(cont);__cov_b79Z39pZVn1MDyHHDnnXOA.s['66']++;var helplink = (0, _dom.createElm)('a', ['href', 'javascript:void(0);']);__cov_b79Z39pZVn1MDyHHDnnXOA.s['67']++;helplink.className = this.btnCssClass;__cov_b79Z39pZVn1MDyHHDnnXOA.s['68']++;helplink.appendChild((0, _dom.createText)(this.btnText));__cov_b79Z39pZVn1MDyHHDnnXOA.s['69']++;btn.appendChild(helplink);__cov_b79Z39pZVn1MDyHHDnnXOA.s['70']++;(0, _event.addEvt)(helplink, 'click', function () {
	            __cov_b79Z39pZVn1MDyHHDnnXOA.f['9']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['71']++;return _this2.toggle();
	         });
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['25'][1]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['72']++;btn.innerHTML = this.btnHtml;__cov_b79Z39pZVn1MDyHHDnnXOA.s['73']++;var helpEl = btn.firstChild;__cov_b79Z39pZVn1MDyHHDnnXOA.s['74']++;(0, _event.addEvt)(helpEl, 'click', function () {
	            __cov_b79Z39pZVn1MDyHHDnnXOA.f['10']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['75']++;return _this2.toggle();
	         });__cov_b79Z39pZVn1MDyHHDnnXOA.s['76']++;divContainer.appendChild(cont);
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['77']++;if (!this.instrHtml) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['26'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['78']++;cont.innerHTML = this.instrText;__cov_b79Z39pZVn1MDyHHDnnXOA.s['79']++;cont.className = this.contCssClass;
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['26'][1]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['80']++;if (this.contTgtId) {
	            __cov_b79Z39pZVn1MDyHHDnnXOA.b['27'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['81']++;divContainer.appendChild(cont);
	         } else {
	            __cov_b79Z39pZVn1MDyHHDnnXOA.b['27'][1]++;
	         }__cov_b79Z39pZVn1MDyHHDnnXOA.s['82']++;cont.innerHTML = this.instrHtml;__cov_b79Z39pZVn1MDyHHDnnXOA.s['83']++;if (!this.contTgtId) {
	            __cov_b79Z39pZVn1MDyHHDnnXOA.b['28'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['84']++;cont.className = this.contCssClass;
	         } else {
	            __cov_b79Z39pZVn1MDyHHDnnXOA.b['28'][1]++;
	         }
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['85']++;cont.innerHTML += this.defaultHtml;__cov_b79Z39pZVn1MDyHHDnnXOA.s['86']++;(0, _event.addEvt)(cont, 'click', function () {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.f['11']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['87']++;return _this2.toggle();
	      });__cov_b79Z39pZVn1MDyHHDnnXOA.s['88']++;this.cont = cont;__cov_b79Z39pZVn1MDyHHDnnXOA.s['89']++;this.btn = btn;__cov_b79Z39pZVn1MDyHHDnnXOA.s['90']++;this.initialized = true;
	   };__cov_b79Z39pZVn1MDyHHDnnXOA.s['91']++;Help.prototype.toggle = function toggle() {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.f['12']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['92']++;if (this.enabled === false) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['29'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['93']++;return;
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['29'][1]++;
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['94']++;(0, _event.removeEvt)(_root.root, 'mouseup', this.boundMouseup);__cov_b79Z39pZVn1MDyHHDnnXOA.s['95']++;var divDisplay = this.cont.style.display;__cov_b79Z39pZVn1MDyHHDnnXOA.s['96']++;if ((__cov_b79Z39pZVn1MDyHHDnnXOA.b['31'][0]++, divDisplay === '') || (__cov_b79Z39pZVn1MDyHHDnnXOA.b['31'][1]++, divDisplay === _const.NONE)) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['30'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['97']++;this.cont.style.display = 'inline';__cov_b79Z39pZVn1MDyHHDnnXOA.s['98']++;(0, _event.addEvt)(_root.root, 'mouseup', this.boundMouseup);
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['30'][1]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['99']++;this.cont.style.display = _const.NONE;
	      }
	   };__cov_b79Z39pZVn1MDyHHDnnXOA.s['100']++;Help.prototype.destroy = function destroy() {
	      __cov_b79Z39pZVn1MDyHHDnnXOA.f['13']++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['101']++;if (!this.initialized) {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['32'][0]++;__cov_b79Z39pZVn1MDyHHDnnXOA.s['102']++;return;
	      } else {
	         __cov_b79Z39pZVn1MDyHHDnnXOA.b['32'][1]++;
	      }__cov_b79Z39pZVn1MDyHHDnnXOA.s['103']++;(0, _dom.removeElm)(this.btn);__cov_b79Z39pZVn1MDyHHDnnXOA.s['104']++;this.btn = null;__cov_b79Z39pZVn1MDyHHDnnXOA.s['105']++;(0, _dom.removeElm)(this.cont);__cov_b79Z39pZVn1MDyHHDnnXOA.s['106']++;this.cont = null;__cov_b79Z39pZVn1MDyHHDnnXOA.s['107']++;this.boundMouseup = null;__cov_b79Z39pZVn1MDyHHDnnXOA.s['108']++;this.initialized = false;
	   };__cov_b79Z39pZVn1MDyHHDnnXOA.s['109']++;return Help;
	}(_feature.Feature);

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_y5ZiEsTgihwqxZI0gL8fHQ = Function('return this')();
	if (!__cov_y5ZiEsTgihwqxZI0gL8fHQ.__coverage__) {
	   __cov_y5ZiEsTgihwqxZI0gL8fHQ.__coverage__ = {};
	}
	__cov_y5ZiEsTgihwqxZI0gL8fHQ = __cov_y5ZiEsTgihwqxZI0gL8fHQ.__coverage__;
	if (!__cov_y5ZiEsTgihwqxZI0gL8fHQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\alternateRows.js']) {
	   __cov_y5ZiEsTgihwqxZI0gL8fHQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\alternateRows.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\alternateRows.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 1, "6": 0, "7": 0, "8": 1, "9": 0, "10": 0, "11": 0, "12": 1, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 1, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0 }, "fnMap": { "1": { "line": 12, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 14, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 16, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 21, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 29, "name": "AlternateRows", "loc": { "start": { "line": 14, "column": 4 }, "end": { "line": 14, "column": 20 } } }, "6": { "line": 54, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 64, "name": "(anonymous_7)", "loc": { "start": { "line": 43, "column": 12 }, "end": { "line": 43, "column": 12 } } }, "8": { "line": 67, "name": "(anonymous_8)", "loc": { "start": { "line": 45, "column": 43 }, "end": { "line": 45, "column": 43 } } }, "9": { "line": 70, "name": "(anonymous_9)", "loc": { "start": { "line": 46, "column": 42 }, "end": { "line": 46, "column": 42 } } }, "10": { "line": 83, "name": "processAll", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 108, "name": "processRow", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 125, "name": "setRowBg", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "13": { "line": 143, "name": "removeRowBg", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "14": { "line": 157, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "15": { "line": 169, "name": "(anonymous_15)", "loc": { "start": { "line": 132, "column": 12 }, "end": { "line": 132, "column": 12 } } }, "16": { "line": 172, "name": "(anonymous_16)", "loc": { "start": { "line": 134, "column": 44 }, "end": { "line": 134, "column": 44 } } }, "17": { "line": 175, "name": "(anonymous_17)", "loc": { "start": { "line": 135, "column": 43 }, "end": { "line": 135, "column": 43 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "end": { "line": 29, "column": 5 }, "start": { "line": 14, "column": 4 } }, "21": { "end": { "line": 14, "column": 20 }, "start": { "line": 14, "column": 20 } }, "22": { "end": { "line": 14, "column": 20 }, "start": { "line": 14, "column": 20 } }, "23": { "end": { "line": 17, "column": 8 }, "start": { "line": 17, "column": 8 } }, "24": { "end": { "line": 22, "column": 8 }, "start": { "line": 22, "column": 8 } }, "25": { "end": { "line": 28, "column": 8 }, "start": { "line": 28, "column": 8 } }, "26": { "end": { "line": 14, "column": 20 }, "start": { "line": 14, "column": 20 } }, "27": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "28": { "end": { "line": 34, "column": 11 }, "start": { "line": 34, "column": 11 } }, "29": { "end": { "line": 37, "column": 9 }, "start": { "line": 35, "column": 8 } }, "30": { "end": { "line": 36, "column": 12 }, "start": { "line": 36, "column": 12 } }, "31": { "end": { "line": 39, "column": 8 }, "start": { "line": 39, "column": 8 } }, "32": { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 8 } }, "33": { "end": { "line": 43, "column": 12 }, "start": { "line": 43, "column": 12 } }, "34": { "end": { "line": 45, "column": 8 }, "start": { "line": 45, "column": 8 } }, "35": { "end": { "line": 45, "column": 43 }, "start": { "line": 45, "column": 43 } }, "36": { "end": { "line": 46, "column": 8 }, "start": { "line": 46, "column": 8 } }, "37": { "end": { "line": 46, "column": 42 }, "start": { "line": 46, "column": 42 } }, "38": { "end": { "line": 49, "column": 8 }, "start": { "line": 49, "column": 8 } }, "39": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "40": { "end": { "line": 58, "column": 9 }, "start": { "line": 56, "column": 8 } }, "41": { "end": { "line": 57, "column": 12 }, "start": { "line": 57, "column": 12 } }, "42": { "end": { "line": 59, "column": 8 }, "start": { "line": 59, "column": 8 } }, "43": { "end": { "line": 60, "column": 8 }, "start": { "line": 60, "column": 8 } }, "44": { "end": { "line": 61, "column": 8 }, "start": { "line": 61, "column": 8 } }, "45": { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 8 } }, "46": { "end": { "line": 69, "column": 9 }, "start": { "line": 65, "column": 8 } }, "47": { "end": { "line": 66, "column": 12 }, "start": { "line": 66, "column": 12 } }, "48": { "end": { "line": 67, "column": 12 }, "start": { "line": 67, "column": 12 } }, "49": { "end": { "line": 68, "column": 12 }, "start": { "line": 68, "column": 12 } }, "50": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "51": { "end": { "line": 83, "column": 9 }, "start": { "line": 79, "column": 8 } }, "52": { "end": { "line": 80, "column": 12 }, "start": { "line": 80, "column": 12 } }, "53": { "end": { "line": 82, "column": 12 }, "start": { "line": 82, "column": 12 } }, "54": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "55": { "end": { "line": 96, "column": 9 }, "start": { "line": 94, "column": 8 } }, "56": { "end": { "line": 95, "column": 12 }, "start": { "line": 95, "column": 12 } }, "57": { "end": { "line": 97, "column": 8 }, "start": { "line": 97, "column": 8 } }, "58": { "end": { "line": 98, "column": 8 }, "start": { "line": 98, "column": 8 } }, "59": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "60": { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 8 } }, "61": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "62": { "end": { "line": 112, "column": 9 }, "start": { "line": 110, "column": 8 } }, "63": { "end": { "line": 111, "column": 12 }, "start": { "line": 111, "column": 12 } }, "64": { "end": { "line": 113, "column": 8 }, "start": { "line": 113, "column": 8 } }, "65": { "end": { "line": 114, "column": 8 }, "start": { "line": 114, "column": 8 } }, "66": { "end": { "line": 115, "column": 8 }, "start": { "line": 115, "column": 8 } }, "67": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "68": { "end": { "line": 121, "column": 14 }, "start": { "line": 121, "column": 14 } }, "69": { "end": { "line": 124, "column": 9 }, "start": { "line": 122, "column": 8 } }, "70": { "end": { "line": 123, "column": 12 }, "start": { "line": 123, "column": 12 } }, "71": { "end": { "line": 125, "column": 8 }, "start": { "line": 125, "column": 8 } }, "72": { "end": { "line": 128, "column": 9 }, "start": { "line": 126, "column": 8 } }, "73": { "end": { "line": 127, "column": 12 }, "start": { "line": 127, "column": 12 } }, "74": { "end": { "line": 131, "column": 8 }, "start": { "line": 131, "column": 8 } }, "75": { "end": { "line": 132, "column": 12 }, "start": { "line": 132, "column": 12 } }, "76": { "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 8 } }, "77": { "end": { "line": 134, "column": 44 }, "start": { "line": 134, "column": 44 } }, "78": { "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 8 } }, "79": { "end": { "line": 135, "column": 43 }, "start": { "line": 135, "column": 43 } }, "80": { "end": { "line": 137, "column": 8 }, "start": { "line": 137, "column": 8 } }, "81": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 12, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 14, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 14, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 14, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 16, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 16, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 16, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 39, "type": "binary-expr", "locations": [{ "end": { "line": 22, "column": 23 }, "start": { "line": 22, "column": 23 } }, { "end": { "line": 22, "column": 8 }, "start": { "line": 22, "column": 52 } }] }, "11": { "line": 45, "type": "binary-expr", "locations": [{ "end": { "line": 28, "column": 22 }, "start": { "line": 28, "column": 22 } }, { "end": { "line": 28, "column": 8 }, "start": { "line": 28, "column": 50 } }] }, "12": { "line": 57, "type": "if", "locations": [{ "end": { "line": 35, "column": 8 }, "start": { "line": 35, "column": 8 } }, { "end": { "line": 35, "column": 8 }, "start": { "line": 35, "column": 8 } }] }, "13": { "line": 84, "type": "if", "locations": [{ "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 8 } }, { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 8 } }] }, "14": { "line": 109, "type": "if", "locations": [{ "end": { "line": 79, "column": 8 }, "start": { "line": 79, "column": 8 } }, { "end": { "line": 79, "column": 8 }, "start": { "line": 79, "column": 8 } }] }, "15": { "line": 126, "type": "if", "locations": [{ "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }, { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }] }, "16": { "line": 126, "type": "binary-expr", "locations": [{ "end": { "line": 94, "column": 12 }, "start": { "line": 94, "column": 12 } }, { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 33 } }] }, "17": { "line": 130, "type": "cond-expr", "locations": [{ "end": { "line": 98, "column": 16 }, "start": { "line": 98, "column": 29 } }, { "end": { "line": 98, "column": 8 }, "start": { "line": 98, "column": 38 } }] }, "18": { "line": 133, "type": "cond-expr", "locations": [{ "end": { "line": 101, "column": 31 }, "start": { "line": 101, "column": 41 } }, { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 56 } }] }, "19": { "line": 144, "type": "if", "locations": [{ "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }, { "end": { "line": 110, "column": 8 }, "start": { "line": 110, "column": 8 } }] }, "20": { "line": 160, "type": "if", "locations": [{ "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }, { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {addClass, removeClass} from '../dom';", "", "/**", " * Rows with alternating background color for improved readability", " */", "export class AlternateRows extends Feature {", "", "    /**", "     * Creates an instance of AlternateRows.", "     *", "     * @param {Object} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'alternateRows');", "", "        let config = this.config;", "        /**", "         * Css class for even rows (default: 'even')", "         * @type {String}", "         */", "        this.evenCss = config.even_row_css_class || 'even';", "", "        /**", "         * Css class for odd rows (default: 'odd')", "         * @type {String}", "         */", "        this.oddCss = config.odd_row_css_class || 'odd';", "    }", "", "    /**", "     * Sets alternating rows color", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        this.processAll();", "", "        // Subscribe to events", "        this.emitter.on(['row-processed', 'row-paged'],", "            (tf, rowIndex, arrIndex, isValid) =>", "                this.processRow(rowIndex, arrIndex, isValid));", "        this.emitter.on(['column-sorted'], () => this.processAll());", "        this.emitter.on(['rows-changed'], () => this.processAll());", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Apply background to all valid rows", "     */", "    processAll() {", "        if (!this.isEnabled()) {", "            return;", "        }", "        let tf = this.tf;", "        let validRowsIndex = tf.getValidRows(true);", "        let indexLen = validRowsIndex.length;", "        let idx = 0;", "", "        //alternates bg color", "        for (let j = 0; j < indexLen; j++) {", "            let rowIdx = validRowsIndex[j];", "            this.setRowBg(rowIdx, idx);", "            idx++;", "        }", "    }", "", "    /**", "     * Set/remove row background based on row validation", "     * @param  {Number}  rowIdx  Row index", "     * @param  {Number}  arrIdx  Array index", "     * @param  {Boolean} isValid Valid row flag", "     */", "    processRow(rowIdx, arrIdx, isValid) {", "        if (isValid) {", "            this.setRowBg(rowIdx, arrIdx);", "        } else {", "            this.removeRowBg(rowIdx);", "        }", "    }", "", "    /**", "     * Sets row background color", "     * @param {Number} rowIdx Row index", "     * @param {Number} idx    Valid rows collection index needed to calculate bg", "     * color", "     * @private", "     */", "    setRowBg(rowIdx, idx) {", "        if (!this.isEnabled() || isNaN(rowIdx)) {", "            return;", "        }", "        let rows = this.tf.tbl.rows;", "        let i = isNaN(idx) ? rowIdx : idx;", "        this.removeRowBg(rowIdx);", "", "        addClass(rows[rowIdx], (i % 2) ? this.evenCss : this.oddCss);", "    }", "", "    /**", "     * Removes row background color", "     * @param  {Number} idx Row index", "     * @private", "     */", "    removeRowBg(idx) {", "        if (isNaN(idx)) {", "            return;", "        }", "        let rows = this.tf.tbl.rows;", "        removeClass(rows[idx], this.oddCss);", "        removeClass(rows[idx], this.evenCss);", "    }", "", "    /**", "     * Removes all alternating backgrounds", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "        let nbRows = this.tf.getRowsNb(true);", "        for (let i = 0; i < nbRows; i++) {", "            this.removeRowBg(i);", "        }", "", "        // Unsubscribe to events", "        this.emitter.off(['row-processed', 'row-paged'],", "            (tf, rowIndex, arrIndex, isValid) =>", "                this.processRow(rowIndex, arrIndex, isValid));", "        this.emitter.off(['column-sorted'], () => this.processAll());", "        this.emitter.off(['rows-changed'], () => this.processAll());", "", "        this.initialized = false;", "    }", "", "}", ""] };
	}
	__cov_y5ZiEsTgihwqxZI0gL8fHQ = __cov_y5ZiEsTgihwqxZI0gL8fHQ['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\alternateRows.js'];
	__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['2']++;exports.AlternateRows = undefined;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['3']++;var _feature = __webpack_require__(10);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['4']++;var _dom = __webpack_require__(3);function _classCallCheck(instance, Constructor) {
	   __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['1']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['6']++;if (!(instance instanceof Constructor)) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['1'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['7']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['2']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['9']++;if (!self) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['2'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['10']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['2'][1]++;
	   }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['11']++;return (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['4'][0]++, call) && ((__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['4'][2]++, typeof call === 'function')) ? (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['3'][0]++, call) : (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['3']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['13']++;if ((__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['6'][0]++, typeof superClass !== 'function') && (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['6'][1]++, superClass !== null)) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['5'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['14']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['5'][1]++;
	   }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['15']++;subClass.prototype = Object.create((__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['7'][0]++, superClass) && (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['16']++;if (superClass) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['8'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['17']++;Object.setPrototypeOf ? (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['8'][1]++;
	   }
	}__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['18']++;var AlternateRows = exports.AlternateRows = function (_Feature) {
	   __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['4']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['19']++;_inherits(AlternateRows, _Feature);function AlternateRows(tf) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['5']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['21']++;_classCallCheck(this, AlternateRows);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['22']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'alternateRows'));__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['23']++;var config = _this.config;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['24']++;_this.evenCss = (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['10'][0]++, config.even_row_css_class) || (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['10'][1]++, 'even');__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['25']++;_this.oddCss = (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['11'][0]++, config.odd_row_css_class) || (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['11'][1]++, 'odd');__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['26']++;return _this;
	   }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['27']++;AlternateRows.prototype.init = function init() {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['6']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['28']++;var _this2 = this;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['29']++;if (this.initialized) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['12'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['30']++;return;
	      } else {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['12'][1]++;
	      }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['31']++;this.processAll();__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['32']++;this.emitter.on(['row-processed', 'row-paged'], function (tf, rowIndex, arrIndex, isValid) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['7']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['33']++;return _this2.processRow(rowIndex, arrIndex, isValid);
	      });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['34']++;this.emitter.on(['column-sorted'], function () {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['8']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['35']++;return _this2.processAll();
	      });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['36']++;this.emitter.on(['rows-changed'], function () {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['9']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['37']++;return _this2.processAll();
	      });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['38']++;this.initialized = true;
	   };__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['39']++;AlternateRows.prototype.processAll = function processAll() {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['10']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['40']++;if (!this.isEnabled()) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['13'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['41']++;return;
	      } else {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['13'][1]++;
	      }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['42']++;var tf = this.tf;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['43']++;var validRowsIndex = tf.getValidRows(true);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['44']++;var indexLen = validRowsIndex.length;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['45']++;var idx = 0;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['46']++;for (var j = 0; j < indexLen; j++) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.s['47']++;var rowIdx = validRowsIndex[j];__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['48']++;this.setRowBg(rowIdx, idx);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['49']++;idx++;
	      }
	   };__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['50']++;AlternateRows.prototype.processRow = function processRow(rowIdx, arrIdx, isValid) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['11']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['51']++;if (isValid) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['14'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['52']++;this.setRowBg(rowIdx, arrIdx);
	      } else {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['14'][1]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['53']++;this.removeRowBg(rowIdx);
	      }
	   };__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['54']++;AlternateRows.prototype.setRowBg = function setRowBg(rowIdx, idx) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['12']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['55']++;if ((__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['16'][0]++, !this.isEnabled()) || (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['16'][1]++, isNaN(rowIdx))) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['15'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['56']++;return;
	      } else {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['15'][1]++;
	      }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['57']++;var rows = this.tf.tbl.rows;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['58']++;var i = isNaN(idx) ? (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['17'][0]++, rowIdx) : (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['17'][1]++, idx);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['59']++;this.removeRowBg(rowIdx);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['60']++;(0, _dom.addClass)(rows[rowIdx], i % 2 ? (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['18'][0]++, this.evenCss) : (__cov_y5ZiEsTgihwqxZI0gL8fHQ.b['18'][1]++, this.oddCss));
	   };__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['61']++;AlternateRows.prototype.removeRowBg = function removeRowBg(idx) {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['13']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['62']++;if (isNaN(idx)) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['19'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['63']++;return;
	      } else {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['19'][1]++;
	      }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['64']++;var rows = this.tf.tbl.rows;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['65']++;(0, _dom.removeClass)(rows[idx], this.oddCss);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['66']++;(0, _dom.removeClass)(rows[idx], this.evenCss);
	   };__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['67']++;AlternateRows.prototype.destroy = function destroy() {
	      __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['14']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['68']++;var _this3 = this;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['69']++;if (!this.initialized) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['20'][0]++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['70']++;return;
	      } else {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.b['20'][1]++;
	      }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['71']++;var nbRows = this.tf.getRowsNb(true);__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['72']++;for (var i = 0; i < nbRows; i++) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.s['73']++;this.removeRowBg(i);
	      }__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['74']++;this.emitter.off(['row-processed', 'row-paged'], function (tf, rowIndex, arrIndex, isValid) {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['15']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['75']++;return _this3.processRow(rowIndex, arrIndex, isValid);
	      });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['76']++;this.emitter.off(['column-sorted'], function () {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['16']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['77']++;return _this3.processAll();
	      });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['78']++;this.emitter.off(['rows-changed'], function () {
	         __cov_y5ZiEsTgihwqxZI0gL8fHQ.f['17']++;__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['79']++;return _this3.processAll();
	      });__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['80']++;this.initialized = false;
	   };__cov_y5ZiEsTgihwqxZI0gL8fHQ.s['81']++;return AlternateRows;
	}(_feature.Feature);

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_W9dTvdCTZ_DGEjG9K$n$3Q = Function('return this')();
	if (!__cov_W9dTvdCTZ_DGEjG9K$n$3Q.__coverage__) {
	   __cov_W9dTvdCTZ_DGEjG9K$n$3Q.__coverage__ = {};
	}
	__cov_W9dTvdCTZ_DGEjG9K$n$3Q = __cov_W9dTvdCTZ_DGEjG9K$n$3Q.__coverage__;
	if (!__cov_W9dTvdCTZ_DGEjG9K$n$3Q['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\noResults.js']) {
	   __cov_W9dTvdCTZ_DGEjG9K$n$3Q['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\noResults.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\noResults.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 1, "8": 0, "9": 0, "10": 1, "11": 0, "12": 0, "13": 0, "14": 1, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 1, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0 }, "fnMap": { "1": { "line": 16, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 18, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 20, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 28, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 35, "name": "NoResults", "loc": { "start": { "line": 18, "column": 4 }, "end": { "line": 18, "column": 20 } } }, "6": { "line": 111, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 134, "name": "(anonymous_7)", "loc": { "start": { "line": 116, "column": 45 }, "end": { "line": 116, "column": 45 } } }, "8": { "line": 151, "name": "toggle", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 164, "name": "show", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 181, "name": "hide", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 198, "name": "setWidth", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 216, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "13": { "line": 225, "name": "(anonymous_13)", "loc": { "start": { "line": 194, "column": 46 }, "end": { "line": 194, "column": 46 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "end": { "line": 89, "column": 5 }, "start": { "line": 18, "column": 4 } }, "23": { "end": { "line": 18, "column": 20 }, "start": { "line": 18, "column": 20 } }, "24": { "end": { "line": 18, "column": 20 }, "start": { "line": 18, "column": 20 } }, "25": { "end": { "line": 22, "column": 8 }, "start": { "line": 22, "column": 8 } }, "26": { "end": { "line": 28, "column": 8 }, "start": { "line": 28, "column": 8 } }, "27": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "28": { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 8 } }, "29": { "end": { "line": 47, "column": 8 }, "start": { "line": 47, "column": 8 } }, "30": { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }, "31": { "end": { "line": 60, "column": 8 }, "start": { "line": 60, "column": 8 } }, "32": { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 8 } }, "33": { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 8 } }, "34": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "35": { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 8 } }, "36": { "end": { "line": 18, "column": 20 }, "start": { "line": 18, "column": 20 } }, "37": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "38": { "end": { "line": 94, "column": 11 }, "start": { "line": 94, "column": 11 } }, "39": { "end": { "line": 97, "column": 9 }, "start": { "line": 95, "column": 8 } }, "40": { "end": { "line": 96, "column": 12 }, "start": { "line": 96, "column": 12 } }, "41": { "end": { "line": 98, "column": 8 }, "start": { "line": 98, "column": 8 } }, "42": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "43": { "end": { "line": 103, "column": 8 }, "start": { "line": 103, "column": 8 } }, "44": { "end": { "line": 104, "column": 8 }, "start": { "line": 104, "column": 8 } }, "45": { "end": { "line": 105, "column": 8 }, "start": { "line": 105, "column": 8 } }, "46": { "end": { "line": 111, "column": 9 }, "start": { "line": 107, "column": 8 } }, "47": { "end": { "line": 108, "column": 12 }, "start": { "line": 108, "column": 12 } }, "48": { "end": { "line": 110, "column": 12 }, "start": { "line": 110, "column": 12 } }, "49": { "end": { "line": 113, "column": 8 }, "start": { "line": 113, "column": 8 } }, "50": { "end": { "line": 116, "column": 8 }, "start": { "line": 116, "column": 8 } }, "51": { "end": { "line": 116, "column": 45 }, "start": { "line": 116, "column": 45 } }, "52": { "end": { "line": 121, "column": 8 }, "start": { "line": 121, "column": 8 } }, "53": { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 8 } }, "54": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "55": { "end": { "line": 134, "column": 9 }, "start": { "line": 130, "column": 8 } }, "56": { "end": { "line": 131, "column": 12 }, "start": { "line": 131, "column": 12 } }, "57": { "end": { "line": 133, "column": 12 }, "start": { "line": 133, "column": 12 } }, "58": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "59": { "end": { "line": 143, "column": 9 }, "start": { "line": 141, "column": 8 } }, "60": { "end": { "line": 142, "column": 12 }, "start": { "line": 142, "column": 12 } }, "61": { "end": { "line": 144, "column": 8 }, "start": { "line": 144, "column": 8 } }, "62": { "end": { "line": 146, "column": 8 }, "start": { "line": 146, "column": 8 } }, "63": { "end": { "line": 147, "column": 8 }, "start": { "line": 147, "column": 8 } }, "64": { "end": { "line": 149, "column": 8 }, "start": { "line": 149, "column": 8 } }, "65": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "66": { "end": { "line": 158, "column": 9 }, "start": { "line": 156, "column": 8 } }, "67": { "end": { "line": 157, "column": 12 }, "start": { "line": 157, "column": 12 } }, "68": { "end": { "line": 159, "column": 8 }, "start": { "line": 159, "column": 8 } }, "69": { "end": { "line": 161, "column": 8 }, "start": { "line": 161, "column": 8 } }, "70": { "end": { "line": 163, "column": 8 }, "start": { "line": 163, "column": 8 } }, "71": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "72": { "end": { "line": 173, "column": 9 }, "start": { "line": 171, "column": 8 } }, "73": { "end": { "line": 172, "column": 12 }, "start": { "line": 172, "column": 12 } }, "74": { "end": { "line": 174, "column": 8 }, "start": { "line": 174, "column": 8 } }, "75": { "end": { "line": 181, "column": 9 }, "start": { "line": 175, "column": 8 } }, "76": { "end": { "line": 176, "column": 12 }, "start": { "line": 176, "column": 12 } }, "77": { "end": { "line": 177, "column": 12 }, "start": { "line": 177, "column": 12 } }, "78": { "end": { "line": 179, "column": 12 }, "start": { "line": 179, "column": 12 } }, "79": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "80": { "end": { "line": 187, "column": 14 }, "start": { "line": 187, "column": 14 } }, "81": { "end": { "line": 190, "column": 9 }, "start": { "line": 188, "column": 8 } }, "82": { "end": { "line": 189, "column": 12 }, "start": { "line": 189, "column": 12 } }, "83": { "end": { "line": 191, "column": 8 }, "start": { "line": 191, "column": 8 } }, "84": { "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 8 } }, "85": { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 8 } }, "86": { "end": { "line": 194, "column": 46 }, "start": { "line": 194, "column": 46 } }, "87": { "end": { "line": 196, "column": 8 }, "start": { "line": 196, "column": 8 } }, "88": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 18, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 18, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 20, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 47, "type": "binary-expr", "locations": [{ "end": { "line": 28, "column": 23 }, "start": { "line": 28, "column": 23 } }, { "end": { "line": 28, "column": 8 }, "start": { "line": 28, "column": 36 } }] }, "11": { "line": 53, "type": "binary-expr", "locations": [{ "end": { "line": 34, "column": 31 }, "start": { "line": 34, "column": 31 } }, { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 53 } }] }, "12": { "line": 59, "type": "binary-expr", "locations": [{ "end": { "line": 40, "column": 33 }, "start": { "line": 40, "column": 33 } }, { "end": { "line": 40, "column": 8 }, "start": { "line": 40, "column": 58 } }] }, "13": { "line": 66, "type": "binary-expr", "locations": [{ "end": { "line": 47, "column": 26 }, "start": { "line": 47, "column": 26 } }, { "end": { "line": 47, "column": 8 }, "start": { "line": 48, "column": 12 } }] }, "14": { "line": 72, "type": "binary-expr", "locations": [{ "end": { "line": 54, "column": 24 }, "start": { "line": 54, "column": 24 } }, { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 39 } }] }, "15": { "line": 84, "type": "cond-expr", "locations": [{ "end": { "line": 66, "column": 28 }, "start": { "line": 67, "column": 12 } }, { "end": { "line": 66, "column": 8 }, "start": { "line": 66, "column": 28 } }] }, "16": { "line": 90, "type": "cond-expr", "locations": [{ "end": { "line": 73, "column": 27 }, "start": { "line": 74, "column": 12 } }, { "end": { "line": 73, "column": 8 }, "start": { "line": 73, "column": 27 } }] }, "17": { "line": 96, "type": "cond-expr", "locations": [{ "end": { "line": 80, "column": 28 }, "start": { "line": 81, "column": 12 } }, { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 28 } }] }, "18": { "line": 102, "type": "cond-expr", "locations": [{ "end": { "line": 87, "column": 27 }, "start": { "line": 88, "column": 12 } }, { "end": { "line": 87, "column": 8 }, "start": { "line": 87, "column": 27 } }] }, "19": { "line": 114, "type": "if", "locations": [{ "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }, { "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }] }, "20": { "line": 118, "type": "binary-expr", "locations": [{ "end": { "line": 99, "column": 21 }, "start": { "line": 99, "column": 21 } }, { "end": { "line": 99, "column": 21 }, "start": { "line": 99, "column": 45 } }, { "end": { "line": 99, "column": 8 }, "start": { "line": 100, "column": 12 } }] }, "21": { "line": 125, "type": "if", "locations": [{ "end": { "line": 107, "column": 8 }, "start": { "line": 107, "column": 8 } }, { "end": { "line": 107, "column": 8 }, "start": { "line": 107, "column": 8 } }] }, "22": { "line": 152, "type": "if", "locations": [{ "end": { "line": 130, "column": 8 }, "start": { "line": 130, "column": 8 } }, { "end": { "line": 130, "column": 8 }, "start": { "line": 130, "column": 8 } }] }, "23": { "line": 165, "type": "if", "locations": [{ "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 8 } }, { "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 8 } }] }, "24": { "line": 165, "type": "binary-expr", "locations": [{ "end": { "line": 141, "column": 12 }, "start": { "line": 141, "column": 12 } }, { "end": { "line": 141, "column": 8 }, "start": { "line": 141, "column": 33 } }] }, "25": { "line": 182, "type": "if", "locations": [{ "end": { "line": 156, "column": 8 }, "start": { "line": 156, "column": 8 } }, { "end": { "line": 156, "column": 8 }, "start": { "line": 156, "column": 8 } }] }, "26": { "line": 182, "type": "binary-expr", "locations": [{ "end": { "line": 156, "column": 12 }, "start": { "line": 156, "column": 12 } }, { "end": { "line": 156, "column": 8 }, "start": { "line": 156, "column": 33 } }] }, "27": { "line": 199, "type": "if", "locations": [{ "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }] }, "28": { "line": 199, "type": "binary-expr", "locations": [{ "end": { "line": 171, "column": 12 }, "start": { "line": 171, "column": 12 } }, { "end": { "line": 171, "column": 12 }, "start": { "line": 171, "column": 33 } }, { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 52 } }] }, "29": { "line": 203, "type": "if", "locations": [{ "end": { "line": 175, "column": 8 }, "start": { "line": 175, "column": 8 } }, { "end": { "line": 175, "column": 8 }, "start": { "line": 175, "column": 8 } }] }, "30": { "line": 207, "type": "cond-expr", "locations": [{ "end": { "line": 179, "column": 37 }, "start": { "line": 179, "column": 52 } }, { "end": { "line": 179, "column": 36 }, "start": { "line": 180, "column": 16 } }] }, "31": { "line": 219, "type": "if", "locations": [{ "end": { "line": 188, "column": 8 }, "start": { "line": 188, "column": 8 } }, { "end": { "line": 188, "column": 8 }, "start": { "line": 188, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {createElm, elm, removeElm} from '../dom';", "import {isEmpty, isFn, EMPTY_FN} from '../types';", "import {NONE} from '../const';", "", "/**", " * UI when filtering yields no matches", " * @export", " * @class NoResults", " * @extends {Feature}", " */", "export class NoResults extends Feature {", "", "    /**", "     * Creates an instance of NoResults", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'noResults');", "", "        //configuration object", "        let f = this.config.no_results_message;", "", "        /**", "         * Text (accepts HTML)", "         * @type {String}", "         */", "        this.content = f.content || 'No results';", "", "        /**", "         * Custom container DOM element", "         * @type {DOMElement}", "         */", "        this.customContainer = f.custom_container || null;", "", "        /**", "         * ID of custom container element", "         * @type {String}", "         */", "        this.customContainerId = f.custom_container_id || null;", "", "        /**", "         * Indicates if UI is contained in a external element", "         * @type {Boolean}", "         * @private", "         */", "        this.isExternal = !isEmpty(this.customContainer) ||", "            !isEmpty(this.customContainerId);", "", "        /**", "         * Css class assigned to container element", "         * @type {String}", "         */", "        this.cssClass = f.css_class || 'no-results';", "", "        /**", "         * Stores container DOM element", "         * @type {DOMElement}", "         */", "        this.cont = null;", "", "        /**", "         * Callback fired before the message is displayed", "         * @type {Function}", "         */", "        this.onBeforeShow = isFn(f.on_before_show_msg) ?", "            f.on_before_show_msg : EMPTY_FN;", "", "        /**", "         * Callback fired after the message is displayed", "         * @type {Function}", "         */", "        this.onAfterShow = isFn(f.on_after_show_msg) ?", "            f.on_after_show_msg : EMPTY_FN;", "", "        /**", "         * Callback fired before the message is hidden", "         * @type {Function}", "         */", "        this.onBeforeHide = isFn(f.on_before_hide_msg) ?", "            f.on_before_hide_msg : EMPTY_FN;", "", "        /**", "         * Callback fired after the message is hidden", "         * @type {Function}", "         */", "        this.onAfterHide = isFn(f.on_after_hide_msg) ?", "            f.on_after_hide_msg : EMPTY_FN;", "    }", "", "    /**", "     * Initializes NoResults instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "        let tf = this.tf;", "        let target = this.customContainer || elm(this.customContainerId) ||", "            tf.tbl;", "", "        //container", "        let cont = createElm('div');", "        cont.className = this.cssClass;", "        cont.innerHTML = this.content;", "", "        if (this.isExternal) {", "            target.appendChild(cont);", "        } else {", "            target.parentNode.insertBefore(cont, target.nextSibling);", "        }", "", "        this.cont = cont;", "", "        // subscribe to after-filtering event", "        this.emitter.on(['after-filtering'], () => this.toggle());", "", "        /**", "         * @inherited", "         */", "        this.initialized = true;", "", "        this.hide();", "    }", "", "    /**", "     * Toggle no results message", "     */", "    toggle() {", "        if (this.tf.getValidRowsNb() > 0) {", "            this.hide();", "        } else {", "            this.show();", "        }", "    }", "", "    /**", "     * Show no results message", "     */", "    show() {", "        if (!this.initialized || !this.isEnabled()) {", "            return;", "        }", "        this.onBeforeShow(this.tf, this);", "", "        this.setWidth();", "        this.cont.style.display = 'block';", "", "        this.onAfterShow(this.tf, this);", "    }", "", "    /**", "     * Hide no results message", "     */", "    hide() {", "        if (!this.initialized || !this.isEnabled()) {", "            return;", "        }", "        this.onBeforeHide(this.tf, this);", "", "        this.cont.style.display = NONE;", "", "        this.onAfterHide(this.tf, this);", "    }", "", "    /**", "     * Sets no results container width", "     * @private", "     */", "    setWidth() {", "        if (!this.initialized || this.isExternal || !this.isEnabled()) {", "            return;", "        }", "        let tf = this.tf;", "        if (tf.gridLayout) {", "            let gridLayout = tf.feature('gridLayout');", "            this.cont.style.width = gridLayout.tblCont.clientWidth + 'px';", "        } else {", "            this.cont.style.width = (tf.tbl.tHead ? tf.tbl.tHead.clientWidth :", "                tf.tbl.tBodies[0].clientWidth) + 'px';", "        }", "    }", "", "    /**", "     * Remove feature", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "        removeElm(this.cont);", "        this.cont = null;", "        // unsubscribe to after-filtering event", "        this.emitter.off(['after-filtering'], () => this.toggle());", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_W9dTvdCTZ_DGEjG9K$n$3Q = __cov_W9dTvdCTZ_DGEjG9K$n$3Q['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\noResults.js'];
	__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['2']++;exports.NoResults = undefined;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['3']++;var _feature = __webpack_require__(10);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['4']++;var _dom = __webpack_require__(3);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['5']++;var _types = __webpack_require__(4);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['6']++;var _const = __webpack_require__(11);function _classCallCheck(instance, Constructor) {
	   __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['1']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['8']++;if (!(instance instanceof Constructor)) {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['1'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['9']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['2']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['11']++;if (!self) {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['2'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['12']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['2'][1]++;
	   }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['13']++;return (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['4'][0]++, call) && ((__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['4'][2]++, typeof call === 'function')) ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['3'][0]++, call) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['3']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['15']++;if ((__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['6'][0]++, typeof superClass !== 'function') && (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['6'][1]++, superClass !== null)) {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['5'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['16']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['5'][1]++;
	   }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['17']++;subClass.prototype = Object.create((__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['7'][0]++, superClass) && (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['18']++;if (superClass) {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['8'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['19']++;Object.setPrototypeOf ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['8'][1]++;
	   }
	}__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['20']++;var NoResults = exports.NoResults = function (_Feature) {
	   __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['4']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['21']++;_inherits(NoResults, _Feature);function NoResults(tf) {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['5']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['23']++;_classCallCheck(this, NoResults);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['24']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'noResults'));__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['25']++;var f = _this.config.no_results_message;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['26']++;_this.content = (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['10'][0]++, f.content) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['10'][1]++, 'No results');__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['27']++;_this.customContainer = (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['11'][0]++, f.custom_container) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['11'][1]++, null);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['28']++;_this.customContainerId = (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['12'][0]++, f.custom_container_id) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['12'][1]++, null);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['29']++;_this.isExternal = (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['13'][0]++, !(0, _types.isEmpty)(_this.customContainer)) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['13'][1]++, !(0, _types.isEmpty)(_this.customContainerId));__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['30']++;_this.cssClass = (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['14'][0]++, f.css_class) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['14'][1]++, 'no-results');__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['31']++;_this.cont = null;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['32']++;_this.onBeforeShow = (0, _types.isFn)(f.on_before_show_msg) ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['15'][0]++, f.on_before_show_msg) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['15'][1]++, _types.EMPTY_FN);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['33']++;_this.onAfterShow = (0, _types.isFn)(f.on_after_show_msg) ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['16'][0]++, f.on_after_show_msg) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['16'][1]++, _types.EMPTY_FN);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['34']++;_this.onBeforeHide = (0, _types.isFn)(f.on_before_hide_msg) ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['17'][0]++, f.on_before_hide_msg) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['17'][1]++, _types.EMPTY_FN);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['35']++;_this.onAfterHide = (0, _types.isFn)(f.on_after_hide_msg) ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['18'][0]++, f.on_after_hide_msg) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['18'][1]++, _types.EMPTY_FN);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['36']++;return _this;
	   }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['37']++;NoResults.prototype.init = function init() {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['6']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['38']++;var _this2 = this;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['39']++;if (this.initialized) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['19'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['40']++;return;
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['19'][1]++;
	      }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['41']++;var tf = this.tf;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['42']++;var target = (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['20'][0]++, this.customContainer) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['20'][1]++, (0, _dom.elm)(this.customContainerId)) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['20'][2]++, tf.tbl);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['43']++;var cont = (0, _dom.createElm)('div');__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['44']++;cont.className = this.cssClass;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['45']++;cont.innerHTML = this.content;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['46']++;if (this.isExternal) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['21'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['47']++;target.appendChild(cont);
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['21'][1]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['48']++;target.parentNode.insertBefore(cont, target.nextSibling);
	      }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['49']++;this.cont = cont;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['50']++;this.emitter.on(['after-filtering'], function () {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['7']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['51']++;return _this2.toggle();
	      });__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['52']++;this.initialized = true;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['53']++;this.hide();
	   };__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['54']++;NoResults.prototype.toggle = function toggle() {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['8']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['55']++;if (this.tf.getValidRowsNb() > 0) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['22'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['56']++;this.hide();
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['22'][1]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['57']++;this.show();
	      }
	   };__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['58']++;NoResults.prototype.show = function show() {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['9']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['59']++;if ((__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['24'][0]++, !this.initialized) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['24'][1]++, !this.isEnabled())) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['23'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['60']++;return;
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['23'][1]++;
	      }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['61']++;this.onBeforeShow(this.tf, this);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['62']++;this.setWidth();__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['63']++;this.cont.style.display = 'block';__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['64']++;this.onAfterShow(this.tf, this);
	   };__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['65']++;NoResults.prototype.hide = function hide() {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['10']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['66']++;if ((__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['26'][0]++, !this.initialized) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['26'][1]++, !this.isEnabled())) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['25'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['67']++;return;
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['25'][1]++;
	      }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['68']++;this.onBeforeHide(this.tf, this);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['69']++;this.cont.style.display = _const.NONE;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['70']++;this.onAfterHide(this.tf, this);
	   };__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['71']++;NoResults.prototype.setWidth = function setWidth() {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['11']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['72']++;if ((__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['28'][0]++, !this.initialized) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['28'][1]++, this.isExternal) || (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['28'][2]++, !this.isEnabled())) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['27'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['73']++;return;
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['27'][1]++;
	      }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['74']++;var tf = this.tf;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['75']++;if (tf.gridLayout) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['29'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['76']++;var gridLayout = tf.feature('gridLayout');__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['77']++;this.cont.style.width = gridLayout.tblCont.clientWidth + 'px';
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['29'][1]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['78']++;this.cont.style.width = (tf.tbl.tHead ? (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['30'][0]++, tf.tbl.tHead.clientWidth) : (__cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['30'][1]++, tf.tbl.tBodies[0].clientWidth)) + 'px';
	      }
	   };__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['79']++;NoResults.prototype.destroy = function destroy() {
	      __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['12']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['80']++;var _this3 = this;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['81']++;if (!this.initialized) {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['31'][0]++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['82']++;return;
	      } else {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.b['31'][1]++;
	      }__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['83']++;(0, _dom.removeElm)(this.cont);__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['84']++;this.cont = null;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['85']++;this.emitter.off(['after-filtering'], function () {
	         __cov_W9dTvdCTZ_DGEjG9K$n$3Q.f['13']++;__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['86']++;return _this3.toggle();
	      });__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['87']++;this.initialized = false;
	   };__cov_W9dTvdCTZ_DGEjG9K$n$3Q.s['88']++;return NoResults;
	}(_feature.Feature);

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_W08bsqGMOkpSURWN5P26Eg = Function('return this')();
	if (!__cov_W08bsqGMOkpSURWN5P26Eg.__coverage__) {
	   __cov_W08bsqGMOkpSURWN5P26Eg.__coverage__ = {};
	}
	__cov_W08bsqGMOkpSURWN5P26Eg = __cov_W08bsqGMOkpSURWN5P26Eg.__coverage__;
	if (!__cov_W08bsqGMOkpSURWN5P26Eg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\state.js']) {
	   __cov_W08bsqGMOkpSURWN5P26Eg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\state.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\state.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 1, "9": 0, "10": 0, "11": 1, "12": 0, "13": 0, "14": 0, "15": 1, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 1, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0, "70": 0, "71": 0, "72": 0, "73": 0, "74": 0, "75": 0, "76": 0, "77": 0, "78": 0, "79": 0, "80": 0, "81": 0, "82": 0, "83": 0, "84": 0, "85": 0, "86": 0, "87": 0, "88": 0, "89": 0, "90": 0, "91": 0, "92": 0, "93": 0, "94": 0, "95": 0, "96": 0, "97": 0, "98": 0, "99": 0, "100": 0, "101": 0, "102": 0, "103": 0, "104": 0, "105": 0, "106": 0, "107": 0, "108": 0, "109": 0, "110": 0, "111": 0, "112": 0, "113": 0, "114": 0, "115": 0, "116": 0, "117": 0, "118": 0, "119": 0, "120": 0, "121": 0, "122": 0, "123": 0, "124": 0, "125": 0, "126": 0, "127": 0, "128": 0, "129": 0, "130": 0, "131": 0, "132": 0, "133": 0, "134": 0, "135": 0, "136": 0, "137": 0, "138": 0, "139": 0, "140": 0, "141": 0, "142": 0, "143": 0, "144": 0, "145": 0, "146": 0, "147": 0, "148": 0, "149": 0, "150": 0, "151": 0, "152": 0, "153": 0, "154": 0, "155": 0, "156": 0, "157": 0, "158": 0, "159": 0, "160": 0, "161": 0, "162": 0, "163": 0, "164": 0, "165": 0, "166": 0, "167": 0, "168": 0, "169": 0, "170": 0, "171": 0, "172": 0, "173": 0, "174": 0, "175": 0, "176": 0, "177": 0, "178": 0, "179": 0, "180": 0, "181": 0, "182": 0, "183": 0, "184": 0, "185": 0, "186": 0, "187": 0, "188": 0, "189": 0, "190": 0, "191": 0, "192": 0, "193": 0, "194": 0, "195": 0, "196": 0, "197": 0, "198": 0, "199": 0, "200": 0, "201": 0, "202": 0, "203": 0, "204": 0, "205": 0, "206": 0, "207": 0, "208": 0, "209": 0, "210": 0, "211": 0, "212": 0, "213": 0, "214": 0, "215": 0, "216": 0, "217": 0, "218": 0, "219": 0, "220": 0, "221": 0, "222": 0, "223": 0, "224": 0, "225": 0, "226": 0, "227": 0, "228": 0, "229": 0, "230": 0, "231": 0, "232": 0, "233": 0, "234": 0, "235": 0, "236": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0], "20": [0, 0], "21": [0, 0], "22": [0, 0], "23": [0, 0], "24": [0, 0], "25": [0, 0], "26": [0, 0], "27": [0, 0], "28": [0, 0], "29": [0, 0], "30": [0, 0], "31": [0, 0], "32": [0, 0], "33": [0, 0], "34": [0, 0], "35": [0, 0], "36": [0, 0], "37": [0, 0], "38": [0, 0], "39": [0, 0], "40": [0, 0], "41": [0, 0], "42": [0, 0], "43": [0, 0], "44": [0, 0], "45": [0, 0], "46": [0, 0], "47": [0, 0], "48": [0, 0], "49": [0, 0], "50": [0, 0], "51": [0, 0], "52": [0, 0], "53": [0, 0], "54": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0 }, "fnMap": { "1": { "line": 18, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 20, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 22, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 31, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 38, "name": "State", "loc": { "start": { "line": 20, "column": 4 }, "end": { "line": 20, "column": 20 } } }, "6": { "line": 203, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 210, "name": "(anonymous_7)", "loc": { "start": { "line": 189, "column": 45 }, "end": { "line": 189, "column": 45 } } }, "8": { "line": 213, "name": "(anonymous_8)", "loc": { "start": { "line": 191, "column": 12 }, "end": { "line": 191, "column": 12 } } }, "9": { "line": 216, "name": "(anonymous_9)", "loc": { "start": { "line": 193, "column": 12 }, "end": { "line": 193, "column": 12 } } }, "10": { "line": 219, "name": "(anonymous_10)", "loc": { "start": { "line": 195, "column": 12 }, "end": { "line": 195, "column": 12 } } }, "11": { "line": 222, "name": "(anonymous_11)", "loc": { "start": { "line": 196, "column": 46 }, "end": { "line": 196, "column": 46 } } }, "12": { "line": 225, "name": "(anonymous_12)", "loc": { "start": { "line": 198, "column": 12 }, "end": { "line": 198, "column": 12 } } }, "13": { "line": 228, "name": "(anonymous_13)", "loc": { "start": { "line": 199, "column": 59 }, "end": { "line": 199, "column": 59 } } }, "14": { "line": 231, "name": "(anonymous_14)", "loc": { "start": { "line": 202, "column": 12 }, "end": { "line": 202, "column": 12 } } }, "15": { "line": 234, "name": "(anonymous_15)", "loc": { "start": { "line": 204, "column": 12 }, "end": { "line": 204, "column": 12 } } }, "16": { "line": 258, "name": "update", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "17": { "line": 270, "name": "(anonymous_17)", "loc": { "start": { "line": 235, "column": 33 }, "end": { "line": 235, "column": 47 } } }, "18": { "line": 303, "name": "(anonymous_18)", "loc": { "start": { "line": 268, "column": 43 }, "end": { "line": 268, "column": 52 } } }, "19": { "line": 318, "name": "(anonymous_19)", "loc": { "start": { "line": 283, "column": 43 }, "end": { "line": 283, "column": 52 } } }, "20": { "line": 324, "name": "(anonymous_20)", "loc": { "start": { "line": 289, "column": 40 }, "end": { "line": 289, "column": 52 } } }, "21": { "line": 350, "name": "updatePage", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "22": { "line": 362, "name": "updatePageLength", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "23": { "line": 375, "name": "updateSort", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "24": { "line": 390, "name": "updateColsVisibility", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "25": { "line": 402, "name": "updateFiltersVisibility", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "26": { "line": 414, "name": "override", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "27": { "line": 423, "name": "sync", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "28": { "line": 451, "name": "overrideAndSync", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "29": { "line": 470, "name": "_syncFilters", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "30": { "line": 479, "name": "(anonymous_30)", "loc": { "start": { "line": 424, "column": 35 }, "end": { "line": 424, "column": 44 } } }, "31": { "line": 497, "name": "_syncSort", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "32": { "line": 506, "name": "(anonymous_32)", "loc": { "start": { "line": 447, "column": 35 }, "end": { "line": 447, "column": 44 } } }, "33": { "line": 524, "name": "_syncColsVisibility", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "34": { "line": 534, "name": "(anonymous_34)", "loc": { "start": { "line": 471, "column": 35 }, "end": { "line": 471, "column": 44 } } }, "35": { "line": 543, "name": "(anonymous_35)", "loc": { "start": { "line": 480, "column": 27 }, "end": { "line": 480, "column": 39 } } }, "36": { "line": 555, "name": "_syncFiltersVisibility", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "37": { "line": 572, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "38": { "line": 581, "name": "(anonymous_38)", "loc": { "start": { "line": 512, "column": 46 }, "end": { "line": 512, "column": 46 } } }, "39": { "line": 584, "name": "(anonymous_39)", "loc": { "start": { "line": 514, "column": 12 }, "end": { "line": 514, "column": 12 } } }, "40": { "line": 587, "name": "(anonymous_40)", "loc": { "start": { "line": 516, "column": 12 }, "end": { "line": 516, "column": 12 } } }, "41": { "line": 590, "name": "(anonymous_41)", "loc": { "start": { "line": 518, "column": 12 }, "end": { "line": 518, "column": 12 } } }, "42": { "line": 593, "name": "(anonymous_42)", "loc": { "start": { "line": 519, "column": 47 }, "end": { "line": 519, "column": 47 } } }, "43": { "line": 596, "name": "(anonymous_43)", "loc": { "start": { "line": 521, "column": 12 }, "end": { "line": 521, "column": 12 } } }, "44": { "line": 599, "name": "(anonymous_44)", "loc": { "start": { "line": 522, "column": 60 }, "end": { "line": 522, "column": 60 } } }, "45": { "line": 602, "name": "(anonymous_45)", "loc": { "start": { "line": 525, "column": 12 }, "end": { "line": 525, "column": 12 } } }, "46": { "line": 605, "name": "(anonymous_46)", "loc": { "start": { "line": 527, "column": 12 }, "end": { "line": 527, "column": 12 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "end": { "line": 179, "column": 5 }, "start": { "line": 20, "column": 4 } }, "24": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "25": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "26": { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 8 } }, "27": { "end": { "line": 29, "column": 8 }, "start": { "line": 29, "column": 8 } }, "28": { "end": { "line": 36, "column": 8 }, "start": { "line": 36, "column": 8 } }, "29": { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 8 } }, "30": { "end": { "line": 50, "column": 8 }, "start": { "line": 50, "column": 8 } }, "31": { "end": { "line": 56, "column": 8 }, "start": { "line": 56, "column": 8 } }, "32": { "end": { "line": 62, "column": 8 }, "start": { "line": 62, "column": 8 } }, "33": { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 8 } }, "34": { "end": { "line": 74, "column": 8 }, "start": { "line": 74, "column": 8 } }, "35": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "36": { "end": { "line": 86, "column": 8 }, "start": { "line": 86, "column": 8 } }, "37": { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }, "38": { "end": { "line": 101, "column": 8 }, "start": { "line": 101, "column": 8 } }, "39": { "end": { "line": 108, "column": 8 }, "start": { "line": 108, "column": 8 } }, "40": { "end": { "line": 115, "column": 8 }, "start": { "line": 115, "column": 8 } }, "41": { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }, "42": { "end": { "line": 129, "column": 8 }, "start": { "line": 129, "column": 8 } }, "43": { "end": { "line": 136, "column": 8 }, "start": { "line": 136, "column": 8 } }, "44": { "end": { "line": 143, "column": 8 }, "start": { "line": 143, "column": 8 } }, "45": { "end": { "line": 150, "column": 8 }, "start": { "line": 150, "column": 8 } }, "46": { "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }, "47": { "end": { "line": 164, "column": 8 }, "start": { "line": 164, "column": 8 } }, "48": { "end": { "line": 171, "column": 8 }, "start": { "line": 171, "column": 8 } }, "49": { "end": { "line": 178, "column": 8 }, "start": { "line": 178, "column": 8 } }, "50": { "end": { "line": 20, "column": 20 }, "start": { "line": 20, "column": 20 } }, "51": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "52": { "end": { "line": 184, "column": 11 }, "start": { "line": 184, "column": 11 } }, "53": { "end": { "line": 187, "column": 9 }, "start": { "line": 185, "column": 8 } }, "54": { "end": { "line": 186, "column": 12 }, "start": { "line": 186, "column": 12 } }, "55": { "end": { "line": 189, "column": 8 }, "start": { "line": 189, "column": 8 } }, "56": { "end": { "line": 189, "column": 45 }, "start": { "line": 189, "column": 45 } }, "57": { "end": { "line": 190, "column": 8 }, "start": { "line": 190, "column": 8 } }, "58": { "end": { "line": 191, "column": 12 }, "start": { "line": 191, "column": 12 } }, "59": { "end": { "line": 192, "column": 8 }, "start": { "line": 192, "column": 8 } }, "60": { "end": { "line": 193, "column": 12 }, "start": { "line": 193, "column": 12 } }, "61": { "end": { "line": 194, "column": 8 }, "start": { "line": 194, "column": 8 } }, "62": { "end": { "line": 195, "column": 12 }, "start": { "line": 195, "column": 12 } }, "63": { "end": { "line": 196, "column": 8 }, "start": { "line": 196, "column": 8 } }, "64": { "end": { "line": 196, "column": 46 }, "start": { "line": 196, "column": 46 } }, "65": { "end": { "line": 197, "column": 8 }, "start": { "line": 197, "column": 8 } }, "66": { "end": { "line": 198, "column": 12 }, "start": { "line": 198, "column": 12 } }, "67": { "end": { "line": 199, "column": 8 }, "start": { "line": 199, "column": 8 } }, "68": { "end": { "line": 199, "column": 59 }, "start": { "line": 199, "column": 59 } }, "69": { "end": { "line": 201, "column": 8 }, "start": { "line": 201, "column": 8 } }, "70": { "end": { "line": 202, "column": 12 }, "start": { "line": 202, "column": 12 } }, "71": { "end": { "line": 203, "column": 8 }, "start": { "line": 203, "column": 8 } }, "72": { "end": { "line": 204, "column": 12 }, "start": { "line": 204, "column": 12 } }, "73": { "end": { "line": 209, "column": 9 }, "start": { "line": 206, "column": 8 } }, "74": { "end": { "line": 207, "column": 12 }, "start": { "line": 207, "column": 12 } }, "75": { "end": { "line": 208, "column": 12 }, "start": { "line": 208, "column": 12 } }, "76": { "end": { "line": 213, "column": 9 }, "start": { "line": 210, "column": 8 } }, "77": { "end": { "line": 211, "column": 12 }, "start": { "line": 211, "column": 12 } }, "78": { "end": { "line": 212, "column": 12 }, "start": { "line": 212, "column": 12 } }, "79": { "end": { "line": 218, "column": 8 }, "start": { "line": 218, "column": 8 } }, "80": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "81": { "end": { "line": 225, "column": 13 }, "start": { "line": 225, "column": 13 } }, "82": { "end": { "line": 228, "column": 9 }, "start": { "line": 226, "column": 8 } }, "83": { "end": { "line": 227, "column": 12 }, "start": { "line": 227, "column": 12 } }, "84": { "end": { "line": 229, "column": 8 }, "start": { "line": 229, "column": 8 } }, "85": { "end": { "line": 230, "column": 8 }, "start": { "line": 230, "column": 8 } }, "86": { "end": { "line": 247, "column": 9 }, "start": { "line": 232, "column": 8 } }, "87": { "end": { "line": 233, "column": 12 }, "start": { "line": 233, "column": 12 } }, "88": { "end": { "line": 235, "column": 12 }, "start": { "line": 235, "column": 12 } }, "89": { "end": { "line": 236, "column": 16 }, "start": { "line": 236, "column": 16 } }, "90": { "end": { "line": 245, "column": 17 }, "start": { "line": 238, "column": 16 } }, "91": { "end": { "line": 241, "column": 21 }, "start": { "line": 239, "column": 20 } }, "92": { "end": { "line": 240, "column": 24 }, "start": { "line": 240, "column": 24 } }, "93": { "end": { "line": 243, "column": 20 }, "start": { "line": 243, "column": 20 } }, "94": { "end": { "line": 244, "column": 20 }, "start": { "line": 244, "column": 20 } }, "95": { "end": { "line": 255, "column": 9 }, "start": { "line": 249, "column": 8 } }, "96": { "end": { "line": 254, "column": 13 }, "start": { "line": 250, "column": 12 } }, "97": { "end": { "line": 251, "column": 16 }, "start": { "line": 251, "column": 16 } }, "98": { "end": { "line": 253, "column": 16 }, "start": { "line": 253, "column": 16 } }, "99": { "end": { "line": 263, "column": 9 }, "start": { "line": 257, "column": 8 } }, "100": { "end": { "line": 262, "column": 13 }, "start": { "line": 258, "column": 12 } }, "101": { "end": { "line": 259, "column": 16 }, "start": { "line": 259, "column": 16 } }, "102": { "end": { "line": 261, "column": 16 }, "start": { "line": 261, "column": 16 } }, "103": { "end": { "line": 278, "column": 9 }, "start": { "line": 265, "column": 8 } }, "104": { "end": { "line": 277, "column": 13 }, "start": { "line": 266, "column": 12 } }, "105": { "end": { "line": 268, "column": 16 }, "start": { "line": 268, "column": 16 } }, "106": { "end": { "line": 271, "column": 21 }, "start": { "line": 269, "column": 20 } }, "107": { "end": { "line": 270, "column": 24 }, "start": { "line": 270, "column": 24 } }, "108": { "end": { "line": 274, "column": 16 }, "start": { "line": 274, "column": 16 } }, "109": { "end": { "line": 275, "column": 16 }, "start": { "line": 275, "column": 16 } }, "110": { "end": { "line": 276, "column": 16 }, "start": { "line": 276, "column": 16 } }, "111": { "end": { "line": 295, "column": 9 }, "start": { "line": 280, "column": 8 } }, "112": { "end": { "line": 294, "column": 13 }, "start": { "line": 281, "column": 12 } }, "113": { "end": { "line": 283, "column": 16 }, "start": { "line": 283, "column": 16 } }, "114": { "end": { "line": 286, "column": 21 }, "start": { "line": 284, "column": 20 } }, "115": { "end": { "line": 285, "column": 24 }, "start": { "line": 285, "column": 24 } }, "116": { "end": { "line": 289, "column": 16 }, "start": { "line": 289, "column": 16 } }, "117": { "end": { "line": 290, "column": 20 }, "start": { "line": 290, "column": 20 } }, "118": { "end": { "line": 291, "column": 20 }, "start": { "line": 291, "column": 20 } }, "119": { "end": { "line": 292, "column": 20 }, "start": { "line": 292, "column": 20 } }, "120": { "end": { "line": 303, "column": 9 }, "start": { "line": 297, "column": 8 } }, "121": { "end": { "line": 302, "column": 13 }, "start": { "line": 298, "column": 12 } }, "122": { "end": { "line": 299, "column": 16 }, "start": { "line": 299, "column": 16 } }, "123": { "end": { "line": 301, "column": 16 }, "start": { "line": 301, "column": 16 } }, "124": { "end": { "line": 305, "column": 8 }, "start": { "line": 305, "column": 8 } }, "125": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "126": { "end": { "line": 314, "column": 8 }, "start": { "line": 314, "column": 8 } }, "127": { "end": { "line": 315, "column": 8 }, "start": { "line": 315, "column": 8 } }, "128": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "129": { "end": { "line": 324, "column": 8 }, "start": { "line": 324, "column": 8 } }, "130": { "end": { "line": 325, "column": 8 }, "start": { "line": 325, "column": 8 } }, "131": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "132": { "end": { "line": 335, "column": 8 }, "start": { "line": 335, "column": 8 } }, "133": { "end": { "line": 339, "column": 8 }, "start": { "line": 339, "column": 8 } }, "134": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "135": { "end": { "line": 348, "column": 8 }, "start": { "line": 348, "column": 8 } }, "136": { "end": { "line": 349, "column": 8 }, "start": { "line": 349, "column": 8 } }, "137": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "138": { "end": { "line": 358, "column": 8 }, "start": { "line": 358, "column": 8 } }, "139": { "end": { "line": 359, "column": 8 }, "start": { "line": 359, "column": 8 } }, "140": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "141": { "end": { "line": 368, "column": 8 }, "start": { "line": 368, "column": 8 } }, "142": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "143": { "end": { "line": 375, "column": 8 }, "start": { "line": 375, "column": 8 } }, "144": { "end": { "line": 376, "column": 8 }, "start": { "line": 376, "column": 8 } }, "145": { "end": { "line": 378, "column": 8 }, "start": { "line": 378, "column": 8 } }, "146": { "end": { "line": 383, "column": 9 }, "start": { "line": 380, "column": 8 } }, "147": { "end": { "line": 381, "column": 12 }, "start": { "line": 381, "column": 12 } }, "148": { "end": { "line": 382, "column": 12 }, "start": { "line": 382, "column": 12 } }, "149": { "end": { "line": 388, "column": 9 }, "start": { "line": 385, "column": 8 } }, "150": { "end": { "line": 386, "column": 12 }, "start": { "line": 386, "column": 12 } }, "151": { "end": { "line": 387, "column": 12 }, "start": { "line": 387, "column": 12 } }, "152": { "end": { "line": 390, "column": 8 }, "start": { "line": 390, "column": 8 } }, "153": { "end": { "line": 391, "column": 8 }, "start": { "line": 391, "column": 8 } }, "154": { "end": { "line": 392, "column": 8 }, "start": { "line": 392, "column": 8 } }, "155": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "156": { "end": { "line": 403, "column": 8 }, "start": { "line": 403, "column": 8 } }, "157": { "end": { "line": 405, "column": 8 }, "start": { "line": 405, "column": 8 } }, "158": { "end": { "line": 407, "column": 8 }, "start": { "line": 407, "column": 8 } }, "159": { "end": { "line": 409, "column": 8 }, "start": { "line": 409, "column": 8 } }, "160": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "161": { "end": { "line": 417, "column": 19 }, "start": { "line": 417, "column": 19 } }, "162": { "end": { "line": 420, "column": 9 }, "start": { "line": 418, "column": 8 } }, "163": { "end": { "line": 419, "column": 12 }, "start": { "line": 419, "column": 12 } }, "164": { "end": { "line": 421, "column": 8 }, "start": { "line": 421, "column": 8 } }, "165": { "end": { "line": 422, "column": 8 }, "start": { "line": 422, "column": 8 } }, "166": { "end": { "line": 424, "column": 8 }, "start": { "line": 424, "column": 8 } }, "167": { "end": { "line": 429, "column": 13 }, "start": { "line": 425, "column": 12 } }, "168": { "end": { "line": 426, "column": 16 }, "start": { "line": 426, "column": 16 } }, "169": { "end": { "line": 427, "column": 16 }, "start": { "line": 427, "column": 16 } }, "170": { "end": { "line": 428, "column": 16 }, "start": { "line": 428, "column": 16 } }, "171": { "end": { "line": 432, "column": 8 }, "start": { "line": 432, "column": 8 } }, "172": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "173": { "end": { "line": 440, "column": 16 }, "start": { "line": 440, "column": 16 } }, "174": { "end": { "line": 443, "column": 9 }, "start": { "line": 441, "column": 8 } }, "175": { "end": { "line": 442, "column": 12 }, "start": { "line": 442, "column": 12 } }, "176": { "end": { "line": 444, "column": 8 }, "start": { "line": 444, "column": 8 } }, "177": { "end": { "line": 445, "column": 8 }, "start": { "line": 445, "column": 8 } }, "178": { "end": { "line": 447, "column": 8 }, "start": { "line": 447, "column": 8 } }, "179": { "end": { "line": 454, "column": 13 }, "start": { "line": 448, "column": 12 } }, "180": { "end": { "line": 449, "column": 16 }, "start": { "line": 449, "column": 16 } }, "181": { "end": { "line": 453, "column": 17 }, "start": { "line": 450, "column": 16 } }, "182": { "end": { "line": 451, "column": 20 }, "start": { "line": 451, "column": 20 } }, "183": { "end": { "line": 452, "column": 20 }, "start": { "line": 452, "column": 20 } }, "184": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "185": { "end": { "line": 463, "column": 26 }, "start": { "line": 463, "column": 26 } }, "186": { "end": { "line": 466, "column": 9 }, "start": { "line": 464, "column": 8 } }, "187": { "end": { "line": 465, "column": 12 }, "start": { "line": 465, "column": 12 } }, "188": { "end": { "line": 467, "column": 8 }, "start": { "line": 467, "column": 8 } }, "189": { "end": { "line": 468, "column": 8 }, "start": { "line": 468, "column": 8 } }, "190": { "end": { "line": 469, "column": 8 }, "start": { "line": 469, "column": 8 } }, "191": { "end": { "line": 471, "column": 8 }, "start": { "line": 471, "column": 8 } }, "192": { "end": { "line": 477, "column": 13 }, "start": { "line": 472, "column": 12 } }, "193": { "end": { "line": 473, "column": 16 }, "start": { "line": 473, "column": 16 } }, "194": { "end": { "line": 476, "column": 17 }, "start": { "line": 474, "column": 16 } }, "195": { "end": { "line": 475, "column": 20 }, "start": { "line": 475, "column": 20 } }, "196": { "end": { "line": 480, "column": 8 }, "start": { "line": 480, "column": 8 } }, "197": { "end": { "line": 481, "column": 12 }, "start": { "line": 481, "column": 12 } }, "198": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "199": { "end": { "line": 493, "column": 9 }, "start": { "line": 491, "column": 8 } }, "200": { "end": { "line": 492, "column": 12 }, "start": { "line": 492, "column": 12 } }, "201": { "end": { "line": 494, "column": 8 }, "start": { "line": 494, "column": 8 } }, "202": { "end": { "line": 495, "column": 8 }, "start": { "line": 495, "column": 8 } }, "203": { "end": { "line": 496, "column": 8 }, "start": { "line": 496, "column": 8 } }, "204": { "end": { "line": 498, "column": 8 }, "start": { "line": 498, "column": 8 } }, "205": { "end": { "line": 499, "column": 8 }, "start": { "line": 499, "column": 8 } }, "206": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "207": { "end": { "line": 505, "column": 14 }, "start": { "line": 505, "column": 14 } }, "208": { "end": { "line": 508, "column": 9 }, "start": { "line": 506, "column": 8 } }, "209": { "end": { "line": 507, "column": 12 }, "start": { "line": 507, "column": 12 } }, "210": { "end": { "line": 510, "column": 8 }, "start": { "line": 510, "column": 8 } }, "211": { "end": { "line": 512, "column": 8 }, "start": { "line": 512, "column": 8 } }, "212": { "end": { "line": 512, "column": 46 }, "start": { "line": 512, "column": 46 } }, "213": { "end": { "line": 513, "column": 8 }, "start": { "line": 513, "column": 8 } }, "214": { "end": { "line": 514, "column": 12 }, "start": { "line": 514, "column": 12 } }, "215": { "end": { "line": 515, "column": 8 }, "start": { "line": 515, "column": 8 } }, "216": { "end": { "line": 516, "column": 12 }, "start": { "line": 516, "column": 12 } }, "217": { "end": { "line": 517, "column": 8 }, "start": { "line": 517, "column": 8 } }, "218": { "end": { "line": 518, "column": 12 }, "start": { "line": 518, "column": 12 } }, "219": { "end": { "line": 519, "column": 8 }, "start": { "line": 519, "column": 8 } }, "220": { "end": { "line": 519, "column": 47 }, "start": { "line": 519, "column": 47 } }, "221": { "end": { "line": 520, "column": 8 }, "start": { "line": 520, "column": 8 } }, "222": { "end": { "line": 521, "column": 12 }, "start": { "line": 521, "column": 12 } }, "223": { "end": { "line": 522, "column": 8 }, "start": { "line": 522, "column": 8 } }, "224": { "end": { "line": 522, "column": 60 }, "start": { "line": 522, "column": 60 } }, "225": { "end": { "line": 524, "column": 8 }, "start": { "line": 524, "column": 8 } }, "226": { "end": { "line": 525, "column": 12 }, "start": { "line": 525, "column": 12 } }, "227": { "end": { "line": 526, "column": 8 }, "start": { "line": 526, "column": 8 } }, "228": { "end": { "line": 527, "column": 12 }, "start": { "line": 527, "column": 12 } }, "229": { "end": { "line": 532, "column": 9 }, "start": { "line": 529, "column": 8 } }, "230": { "end": { "line": 530, "column": 12 }, "start": { "line": 530, "column": 12 } }, "231": { "end": { "line": 531, "column": 12 }, "start": { "line": 531, "column": 12 } }, "232": { "end": { "line": 537, "column": 9 }, "start": { "line": 534, "column": 8 } }, "233": { "end": { "line": 535, "column": 12 }, "start": { "line": 535, "column": 12 } }, "234": { "end": { "line": 536, "column": 12 }, "start": { "line": 536, "column": 12 } }, "235": { "end": { "line": 539, "column": 8 }, "start": { "line": 539, "column": 8 } }, "236": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 18, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 20, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 20, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 49, "type": "binary-expr", "locations": [{ "end": { "line": 29, "column": 26 }, "start": { "line": 29, "column": 26 } }, { "end": { "line": 30, "column": 13 }, "start": { "line": 30, "column": 13 } }, { "end": { "line": 29, "column": 8 }, "start": { "line": 30, "column": 35 } }] }, "11": { "line": 55, "type": "binary-expr", "locations": [{ "end": { "line": 36, "column": 34 }, "start": { "line": 36, "column": 34 } }, { "end": { "line": 36, "column": 8 }, "start": { "line": 37, "column": 12 } }] }, "12": { "line": 61, "type": "binary-expr", "locations": [{ "end": { "line": 43, "column": 28 }, "start": { "line": 43, "column": 28 } }, { "end": { "line": 43, "column": 8 }, "start": { "line": 44, "column": 12 } }] }, "13": { "line": 67, "type": "cond-expr", "locations": [{ "end": { "line": 50, "column": 30 }, "start": { "line": 50, "column": 54 } }, { "end": { "line": 50, "column": 8 }, "start": { "line": 50, "column": 62 } }] }, "14": { "line": 103, "type": "cond-expr", "locations": [{ "end": { "line": 86, "column": 30 }, "start": { "line": 87, "column": 12 } }, { "end": { "line": 86, "column": 8 }, "start": { "line": 87, "column": 48 } }] }, "15": { "line": 110, "type": "binary-expr", "locations": [{ "end": { "line": 94, "column": 29 }, "start": { "line": 94, "column": 29 } }, { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 56 } }] }, "16": { "line": 206, "type": "if", "locations": [{ "end": { "line": 185, "column": 8 }, "start": { "line": 185, "column": 8 } }, { "end": { "line": 185, "column": 8 }, "start": { "line": 185, "column": 8 } }] }, "17": { "line": 238, "type": "if", "locations": [{ "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 8 } }, { "end": { "line": 206, "column": 8 }, "start": { "line": 206, "column": 8 } }] }, "18": { "line": 242, "type": "if", "locations": [{ "end": { "line": 210, "column": 8 }, "start": { "line": 210, "column": 8 } }, { "end": { "line": 210, "column": 8 }, "start": { "line": 210, "column": 8 } }] }, "19": { "line": 261, "type": "if", "locations": [{ "end": { "line": 226, "column": 8 }, "start": { "line": 226, "column": 8 } }, { "end": { "line": 226, "column": 8 }, "start": { "line": 226, "column": 8 } }] }, "20": { "line": 267, "type": "if", "locations": [{ "end": { "line": 232, "column": 8 }, "start": { "line": 232, "column": 8 } }, { "end": { "line": 232, "column": 8 }, "start": { "line": 232, "column": 8 } }] }, "21": { "line": 273, "type": "if", "locations": [{ "end": { "line": 238, "column": 16 }, "start": { "line": 238, "column": 16 } }, { "end": { "line": 238, "column": 16 }, "start": { "line": 238, "column": 16 } }] }, "22": { "line": 273, "type": "binary-expr", "locations": [{ "end": { "line": 238, "column": 20 }, "start": { "line": 238, "column": 20 } }, { "end": { "line": 238, "column": 16 }, "start": { "line": 238, "column": 37 } }] }, "23": { "line": 274, "type": "if", "locations": [{ "end": { "line": 239, "column": 20 }, "start": { "line": 239, "column": 20 } }, { "end": { "line": 239, "column": 20 }, "start": { "line": 239, "column": 20 } }] }, "24": { "line": 278, "type": "binary-expr", "locations": [{ "end": { "line": 243, "column": 33 }, "start": { "line": 243, "column": 33 } }, { "end": { "line": 243, "column": 20 }, "start": { "line": 243, "column": 47 } }] }, "25": { "line": 284, "type": "if", "locations": [{ "end": { "line": 249, "column": 8 }, "start": { "line": 249, "column": 8 } }, { "end": { "line": 249, "column": 8 }, "start": { "line": 249, "column": 8 } }] }, "26": { "line": 285, "type": "if", "locations": [{ "end": { "line": 250, "column": 12 }, "start": { "line": 250, "column": 12 } }, { "end": { "line": 250, "column": 12 }, "start": { "line": 250, "column": 12 } }] }, "27": { "line": 292, "type": "if", "locations": [{ "end": { "line": 257, "column": 8 }, "start": { "line": 257, "column": 8 } }, { "end": { "line": 257, "column": 8 }, "start": { "line": 257, "column": 8 } }] }, "28": { "line": 293, "type": "if", "locations": [{ "end": { "line": 258, "column": 12 }, "start": { "line": 258, "column": 12 } }, { "end": { "line": 258, "column": 12 }, "start": { "line": 258, "column": 12 } }] }, "29": { "line": 300, "type": "if", "locations": [{ "end": { "line": 265, "column": 8 }, "start": { "line": 265, "column": 8 } }, { "end": { "line": 265, "column": 8 }, "start": { "line": 265, "column": 8 } }] }, "30": { "line": 301, "type": "if", "locations": [{ "end": { "line": 266, "column": 12 }, "start": { "line": 266, "column": 12 } }, { "end": { "line": 266, "column": 12 }, "start": { "line": 266, "column": 12 } }] }, "31": { "line": 304, "type": "if", "locations": [{ "end": { "line": 269, "column": 20 }, "start": { "line": 269, "column": 20 } }, { "end": { "line": 269, "column": 20 }, "start": { "line": 269, "column": 20 } }] }, "32": { "line": 304, "type": "binary-expr", "locations": [{ "end": { "line": 269, "column": 24 }, "start": { "line": 269, "column": 24 } }, { "end": { "line": 269, "column": 20 }, "start": { "line": 269, "column": 60 } }] }, "33": { "line": 310, "type": "binary-expr", "locations": [{ "end": { "line": 275, "column": 29 }, "start": { "line": 275, "column": 29 } }, { "end": { "line": 275, "column": 16 }, "start": { "line": 275, "column": 43 } }] }, "34": { "line": 315, "type": "if", "locations": [{ "end": { "line": 280, "column": 8 }, "start": { "line": 280, "column": 8 } }, { "end": { "line": 280, "column": 8 }, "start": { "line": 280, "column": 8 } }] }, "35": { "line": 316, "type": "if", "locations": [{ "end": { "line": 281, "column": 12 }, "start": { "line": 281, "column": 12 } }, { "end": { "line": 281, "column": 12 }, "start": { "line": 281, "column": 12 } }] }, "36": { "line": 319, "type": "if", "locations": [{ "end": { "line": 284, "column": 20 }, "start": { "line": 284, "column": 20 } }, { "end": { "line": 284, "column": 20 }, "start": { "line": 284, "column": 20 } }] }, "37": { "line": 319, "type": "binary-expr", "locations": [{ "end": { "line": 284, "column": 24 }, "start": { "line": 284, "column": 24 } }, { "end": { "line": 284, "column": 20 }, "start": { "line": 284, "column": 60 } }] }, "38": { "line": 326, "type": "binary-expr", "locations": [{ "end": { "line": 291, "column": 33 }, "start": { "line": 291, "column": 33 } }, { "end": { "line": 291, "column": 20 }, "start": { "line": 291, "column": 47 } }] }, "39": { "line": 332, "type": "if", "locations": [{ "end": { "line": 297, "column": 8 }, "start": { "line": 297, "column": 8 } }, { "end": { "line": 297, "column": 8 }, "start": { "line": 297, "column": 8 } }] }, "40": { "line": 333, "type": "if", "locations": [{ "end": { "line": 298, "column": 12 }, "start": { "line": 298, "column": 12 } }, { "end": { "line": 298, "column": 12 }, "start": { "line": 298, "column": 12 } }] }, "41": { "line": 429, "type": "if", "locations": [{ "end": { "line": 380, "column": 8 }, "start": { "line": 380, "column": 8 } }, { "end": { "line": 380, "column": 8 }, "start": { "line": 380, "column": 8 } }] }, "42": { "line": 434, "type": "if", "locations": [{ "end": { "line": 385, "column": 8 }, "start": { "line": 385, "column": 8 } }, { "end": { "line": 385, "column": 8 }, "start": { "line": 385, "column": 8 } }] }, "43": { "line": 473, "type": "if", "locations": [{ "end": { "line": 418, "column": 8 }, "start": { "line": 418, "column": 8 } }, { "end": { "line": 418, "column": 8 }, "start": { "line": 418, "column": 8 } }] }, "44": { "line": 480, "type": "if", "locations": [{ "end": { "line": 425, "column": 12 }, "start": { "line": 425, "column": 12 } }, { "end": { "line": 425, "column": 12 }, "start": { "line": 425, "column": 12 } }] }, "45": { "line": 500, "type": "if", "locations": [{ "end": { "line": 441, "column": 8 }, "start": { "line": 441, "column": 8 } }, { "end": { "line": 441, "column": 8 }, "start": { "line": 441, "column": 8 } }] }, "46": { "line": 507, "type": "if", "locations": [{ "end": { "line": 448, "column": 12 }, "start": { "line": 448, "column": 12 } }, { "end": { "line": 448, "column": 12 }, "start": { "line": 448, "column": 12 } }] }, "47": { "line": 509, "type": "if", "locations": [{ "end": { "line": 450, "column": 16 }, "start": { "line": 450, "column": 16 } }, { "end": { "line": 450, "column": 16 }, "start": { "line": 450, "column": 16 } }] }, "48": { "line": 527, "type": "if", "locations": [{ "end": { "line": 464, "column": 8 }, "start": { "line": 464, "column": 8 } }, { "end": { "line": 464, "column": 8 }, "start": { "line": 464, "column": 8 } }] }, "49": { "line": 535, "type": "if", "locations": [{ "end": { "line": 472, "column": 12 }, "start": { "line": 472, "column": 12 } }, { "end": { "line": 472, "column": 12 }, "start": { "line": 472, "column": 12 } }] }, "50": { "line": 537, "type": "if", "locations": [{ "end": { "line": 474, "column": 16 }, "start": { "line": 474, "column": 16 } }, { "end": { "line": 474, "column": 16 }, "start": { "line": 474, "column": 16 } }] }, "51": { "line": 556, "type": "if", "locations": [{ "end": { "line": 491, "column": 8 }, "start": { "line": 491, "column": 8 } }, { "end": { "line": 491, "column": 8 }, "start": { "line": 491, "column": 8 } }] }, "52": { "line": 575, "type": "if", "locations": [{ "end": { "line": 506, "column": 8 }, "start": { "line": 506, "column": 8 } }, { "end": { "line": 506, "column": 8 }, "start": { "line": 506, "column": 8 } }] }, "53": { "line": 609, "type": "if", "locations": [{ "end": { "line": 529, "column": 8 }, "start": { "line": 529, "column": 8 } }, { "end": { "line": 529, "column": 8 }, "start": { "line": 529, "column": 8 } }] }, "54": { "line": 614, "type": "if", "locations": [{ "end": { "line": 534, "column": 8 }, "start": { "line": 534, "column": 8 } }, { "end": { "line": 534, "column": 8 }, "start": { "line": 534, "column": 8 } }] } }, "code": ["import {Feature} from '../feature';", "import {Hash} from './hash';", "import {Storage} from './storage';", "import {isEmpty} from '../string';", "import {isArray, isNull, isString, isUndef} from '../types';", "", "/**", " * Features state object persistable with localStorage, cookie or URL hash", " *", " * @export", " * @class State", " * @extends {Feature}", " */", "export class State extends Feature {", "", "    /**", "     * Creates an instance of State", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'state');", "", "        let cfg = this.config.state;", "", "        /**", "         * Determines whether state is persisted with URL hash", "         * @type {Boolean}", "         */", "        this.enableHash = cfg === true ||", "            (isArray(cfg.types) && cfg.types.indexOf('hash') !== -1);", "", "        /**", "         * Determines whether state is persisted with localStorage", "         * @type {Boolean}", "         */", "        this.enableLocalStorage = isArray(cfg.types) &&", "            cfg.types.indexOf('local_storage') !== -1;", "", "        /**", "         * Determines whether state is persisted with localStorage", "         * @type {Boolean}", "         */", "        this.enableCookie = isArray(cfg.types) &&", "            cfg.types.indexOf('cookie') !== -1;", "", "        /**", "         * Persist filters values, enabled by default", "         * @type {Boolean}", "         */", "        this.persistFilters = cfg.filters === false ? false : true;", "", "        /**", "         * Persist current page number when paging is enabled", "         * @type {Boolean}", "         */", "        this.persistPageNumber = Boolean(cfg.page_number);", "", "        /**", "         * Persist page length when paging is enabled", "         * @type {Boolean}", "         */", "        this.persistPageLength = Boolean(cfg.page_length);", "", "        /**", "         * Persist column sorting", "         * @type {Boolean}", "         */", "        this.persistSort = Boolean(cfg.sort);", "", "        /**", "         * Persist columns visibility", "         * @type {Boolean}", "         */", "        this.persistColsVisibility = Boolean(cfg.columns_visibility);", "", "        /**", "         * Persist filters row visibility", "         * @type {Boolean}", "         */", "        this.persistFiltersVisibility = Boolean(cfg.filters_visibility);", "", "        /**", "         * Cookie duration in hours", "         * @type {Boolean}", "         */", "        this.cookieDuration = !isNaN(cfg.cookie_duration) ?", "            parseInt(cfg.cookie_duration, 10) : 87600;", "", "        /**", "         * Enable Storage if localStorage or cookie is required", "         * @type {Boolean}", "         * @private", "         */", "        this.enableStorage = this.enableLocalStorage || this.enableCookie;", "", "        /**", "         * Storage instance if storage is required", "         * @type {Storage}", "         * @private", "         */", "        this.storage = null;", "", "        /**", "         * Hash instance if URL hash is required", "         * @type {Boolean}", "         * @private", "         */", "        this.hash = null;", "", "        /**", "         * Current page number", "         * @type {Number}", "         * @private", "         */", "        this.pageNb = null;", "", "        /**", "         * Current page length", "         * @type {Number}", "         * @private", "         */", "        this.pageLength = null;", "", "        /**", "         * Current column sorting", "         * @type {Object}", "         * @private", "         */", "        this.sort = null;", "", "        /**", "         * Current hidden columns", "         * @type {Object}", "         * @private", "         */", "        this.hiddenCols = null;", "", "        /**", "         * Filters row visibility", "         * @type {Boolean}", "         * @private", "         */", "        this.filtersVisibility = null;", "", "        /**", "         * State object", "         * @type {Object}", "         * @private", "         */", "        this.state = {};", "", "        /**", "         * Prefix for column ID", "         * @type {String}", "         * @private", "         */", "        this.prfxCol = 'col_';", "", "        /**", "         * Prefix for page number ID", "         * @type {String}", "         * @private", "         */", "        this.pageNbKey = 'page';", "", "        /**", "         * Prefix for page length ID", "         * @type {String}", "         * @private", "         */", "        this.pageLengthKey = 'page_length';", "", "        /**", "         * Prefix for filters visibility ID", "         * @type {String}", "         * @private", "         */", "        this.filtersVisKey = 'filters_visibility';", "    }", "", "    /**", "     * Initializes State instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        this.emitter.on(['after-filtering'], () => this.update());", "        this.emitter.on(['after-page-change', 'after-clearing-filters'],", "            (tf, pageNb) => this.updatePage(pageNb));", "        this.emitter.on(['after-page-length-change'],", "            (tf, pageLength) => this.updatePageLength(pageLength));", "        this.emitter.on(['column-sorted'],", "            (tf, index, descending) => this.updateSort(index, descending));", "        this.emitter.on(['sort-initialized'], () => this._syncSort());", "        this.emitter.on(['columns-visibility-initialized'],", "            () => this._syncColsVisibility());", "        this.emitter.on(['column-shown', 'column-hidden'], (tf, feature,", "            colIndex, hiddenCols) => this.updateColsVisibility(hiddenCols));", "        this.emitter.on(['filters-visibility-initialized'],", "            () => this._syncFiltersVisibility());", "        this.emitter.on(['filters-toggled'],", "            (tf, extension, visible) => this.updateFiltersVisibility(visible));", "", "        if (this.enableHash) {", "            this.hash = new Hash(this);", "            this.hash.init();", "        }", "        if (this.enableStorage) {", "            this.storage = new Storage(this);", "            this.storage.init();", "        }", "", "        /**", "         * @inherited", "         */", "        this.initialized = true;", "    }", "", "", "    /**", "     * Update state object based on current features state", "     */", "    update() {", "        if (!this.isEnabled()) {", "            return;", "        }", "        let state = this.state;", "        let tf = this.tf;", "", "        if (this.persistFilters) {", "            let filterValues = tf.getFiltersValue();", "", "            filterValues.forEach((val, idx) => {", "                let key = `${this.prfxCol}${idx}`;", "", "                if (isString(val) && isEmpty(val)) {", "                    if (state.hasOwnProperty(key)) {", "                        state[key].flt = undefined;", "                    }", "                } else {", "                    state[key] = state[key] || {};", "                    state[key].flt = val;", "                }", "            });", "        }", "", "        if (this.persistPageNumber) {", "            if (isNull(this.pageNb)) {", "                state[this.pageNbKey] = undefined;", "            } else {", "                state[this.pageNbKey] = this.pageNb;", "            }", "        }", "", "        if (this.persistPageLength) {", "            if (isNull(this.pageLength)) {", "                state[this.pageLengthKey] = undefined;", "            } else {", "                state[this.pageLengthKey] = this.pageLength;", "            }", "        }", "", "        if (this.persistSort) {", "            if (!isNull(this.sort)) {", "                // Remove previuosly sorted column", "                Object.keys(state).forEach((key) => {", "                    if (key.indexOf(this.prfxCol) !== -1 && state[key]) {", "                        state[key].sort = undefined;", "                    }", "                });", "", "                let key = `${this.prfxCol}${this.sort.column}`;", "                state[key] = state[key] || {};", "                state[key].sort = { descending: this.sort.descending };", "            }", "        }", "", "        if (this.persistColsVisibility) {", "            if (!isNull(this.hiddenCols)) {", "                // Clear previuosly hidden columns", "                Object.keys(state).forEach((key) => {", "                    if (key.indexOf(this.prfxCol) !== -1 && state[key]) {", "                        state[key].hidden = undefined;", "                    }", "                });", "", "                this.hiddenCols.forEach((colIdx) => {", "                    let key = `${this.prfxCol}${colIdx}`;", "                    state[key] = state[key] || {};", "                    state[key].hidden = true;", "                });", "            }", "        }", "", "        if (this.persistFiltersVisibility) {", "            if (isNull(this.filtersVisibility)) {", "                state[this.filtersVisKey] = undefined;", "            } else {", "                state[this.filtersVisKey] = this.filtersVisibility;", "            }", "        }", "", "        this.emitter.emit('state-changed', tf, state);", "    }", "", "    /**", "     * Refresh page number field on page number changes", "     *", "     * @param {Number} pageNb Current page number", "     */", "    updatePage(pageNb) {", "        this.pageNb = pageNb;", "        this.update();", "    }", "", "    /**", "     * Refresh page length field on page length changes", "     *", "     * @param {Number} pageLength Current page length value", "     */", "    updatePageLength(pageLength) {", "        this.pageLength = pageLength;", "        this.update();", "    }", "", "    /**", "     * Refresh column sorting information on sort changes", "     *", "     * @param index {Number} Column index", "     * @param {Boolean} descending Descending manner", "     */", "    updateSort(index, descending) {", "        this.sort = {", "            column: index,", "            descending: descending", "        };", "        this.update();", "    }", "", "    /**", "     * Refresh hidden columns information on columns visibility changes", "     *", "     * @param {Array} hiddenCols Columns indexes", "     */", "    updateColsVisibility(hiddenCols) {", "        this.hiddenCols = hiddenCols;", "        this.update();", "    }", "", "    /**", "     * Refresh filters visibility on filters visibility change", "     *", "     * @param {Boolean} visible Visibility flad", "     */", "    updateFiltersVisibility(visible) {", "        this.filtersVisibility = visible;", "        this.update();", "    }", "", "    /**", "     * Override state field", "     *", "     * @param state State object", "     */", "    override(state) {", "        this.state = state;", "    }", "", "    /**", "     * Sync stored features state", "     */", "    sync() {", "        let state = this.state;", "        let tf = this.tf;", "", "        this._syncFilters();", "", "        if (this.persistPageNumber) {", "            let pageNumber = state[this.pageNbKey];", "            this.emitter.emit('change-page', tf, pageNumber);", "        }", "", "        if (this.persistPageLength) {", "            let pageLength = state[this.pageLengthKey];", "            this.emitter.emit('change-page-results', tf, pageLength);", "        }", "", "        this._syncSort();", "        this._syncColsVisibility();", "        this._syncFiltersVisibility();", "    }", "", "    /**", "     * Override current state with passed one and sync features", "     *", "     * @param {Object} state State object", "     */", "    overrideAndSync(state) {", "        // To prevent state to react to features changes, state is temporarily", "        // disabled", "        this.disable();", "        // State is overriden with passed state object", "        this.override(state);", "        // New hash state is applied to features", "        this.sync();", "        // State is re-enabled", "        this.enable();", "    }", "", "    /**", "     * Sync filters with stored values and filter table", "     *", "     * @private", "     */", "    _syncFilters() {", "        if (!this.persistFilters) {", "            return;", "        }", "        let state = this.state;", "        let tf = this.tf;", "", "        Object.keys(state).forEach((key) => {", "            if (key.indexOf(this.prfxCol) !== -1) {", "                let colIdx = parseInt(key.replace(this.prfxCol, ''), 10);", "                let val = state[key].flt;", "                tf.setFilterValue(colIdx, val);", "            }", "        });", "", "        tf.filter();", "    }", "", "    /**", "     * Sync sorted column with stored sorting information and sort table", "     *", "     * @private", "     */", "    _syncSort() {", "        if (!this.persistSort) {", "            return;", "        }", "        let state = this.state;", "        let tf = this.tf;", "", "        Object.keys(state).forEach((key) => {", "            if (key.indexOf(this.prfxCol) !== -1) {", "                let colIdx = parseInt(key.replace(this.prfxCol, ''), 10);", "                if (!isUndef(state[key].sort)) {", "                    let sort = state[key].sort;", "                    this.emitter.emit('sort', tf, colIdx, sort.descending);", "                }", "            }", "        });", "    }", "", "    /**", "     * Sync hidden columns with stored information", "     *", "     * @private", "     */", "    _syncColsVisibility() {", "        if (!this.persistColsVisibility) {", "            return;", "        }", "        let state = this.state;", "        let tf = this.tf;", "        let hiddenCols = [];", "", "        Object.keys(state).forEach((key) => {", "            if (key.indexOf(this.prfxCol) !== -1) {", "                let colIdx = parseInt(key.replace(this.prfxCol, ''), 10);", "                if (!isUndef(state[key].hidden)) {", "                    hiddenCols.push(colIdx);", "                }", "            }", "        });", "", "        hiddenCols.forEach((colIdx) => {", "            this.emitter.emit('hide-column', tf, colIdx);", "        });", "    }", "", "    /**", "     * Sync filters visibility with stored information", "     *", "     * @private", "     */", "    _syncFiltersVisibility() {", "        if (!this.persistFiltersVisibility) {", "            return;", "        }", "        let state = this.state;", "        let tf = this.tf;", "        let filtersVisibility = state[this.filtersVisKey];", "", "        this.filtersVisibility = filtersVisibility;", "        this.emitter.emit('show-filters', tf, filtersVisibility);", "    }", "", "    /**", "     * Destroy State instance", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        this.state = {};", "", "        this.emitter.off(['after-filtering'], () => this.update());", "        this.emitter.off(['after-page-change', 'after-clearing-filters'],", "            (tf, pageNb) => this.updatePage(pageNb));", "        this.emitter.off(['after-page-length-change'],", "            (tf, index) => this.updatePageLength(index));", "        this.emitter.off(['column-sorted'],", "            (tf, index, descending) => this.updateSort(index, descending));", "        this.emitter.off(['sort-initialized'], () => this._syncSort());", "        this.emitter.off(['columns-visibility-initialized'],", "            () => this._syncColsVisibility());", "        this.emitter.off(['column-shown', 'column-hidden'], (tf, feature,", "            colIndex, hiddenCols) => this.updateColsVisibility(hiddenCols));", "        this.emitter.off(['filters-visibility-initialized'],", "            () => this._syncFiltersVisibility());", "        this.emitter.off(['filters-toggled'],", "            (tf, extension, visible) => this.updateFiltersVisibility(visible));", "", "        if (this.enableHash) {", "            this.hash.destroy();", "            this.hash = null;", "        }", "", "        if (this.enableStorage) {", "            this.storage.destroy();", "            this.storage = null;", "        }", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_W08bsqGMOkpSURWN5P26Eg = __cov_W08bsqGMOkpSURWN5P26Eg['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\state.js'];
	__cov_W08bsqGMOkpSURWN5P26Eg.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_W08bsqGMOkpSURWN5P26Eg.s['2']++;exports.State = undefined;__cov_W08bsqGMOkpSURWN5P26Eg.s['3']++;var _feature = __webpack_require__(10);__cov_W08bsqGMOkpSURWN5P26Eg.s['4']++;var _hash = __webpack_require__(27);__cov_W08bsqGMOkpSURWN5P26Eg.s['5']++;var _storage = __webpack_require__(28);__cov_W08bsqGMOkpSURWN5P26Eg.s['6']++;var _string = __webpack_require__(5);__cov_W08bsqGMOkpSURWN5P26Eg.s['7']++;var _types = __webpack_require__(4);function _classCallCheck(instance, Constructor) {
	   __cov_W08bsqGMOkpSURWN5P26Eg.f['1']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['9']++;if (!(instance instanceof Constructor)) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['1'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['10']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_W08bsqGMOkpSURWN5P26Eg.f['2']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['12']++;if (!self) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['2'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['13']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['2'][1]++;
	   }__cov_W08bsqGMOkpSURWN5P26Eg.s['14']++;return (__cov_W08bsqGMOkpSURWN5P26Eg.b['4'][0]++, call) && ((__cov_W08bsqGMOkpSURWN5P26Eg.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_W08bsqGMOkpSURWN5P26Eg.b['4'][2]++, typeof call === 'function')) ? (__cov_W08bsqGMOkpSURWN5P26Eg.b['3'][0]++, call) : (__cov_W08bsqGMOkpSURWN5P26Eg.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_W08bsqGMOkpSURWN5P26Eg.f['3']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['16']++;if ((__cov_W08bsqGMOkpSURWN5P26Eg.b['6'][0]++, typeof superClass !== 'function') && (__cov_W08bsqGMOkpSURWN5P26Eg.b['6'][1]++, superClass !== null)) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['5'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['17']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['5'][1]++;
	   }__cov_W08bsqGMOkpSURWN5P26Eg.s['18']++;subClass.prototype = Object.create((__cov_W08bsqGMOkpSURWN5P26Eg.b['7'][0]++, superClass) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_W08bsqGMOkpSURWN5P26Eg.s['19']++;if (superClass) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['8'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['20']++;Object.setPrototypeOf ? (__cov_W08bsqGMOkpSURWN5P26Eg.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_W08bsqGMOkpSURWN5P26Eg.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_W08bsqGMOkpSURWN5P26Eg.b['8'][1]++;
	   }
	}__cov_W08bsqGMOkpSURWN5P26Eg.s['21']++;var State = exports.State = function (_Feature) {
	   __cov_W08bsqGMOkpSURWN5P26Eg.f['4']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['22']++;_inherits(State, _Feature);function State(tf) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['5']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['24']++;_classCallCheck(this, State);__cov_W08bsqGMOkpSURWN5P26Eg.s['25']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'state'));__cov_W08bsqGMOkpSURWN5P26Eg.s['26']++;var cfg = _this.config.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['27']++;_this.enableHash = (__cov_W08bsqGMOkpSURWN5P26Eg.b['10'][0]++, cfg === true) || (__cov_W08bsqGMOkpSURWN5P26Eg.b['10'][1]++, (0, _types.isArray)(cfg.types)) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['10'][2]++, cfg.types.indexOf('hash') !== -1);__cov_W08bsqGMOkpSURWN5P26Eg.s['28']++;_this.enableLocalStorage = (__cov_W08bsqGMOkpSURWN5P26Eg.b['11'][0]++, (0, _types.isArray)(cfg.types)) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['11'][1]++, cfg.types.indexOf('local_storage') !== -1);__cov_W08bsqGMOkpSURWN5P26Eg.s['29']++;_this.enableCookie = (__cov_W08bsqGMOkpSURWN5P26Eg.b['12'][0]++, (0, _types.isArray)(cfg.types)) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['12'][1]++, cfg.types.indexOf('cookie') !== -1);__cov_W08bsqGMOkpSURWN5P26Eg.s['30']++;_this.persistFilters = cfg.filters === false ? (__cov_W08bsqGMOkpSURWN5P26Eg.b['13'][0]++, false) : (__cov_W08bsqGMOkpSURWN5P26Eg.b['13'][1]++, true);__cov_W08bsqGMOkpSURWN5P26Eg.s['31']++;_this.persistPageNumber = Boolean(cfg.page_number);__cov_W08bsqGMOkpSURWN5P26Eg.s['32']++;_this.persistPageLength = Boolean(cfg.page_length);__cov_W08bsqGMOkpSURWN5P26Eg.s['33']++;_this.persistSort = Boolean(cfg.sort);__cov_W08bsqGMOkpSURWN5P26Eg.s['34']++;_this.persistColsVisibility = Boolean(cfg.columns_visibility);__cov_W08bsqGMOkpSURWN5P26Eg.s['35']++;_this.persistFiltersVisibility = Boolean(cfg.filters_visibility);__cov_W08bsqGMOkpSURWN5P26Eg.s['36']++;_this.cookieDuration = !isNaN(cfg.cookie_duration) ? (__cov_W08bsqGMOkpSURWN5P26Eg.b['14'][0]++, parseInt(cfg.cookie_duration, 10)) : (__cov_W08bsqGMOkpSURWN5P26Eg.b['14'][1]++, 87600);__cov_W08bsqGMOkpSURWN5P26Eg.s['37']++;_this.enableStorage = (__cov_W08bsqGMOkpSURWN5P26Eg.b['15'][0]++, _this.enableLocalStorage) || (__cov_W08bsqGMOkpSURWN5P26Eg.b['15'][1]++, _this.enableCookie);__cov_W08bsqGMOkpSURWN5P26Eg.s['38']++;_this.storage = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['39']++;_this.hash = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['40']++;_this.pageNb = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['41']++;_this.pageLength = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['42']++;_this.sort = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['43']++;_this.hiddenCols = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['44']++;_this.filtersVisibility = null;__cov_W08bsqGMOkpSURWN5P26Eg.s['45']++;_this.state = {};__cov_W08bsqGMOkpSURWN5P26Eg.s['46']++;_this.prfxCol = 'col_';__cov_W08bsqGMOkpSURWN5P26Eg.s['47']++;_this.pageNbKey = 'page';__cov_W08bsqGMOkpSURWN5P26Eg.s['48']++;_this.pageLengthKey = 'page_length';__cov_W08bsqGMOkpSURWN5P26Eg.s['49']++;_this.filtersVisKey = 'filters_visibility';__cov_W08bsqGMOkpSURWN5P26Eg.s['50']++;return _this;
	   }__cov_W08bsqGMOkpSURWN5P26Eg.s['51']++;State.prototype.init = function init() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['6']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['52']++;var _this2 = this;__cov_W08bsqGMOkpSURWN5P26Eg.s['53']++;if (this.initialized) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['16'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['54']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['16'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['55']++;this.emitter.on(['after-filtering'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['7']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['56']++;return _this2.update();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['57']++;this.emitter.on(['after-page-change', 'after-clearing-filters'], function (tf, pageNb) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['8']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['58']++;return _this2.updatePage(pageNb);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['59']++;this.emitter.on(['after-page-length-change'], function (tf, pageLength) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['9']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['60']++;return _this2.updatePageLength(pageLength);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['61']++;this.emitter.on(['column-sorted'], function (tf, index, descending) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['10']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['62']++;return _this2.updateSort(index, descending);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['63']++;this.emitter.on(['sort-initialized'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['11']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['64']++;return _this2._syncSort();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['65']++;this.emitter.on(['columns-visibility-initialized'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['12']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['66']++;return _this2._syncColsVisibility();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['67']++;this.emitter.on(['column-shown', 'column-hidden'], function (tf, feature, colIndex, hiddenCols) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['13']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['68']++;return _this2.updateColsVisibility(hiddenCols);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['69']++;this.emitter.on(['filters-visibility-initialized'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['14']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['70']++;return _this2._syncFiltersVisibility();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['71']++;this.emitter.on(['filters-toggled'], function (tf, extension, visible) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['15']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['72']++;return _this2.updateFiltersVisibility(visible);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['73']++;if (this.enableHash) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['17'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['74']++;this.hash = new _hash.Hash(this);__cov_W08bsqGMOkpSURWN5P26Eg.s['75']++;this.hash.init();
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['17'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['76']++;if (this.enableStorage) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['18'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['77']++;this.storage = new _storage.Storage(this);__cov_W08bsqGMOkpSURWN5P26Eg.s['78']++;this.storage.init();
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['18'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['79']++;this.initialized = true;
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['80']++;State.prototype.update = function update() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['16']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['81']++;var _this3 = this;__cov_W08bsqGMOkpSURWN5P26Eg.s['82']++;if (!this.isEnabled()) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['19'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['83']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['19'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['84']++;var state = this.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['85']++;var tf = this.tf;__cov_W08bsqGMOkpSURWN5P26Eg.s['86']++;if (this.persistFilters) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['20'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['87']++;var filterValues = tf.getFiltersValue();__cov_W08bsqGMOkpSURWN5P26Eg.s['88']++;filterValues.forEach(function (val, idx) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.f['17']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['89']++;var key = '' + _this3.prfxCol + idx;__cov_W08bsqGMOkpSURWN5P26Eg.s['90']++;if ((__cov_W08bsqGMOkpSURWN5P26Eg.b['22'][0]++, (0, _types.isString)(val)) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['22'][1]++, (0, _string.isEmpty)(val))) {
	               __cov_W08bsqGMOkpSURWN5P26Eg.b['21'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['91']++;if (state.hasOwnProperty(key)) {
	                  __cov_W08bsqGMOkpSURWN5P26Eg.b['23'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['92']++;state[key].flt = undefined;
	               } else {
	                  __cov_W08bsqGMOkpSURWN5P26Eg.b['23'][1]++;
	               }
	            } else {
	               __cov_W08bsqGMOkpSURWN5P26Eg.b['21'][1]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['93']++;state[key] = (__cov_W08bsqGMOkpSURWN5P26Eg.b['24'][0]++, state[key]) || (__cov_W08bsqGMOkpSURWN5P26Eg.b['24'][1]++, {});__cov_W08bsqGMOkpSURWN5P26Eg.s['94']++;state[key].flt = val;
	            }
	         });
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['20'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['95']++;if (this.persistPageNumber) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['25'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['96']++;if ((0, _types.isNull)(this.pageNb)) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['26'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['97']++;state[this.pageNbKey] = undefined;
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['26'][1]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['98']++;state[this.pageNbKey] = this.pageNb;
	         }
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['25'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['99']++;if (this.persistPageLength) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['27'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['100']++;if ((0, _types.isNull)(this.pageLength)) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['28'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['101']++;state[this.pageLengthKey] = undefined;
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['28'][1]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['102']++;state[this.pageLengthKey] = this.pageLength;
	         }
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['27'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['103']++;if (this.persistSort) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['29'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['104']++;if (!(0, _types.isNull)(this.sort)) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['30'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['105']++;Object.keys(state).forEach(function (key) {
	               __cov_W08bsqGMOkpSURWN5P26Eg.f['18']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['106']++;if ((__cov_W08bsqGMOkpSURWN5P26Eg.b['32'][0]++, key.indexOf(_this3.prfxCol) !== -1) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['32'][1]++, state[key])) {
	                  __cov_W08bsqGMOkpSURWN5P26Eg.b['31'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['107']++;state[key].sort = undefined;
	               } else {
	                  __cov_W08bsqGMOkpSURWN5P26Eg.b['31'][1]++;
	               }
	            });__cov_W08bsqGMOkpSURWN5P26Eg.s['108']++;var key = '' + this.prfxCol + this.sort.column;__cov_W08bsqGMOkpSURWN5P26Eg.s['109']++;state[key] = (__cov_W08bsqGMOkpSURWN5P26Eg.b['33'][0]++, state[key]) || (__cov_W08bsqGMOkpSURWN5P26Eg.b['33'][1]++, {});__cov_W08bsqGMOkpSURWN5P26Eg.s['110']++;state[key].sort = { descending: this.sort.descending };
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['30'][1]++;
	         }
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['29'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['111']++;if (this.persistColsVisibility) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['34'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['112']++;if (!(0, _types.isNull)(this.hiddenCols)) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['35'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['113']++;Object.keys(state).forEach(function (key) {
	               __cov_W08bsqGMOkpSURWN5P26Eg.f['19']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['114']++;if ((__cov_W08bsqGMOkpSURWN5P26Eg.b['37'][0]++, key.indexOf(_this3.prfxCol) !== -1) && (__cov_W08bsqGMOkpSURWN5P26Eg.b['37'][1]++, state[key])) {
	                  __cov_W08bsqGMOkpSURWN5P26Eg.b['36'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['115']++;state[key].hidden = undefined;
	               } else {
	                  __cov_W08bsqGMOkpSURWN5P26Eg.b['36'][1]++;
	               }
	            });__cov_W08bsqGMOkpSURWN5P26Eg.s['116']++;this.hiddenCols.forEach(function (colIdx) {
	               __cov_W08bsqGMOkpSURWN5P26Eg.f['20']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['117']++;var key = '' + _this3.prfxCol + colIdx;__cov_W08bsqGMOkpSURWN5P26Eg.s['118']++;state[key] = (__cov_W08bsqGMOkpSURWN5P26Eg.b['38'][0]++, state[key]) || (__cov_W08bsqGMOkpSURWN5P26Eg.b['38'][1]++, {});__cov_W08bsqGMOkpSURWN5P26Eg.s['119']++;state[key].hidden = true;
	            });
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['35'][1]++;
	         }
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['34'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['120']++;if (this.persistFiltersVisibility) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['39'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['121']++;if ((0, _types.isNull)(this.filtersVisibility)) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['40'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['122']++;state[this.filtersVisKey] = undefined;
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['40'][1]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['123']++;state[this.filtersVisKey] = this.filtersVisibility;
	         }
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['39'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['124']++;this.emitter.emit('state-changed', tf, state);
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['125']++;State.prototype.updatePage = function updatePage(pageNb) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['21']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['126']++;this.pageNb = pageNb;__cov_W08bsqGMOkpSURWN5P26Eg.s['127']++;this.update();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['128']++;State.prototype.updatePageLength = function updatePageLength(pageLength) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['22']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['129']++;this.pageLength = pageLength;__cov_W08bsqGMOkpSURWN5P26Eg.s['130']++;this.update();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['131']++;State.prototype.updateSort = function updateSort(index, descending) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['23']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['132']++;this.sort = { column: index, descending: descending };__cov_W08bsqGMOkpSURWN5P26Eg.s['133']++;this.update();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['134']++;State.prototype.updateColsVisibility = function updateColsVisibility(hiddenCols) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['24']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['135']++;this.hiddenCols = hiddenCols;__cov_W08bsqGMOkpSURWN5P26Eg.s['136']++;this.update();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['137']++;State.prototype.updateFiltersVisibility = function updateFiltersVisibility(visible) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['25']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['138']++;this.filtersVisibility = visible;__cov_W08bsqGMOkpSURWN5P26Eg.s['139']++;this.update();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['140']++;State.prototype.override = function override(state) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['26']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['141']++;this.state = state;
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['142']++;State.prototype.sync = function sync() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['27']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['143']++;var state = this.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['144']++;var tf = this.tf;__cov_W08bsqGMOkpSURWN5P26Eg.s['145']++;this._syncFilters();__cov_W08bsqGMOkpSURWN5P26Eg.s['146']++;if (this.persistPageNumber) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['41'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['147']++;var pageNumber = state[this.pageNbKey];__cov_W08bsqGMOkpSURWN5P26Eg.s['148']++;this.emitter.emit('change-page', tf, pageNumber);
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['41'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['149']++;if (this.persistPageLength) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['42'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['150']++;var pageLength = state[this.pageLengthKey];__cov_W08bsqGMOkpSURWN5P26Eg.s['151']++;this.emitter.emit('change-page-results', tf, pageLength);
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['42'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['152']++;this._syncSort();__cov_W08bsqGMOkpSURWN5P26Eg.s['153']++;this._syncColsVisibility();__cov_W08bsqGMOkpSURWN5P26Eg.s['154']++;this._syncFiltersVisibility();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['155']++;State.prototype.overrideAndSync = function overrideAndSync(state) {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['28']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['156']++;this.disable();__cov_W08bsqGMOkpSURWN5P26Eg.s['157']++;this.override(state);__cov_W08bsqGMOkpSURWN5P26Eg.s['158']++;this.sync();__cov_W08bsqGMOkpSURWN5P26Eg.s['159']++;this.enable();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['160']++;State.prototype._syncFilters = function _syncFilters() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['29']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['161']++;var _this4 = this;__cov_W08bsqGMOkpSURWN5P26Eg.s['162']++;if (!this.persistFilters) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['43'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['163']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['43'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['164']++;var state = this.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['165']++;var tf = this.tf;__cov_W08bsqGMOkpSURWN5P26Eg.s['166']++;Object.keys(state).forEach(function (key) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['30']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['167']++;if (key.indexOf(_this4.prfxCol) !== -1) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['44'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['168']++;var colIdx = parseInt(key.replace(_this4.prfxCol, ''), 10);__cov_W08bsqGMOkpSURWN5P26Eg.s['169']++;var val = state[key].flt;__cov_W08bsqGMOkpSURWN5P26Eg.s['170']++;tf.setFilterValue(colIdx, val);
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['44'][1]++;
	         }
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['171']++;tf.filter();
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['172']++;State.prototype._syncSort = function _syncSort() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['31']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['173']++;var _this5 = this;__cov_W08bsqGMOkpSURWN5P26Eg.s['174']++;if (!this.persistSort) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['45'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['175']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['45'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['176']++;var state = this.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['177']++;var tf = this.tf;__cov_W08bsqGMOkpSURWN5P26Eg.s['178']++;Object.keys(state).forEach(function (key) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['32']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['179']++;if (key.indexOf(_this5.prfxCol) !== -1) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['46'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['180']++;var colIdx = parseInt(key.replace(_this5.prfxCol, ''), 10);__cov_W08bsqGMOkpSURWN5P26Eg.s['181']++;if (!(0, _types.isUndef)(state[key].sort)) {
	               __cov_W08bsqGMOkpSURWN5P26Eg.b['47'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['182']++;var sort = state[key].sort;__cov_W08bsqGMOkpSURWN5P26Eg.s['183']++;_this5.emitter.emit('sort', tf, colIdx, sort.descending);
	            } else {
	               __cov_W08bsqGMOkpSURWN5P26Eg.b['47'][1]++;
	            }
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['46'][1]++;
	         }
	      });
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['184']++;State.prototype._syncColsVisibility = function _syncColsVisibility() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['33']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['185']++;var _this6 = this;__cov_W08bsqGMOkpSURWN5P26Eg.s['186']++;if (!this.persistColsVisibility) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['48'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['187']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['48'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['188']++;var state = this.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['189']++;var tf = this.tf;__cov_W08bsqGMOkpSURWN5P26Eg.s['190']++;var hiddenCols = [];__cov_W08bsqGMOkpSURWN5P26Eg.s['191']++;Object.keys(state).forEach(function (key) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['34']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['192']++;if (key.indexOf(_this6.prfxCol) !== -1) {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['49'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['193']++;var colIdx = parseInt(key.replace(_this6.prfxCol, ''), 10);__cov_W08bsqGMOkpSURWN5P26Eg.s['194']++;if (!(0, _types.isUndef)(state[key].hidden)) {
	               __cov_W08bsqGMOkpSURWN5P26Eg.b['50'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['195']++;hiddenCols.push(colIdx);
	            } else {
	               __cov_W08bsqGMOkpSURWN5P26Eg.b['50'][1]++;
	            }
	         } else {
	            __cov_W08bsqGMOkpSURWN5P26Eg.b['49'][1]++;
	         }
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['196']++;hiddenCols.forEach(function (colIdx) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['35']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['197']++;_this6.emitter.emit('hide-column', tf, colIdx);
	      });
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['198']++;State.prototype._syncFiltersVisibility = function _syncFiltersVisibility() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['36']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['199']++;if (!this.persistFiltersVisibility) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['51'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['200']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['51'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['201']++;var state = this.state;__cov_W08bsqGMOkpSURWN5P26Eg.s['202']++;var tf = this.tf;__cov_W08bsqGMOkpSURWN5P26Eg.s['203']++;var filtersVisibility = state[this.filtersVisKey];__cov_W08bsqGMOkpSURWN5P26Eg.s['204']++;this.filtersVisibility = filtersVisibility;__cov_W08bsqGMOkpSURWN5P26Eg.s['205']++;this.emitter.emit('show-filters', tf, filtersVisibility);
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['206']++;State.prototype.destroy = function destroy() {
	      __cov_W08bsqGMOkpSURWN5P26Eg.f['37']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['207']++;var _this7 = this;__cov_W08bsqGMOkpSURWN5P26Eg.s['208']++;if (!this.initialized) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['52'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['209']++;return;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['52'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['210']++;this.state = {};__cov_W08bsqGMOkpSURWN5P26Eg.s['211']++;this.emitter.off(['after-filtering'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['38']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['212']++;return _this7.update();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['213']++;this.emitter.off(['after-page-change', 'after-clearing-filters'], function (tf, pageNb) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['39']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['214']++;return _this7.updatePage(pageNb);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['215']++;this.emitter.off(['after-page-length-change'], function (tf, index) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['40']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['216']++;return _this7.updatePageLength(index);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['217']++;this.emitter.off(['column-sorted'], function (tf, index, descending) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['41']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['218']++;return _this7.updateSort(index, descending);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['219']++;this.emitter.off(['sort-initialized'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['42']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['220']++;return _this7._syncSort();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['221']++;this.emitter.off(['columns-visibility-initialized'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['43']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['222']++;return _this7._syncColsVisibility();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['223']++;this.emitter.off(['column-shown', 'column-hidden'], function (tf, feature, colIndex, hiddenCols) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['44']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['224']++;return _this7.updateColsVisibility(hiddenCols);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['225']++;this.emitter.off(['filters-visibility-initialized'], function () {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['45']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['226']++;return _this7._syncFiltersVisibility();
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['227']++;this.emitter.off(['filters-toggled'], function (tf, extension, visible) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.f['46']++;__cov_W08bsqGMOkpSURWN5P26Eg.s['228']++;return _this7.updateFiltersVisibility(visible);
	      });__cov_W08bsqGMOkpSURWN5P26Eg.s['229']++;if (this.enableHash) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['53'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['230']++;this.hash.destroy();__cov_W08bsqGMOkpSURWN5P26Eg.s['231']++;this.hash = null;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['53'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['232']++;if (this.enableStorage) {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['54'][0]++;__cov_W08bsqGMOkpSURWN5P26Eg.s['233']++;this.storage.destroy();__cov_W08bsqGMOkpSURWN5P26Eg.s['234']++;this.storage = null;
	      } else {
	         __cov_W08bsqGMOkpSURWN5P26Eg.b['54'][1]++;
	      }__cov_W08bsqGMOkpSURWN5P26Eg.s['235']++;this.initialized = false;
	   };__cov_W08bsqGMOkpSURWN5P26Eg.s['236']++;return State;
	}(_feature.Feature);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_sq__4Ow0B5wi6aFUco3cXA = Function('return this')();
	if (!__cov_sq__4Ow0B5wi6aFUco3cXA.__coverage__) {
	   __cov_sq__4Ow0B5wi6aFUco3cXA.__coverage__ = {};
	}
	__cov_sq__4Ow0B5wi6aFUco3cXA = __cov_sq__4Ow0B5wi6aFUco3cXA.__coverage__;
	if (!__cov_sq__4Ow0B5wi6aFUco3cXA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\hash.js']) {
	   __cov_sq__4Ow0B5wi6aFUco3cXA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\hash.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\hash.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 1, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 1, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0 }, "b": { "1": [0, 0], "2": [0, 0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0 }, "fnMap": { "1": { "line": 12, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 22, "name": "hasHashChange", "loc": { "start": { "line": 12, "column": 29 }, "end": { "line": 12, "column": 35 } } }, "3": { "line": 34, "name": "(anonymous_3)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 41, "name": "Hash", "loc": { "start": { "line": 30, "column": 4 }, "end": { "line": 30, "column": 23 } } }, "5": { "line": 75, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "6": { "line": 85, "name": "(anonymous_6)", "loc": { "start": { "line": 68, "column": 43 }, "end": { "line": 68, "column": 43 } } }, "7": { "line": 99, "name": "update", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "8": { "line": 117, "name": "parse", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 130, "name": "sync", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 144, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 147, "name": "(anonymous_11)", "loc": { "start": { "line": 118, "column": 44 }, "end": { "line": 118, "column": 44 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "9": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "10": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "11": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "12": { "end": { "line": 12, "column": 7 }, "start": { "line": 12, "column": 7 } }, "13": { "end": { "line": 13, "column": 4 }, "start": { "line": 13, "column": 4 } }, "14": { "end": { "line": 14, "column": 4 }, "start": { "line": 14, "column": 4 } }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "end": { "line": 55, "column": 5 }, "start": { "line": 30, "column": 4 } }, "17": { "end": { "line": 30, "column": 23 }, "start": { "line": 30, "column": 23 } }, "18": { "end": { "line": 35, "column": 8 }, "start": { "line": 35, "column": 8 } }, "19": { "end": { "line": 42, "column": 8 }, "start": { "line": 42, "column": 8 } }, "20": { "end": { "line": 48, "column": 8 }, "start": { "line": 48, "column": 8 } }, "21": { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "end": { "line": 60, "column": 11 }, "start": { "line": 60, "column": 11 } }, "24": { "end": { "line": 63, "column": 9 }, "start": { "line": 61, "column": 8 } }, "25": { "end": { "line": 62, "column": 12 }, "start": { "line": 62, "column": 12 } }, "26": { "end": { "line": 65, "column": 8 }, "start": { "line": 65, "column": 8 } }, "27": { "end": { "line": 67, "column": 8 }, "start": { "line": 67, "column": 8 } }, "28": { "end": { "line": 68, "column": 8 }, "start": { "line": 68, "column": 8 } }, "29": { "end": { "line": 68, "column": 43 }, "start": { "line": 68, "column": 43 } }, "30": { "end": { "line": 69, "column": 8 }, "start": { "line": 69, "column": 8 } }, "31": { "end": { "line": 70, "column": 8 }, "start": { "line": 70, "column": 8 } }, "32": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "33": { "end": { "line": 79, "column": 8 }, "start": { "line": 79, "column": 8 } }, "34": { "end": { "line": 82, "column": 9 }, "start": { "line": 80, "column": 8 } }, "35": { "end": { "line": 81, "column": 12 }, "start": { "line": 81, "column": 12 } }, "36": { "end": { "line": 84, "column": 8 }, "start": { "line": 84, "column": 8 } }, "37": { "end": { "line": 85, "column": 8 }, "start": { "line": 85, "column": 8 } }, "38": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "39": { "end": { "line": 97, "column": 9 }, "start": { "line": 95, "column": 8 } }, "40": { "end": { "line": 96, "column": 12 }, "start": { "line": 96, "column": 12 } }, "41": { "end": { "line": 98, "column": 8 }, "start": { "line": 98, "column": 8 } }, "42": { "end": { "line": 99, "column": 8 }, "start": { "line": 99, "column": 8 } }, "43": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "44": { "end": { "line": 106, "column": 8 }, "start": { "line": 106, "column": 8 } }, "45": { "end": { "line": 109, "column": 9 }, "start": { "line": 107, "column": 8 } }, "46": { "end": { "line": 108, "column": 12 }, "start": { "line": 108, "column": 12 } }, "47": { "end": { "line": 111, "column": 8 }, "start": { "line": 111, "column": 8 } }, "48": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "49": { "end": { "line": 117, "column": 14 }, "start": { "line": 117, "column": 14 } }, "50": { "end": { "line": 118, "column": 8 }, "start": { "line": 118, "column": 8 } }, "51": { "end": { "line": 118, "column": 44 }, "start": { "line": 118, "column": 44 } }, "52": { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, "53": { "end": { "line": 120, "column": 8 }, "start": { "line": 120, "column": 8 } }, "54": { "end": { "line": 122, "column": 8 }, "start": { "line": 122, "column": 8 } }, "55": { "end": { "line": 123, "column": 8 }, "start": { "line": 123, "column": 8 } }, "56": { "end": { "line": 124, "column": 8 }, "start": { "line": 124, "column": 8 } }, "57": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 12, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 24, "type": "binary-expr", "locations": [{ "end": { "line": 14, "column": 11 }, "start": { "line": 14, "column": 12 } }, { "end": { "line": 14, "column": 40 }, "start": { "line": 14, "column": 40 } }, { "end": { "line": 14, "column": 11 }, "start": { "line": 14, "column": 65 } }] }, "3": { "line": 78, "type": "if", "locations": [{ "end": { "line": 61, "column": 8 }, "start": { "line": 61, "column": 8 } }, { "end": { "line": 61, "column": 8 }, "start": { "line": 61, "column": 8 } }] }, "4": { "line": 101, "type": "if", "locations": [{ "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }] }, "5": { "line": 118, "type": "if", "locations": [{ "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }, { "end": { "line": 95, "column": 8 }, "start": { "line": 95, "column": 8 } }] }, "6": { "line": 132, "type": "if", "locations": [{ "end": { "line": 107, "column": 8 }, "start": { "line": 107, "column": 8 } }, { "end": { "line": 107, "column": 8 }, "start": { "line": 107, "column": 8 } }] } }, "code": ["import {addEvt, removeEvt} from '../event';", "import {root} from '../root';", "", "const JSON = root.JSON;", "const location = root.location;", "const decodeURIComponent = root.decodeURIComponent;", "const encodeURIComponent = root.encodeURIComponent;", "", "/**", " * Checks if browser has onhashchange event", " */", "export const hasHashChange = () => {", "    let docMode = root.documentMode;", "    return ('onhashchange' in root) && (docMode === undefined || docMode > 7);", "};", "", "/**", " * Manages state via URL hash changes", " *", " * @export", " * @class Hash", " */", "export class Hash {", "", "    /**", "     * Creates an instance of Hash", "     *", "     * @param {State} state Instance of State", "     */", "    constructor(state) {", "        /**", "         * State object", "         * @type {State}", "         */", "        this.state = state;", "", "        /**", "         * Cached URL hash", "         * @type {String} Hash string", "         * @private", "         */", "        this.lastHash = null;", "", "        /**", "         * Application event emitter instance", "         * @type {Emitter}", "         */", "        this.emitter = state.emitter;", "", "        /**", "         * Bound sync wrapper for future use", "         * @private", "         */", "        this.boundSync = null;", "    }", "", "    /**", "     * Initializes the Hash object", "     */", "    init() {", "        if (!hasHashChange()) {", "            return;", "        }", "", "        this.lastHash = location.hash;", "        //Store a bound sync wrapper", "        this.boundSync = this.sync.bind(this);", "        this.emitter.on(['state-changed'], (tf, state) => this.update(state));", "        this.emitter.on(['initialized'], this.boundSync);", "        addEvt(root, 'hashchange', this.boundSync);", "    }", "", "    /**", "     * Updates the URL hash based on a state change", "     *", "     * @param {State} state Instance of State", "     */", "    update(state) {", "        let hash = `#${encodeURIComponent(JSON.stringify(state))}`;", "        if (this.lastHash === hash) {", "            return;", "        }", "", "        location.hash = hash;", "        this.lastHash = hash;", "    }", "", "    /**", "     * Converts a URL hash into a state JSON object", "     *", "     * @param {String} hash URL hash fragment", "     * @returns {Object} JSON object", "     */", "    parse(hash) {", "        if (hash.indexOf('#') === -1) {", "            return null;", "        }", "        hash = hash.substr(1);", "        return JSON.parse(decodeURIComponent(hash));", "    }", "", "    /**", "     * Applies current hash state to features", "     */", "    sync() {", "        let state = this.parse(location.hash);", "        if (!state) {", "            return;", "        }", "        // override current state with persisted one and sync features", "        this.state.overrideAndSync(state);", "    }", "", "    /**", "     * Release Hash event subscriptions and clear fields", "     */", "    destroy() {", "        this.emitter.off(['state-changed'], (tf, state) => this.update(state));", "        this.emitter.off(['initialized'], this.boundSync);", "        removeEvt(root, 'hashchange', this.boundSync);", "", "        this.state = null;", "        this.lastHash = null;", "        this.emitter = null;", "    }", "}", ""] };
	}
	__cov_sq__4Ow0B5wi6aFUco3cXA = __cov_sq__4Ow0B5wi6aFUco3cXA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\hash.js'];
	__cov_sq__4Ow0B5wi6aFUco3cXA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_sq__4Ow0B5wi6aFUco3cXA.s['2']++;exports.Hash = exports.hasHashChange = undefined;__cov_sq__4Ow0B5wi6aFUco3cXA.s['3']++;var _event = __webpack_require__(1);__cov_sq__4Ow0B5wi6aFUco3cXA.s['4']++;var _root = __webpack_require__(2);function _classCallCheck(instance, Constructor) {
	   __cov_sq__4Ow0B5wi6aFUco3cXA.f['1']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['6']++;if (!(instance instanceof Constructor)) {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.b['1'][0]++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['7']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.b['1'][1]++;
	   }
	}__cov_sq__4Ow0B5wi6aFUco3cXA.s['8']++;var JSON = _root.root.JSON;__cov_sq__4Ow0B5wi6aFUco3cXA.s['9']++;var location = _root.root.location;__cov_sq__4Ow0B5wi6aFUco3cXA.s['10']++;var decodeURIComponent = _root.root.decodeURIComponent;__cov_sq__4Ow0B5wi6aFUco3cXA.s['11']++;var encodeURIComponent = _root.root.encodeURIComponent;__cov_sq__4Ow0B5wi6aFUco3cXA.s['12']++;var hasHashChange = exports.hasHashChange = function hasHashChange() {
	   __cov_sq__4Ow0B5wi6aFUco3cXA.f['2']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['13']++;var docMode = _root.root.documentMode;__cov_sq__4Ow0B5wi6aFUco3cXA.s['14']++;return (__cov_sq__4Ow0B5wi6aFUco3cXA.b['2'][0]++, 'onhashchange' in _root.root) && ((__cov_sq__4Ow0B5wi6aFUco3cXA.b['2'][1]++, docMode === undefined) || (__cov_sq__4Ow0B5wi6aFUco3cXA.b['2'][2]++, docMode > 7));
	};__cov_sq__4Ow0B5wi6aFUco3cXA.s['15']++;var Hash = exports.Hash = function () {
	   __cov_sq__4Ow0B5wi6aFUco3cXA.f['3']++;function Hash(state) {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.f['4']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['17']++;_classCallCheck(this, Hash);__cov_sq__4Ow0B5wi6aFUco3cXA.s['18']++;this.state = state;__cov_sq__4Ow0B5wi6aFUco3cXA.s['19']++;this.lastHash = null;__cov_sq__4Ow0B5wi6aFUco3cXA.s['20']++;this.emitter = state.emitter;__cov_sq__4Ow0B5wi6aFUco3cXA.s['21']++;this.boundSync = null;
	   }__cov_sq__4Ow0B5wi6aFUco3cXA.s['22']++;Hash.prototype.init = function init() {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.f['5']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['23']++;var _this = this;__cov_sq__4Ow0B5wi6aFUco3cXA.s['24']++;if (!hasHashChange()) {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['3'][0]++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['25']++;return;
	      } else {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['3'][1]++;
	      }__cov_sq__4Ow0B5wi6aFUco3cXA.s['26']++;this.lastHash = location.hash;__cov_sq__4Ow0B5wi6aFUco3cXA.s['27']++;this.boundSync = this.sync.bind(this);__cov_sq__4Ow0B5wi6aFUco3cXA.s['28']++;this.emitter.on(['state-changed'], function (tf, state) {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.f['6']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['29']++;return _this.update(state);
	      });__cov_sq__4Ow0B5wi6aFUco3cXA.s['30']++;this.emitter.on(['initialized'], this.boundSync);__cov_sq__4Ow0B5wi6aFUco3cXA.s['31']++;(0, _event.addEvt)(_root.root, 'hashchange', this.boundSync);
	   };__cov_sq__4Ow0B5wi6aFUco3cXA.s['32']++;Hash.prototype.update = function update(state) {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.f['7']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['33']++;var hash = '#' + encodeURIComponent(JSON.stringify(state));__cov_sq__4Ow0B5wi6aFUco3cXA.s['34']++;if (this.lastHash === hash) {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['4'][0]++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['35']++;return;
	      } else {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['4'][1]++;
	      }__cov_sq__4Ow0B5wi6aFUco3cXA.s['36']++;location.hash = hash;__cov_sq__4Ow0B5wi6aFUco3cXA.s['37']++;this.lastHash = hash;
	   };__cov_sq__4Ow0B5wi6aFUco3cXA.s['38']++;Hash.prototype.parse = function parse(hash) {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.f['8']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['39']++;if (hash.indexOf('#') === -1) {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['5'][0]++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['40']++;return null;
	      } else {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['5'][1]++;
	      }__cov_sq__4Ow0B5wi6aFUco3cXA.s['41']++;hash = hash.substr(1);__cov_sq__4Ow0B5wi6aFUco3cXA.s['42']++;return JSON.parse(decodeURIComponent(hash));
	   };__cov_sq__4Ow0B5wi6aFUco3cXA.s['43']++;Hash.prototype.sync = function sync() {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.f['9']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['44']++;var state = this.parse(location.hash);__cov_sq__4Ow0B5wi6aFUco3cXA.s['45']++;if (!state) {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['6'][0]++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['46']++;return;
	      } else {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.b['6'][1]++;
	      }__cov_sq__4Ow0B5wi6aFUco3cXA.s['47']++;this.state.overrideAndSync(state);
	   };__cov_sq__4Ow0B5wi6aFUco3cXA.s['48']++;Hash.prototype.destroy = function destroy() {
	      __cov_sq__4Ow0B5wi6aFUco3cXA.f['10']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['49']++;var _this2 = this;__cov_sq__4Ow0B5wi6aFUco3cXA.s['50']++;this.emitter.off(['state-changed'], function (tf, state) {
	         __cov_sq__4Ow0B5wi6aFUco3cXA.f['11']++;__cov_sq__4Ow0B5wi6aFUco3cXA.s['51']++;return _this2.update(state);
	      });__cov_sq__4Ow0B5wi6aFUco3cXA.s['52']++;this.emitter.off(['initialized'], this.boundSync);__cov_sq__4Ow0B5wi6aFUco3cXA.s['53']++;(0, _event.removeEvt)(_root.root, 'hashchange', this.boundSync);__cov_sq__4Ow0B5wi6aFUco3cXA.s['54']++;this.state = null;__cov_sq__4Ow0B5wi6aFUco3cXA.s['55']++;this.lastHash = null;__cov_sq__4Ow0B5wi6aFUco3cXA.s['56']++;this.emitter = null;
	   };__cov_sq__4Ow0B5wi6aFUco3cXA.s['57']++;return Hash;
	}();

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_j4ELg5dNAKF$$g$ehmvB4g = Function('return this')();
	if (!__cov_j4ELg5dNAKF$$g$ehmvB4g.__coverage__) {
	   __cov_j4ELg5dNAKF$$g$ehmvB4g.__coverage__ = {};
	}
	__cov_j4ELg5dNAKF$$g$ehmvB4g = __cov_j4ELg5dNAKF$$g$ehmvB4g.__coverage__;
	if (!__cov_j4ELg5dNAKF$$g$ehmvB4g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\storage.js']) {
	   __cov_j4ELg5dNAKF$$g$ehmvB4g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\storage.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\storage.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 1, "7": 0, "8": 1, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 1, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 0, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0 }, "fnMap": { "1": { "line": 14, "name": "_interopRequireDefault", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 16, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 25, "name": "hasStorage", "loc": { "start": { "line": 12, "column": 26 }, "end": { "line": 12, "column": 32 } } }, "4": { "line": 36, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 43, "name": "Storage", "loc": { "start": { "line": 29, "column": 4 }, "end": { "line": 29, "column": 23 } } }, "6": { "line": 94, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 97, "name": "(anonymous_7)", "loc": { "start": { "line": 79, "column": 43 }, "end": { "line": 79, "column": 43 } } }, "8": { "line": 100, "name": "(anonymous_8)", "loc": { "start": { "line": 80, "column": 41 }, "end": { "line": 80, "column": 41 } } }, "9": { "line": 112, "name": "save", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 127, "name": "retrieve", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 146, "name": "remove", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 159, "name": "sync", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "13": { "line": 175, "name": "getKey", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "14": { "line": 187, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "15": { "line": 190, "name": "(anonymous_15)", "loc": { "start": { "line": 154, "column": 44 }, "end": { "line": 154, "column": 44 } } }, "16": { "line": 193, "name": "(anonymous_16)", "loc": { "start": { "line": 155, "column": 42 }, "end": { "line": 155, "column": 42 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "7": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "8": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "12": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "13": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "14": { "end": { "line": 12, "column": 7 }, "start": { "line": 12, "column": 7 } }, "15": { "end": { "line": 13, "column": 4 }, "start": { "line": 13, "column": 4 } }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "end": { "line": 72, "column": 5 }, "start": { "line": 29, "column": 4 } }, "18": { "end": { "line": 29, "column": 23 }, "start": { "line": 29, "column": 23 } }, "19": { "end": { "line": 36, "column": 8 }, "start": { "line": 36, "column": 8 } }, "20": { "end": { "line": 43, "column": 8 }, "start": { "line": 43, "column": 8 } }, "21": { "end": { "line": 50, "column": 8 }, "start": { "line": 50, "column": 8 } }, "22": { "end": { "line": 57, "column": 8 }, "start": { "line": 57, "column": 8 } }, "23": { "end": { "line": 64, "column": 8 }, "start": { "line": 64, "column": 8 } }, "24": { "end": { "line": 71, "column": 8 }, "start": { "line": 71, "column": 8 } }, "25": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "26": { "end": { "line": 78, "column": 11 }, "start": { "line": 78, "column": 11 } }, "27": { "end": { "line": 79, "column": 8 }, "start": { "line": 79, "column": 8 } }, "28": { "end": { "line": 79, "column": 43 }, "start": { "line": 79, "column": 43 } }, "29": { "end": { "line": 80, "column": 8 }, "start": { "line": 80, "column": 8 } }, "30": { "end": { "line": 80, "column": 41 }, "start": { "line": 80, "column": 41 } }, "31": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "32": { "end": { "line": 93, "column": 9 }, "start": { "line": 89, "column": 8 } }, "33": { "end": { "line": 90, "column": 12 }, "start": { "line": 90, "column": 12 } }, "34": { "end": { "line": 92, "column": 12 }, "start": { "line": 92, "column": 12 } }, "35": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "36": { "end": { "line": 102, "column": 8 }, "start": { "line": 102, "column": 8 } }, "37": { "end": { "line": 107, "column": 9 }, "start": { "line": 103, "column": 8 } }, "38": { "end": { "line": 104, "column": 12 }, "start": { "line": 104, "column": 12 } }, "39": { "end": { "line": 106, "column": 12 }, "start": { "line": 106, "column": 12 } }, "40": { "end": { "line": 111, "column": 9 }, "start": { "line": 109, "column": 8 } }, "41": { "end": { "line": 110, "column": 12 }, "start": { "line": 110, "column": 12 } }, "42": { "end": { "line": 112, "column": 8 }, "start": { "line": 112, "column": 8 } }, "43": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "44": { "end": { "line": 123, "column": 9 }, "start": { "line": 119, "column": 8 } }, "45": { "end": { "line": 120, "column": 12 }, "start": { "line": 120, "column": 12 } }, "46": { "end": { "line": 122, "column": 12 }, "start": { "line": 122, "column": 12 } }, "47": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "48": { "end": { "line": 130, "column": 8 }, "start": { "line": 130, "column": 8 } }, "49": { "end": { "line": 133, "column": 9 }, "start": { "line": 131, "column": 8 } }, "50": { "end": { "line": 132, "column": 12 }, "start": { "line": 132, "column": 12 } }, "51": { "end": { "line": 135, "column": 8 }, "start": { "line": 135, "column": 8 } }, "52": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "53": { "end": { "line": 144, "column": 8 }, "start": { "line": 144, "column": 8 } }, "54": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "55": { "end": { "line": 153, "column": 14 }, "start": { "line": 153, "column": 14 } }, "56": { "end": { "line": 154, "column": 8 }, "start": { "line": 154, "column": 8 } }, "57": { "end": { "line": 154, "column": 44 }, "start": { "line": 154, "column": 44 } }, "58": { "end": { "line": 155, "column": 8 }, "start": { "line": 155, "column": 8 } }, "59": { "end": { "line": 155, "column": 42 }, "start": { "line": 155, "column": 42 } }, "60": { "end": { "line": 157, "column": 8 }, "start": { "line": 157, "column": 8 } }, "61": { "end": { "line": 159, "column": 8 }, "start": { "line": 159, "column": 8 } }, "62": { "end": { "line": 160, "column": 8 }, "start": { "line": 160, "column": 8 } }, "63": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 14, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 14, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 16, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 65, "type": "binary-expr", "locations": [{ "end": { "line": 50, "column": 34 }, "start": { "line": 50, "column": 34 } }, { "end": { "line": 50, "column": 8 }, "start": { "line": 50, "column": 62 } }] }, "5": { "line": 72, "type": "binary-expr", "locations": [{ "end": { "line": 57, "column": 28 }, "start": { "line": 57, "column": 28 } }, { "end": { "line": 57, "column": 8 }, "start": { "line": 57, "column": 50 } }] }, "6": { "line": 113, "type": "if", "locations": [{ "end": { "line": 89, "column": 8 }, "start": { "line": 89, "column": 8 } }, { "end": { "line": 89, "column": 8 }, "start": { "line": 89, "column": 8 } }] }, "7": { "line": 129, "type": "if", "locations": [{ "end": { "line": 103, "column": 8 }, "start": { "line": 103, "column": 8 } }, { "end": { "line": 103, "column": 8 }, "start": { "line": 103, "column": 8 } }] }, "8": { "line": 135, "type": "if", "locations": [{ "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }, { "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }] }, "9": { "line": 147, "type": "if", "locations": [{ "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }, { "end": { "line": 119, "column": 8 }, "start": { "line": 119, "column": 8 } }] }, "10": { "line": 161, "type": "if", "locations": [{ "end": { "line": 131, "column": 8 }, "start": { "line": 131, "column": 8 } }, { "end": { "line": 131, "column": 8 }, "start": { "line": 131, "column": 8 } }] } }, "code": ["", "import Cookie from '../cookie';", "import {root} from '../root';", "", "const JSON = root.JSON;", "const localStorage = root.localStorage;", "const location = root.location;", "", "/**", " * Checks if browser has Storage feature", " */", "export const hasStorage = () => {", "    return 'Storage' in root;", "};", "", "/**", " * Stores the features state in browser's local storage or cookie", " *", " * @export", " * @class Storage", " */", "export class Storage {", "", "    /**", "     * Creates an instance of Storage", "     *", "     * @param {State} state Instance of State", "     */", "    constructor(state) {", "", "        /**", "         * State object", "         * @type {State}", "         * @private", "         */", "        this.state = state;", "", "        /**", "         * TableFilter object", "         * @type {TableFilter}", "         * @private", "         */", "        this.tf = state.tf;", "", "        /**", "         * Persist with local storage", "         * @type {Boolean}", "         * @private", "         */", "        this.enableLocalStorage = state.enableLocalStorage && hasStorage();", "", "        /**", "         * Persist with cookie", "         * @type {Boolean}", "         * @private", "         */", "        this.enableCookie = state.enableCookie && !this.enableLocalStorage;", "", "        /**", "         * Emitter object", "         * @type {Emitter}", "         * @private", "         */", "        this.emitter = state.emitter;", "", "        /**", "         * Cookie duration in hours from state object", "         * @type {Number}", "         * @private", "         */", "        this.duration = state.cookieDuration;", "    }", "", "", "    /**", "     * Initializes the Storage object", "     */", "    init() {", "        this.emitter.on(['state-changed'], (tf, state) => this.save(state));", "        this.emitter.on(['initialized'], () => this.sync());", "    }", "", "    /**", "     * Persists the features state on state changes", "     *", "     * @param {State} state Instance of State", "     */", "    save(state) {", "        if (this.enableLocalStorage) {", "            localStorage[this.getKey()] = JSON.stringify(state);", "        } else {", "            Cookie.write(this.getKey(), JSON.stringify(state), this.duration);", "        }", "    }", "", "    /**", "     * Turns stored string into a State JSON object", "     *", "     *  @returns {Object} JSON object", "     */", "    retrieve() {", "        let state = null;", "        if (this.enableLocalStorage) {", "            state = localStorage[this.getKey()];", "        } else {", "            state = Cookie.read(this.getKey());", "        }", "", "        if (!state) {", "            return null;", "        }", "        return JSON.parse(state);", "    }", "", "    /**", "     * Removes persisted state from storage", "     */", "    remove() {", "        if (this.enableLocalStorage) {", "            localStorage.removeItem(this.getKey());", "        } else {", "            Cookie.remove(this.getKey());", "        }", "    }", "", "    /**", "     * Applies persisted state to features", "     */", "    sync() {", "        let state = this.retrieve();", "        if (!state) {", "            return;", "        }", "        // override current state with persisted one and sync features", "        this.state.overrideAndSync(state);", "    }", "", "    /**", "     * Returns the storage key", "     *", "     * @returns {String} Key", "     */", "    getKey() {", "        return JSON.stringify({", "            key: `${this.tf.prfxTf}_${this.tf.id}`,", "            path: location.pathname", "        });", "    }", "", "    /**", "     * Release Storage event subscriptions and clear fields", "     */", "    destroy() {", "        this.emitter.off(['state-changed'], (tf, state) => this.save(state));", "        this.emitter.off(['initialized'], () => this.sync());", "", "        this.remove();", "", "        this.state = null;", "        this.emitter = null;", "    }", "}", ""] };
	}
	__cov_j4ELg5dNAKF$$g$ehmvB4g = __cov_j4ELg5dNAKF$$g$ehmvB4g['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\storage.js'];
	__cov_j4ELg5dNAKF$$g$ehmvB4g.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_j4ELg5dNAKF$$g$ehmvB4g.s['2']++;exports.Storage = exports.hasStorage = undefined;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['3']++;var _cookie = __webpack_require__(29);__cov_j4ELg5dNAKF$$g$ehmvB4g.s['4']++;var _cookie2 = _interopRequireDefault(_cookie);__cov_j4ELg5dNAKF$$g$ehmvB4g.s['5']++;var _root = __webpack_require__(2);function _interopRequireDefault(obj) {
	   __cov_j4ELg5dNAKF$$g$ehmvB4g.f['1']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['7']++;return (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['2'][0]++, obj) && (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['2'][1]++, obj.__esModule) ? (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['1'][0]++, obj) : (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['1'][1]++, { default: obj });
	}function _classCallCheck(instance, Constructor) {
	   __cov_j4ELg5dNAKF$$g$ehmvB4g.f['2']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['9']++;if (!(instance instanceof Constructor)) {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.b['3'][0]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['10']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.b['3'][1]++;
	   }
	}__cov_j4ELg5dNAKF$$g$ehmvB4g.s['11']++;var JSON = _root.root.JSON;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['12']++;var localStorage = _root.root.localStorage;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['13']++;var location = _root.root.location;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['14']++;var hasStorage = exports.hasStorage = function hasStorage() {
	   __cov_j4ELg5dNAKF$$g$ehmvB4g.f['3']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['15']++;return 'Storage' in _root.root;
	};__cov_j4ELg5dNAKF$$g$ehmvB4g.s['16']++;var Storage = exports.Storage = function () {
	   __cov_j4ELg5dNAKF$$g$ehmvB4g.f['4']++;function Storage(state) {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['5']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['18']++;_classCallCheck(this, Storage);__cov_j4ELg5dNAKF$$g$ehmvB4g.s['19']++;this.state = state;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['20']++;this.tf = state.tf;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['21']++;this.enableLocalStorage = (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['4'][0]++, state.enableLocalStorage) && (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['4'][1]++, hasStorage());__cov_j4ELg5dNAKF$$g$ehmvB4g.s['22']++;this.enableCookie = (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['5'][0]++, state.enableCookie) && (__cov_j4ELg5dNAKF$$g$ehmvB4g.b['5'][1]++, !this.enableLocalStorage);__cov_j4ELg5dNAKF$$g$ehmvB4g.s['23']++;this.emitter = state.emitter;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['24']++;this.duration = state.cookieDuration;
	   }__cov_j4ELg5dNAKF$$g$ehmvB4g.s['25']++;Storage.prototype.init = function init() {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['6']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['26']++;var _this = this;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['27']++;this.emitter.on(['state-changed'], function (tf, state) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.f['7']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['28']++;return _this.save(state);
	      });__cov_j4ELg5dNAKF$$g$ehmvB4g.s['29']++;this.emitter.on(['initialized'], function () {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.f['8']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['30']++;return _this.sync();
	      });
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['31']++;Storage.prototype.save = function save(state) {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['9']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['32']++;if (this.enableLocalStorage) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['6'][0]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['33']++;localStorage[this.getKey()] = JSON.stringify(state);
	      } else {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['6'][1]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['34']++;_cookie2.default.write(this.getKey(), JSON.stringify(state), this.duration);
	      }
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['35']++;Storage.prototype.retrieve = function retrieve() {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['10']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['36']++;var state = null;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['37']++;if (this.enableLocalStorage) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['7'][0]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['38']++;state = localStorage[this.getKey()];
	      } else {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['7'][1]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['39']++;state = _cookie2.default.read(this.getKey());
	      }__cov_j4ELg5dNAKF$$g$ehmvB4g.s['40']++;if (!state) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['8'][0]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['41']++;return null;
	      } else {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['8'][1]++;
	      }__cov_j4ELg5dNAKF$$g$ehmvB4g.s['42']++;return JSON.parse(state);
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['43']++;Storage.prototype.remove = function remove() {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['11']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['44']++;if (this.enableLocalStorage) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['9'][0]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['45']++;localStorage.removeItem(this.getKey());
	      } else {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['9'][1]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['46']++;_cookie2.default.remove(this.getKey());
	      }
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['47']++;Storage.prototype.sync = function sync() {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['12']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['48']++;var state = this.retrieve();__cov_j4ELg5dNAKF$$g$ehmvB4g.s['49']++;if (!state) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['10'][0]++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['50']++;return;
	      } else {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.b['10'][1]++;
	      }__cov_j4ELg5dNAKF$$g$ehmvB4g.s['51']++;this.state.overrideAndSync(state);
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['52']++;Storage.prototype.getKey = function getKey() {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['13']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['53']++;return JSON.stringify({ key: this.tf.prfxTf + '_' + this.tf.id, path: location.pathname });
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['54']++;Storage.prototype.destroy = function destroy() {
	      __cov_j4ELg5dNAKF$$g$ehmvB4g.f['14']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['55']++;var _this2 = this;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['56']++;this.emitter.off(['state-changed'], function (tf, state) {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.f['15']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['57']++;return _this2.save(state);
	      });__cov_j4ELg5dNAKF$$g$ehmvB4g.s['58']++;this.emitter.off(['initialized'], function () {
	         __cov_j4ELg5dNAKF$$g$ehmvB4g.f['16']++;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['59']++;return _this2.sync();
	      });__cov_j4ELg5dNAKF$$g$ehmvB4g.s['60']++;this.remove();__cov_j4ELg5dNAKF$$g$ehmvB4g.s['61']++;this.state = null;__cov_j4ELg5dNAKF$$g$ehmvB4g.s['62']++;this.emitter = null;
	   };__cov_j4ELg5dNAKF$$g$ehmvB4g.s['63']++;return Storage;
	}();

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var __cov_6acLiavqSjnEg$sTtKQNsA = Function('return this')();
	if (!__cov_6acLiavqSjnEg$sTtKQNsA.__coverage__) {
	   __cov_6acLiavqSjnEg$sTtKQNsA.__coverage__ = {};
	}
	__cov_6acLiavqSjnEg$sTtKQNsA = __cov_6acLiavqSjnEg$sTtKQNsA.__coverage__;
	if (!__cov_6acLiavqSjnEg$sTtKQNsA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\cookie.js']) {
	   __cov_6acLiavqSjnEg$sTtKQNsA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\cookie.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\cookie.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0, "17": 0, "18": 0, "19": 0, "20": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0 }, "fnMap": { "1": { "line": 23, "name": "write", "loc": { "start": { "line": 9, "column": 15 }, "end": { "line": 17, "column": 30 } } }, "2": { "line": 38, "name": "read", "loc": { "start": { "line": 9, "column": 15 }, "end": { "line": 31, "column": 15 } } }, "3": { "line": 61, "name": "remove", "loc": { "start": { "line": 9, "column": 15 }, "end": { "line": 53, "column": 17 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "3": { "end": { "line": 7, "column": 0 }, "start": { "line": 7, "column": 0 } }, "4": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "5": { "end": { "line": 18, "column": 8 }, "start": { "line": 18, "column": 8 } }, "6": { "end": { "line": 22, "column": 9 }, "start": { "line": 19, "column": 8 } }, "7": { "end": { "line": 20, "column": 12 }, "start": { "line": 20, "column": 12 } }, "8": { "end": { "line": 21, "column": 12 }, "start": { "line": 21, "column": 12 } }, "9": { "end": { "line": 23, "column": 8 }, "start": { "line": 23, "column": 8 } }, "10": { "end": { "line": 32, "column": 8 }, "start": { "line": 32, "column": 8 } }, "11": { "end": { "line": 45, "column": 9 }, "start": { "line": 34, "column": 8 } }, "12": { "end": { "line": 35, "column": 12 }, "start": { "line": 35, "column": 12 } }, "13": { "end": { "line": 44, "column": 13 }, "start": { "line": 37, "column": 12 } }, "14": { "end": { "line": 38, "column": 16 }, "start": { "line": 38, "column": 16 } }, "15": { "end": { "line": 39, "column": 16 }, "start": { "line": 39, "column": 16 } }, "16": { "end": { "line": 42, "column": 17 }, "start": { "line": 40, "column": 16 } }, "17": { "end": { "line": 41, "column": 20 }, "start": { "line": 41, "column": 20 } }, "18": { "end": { "line": 43, "column": 16 }, "start": { "line": 43, "column": 16 } }, "19": { "end": { "line": 46, "column": 8 }, "start": { "line": 46, "column": 8 } }, "20": { "end": { "line": 54, "column": 8 }, "start": { "line": 54, "column": 8 } } }, "branchMap": { "1": { "line": 25, "type": "if", "locations": [{ "end": { "line": 19, "column": 8 }, "start": { "line": 19, "column": 8 } }, { "end": { "line": 19, "column": 8 }, "start": { "line": 19, "column": 8 } }] }, "2": { "line": 41, "type": "if", "locations": [{ "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }] }, "3": { "line": 44, "type": "if", "locations": [{ "end": { "line": 37, "column": 12 }, "start": { "line": 37, "column": 12 } }, { "end": { "line": 37, "column": 12 }, "start": { "line": 37, "column": 12 } }] }, "4": { "line": 47, "type": "if", "locations": [{ "end": { "line": 40, "column": 16 }, "start": { "line": 40, "column": 16 } }, { "end": { "line": 40, "column": 16 }, "start": { "line": 40, "column": 16 } }] } }, "code": ["import {root} from './root';", "", "/**", " * Cookie utilities", " */", "", "const doc = root.document;", "", "export default {", "", "    /**", "     * Write a cookie", "     * @param {String} name Name of the cookie", "     * @param {String} value Value of the cookie", "     * @param {Number} hours Cookie duration in hours", "     */", "    write(name, value, hours) {", "        let expire = '';", "        if (hours) {", "            expire = new Date((new Date()).getTime() + hours * 3600000);", "            expire = '; expires=' + expire.toGMTString();", "        }", "        doc.cookie = name + '=' + escape(value) + expire;", "    },", "", "    /**", "     * Read a cookie", "     * @param {String} name Name of the cookie", "     * @returns {String} Value of the cookie", "     */", "    read(name) {", "        let cookieValue = '',", "            search = name + '=';", "        if (doc.cookie.length > 0) {", "            let cookie = doc.cookie,", "                offset = cookie.indexOf(search);", "            if (offset !== -1) {", "                offset += search.length;", "                let end = cookie.indexOf(';', offset);", "                if (end === -1) {", "                    end = cookie.length;", "                }", "                cookieValue = unescape(cookie.substring(offset, end));", "            }", "        }", "        return cookieValue;", "    },", "", "    /**", "     * Remove a cookie", "     * @param {String} name Name of the cookie", "     */", "    remove(name) {", "        this.write(name, '', -1);", "    }", "", "};", ""] };
	}
	__cov_6acLiavqSjnEg$sTtKQNsA = __cov_6acLiavqSjnEg$sTtKQNsA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\cookie.js'];
	__cov_6acLiavqSjnEg$sTtKQNsA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_6acLiavqSjnEg$sTtKQNsA.s['2']++;var _root = __webpack_require__(2);__cov_6acLiavqSjnEg$sTtKQNsA.s['3']++;var doc = _root.root.document;__cov_6acLiavqSjnEg$sTtKQNsA.s['4']++;exports.default = { write: function write(name, value, hours) {
	      __cov_6acLiavqSjnEg$sTtKQNsA.f['1']++;__cov_6acLiavqSjnEg$sTtKQNsA.s['5']++;var expire = '';__cov_6acLiavqSjnEg$sTtKQNsA.s['6']++;if (hours) {
	         __cov_6acLiavqSjnEg$sTtKQNsA.b['1'][0]++;__cov_6acLiavqSjnEg$sTtKQNsA.s['7']++;expire = new Date(new Date().getTime() + hours * 3600000);__cov_6acLiavqSjnEg$sTtKQNsA.s['8']++;expire = '; expires=' + expire.toGMTString();
	      } else {
	         __cov_6acLiavqSjnEg$sTtKQNsA.b['1'][1]++;
	      }__cov_6acLiavqSjnEg$sTtKQNsA.s['9']++;doc.cookie = name + '=' + escape(value) + expire;
	   }, read: function read(name) {
	      __cov_6acLiavqSjnEg$sTtKQNsA.f['2']++;__cov_6acLiavqSjnEg$sTtKQNsA.s['10']++;var cookieValue = '',
	          search = name + '=';__cov_6acLiavqSjnEg$sTtKQNsA.s['11']++;if (doc.cookie.length > 0) {
	         __cov_6acLiavqSjnEg$sTtKQNsA.b['2'][0]++;__cov_6acLiavqSjnEg$sTtKQNsA.s['12']++;var cookie = doc.cookie,
	             offset = cookie.indexOf(search);__cov_6acLiavqSjnEg$sTtKQNsA.s['13']++;if (offset !== -1) {
	            __cov_6acLiavqSjnEg$sTtKQNsA.b['3'][0]++;__cov_6acLiavqSjnEg$sTtKQNsA.s['14']++;offset += search.length;__cov_6acLiavqSjnEg$sTtKQNsA.s['15']++;var end = cookie.indexOf(';', offset);__cov_6acLiavqSjnEg$sTtKQNsA.s['16']++;if (end === -1) {
	               __cov_6acLiavqSjnEg$sTtKQNsA.b['4'][0]++;__cov_6acLiavqSjnEg$sTtKQNsA.s['17']++;end = cookie.length;
	            } else {
	               __cov_6acLiavqSjnEg$sTtKQNsA.b['4'][1]++;
	            }__cov_6acLiavqSjnEg$sTtKQNsA.s['18']++;cookieValue = unescape(cookie.substring(offset, end));
	         } else {
	            __cov_6acLiavqSjnEg$sTtKQNsA.b['3'][1]++;
	         }
	      } else {
	         __cov_6acLiavqSjnEg$sTtKQNsA.b['2'][1]++;
	      }__cov_6acLiavqSjnEg$sTtKQNsA.s['19']++;return cookieValue;
	   }, remove: function remove(name) {
	      __cov_6acLiavqSjnEg$sTtKQNsA.f['3']++;__cov_6acLiavqSjnEg$sTtKQNsA.s['20']++;this.write(name, '', -1);
	   } };

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var __cov_UB$PZ1ROYf6yXJD3uDnUMA = Function('return this')();
	if (!__cov_UB$PZ1ROYf6yXJD3uDnUMA.__coverage__) {
	   __cov_UB$PZ1ROYf6yXJD3uDnUMA.__coverage__ = {};
	}
	__cov_UB$PZ1ROYf6yXJD3uDnUMA = __cov_UB$PZ1ROYf6yXJD3uDnUMA.__coverage__;
	if (!__cov_UB$PZ1ROYf6yXJD3uDnUMA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dateType.js']) {
	   __cov_UB$PZ1ROYf6yXJD3uDnUMA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dateType.js'] = { "path": 'C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dateType.js', "s": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 1, "10": 0, "11": 0, "12": 1, "13": 0, "14": 0, "15": 0, "16": 1, "17": 0, "18": 0, "19": 0, "20": 0, "21": 0, "22": 0, "23": 0, "24": 1, "25": 0, "26": 0, "27": 0, "28": 0, "29": 0, "30": 0, "31": 0, "32": 0, "33": 0, "34": 0, "35": 0, "36": 0, "37": 0, "38": 0, "39": 0, "40": 0, "41": 0, "42": 0, "43": 0, "44": 0, "45": 0, "46": 0, "47": 0, "48": 0, "49": 0, "50": 0, "51": 0, "52": 0, "53": 0, "54": 0, "55": 0, "56": 0, "57": 0, "58": 0, "59": 0, "60": 0, "61": 0, "62": 0, "63": 0, "64": 0, "65": 0, "66": 0, "67": 0, "68": 0, "69": 0 }, "b": { "1": [0, 0], "2": [0, 0], "3": [0, 0], "4": [0, 0, 0], "5": [0, 0], "6": [0, 0], "7": [0, 0], "8": [0, 0], "9": [0, 0], "10": [0, 0], "11": [0, 0], "12": [0, 0], "13": [0, 0], "14": [0, 0], "15": [0, 0], "16": [0, 0], "17": [0, 0], "18": [0, 0], "19": [0, 0] }, "f": { "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "15": 0, "16": 0 }, "fnMap": { "1": { "line": 20, "name": "_classCallCheck", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "2": { "line": 22, "name": "_possibleConstructorReturn", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "3": { "line": 24, "name": "_inherits", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "4": { "line": 31, "name": "(anonymous_4)", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "5": { "line": 38, "name": "DateType", "loc": { "start": { "line": 19, "column": 4 }, "end": { "line": 19, "column": 20 } } }, "6": { "line": 64, "name": "init", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "7": { "line": 77, "name": "(anonymous_7)", "loc": { "start": { "line": 53, "column": 12 }, "end": { "line": 53, "column": 12 } } }, "8": { "line": 97, "name": "parse", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "9": { "line": 109, "name": "isValid", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "10": { "line": 122, "name": "getOptions", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "11": { "line": 141, "name": "addConfigFormats", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "12": { "line": 146, "name": "(anonymous_12)", "loc": { "start": { "line": 109, "column": 22 }, "end": { "line": 109, "column": 37 } } }, "13": { "line": 149, "name": "(anonymous_13)", "loc": { "start": { "line": 111, "column": 75 }, "end": { "line": 111, "column": 75 } } }, "14": { "line": 155, "name": "(anonymous_14)", "loc": { "start": { "line": 120, "column": 36 }, "end": { "line": 120, "column": 48 } } }, "15": { "line": 171, "name": "destroy", "loc": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "skip": true }, "16": { "line": 180, "name": "(anonymous_16)", "loc": { "start": { "line": 142, "column": 12 }, "end": { "line": 142, "column": 12 } } } }, "statementMap": { "1": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "2": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "3": { "end": { "line": 1, "column": 0 }, "start": { "line": 1, "column": 0 } }, "4": { "end": { "line": 2, "column": 0 }, "start": { "line": 2, "column": 0 } }, "5": { "end": { "line": 3, "column": 0 }, "start": { "line": 3, "column": 0 } }, "6": { "end": { "line": 4, "column": 0 }, "start": { "line": 4, "column": 0 } }, "7": { "end": { "line": 5, "column": 0 }, "start": { "line": 5, "column": 0 } }, "8": { "end": { "line": 6, "column": 0 }, "start": { "line": 6, "column": 0 } }, "9": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "10": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "11": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "12": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "13": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "14": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "15": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "16": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "17": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "18": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "19": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "20": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "21": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "22": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "23": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "24": { "end": { "line": 35, "column": 5 }, "start": { "line": 19, "column": 4 } }, "25": { "end": { "line": 19, "column": 20 }, "start": { "line": 19, "column": 20 } }, "26": { "end": { "line": 19, "column": 20 }, "start": { "line": 19, "column": 20 } }, "27": { "end": { "line": 26, "column": 8 }, "start": { "line": 26, "column": 8 } }, "28": { "end": { "line": 32, "column": 8 }, "start": { "line": 32, "column": 8 } }, "29": { "end": { "line": 34, "column": 8 }, "start": { "line": 34, "column": 8 } }, "30": { "end": { "line": 19, "column": 20 }, "start": { "line": 19, "column": 20 } }, "31": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "32": { "end": { "line": 40, "column": 11 }, "start": { "line": 40, "column": 11 } }, "33": { "end": { "line": 43, "column": 9 }, "start": { "line": 41, "column": 8 } }, "34": { "end": { "line": 42, "column": 12 }, "start": { "line": 42, "column": 12 } }, "35": { "end": { "line": 46, "column": 8 }, "start": { "line": 46, "column": 8 } }, "36": { "end": { "line": 49, "column": 8 }, "start": { "line": 49, "column": 8 } }, "37": { "end": { "line": 51, "column": 8 }, "start": { "line": 51, "column": 8 } }, "38": { "end": { "line": 53, "column": 12 }, "start": { "line": 53, "column": 12 } }, "39": { "end": { "line": 57, "column": 8 }, "start": { "line": 57, "column": 8 } }, "40": { "end": { "line": 60, "column": 8 }, "start": { "line": 60, "column": 8 } }, "41": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "42": { "end": { "line": 71, "column": 8 }, "start": { "line": 71, "column": 8 } }, "43": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "44": { "end": { "line": 81, "column": 8 }, "start": { "line": 81, "column": 8 } }, "45": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "46": { "end": { "line": 92, "column": 8 }, "start": { "line": 92, "column": 8 } }, "47": { "end": { "line": 93, "column": 8 }, "start": { "line": 93, "column": 8 } }, "48": { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 8 } }, "49": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "50": { "end": { "line": 108, "column": 31 }, "start": { "line": 108, "column": 31 } }, "51": { "end": { "line": 108, "column": 31 }, "start": { "line": 108, "column": 31 } }, "52": { "end": { "line": 109, "column": 8 }, "start": { "line": 109, "column": 8 } }, "53": { "end": { "line": 110, "column": 12 }, "start": { "line": 110, "column": 12 } }, "54": { "end": { "line": 126, "column": 13 }, "start": { "line": 111, "column": 12 } }, "55": { "end": { "line": 111, "column": 75 }, "start": { "line": 111, "column": 75 } }, "56": { "end": { "line": 112, "column": 16 }, "start": { "line": 112, "column": 16 } }, "57": { "end": { "line": 115, "column": 16 }, "start": { "line": 115, "column": 16 } }, "58": { "end": { "line": 125, "column": 17 }, "start": { "line": 119, "column": 16 } }, "59": { "end": { "line": 120, "column": 20 }, "start": { "line": 120, "column": 20 } }, "60": { "end": { "line": 121, "column": 24 }, "start": { "line": 121, "column": 24 } }, "61": { "end": { "line": 124, "column": 20 }, "start": { "line": 124, "column": 20 } }, "62": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, "63": { "end": { "line": 133, "column": 14 }, "start": { "line": 133, "column": 14 } }, "64": { "end": { "line": 136, "column": 9 }, "start": { "line": 134, "column": 8 } }, "65": { "end": { "line": 135, "column": 12 }, "start": { "line": 135, "column": 12 } }, "66": { "end": { "line": 140, "column": 8 }, "start": { "line": 140, "column": 8 } }, "67": { "end": { "line": 142, "column": 12 }, "start": { "line": 142, "column": 12 } }, "68": { "end": { "line": 145, "column": 8 }, "start": { "line": 145, "column": 8 } }, "69": { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true } }, "branchMap": { "1": { "line": 20, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "2": { "line": 22, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "3": { "line": 22, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "4": { "line": 22, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "5": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "6": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "7": { "line": 24, "type": "binary-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "8": { "line": 24, "type": "if", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "9": { "line": 24, "type": "cond-expr", "locations": [{ "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }, { "start": { "line": 0, "column": 0 }, "end": { "line": 0, "column": 0 }, "skip": true }] }, "10": { "line": 67, "type": "if", "locations": [{ "end": { "line": 41, "column": 8 }, "start": { "line": 41, "column": 8 } }, { "end": { "line": 41, "column": 8 }, "start": { "line": 41, "column": 8 } }] }, "11": { "line": 123, "type": "binary-expr", "locations": [{ "end": { "line": 92, "column": 16 }, "start": { "line": 92, "column": 16 } }, { "end": { "line": 92, "column": 8 }, "start": { "line": 92, "column": 25 } }] }, "12": { "line": 125, "type": "cond-expr", "locations": [{ "end": { "line": 94, "column": 15 }, "start": { "line": 94, "column": 32 } }, { "end": { "line": 94, "column": 8 }, "start": { "line": 94, "column": 42 } }] }, "13": { "line": 144, "type": "cond-expr", "locations": [{ "end": { "line": 108, "column": 31 }, "start": { "line": 108, "column": 31 } }, { "end": { "line": 108, "column": 31 }, "start": { "line": 108, "column": 27 } }] }, "14": { "line": 144, "type": "binary-expr", "locations": [{ "end": { "line": 108, "column": 31 }, "start": { "line": 108, "column": 31 } }, { "end": { "line": 108, "column": 31 }, "start": { "line": 108, "column": 31 } }] }, "15": { "line": 148, "type": "if", "locations": [{ "end": { "line": 111, "column": 12 }, "start": { "line": 111, "column": 12 } }, { "end": { "line": 111, "column": 12 }, "start": { "line": 111, "column": 12 } }] }, "16": { "line": 148, "type": "binary-expr", "locations": [{ "end": { "line": 111, "column": 16 }, "start": { "line": 111, "column": 16 } }, { "end": { "line": 111, "column": 12 }, "start": { "line": 111, "column": 41 } }] }, "17": { "line": 150, "type": "binary-expr", "locations": [{ "end": { "line": 113, "column": 20 }, "start": { "line": 113, "column": 20 } }, { "end": { "line": 112, "column": 29 }, "start": { "line": 113, "column": 38 } }] }, "18": { "line": 151, "type": "cond-expr", "locations": [{ "end": { "line": 115, "column": 30 }, "start": { "line": 116, "column": 20 } }, { "end": { "line": 115, "column": 16 }, "start": { "line": 116, "column": 37 } }] }, "19": { "line": 174, "type": "if", "locations": [{ "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 8 } }, { "end": { "line": 134, "column": 8 }, "start": { "line": 134, "column": 8 } }] } }, "code": ["import {Date as SugarDate} from 'sugar-date';", "import 'sugar-date/locales';", "import {Feature} from '../feature';", "import {isObj, isArray} from '../types';", "import {DATE} from '../const';", "import {root} from '../root';", "", "/**", " * Wrapper for Sugar Date module providing datetime helpers and locales", " * @export", " * @class DateType", " */", "export class DateType extends Feature {", "", "    /**", "     * Creates an instance of DateType", "     * @param {TableFilter} tf TableFilter instance", "     */", "    constructor(tf) {", "        super(tf, 'dateType');", "", "        /**", "         * Global locale", "         * @type {String}", "         */", "        this.locale = tf.locale;", "", "        /**", "         * Sugar Date instance", "         * @type {Object}", "         */", "        this.datetime = SugarDate;", "", "        this.enable();", "    }", "", "    /**", "     * Initialize DateType instance", "     */", "    init() {", "        if (this.initialized) {", "            return;", "        }", "", "        // Set global locale", "        this.datetime.setLocale(this.locale);", "", "        // Add formats from column types configuration if any", "        this.addConfigFormats(this.tf.colTypes);", "", "        this.emitter.on(", "            ['add-date-type-formats'],", "            (tf, types) => this.addConfigFormats(types)", "        );", "", "        // Broadcast date-type initialization", "        this.emitter.emit('date-type-initialized', this.tf, this);", "", "        /** @inherited */", "        this.initialized = true;", "    }", "", "    /**", "     * Parse a string representation of a date for a specified locale and return", "     * a date object", "     * @param {String} dateStr String representation of a date", "     * @param {String} localeCode Locale code (ie 'en-us')", "     * @returns {Date}", "     */", "    parse(dateStr, localeCode) {", "        return this.datetime.create(dateStr, localeCode);", "    }", "", "    /**", "     * Check string representation of a date for a specified locale is valid", "     * @param {any} dateStr String representation of a date", "     * @param {any} localeCode Locale code (ie 'en-us')", "     * @returns {Boolean}", "     */", "    isValid(dateStr, localeCode) {", "        return this.datetime.isValid(this.parse(dateStr, localeCode));", "    }", "", "    /**", "     * Return the type object of a specified column as per configuration or", "     * passed collection", "     * @param {Number} colIndex Column index", "     * @param {Array} types Collection of column types, optional", "     * @returns {Object}", "     */", "    getOptions(colIndex, types) {", "        types = types || this.tf.colTypes;", "        let colType = types[colIndex];", "        return isObj(colType) ? colType : {};", "    }", "", "    /**", "     * Add date time format(s) to a locale as specified by the passed", "     * collection of column types, ie:", "     *  [", "     *      'string',", "     *      'number',", "     *      { type: 'date', locale: 'en', format: ['{dd}/{MM}/{yyyy}']}", "     * ]", "     *", "     * @param {Array} [types=[]] Collection of column types", "     */", "    addConfigFormats(types=[]) {", "        types.forEach((type, idx) => {", "            let options = this.getOptions(idx, types);", "            if (options.type === DATE && options.hasOwnProperty('format')) {", "                let locale = this.datetime.getLocale(", "                    options.locale || this.locale", "                );", "                let formats = isArray(options.format) ?", "                    options.format : [options.format];", "", "                // Sugar date module throws exceptions with locale.addFormat", "                try {", "                    formats.forEach((format) => {", "                        locale.addFormat(format);", "                    });", "                } catch (ex) {", "                    root.console.error(ex);", "                }", "            }", "        });", "    }", "", "    /**", "     * Remove DateType instance", "     */", "    destroy() {", "        if (!this.initialized) {", "            return;", "        }", "", "        // TODO: remove added formats", "", "        this.emitter.off(", "            ['add-date-type-formats'],", "            (tf, types) => this.addConfigFormats(types)", "        );", "", "        this.initialized = false;", "    }", "}", ""] };
	}
	__cov_UB$PZ1ROYf6yXJD3uDnUMA = __cov_UB$PZ1ROYf6yXJD3uDnUMA['C:\\Users\\max.guglielmi\\Documents\\dev\\perso\\javascript\\GitHub\\TableFilter\\src\\modules\\dateType.js'];
	__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['1']++;Object.defineProperty(exports, '__esModule', { value: true });__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['2']++;exports.DateType = undefined;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['3']++;var _sugarDate = __webpack_require__(31);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['4']++;__webpack_require__(417);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['5']++;var _feature = __webpack_require__(10);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['6']++;var _types = __webpack_require__(4);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['7']++;var _const = __webpack_require__(11);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['8']++;var _root = __webpack_require__(2);function _classCallCheck(instance, Constructor) {
	   __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['1']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['10']++;if (!(instance instanceof Constructor)) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['1'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['11']++;throw new TypeError('Cannot call a class as a function');
	   } else {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['1'][1]++;
	   }
	}function _possibleConstructorReturn(self, call) {
	   __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['2']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['13']++;if (!self) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['2'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['14']++;throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
	   } else {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['2'][1]++;
	   }__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['15']++;return (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['4'][0]++, call) && ((__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['4'][1]++, (typeof call === 'undefined' ? 'undefined' : _typeof(call)) === 'object') || (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['4'][2]++, typeof call === 'function')) ? (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['3'][0]++, call) : (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['3'][1]++, self);
	}function _inherits(subClass, superClass) {
	   __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['3']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['17']++;if ((__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['6'][0]++, typeof superClass !== 'function') && (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['6'][1]++, superClass !== null)) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['5'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['18']++;throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
	   } else {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['5'][1]++;
	   }__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['19']++;subClass.prototype = Object.create((__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['7'][0]++, superClass) && (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['7'][1]++, superClass.prototype), { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['20']++;if (superClass) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['8'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['21']++;Object.setPrototypeOf ? (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['9'][0]++, Object.setPrototypeOf(subClass, superClass)) : (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['9'][1]++, subClass.__proto__ = superClass);
	   } else {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['8'][1]++;
	   }
	}__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['22']++;var DateType = exports.DateType = function (_Feature) {
	   __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['4']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['23']++;_inherits(DateType, _Feature);function DateType(tf) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['5']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['25']++;_classCallCheck(this, DateType);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['26']++;var _this = _possibleConstructorReturn(this, _Feature.call(this, tf, 'dateType'));__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['27']++;_this.locale = tf.locale;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['28']++;_this.datetime = _sugarDate.Date;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['29']++;_this.enable();__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['30']++;return _this;
	   }__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['31']++;DateType.prototype.init = function init() {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['6']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['32']++;var _this2 = this;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['33']++;if (this.initialized) {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['10'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['34']++;return;
	      } else {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['10'][1]++;
	      }__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['35']++;this.datetime.setLocale(this.locale);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['36']++;this.addConfigFormats(this.tf.colTypes);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['37']++;this.emitter.on(['add-date-type-formats'], function (tf, types) {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['7']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['38']++;return _this2.addConfigFormats(types);
	      });__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['39']++;this.emitter.emit('date-type-initialized', this.tf, this);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['40']++;this.initialized = true;
	   };__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['41']++;DateType.prototype.parse = function parse(dateStr, localeCode) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['8']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['42']++;return this.datetime.create(dateStr, localeCode);
	   };__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['43']++;DateType.prototype.isValid = function isValid(dateStr, localeCode) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['9']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['44']++;return this.datetime.isValid(this.parse(dateStr, localeCode));
	   };__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['45']++;DateType.prototype.getOptions = function getOptions(colIndex, types) {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['10']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['46']++;types = (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['11'][0]++, types) || (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['11'][1]++, this.tf.colTypes);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['47']++;var colType = types[colIndex];__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['48']++;return (0, _types.isObj)(colType) ? (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['12'][0]++, colType) : (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['12'][1]++, {});
	   };__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['49']++;DateType.prototype.addConfigFormats = function addConfigFormats() {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['11']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['50']++;var _this3 = this;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['51']++;var types = (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['14'][0]++, arguments.length > 0) && (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['14'][1]++, arguments[0] !== undefined) ? (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['13'][0]++, arguments[0]) : (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['13'][1]++, []);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['52']++;types.forEach(function (type, idx) {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['12']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['53']++;var options = _this3.getOptions(idx, types);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['54']++;if ((__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['16'][0]++, options.type === _const.DATE) && (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['16'][1]++, options.hasOwnProperty('format'))) {
	            __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['15'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['55']++;(function () {
	               __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['13']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['56']++;var locale = _this3.datetime.getLocale((__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['17'][0]++, options.locale) || (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['17'][1]++, _this3.locale));__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['57']++;var formats = (0, _types.isArray)(options.format) ? (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['18'][0]++, options.format) : (__cov_UB$PZ1ROYf6yXJD3uDnUMA.b['18'][1]++, [options.format]);__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['58']++;try {
	                  __cov_UB$PZ1ROYf6yXJD3uDnUMA.s['59']++;formats.forEach(function (format) {
	                     __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['14']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['60']++;locale.addFormat(format);
	                  });
	               } catch (ex) {
	                  __cov_UB$PZ1ROYf6yXJD3uDnUMA.s['61']++;_root.root.console.error(ex);
	               }
	            })();
	         } else {
	            __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['15'][1]++;
	         }
	      });
	   };__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['62']++;DateType.prototype.destroy = function destroy() {
	      __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['15']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['63']++;var _this4 = this;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['64']++;if (!this.initialized) {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['19'][0]++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['65']++;return;
	      } else {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.b['19'][1]++;
	      }__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['66']++;this.emitter.off(['add-date-type-formats'], function (tf, types) {
	         __cov_UB$PZ1ROYf6yXJD3uDnUMA.f['16']++;__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['67']++;return _this4.addConfigFormats(types);
	      });__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['68']++;this.initialized = false;
	   };__cov_UB$PZ1ROYf6yXJD3uDnUMA.s['69']++;return DateType;
	}(_feature.Feature);

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(32);
	__webpack_require__(370);
	
	module.exports = __webpack_require__(34);

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	// Static Methods
	__webpack_require__(33);
	__webpack_require__(93);
	__webpack_require__(139);
	__webpack_require__(141);
	__webpack_require__(142);
	__webpack_require__(143);
	__webpack_require__(144);
	
	// Instance Methods
	__webpack_require__(145);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(157);
	__webpack_require__(158);
	__webpack_require__(159);
	__webpack_require__(160);
	__webpack_require__(161);
	__webpack_require__(162);
	__webpack_require__(163);
	__webpack_require__(164);
	__webpack_require__(165);
	__webpack_require__(166);
	__webpack_require__(167);
	__webpack_require__(168);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(171);
	__webpack_require__(172);
	__webpack_require__(173);
	__webpack_require__(174);
	__webpack_require__(175);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(180);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(184);
	__webpack_require__(185);
	__webpack_require__(186);
	__webpack_require__(187);
	__webpack_require__(188);
	__webpack_require__(189);
	__webpack_require__(190);
	__webpack_require__(191);
	__webpack_require__(192);
	__webpack_require__(193);
	__webpack_require__(194);
	__webpack_require__(195);
	__webpack_require__(196);
	__webpack_require__(197);
	__webpack_require__(198);
	__webpack_require__(199);
	__webpack_require__(200);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(204);
	__webpack_require__(205);
	__webpack_require__(206);
	__webpack_require__(207);
	__webpack_require__(208);
	__webpack_require__(209);
	__webpack_require__(210);
	__webpack_require__(211);
	__webpack_require__(212);
	__webpack_require__(213);
	__webpack_require__(214);
	__webpack_require__(215);
	__webpack_require__(216);
	__webpack_require__(217);
	__webpack_require__(218);
	__webpack_require__(219);
	__webpack_require__(220);
	__webpack_require__(221);
	__webpack_require__(222);
	__webpack_require__(223);
	__webpack_require__(224);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(243);
	__webpack_require__(244);
	__webpack_require__(245);
	__webpack_require__(246);
	__webpack_require__(247);
	__webpack_require__(252);
	__webpack_require__(253);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(258);
	__webpack_require__(259);
	__webpack_require__(260);
	__webpack_require__(261);
	__webpack_require__(262);
	__webpack_require__(263);
	__webpack_require__(264);
	__webpack_require__(265);
	__webpack_require__(266);
	__webpack_require__(267);
	__webpack_require__(268);
	__webpack_require__(287);
	__webpack_require__(288);
	__webpack_require__(289);
	__webpack_require__(290);
	__webpack_require__(291);
	__webpack_require__(292);
	__webpack_require__(293);
	__webpack_require__(294);
	__webpack_require__(295);
	__webpack_require__(296);
	__webpack_require__(300);
	__webpack_require__(301);
	__webpack_require__(302);
	__webpack_require__(303);
	__webpack_require__(306);
	__webpack_require__(307);
	__webpack_require__(308);
	__webpack_require__(309);
	__webpack_require__(310);
	__webpack_require__(311);
	__webpack_require__(312);
	__webpack_require__(313);
	__webpack_require__(314);
	__webpack_require__(315);
	__webpack_require__(316);
	__webpack_require__(317);
	__webpack_require__(318);
	__webpack_require__(319);
	__webpack_require__(320);
	__webpack_require__(321);
	__webpack_require__(322);
	__webpack_require__(323);
	__webpack_require__(324);
	__webpack_require__(325);
	__webpack_require__(327);
	__webpack_require__(328);
	__webpack_require__(329);
	__webpack_require__(330);
	__webpack_require__(331);
	__webpack_require__(332);
	__webpack_require__(333);
	__webpack_require__(334);
	__webpack_require__(335);
	__webpack_require__(336);
	__webpack_require__(337);
	__webpack_require__(338);
	__webpack_require__(339);
	__webpack_require__(340);
	__webpack_require__(341);
	__webpack_require__(342);
	__webpack_require__(343);
	__webpack_require__(344);
	__webpack_require__(345);
	__webpack_require__(348);
	__webpack_require__(349);
	__webpack_require__(351);
	__webpack_require__(352);
	__webpack_require__(353);
	__webpack_require__(354);
	__webpack_require__(355);
	__webpack_require__(356);
	__webpack_require__(357);
	__webpack_require__(358);
	__webpack_require__(359);
	__webpack_require__(360);
	__webpack_require__(361);
	__webpack_require__(362);
	__webpack_require__(363);
	__webpack_require__(364);
	__webpack_require__(365);
	__webpack_require__(366);
	__webpack_require__(367);
	
	// Accessors
	__webpack_require__(368);
	__webpack_require__(369);
	
	module.exports = __webpack_require__(34);

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Date.defineStatic({
	
	  'addLocale': function(code, set) {
	    return localeManager.add(code, set);
	  }
	
	});
	
	module.exports = Sugar.Date.addLocale;

/***/ },
/* 34 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/*
	 *  Sugar v2.0.0
	 *
	 *  Freely distributable and licensed under the MIT-style license.
	 *  Copyright (c) Andrew Plummer
	 *  https://sugarjs.com/
	 *
	 * ---------------------------- */
	(function() {
	  'use strict';
	
	  /***
	   * @module Core
	   * @description Core functionality including the ability to define methods and
	   *              extend onto natives.
	   *
	   ***/
	
	  // The global to export.
	  var Sugar;
	
	  // The name of Sugar in the global namespace.
	  var SUGAR_GLOBAL = 'Sugar';
	
	  // Natives available on initialization. Letting Object go first to ensure its
	  // global is set by the time the rest are checking for chainable Object methods.
	  var NATIVE_NAMES = 'Object Number String Array Date RegExp Function';
	
	  // Static method flag
	  var STATIC   = 0x1;
	
	  // Instance method flag
	  var INSTANCE = 0x2;
	
	  // IE8 has a broken defineProperty but no defineProperties so this saves a try/catch.
	  var PROPERTY_DESCRIPTOR_SUPPORT = !!(Object.defineProperty && Object.defineProperties);
	
	  // The global context. Rhino uses a different "global" keyword so
	  // do an extra check to be sure that it's actually the global context.
	  var globalContext = typeof global !== 'undefined' && global.Object === Object ? global : this;
	
	  // Is the environment node?
	  var hasExports = typeof module !== 'undefined' && module.exports;
	
	  // Whether object instance methods can be mapped to the prototype.
	  var allowObjectPrototype = false;
	
	  // A map from Array to SugarArray.
	  var namespacesByName = {};
	
	  // A map from [object Object] to namespace.
	  var namespacesByClassString = {};
	
	  // Defining properties.
	  var defineProperty = PROPERTY_DESCRIPTOR_SUPPORT ?  Object.defineProperty : definePropertyShim;
	
	  // A default chainable class for unknown types.
	  var DefaultChainable = getNewChainableClass('Chainable');
	
	
	  // Global methods
	
	  function setupGlobal() {
	    Sugar = globalContext[SUGAR_GLOBAL];
	    if (Sugar) {
	      // Reuse already defined Sugar global object.
	      return;
	    }
	    Sugar = function(arg) {
	      forEachProperty(Sugar, function(sugarNamespace, name) {
	        // Although only the only enumerable properties on the global
	        // object are Sugar namespaces, environments that can't set
	        // non-enumerable properties will step through the utility methods
	        // as well here, so use this check to only allow true namespaces.
	        if (hasOwn(namespacesByName, name)) {
	          sugarNamespace.extend(arg);
	        }
	      });
	      return Sugar;
	    };
	    if (hasExports) {
	      module.exports = Sugar;
	    } else {
	      try {
	        globalContext[SUGAR_GLOBAL] = Sugar;
	      } catch (e) {
	        // Contexts such as QML have a read-only global context.
	      }
	    }
	    forEachProperty(NATIVE_NAMES.split(' '), function(name) {
	      createNamespace(name);
	    });
	    setGlobalProperties();
	  }
	
	  /***
	   * @method createNamespace(<name>)
	   * @returns Namespace
	   * @global
	   * @short Creates a new Sugar namespace.
	   * @extra This method is for plugin developers who want to define methods to be
	   *        used with natives that Sugar does not handle by default. The new
	   *        namespace will appear on the `Sugar` global with all the methods of
	   *        normal namespaces, including the ability to define new methods. When
	   *        extended, any defined methods will be mapped to `name` in the global
	   *        context.
	   *
	   * @example
	   *
	   *   Sugar.createNamespace('Boolean');
	   *
	   ***/
	  function createNamespace(name) {
	
	    // Is the current namespace Object?
	    var isObject = name === 'Object';
	
	    // A Sugar namespace is also a chainable class: Sugar.Array, etc.
	    var sugarNamespace = getNewChainableClass(name, true);
	
	    /***
	     * @method extend([options])
	     * @returns Sugar
	     * @global
	     * @namespace
	     * @short Extends Sugar defined methods onto natives.
	     * @extra This method can be called on individual namespaces like
	     *        `Sugar.Array` or on the `Sugar` global itself, in which case
	     *        [options] will be forwarded to each `extend` call. For more,
	     *        see `extending`.
	     *
	     * @options
	     *
	     *   methods           An array of method names to explicitly extend.
	     *
	     *   except            An array of method names or global namespaces (`Array`,
	     *                     `String`) to explicitly exclude. Namespaces should be the
	     *                     actual global objects, not strings.
	     *
	     *   namespaces        An array of global namespaces (`Array`, `String`) to
	     *                     explicitly extend. Namespaces should be the actual
	     *                     global objects, not strings.
	     *
	     *   enhance           A shortcut to disallow all "enhance" flags at once
	     *                     (flags listed below). For more, see `enhanced methods`.
	     *                     Default is `true`.
	     *
	     *   enhanceString     A boolean allowing String enhancements. Default is `true`.
	     *
	     *   enhanceArray      A boolean allowing Array enhancements. Default is `true`.
	     *
	     *   objectPrototype   A boolean allowing Sugar to extend Object.prototype
	     *                     with instance methods. This option is off by default
	     *                     and should generally not be used except with caution.
	     *                     For more, see `object methods`.
	     *
	     * @example
	     *
	     *   Sugar.Array.extend();
	     *   Sugar.extend();
	     *
	     ***/
	    var extend = function (opts) {
	
	      var nativeClass = globalContext[name], nativeProto = nativeClass.prototype;
	      var staticMethods = {}, instanceMethods = {}, methodsByName;
	
	      function objectRestricted(name, target) {
	        return isObject && target === nativeProto &&
	               (!allowObjectPrototype || name === 'get' || name === 'set');
	      }
	
	      function arrayOptionExists(field, val) {
	        var arr = opts[field];
	        if (arr) {
	          for (var i = 0, el; el = arr[i]; i++) {
	            if (el === val) {
	              return true;
	            }
	          }
	        }
	        return false;
	      }
	
	      function arrayOptionExcludes(field, val) {
	        return opts[field] && !arrayOptionExists(field, val);
	      }
	
	      function disallowedByFlags(methodName, target, flags) {
	        // Disallowing methods by flag currently only applies if methods already
	        // exist to avoid enhancing native methods, as aliases should still be
	        // extended (i.e. Array#all should still be extended even if Array#every
	        // is being disallowed by a flag).
	        if (!target[methodName] || !flags) {
	          return false;
	        }
	        for (var i = 0; i < flags.length; i++) {
	          if (opts[flags[i]] === false) {
	            return true;
	          }
	        }
	      }
	
	      function namespaceIsExcepted() {
	        return arrayOptionExists('except', nativeClass) ||
	               arrayOptionExcludes('namespaces', nativeClass);
	      }
	
	      function methodIsExcepted(methodName) {
	        return arrayOptionExists('except', methodName);
	      }
	
	      function canExtend(methodName, method, target) {
	        return !objectRestricted(methodName, target) &&
	               !disallowedByFlags(methodName, target, method.flags) &&
	               !methodIsExcepted(methodName);
	      }
	
	      opts = opts || {};
	      methodsByName = opts.methods;
	
	      if (namespaceIsExcepted()) {
	        return;
	      } else if (isObject && typeof opts.objectPrototype === 'boolean') {
	        // Store "objectPrototype" flag for future reference.
	        allowObjectPrototype = opts.objectPrototype;
	      }
	
	      forEachProperty(methodsByName || sugarNamespace, function(method, methodName) {
	        if (methodsByName) {
	          // If we have method names passed in an array,
	          // then we need to flip the key and value here
	          // and find the method in the Sugar namespace.
	          methodName = method;
	          method = sugarNamespace[methodName];
	        }
	        if (hasOwn(method, 'instance') && canExtend(methodName, method, nativeProto)) {
	          instanceMethods[methodName] = method.instance;
	        }
	        if(hasOwn(method, 'static') && canExtend(methodName, method, nativeClass)) {
	          staticMethods[methodName] = method;
	        }
	      });
	
	      // Accessing the extend target each time instead of holding a reference as
	      // it may have been overwritten (for example Date by Sinon). Also need to
	      // access through the global to allow extension of user-defined namespaces.
	      extendNative(nativeClass, staticMethods);
	      extendNative(nativeProto, instanceMethods);
	
	      if (!methodsByName) {
	        // If there are no method names passed, then
	        // all methods in the namespace will be extended
	        // to the native. This includes all future defined
	        // methods, so add a flag here to check later.
	        setProperty(sugarNamespace, 'active', true);
	      }
	      return Sugar;
	    };
	
	    function defineWithOptionCollect(methodName, instance, args) {
	      setProperty(sugarNamespace, methodName, function(arg1, arg2, arg3) {
	        var opts = collectDefineOptions(arg1, arg2, arg3);
	        defineMethods(sugarNamespace, opts.methods, instance, args, opts.last);
	        return sugarNamespace;
	      });
	    }
	
	    /***
	     * @method defineStatic(...)
	     * @returns Namespace
	     * @namespace
	     * @short Defines static methods on the namespace that can later be extended
	     *        onto the native globals.
	     * @extra Accepts either a single object mapping names to functions, or name
	     *        and function as two arguments. If `extend` was previously called
	     *        with no arguments, the method will be immediately mapped to its
	     *        native when defined.
	     *
	     * @example
	     *
	     *   Sugar.Number.defineStatic({
	     *     isOdd: function (num) {
	     *       return num % 2 === 1;
	     *     }
	     *   });
	     *
	     ***/
	    defineWithOptionCollect('defineStatic', STATIC);
	
	    /***
	     * @method defineInstance(...)
	     * @returns Namespace
	     * @namespace
	     * @short Defines methods on the namespace that can later be extended as
	     *        instance methods onto the native prototype.
	     * @extra Accepts either a single object mapping names to functions, or name
	     *        and function as two arguments. All functions should accept the
	     *        native for which they are mapped as their first argument, and should
	     *        never refer to `this`. If `extend` was previously called with no
	     *        arguments, the method will be immediately mapped to its native when
	     *        defined.
	     *
	     *        Methods cannot accept more than 4 arguments in addition to the
	     *        native (5 arguments total). Any additional arguments will not be
	     *        mapped. If the method needs to accept unlimited arguments, use
	     *        `defineInstanceWithArguments`. Otherwise if more options are
	     *        required, use an options object instead.
	     *
	     * @example
	     *
	     *   Sugar.Number.defineInstance({
	     *     square: function (num) {
	     *       return num * num;
	     *     }
	     *   });
	     *
	     ***/
	    defineWithOptionCollect('defineInstance', INSTANCE);
	
	    /***
	     * @method defineInstanceAndStatic(...)
	     * @returns Namespace
	     * @namespace
	     * @short A shortcut to define both static and instance methods on the namespace.
	     * @extra This method is intended for use with `Object` instance methods. Sugar
	     *        will not map any methods to `Object.prototype` by default, so defining
	     *        instance methods as static helps facilitate their proper use.
	     *
	     * @example
	     *
	     *   Sugar.Object.defineInstanceAndStatic({
	     *     isAwesome: function (obj) {
	     *       // check if obj is awesome!
	     *     }
	     *   });
	     *
	     ***/
	    defineWithOptionCollect('defineInstanceAndStatic', INSTANCE | STATIC);
	
	
	    /***
	     * @method defineStaticWithArguments(...)
	     * @returns Namespace
	     * @namespace
	     * @short Defines static methods that collect arguments.
	     * @extra This method is identical to `defineStatic`, except that when defined
	     *        methods are called, they will collect any arguments past `n - 1`,
	     *        where `n` is the number of arguments that the method accepts.
	     *        Collected arguments will be passed to the method in an array
	     *        as the last argument defined on the function.
	     *
	     * @example
	     *
	     *   Sugar.Number.defineStaticWithArguments({
	     *     addAll: function (num, args) {
	     *       for (var i = 0; i < args.length; i++) {
	     *         num += args[i];
	     *       }
	     *       return num;
	     *     }
	     *   });
	     *
	     ***/
	    defineWithOptionCollect('defineStaticWithArguments', STATIC, true);
	
	    /***
	     * @method defineInstanceWithArguments(...)
	     * @returns Namespace
	     * @namespace
	     * @short Defines instance methods that collect arguments.
	     * @extra This method is identical to `defineInstance`, except that when
	     *        defined methods are called, they will collect any arguments past
	     *        `n - 1`, where `n` is the number of arguments that the method
	     *        accepts. Collected arguments will be passed to the method as the
	     *        last argument defined on the function.
	     *
	     * @example
	     *
	     *   Sugar.Number.defineInstanceWithArguments({
	     *     addAll: function (num, args) {
	     *       for (var i = 0; i < args.length; i++) {
	     *         num += args[i];
	     *       }
	     *       return num;
	     *     }
	     *   });
	     *
	     ***/
	    defineWithOptionCollect('defineInstanceWithArguments', INSTANCE, true);
	
	    /***
	     * @method defineStaticPolyfill(...)
	     * @returns Namespace
	     * @namespace
	     * @short Defines static methods that are mapped onto the native if they do
	     *        not already exist.
	     * @extra Intended only for use creating polyfills that follow the ECMAScript
	     *        spec. Accepts either a single object mapping names to functions, or
	     *        name and function as two arguments.
	     *
	     * @example
	     *
	     *   Sugar.Object.defineStaticPolyfill({
	     *     keys: function (obj) {
	     *       // get keys!
	     *     }
	     *   });
	     *
	     ***/
	    setProperty(sugarNamespace, 'defineStaticPolyfill', function(arg1, arg2, arg3) {
	      var opts = collectDefineOptions(arg1, arg2, arg3);
	      extendNative(globalContext[name], opts.methods, true, opts.last);
	    });
	
	    /***
	     * @method defineInstancePolyfill(...)
	     * @returns Namespace
	     * @namespace
	     * @short Defines instance methods that are mapped onto the native prototype
	     *        if they do not already exist.
	     * @extra Intended only for use creating polyfills that follow the ECMAScript
	     *        spec. Accepts either a single object mapping names to functions, or
	     *        name and function as two arguments. This method differs from
	     *        `defineInstance` as there is no static signature (as the method
	     *        is mapped as-is to the native), so it should refer to its `this`
	     *        object.
	     *
	     * @example
	     *
	     *   Sugar.Array.defineInstancePolyfill({
	     *     indexOf: function (arr, el) {
	     *       // index finding code here!
	     *     }
	     *   });
	     *
	     ***/
	    setProperty(sugarNamespace, 'defineInstancePolyfill', function(arg1, arg2, arg3) {
	      var opts = collectDefineOptions(arg1, arg2, arg3);
	      extendNative(globalContext[name].prototype, opts.methods, true, opts.last);
	      // Map instance polyfills to chainable as well.
	      forEachProperty(opts.methods, function(fn, methodName) {
	        defineChainableMethod(sugarNamespace, methodName, fn);
	      });
	    });
	
	    /***
	     * @method alias(<toName>, <fromName>)
	     * @returns Namespace
	     * @namespace
	     * @short Aliases one Sugar method to another.
	     *
	     * @example
	     *
	     *   Sugar.Array.alias('all', 'every');
	     *
	     ***/
	    setProperty(sugarNamespace, 'alias', function(name, source) {
	      var method = typeof source === 'string' ? sugarNamespace[source] : source;
	      setMethod(sugarNamespace, name, method);
	    });
	
	    // Each namespace can extend only itself through its .extend method.
	    setProperty(sugarNamespace, 'extend', extend);
	
	    // Cache the class to namespace relationship for later use.
	    namespacesByName[name] = sugarNamespace;
	    namespacesByClassString['[object ' + name + ']'] = sugarNamespace;
	
	    mapNativeToChainable(name);
	    mapObjectChainablesToNamespace(sugarNamespace);
	
	
	    // Export
	    return Sugar[name] = sugarNamespace;
	  }
	
	  function setGlobalProperties() {
	    setProperty(Sugar, 'extend', Sugar);
	    setProperty(Sugar, 'toString', toString);
	    setProperty(Sugar, 'createNamespace', createNamespace);
	
	    setProperty(Sugar, 'util', {
	      'hasOwn': hasOwn,
	      'getOwn': getOwn,
	      'setProperty': setProperty,
	      'classToString': classToString,
	      'defineProperty': defineProperty,
	      'forEachProperty': forEachProperty,
	      'mapNativeToChainable': mapNativeToChainable
	    });
	  }
	
	  function toString() {
	    return SUGAR_GLOBAL;
	  }
	
	
	  // Defining Methods
	
	  function defineMethods(sugarNamespace, methods, type, args, flags) {
	    forEachProperty(methods, function(method, methodName) {
	      var instanceMethod, staticMethod = method;
	      if (args) {
	        staticMethod = wrapMethodWithArguments(method);
	      }
	      if (flags) {
	        staticMethod.flags = flags;
	      }
	
	      // A method may define its own custom implementation, so
	      // make sure that's not the case before creating one.
	      if (type & INSTANCE && !method.instance) {
	        instanceMethod = wrapInstanceMethod(method, args);
	        setProperty(staticMethod, 'instance', instanceMethod);
	      }
	
	      if (type & STATIC) {
	        setProperty(staticMethod, 'static', true);
	      }
	
	      setMethod(sugarNamespace, methodName, staticMethod);
	
	      if (sugarNamespace.active) {
	        // If the namespace has been activated (.extend has been called),
	        // then map this method as well.
	        sugarNamespace.extend(methodName);
	      }
	    });
	  }
	
	  function collectDefineOptions(arg1, arg2, arg3) {
	    var methods, last;
	    if (typeof arg1 === 'string') {
	      methods = {};
	      methods[arg1] = arg2;
	      last = arg3;
	    } else {
	      methods = arg1;
	      last = arg2;
	    }
	    return {
	      last: last,
	      methods: methods
	    };
	  }
	
	  function wrapInstanceMethod(fn, args) {
	    return args ? wrapMethodWithArguments(fn, true) : wrapInstanceMethodFixed(fn);
	  }
	
	  function wrapMethodWithArguments(fn, instance) {
	    // Functions accepting enumerated arguments will always have "args" as the
	    // last argument, so subtract one from the function length to get the point
	    // at which to start collecting arguments. If this is an instance method on
	    // a prototype, then "this" will be pushed into the arguments array so start
	    // collecting 1 argument earlier.
	    var startCollect = fn.length - 1 - (instance ? 1 : 0);
	    return function() {
	      var args = [], collectedArgs = [], len;
	      if (instance) {
	        args.push(this);
	      }
	      len = Math.max(arguments.length, startCollect);
	      // Optimized: no leaking arguments
	      for (var i = 0; i < len; i++) {
	        if (i < startCollect) {
	          args.push(arguments[i]);
	        } else {
	          collectedArgs.push(arguments[i]);
	        }
	      }
	      args.push(collectedArgs);
	      return fn.apply(this, args);
	    };
	  }
	
	  function wrapInstanceMethodFixed(fn) {
	    switch(fn.length) {
	      // Wrapped instance methods will always be passed the instance
	      // as the first argument, but requiring the argument to be defined
	      // may cause confusion here, so return the same wrapped function regardless.
	      case 0:
	      case 1:
	        return function() {
	          return fn(this);
	        };
	      case 2:
	        return function(a) {
	          return fn(this, a);
	        };
	      case 3:
	        return function(a, b) {
	          return fn(this, a, b);
	        };
	      case 4:
	        return function(a, b, c) {
	          return fn(this, a, b, c);
	        };
	      case 5:
	        return function(a, b, c, d) {
	          return fn(this, a, b, c, d);
	        };
	    }
	  }
	
	  // Method helpers
	
	  function extendNative(target, source, polyfill, override) {
	    forEachProperty(source, function(method, name) {
	      if (polyfill && !override && target[name]) {
	        // Method exists, so bail.
	        return;
	      }
	      setProperty(target, name, method);
	    });
	  }
	
	  function setMethod(sugarNamespace, methodName, method) {
	    sugarNamespace[methodName] = method;
	    if (method.instance) {
	      defineChainableMethod(sugarNamespace, methodName, method.instance, true);
	    }
	  }
	
	
	  // Chainables
	
	  function getNewChainableClass(name) {
	    var fn = function SugarChainable(obj, arg) {
	      if (!(this instanceof fn)) {
	        return new fn(obj, arg);
	      }
	      if (this.constructor !== fn) {
	        // Allow modules to define their own constructors.
	        obj = this.constructor.apply(obj, arguments);
	      }
	      this.raw = obj;
	    };
	    setProperty(fn, 'toString', function() {
	      return SUGAR_GLOBAL + name;
	    });
	    setProperty(fn.prototype, 'valueOf', function() {
	      return this.raw;
	    });
	    return fn;
	  }
	
	  function defineChainableMethod(sugarNamespace, methodName, fn) {
	    var wrapped = wrapWithChainableResult(fn), existing, collision, dcp;
	    dcp = DefaultChainable.prototype;
	    existing = dcp[methodName];
	
	    // If the method was previously defined on the default chainable, then a
	    // collision exists, so set the method to a disambiguation function that will
	    // lazily evaluate the object and find it's associated chainable. An extra
	    // check is required to avoid false positives from Object inherited methods.
	    collision = existing && existing !== Object.prototype[methodName];
	
	    // The disambiguation function is only required once.
	    if (!existing || !existing.disambiguate) {
	      dcp[methodName] = collision ? disambiguateMethod(methodName) : wrapped;
	    }
	
	    // The target chainable always receives the wrapped method. Additionally,
	    // if the target chainable is Sugar.Object, then map the wrapped method
	    // to all other namespaces as well if they do not define their own method
	    // of the same name. This way, a Sugar.Number will have methods like
	    // isEqual that can be called on any object without having to traverse up
	    // the prototype chain and perform disambiguation, which costs cycles.
	    // Note that the "if" block below actually does nothing on init as Object
	    // goes first and no other namespaces exist yet. However it needs to be
	    // here as Object instance methods defined later also need to be mapped
	    // back onto existing namespaces.
	    sugarNamespace.prototype[methodName] = wrapped;
	    if (sugarNamespace === Sugar.Object) {
	      mapObjectChainableToAllNamespaces(methodName, wrapped);
	    }
	  }
	
	  function mapObjectChainablesToNamespace(sugarNamespace) {
	    forEachProperty(Sugar.Object && Sugar.Object.prototype, function(val, methodName) {
	      if (typeof val === 'function') {
	        setObjectChainableOnNamespace(sugarNamespace, methodName, val);
	      }
	    });
	  }
	
	  function mapObjectChainableToAllNamespaces(methodName, fn) {
	    forEachProperty(namespacesByName, function(sugarNamespace) {
	      setObjectChainableOnNamespace(sugarNamespace, methodName, fn);
	    });
	  }
	
	  function setObjectChainableOnNamespace(sugarNamespace, methodName, fn) {
	    var proto = sugarNamespace.prototype;
	    if (!hasOwn(proto, methodName)) {
	      proto[methodName] = fn;
	    }
	  }
	
	  function wrapWithChainableResult(fn) {
	    return function() {
	      return new DefaultChainable(fn.apply(this.raw, arguments));
	    };
	  }
	
	  function disambiguateMethod(methodName) {
	    var fn = function() {
	      var raw = this.raw, sugarNamespace, fn;
	      if (raw != null) {
	        // Find the Sugar namespace for this unknown.
	        sugarNamespace = namespacesByClassString[classToString(raw)];
	      }
	      if (!sugarNamespace) {
	        // If no sugarNamespace can be resolved, then default
	        // back to Sugar.Object so that undefined and other
	        // non-supported types can still have basic object
	        // methods called on them, such as type checks.
	        sugarNamespace = Sugar.Object;
	      }
	
	      fn = new sugarNamespace(raw)[methodName];
	
	      if (fn.disambiguate) {
	        // If the method about to be called on this chainable is
	        // itself a disambiguation method, then throw an error to
	        // prevent infinite recursion.
	        throw new TypeError('Cannot resolve namespace for ' + raw);
	      }
	
	      return fn.apply(this, arguments);
	    };
	    fn.disambiguate = true;
	    return fn;
	  }
	
	  function mapNativeToChainable(name, methodNames) {
	    var sugarNamespace = namespacesByName[name],
	        nativeProto = globalContext[name].prototype;
	
	    if (!methodNames && ownPropertyNames) {
	      methodNames = ownPropertyNames(nativeProto);
	    }
	
	    forEachProperty(methodNames, function(methodName) {
	      if (nativeMethodProhibited(methodName)) {
	        // Sugar chainables have their own constructors as well as "valueOf"
	        // methods, so exclude them here. The __proto__ argument should be trapped
	        // by the function check below, however simply accessing this property on
	        // Object.prototype causes QML to segfault, so pre-emptively excluding it.
	        return;
	      }
	      try {
	        var fn = nativeProto[methodName];
	        if (typeof fn !== 'function') {
	          // Bail on anything not a function.
	          return;
	        }
	      } catch (e) {
	        // Function.prototype has properties that
	        // will throw errors when accessed.
	        return;
	      }
	      defineChainableMethod(sugarNamespace, methodName, fn);
	    });
	  }
	
	  function nativeMethodProhibited(methodName) {
	    return methodName === 'constructor' ||
	           methodName === 'valueOf' ||
	           methodName === '__proto__';
	  }
	
	
	  // Util
	
	  // Internal references
	  var ownPropertyNames = Object.getOwnPropertyNames,
	      internalToString = Object.prototype.toString,
	      internalHasOwnProperty = Object.prototype.hasOwnProperty;
	
	  // Defining this as a variable here as the ES5 module
	  // overwrites it to patch DONTENUM.
	  var forEachProperty = function (obj, fn) {
	    for(var key in obj) {
	      if (!hasOwn(obj, key)) continue;
	      if (fn.call(obj, obj[key], key, obj) === false) break;
	    }
	  };
	
	  function definePropertyShim(obj, prop, descriptor) {
	    obj[prop] = descriptor.value;
	  }
	
	  function setProperty(target, name, value, enumerable) {
	    defineProperty(target, name, {
	      value: value,
	      enumerable: !!enumerable,
	      configurable: true,
	      writable: true
	    });
	  }
	
	  // PERF: Attempts to speed this method up get very Heisenbergy. Quickly
	  // returning based on typeof works for primitives, but slows down object
	  // types. Even === checks on null and undefined (no typeof) will end up
	  // basically breaking even. This seems to be as fast as it can go.
	  function classToString(obj) {
	    return internalToString.call(obj);
	  }
	
	  function hasOwn(obj, prop) {
	    return !!obj && internalHasOwnProperty.call(obj, prop);
	  }
	
	  function getOwn(obj, prop) {
	    if (hasOwn(obj, prop)) {
	      return obj[prop];
	    }
	  }
	
	  setupGlobal();
	
	}).call(this);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LazyLoadedLocales = __webpack_require__(36),
	    AmericanEnglishDefinition = __webpack_require__(43),
	    getNewLocale = __webpack_require__(45);
	
	var English, localeManager;
	
	function buildLocales() {
	
	  function LocaleManager(loc) {
	    this.locales = {};
	    this.add(loc);
	  }
	
	  LocaleManager.prototype = {
	
	    get: function(code, fallback) {
	      var loc = this.locales[code];
	      if (!loc && LazyLoadedLocales[code]) {
	        loc = this.add(code, LazyLoadedLocales[code]);
	      } else if (!loc && code) {
	        loc = this.locales[code.slice(0, 2)];
	      }
	      return loc || fallback === false ? loc : this.current;
	    },
	
	    getAll: function() {
	      return this.locales;
	    },
	
	    set: function(code) {
	      var loc = this.get(code, false);
	      if (!loc) {
	        throw new TypeError('Invalid Locale: ' + code);
	      }
	      return this.current = loc;
	    },
	
	    add: function(code, def) {
	      if (!def) {
	        def = code;
	        code = def.code;
	      } else {
	        def.code = code;
	      }
	      var loc = def.compiledFormats ? def : getNewLocale(def);
	      this.locales[code] = loc;
	      if (!this.current) {
	        this.current = loc;
	      }
	      return loc;
	    },
	
	    remove: function(code) {
	      if (this.current.code === code) {
	        this.current = this.get('en');
	      }
	      return delete this.locales[code];
	    }
	
	  };
	
	  // Sorry about this guys...
	  English = getNewLocale(AmericanEnglishDefinition);
	  localeManager = new LocaleManager(English);
	}
	
	buildLocales();
	
	module.exports = {
	  English: English,
	  localeManager: localeManager
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var BritishEnglishDefinition = __webpack_require__(37),
	    AmericanEnglishDefinition = __webpack_require__(43),
	    CanadianEnglishDefinition = __webpack_require__(44);
	
	var LazyLoadedLocales = {
	  'en-US': AmericanEnglishDefinition,
	  'en-GB': BritishEnglishDefinition,
	  'en-AU': BritishEnglishDefinition,
	  'en-CA': CanadianEnglishDefinition
	};
	
	module.exports = LazyLoadedLocales;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getEnglishVariant = __webpack_require__(38);
	
	var BritishEnglishDefinition = getEnglishVariant({
	  'short':  '{dd}/{MM}/{yyyy}',
	  'medium': '{d} {Month} {yyyy}',
	  'long':   '{d} {Month} {yyyy} {H}:{mm}',
	  'full':   '{Weekday}, {d} {Month}, {yyyy} {time}',
	  'stamp':  '{Dow} {d} {Mon} {yyyy} {time}'
	});
	
	module.exports = BritishEnglishDefinition;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var EnglishLocaleBaseDefinition = __webpack_require__(39),
	    simpleMerge = __webpack_require__(40),
	    simpleClone = __webpack_require__(42);
	
	function getEnglishVariant(v) {
	  return simpleMerge(simpleClone(EnglishLocaleBaseDefinition), v);
	}
	
	module.exports = getEnglishVariant;

/***/ },
/* 39 */
/***/ function(module, exports) {

	'use strict';
	
	var EnglishLocaleBaseDefinition = {
	  'code': 'en',
	  'plural': true,
	  'timeMarkers': 'at',
	  'ampm': 'AM|A.M.|a,PM|P.M.|p',
	  'units': 'millisecond:|s,second:|s,minute:|s,hour:|s,day:|s,week:|s,month:|s,year:|s',
	  'months': 'Jan:uary|,Feb:ruary|,Mar:ch|,Apr:il|,May,Jun:e|,Jul:y|,Aug:ust|,Sep:tember|t|,Oct:ober|,Nov:ember|,Dec:ember|',
	  'weekdays': 'Sun:day|,Mon:day|,Tue:sday|,Wed:nesday|,Thu:rsday|,Fri:day|,Sat:urday|+weekend',
	  'numerals': 'zero,one|first,two|second,three|third,four:|th,five|fifth,six:|th,seven:|th,eight:|h,nin:e|th,ten:|th',
	  'articles': 'a,an,the',
	  'tokens': 'the,st|nd|rd|th,of|in,a|an,on',
	  'time': '{H}:{mm}',
	  'past': '{num} {unit} {sign}',
	  'future': '{num} {unit} {sign}',
	  'duration': '{num} {unit}',
	  'modifiers': [
	    { 'name': 'half',   'src': 'half', 'value': .5 },
	    { 'name': 'midday', 'src': 'noon', 'value': 12 },
	    { 'name': 'midday', 'src': 'midnight', 'value': 24 },
	    { 'name': 'day',    'src': 'yesterday', 'value': -1 },
	    { 'name': 'day',    'src': 'today|tonight', 'value': 0 },
	    { 'name': 'day',    'src': 'tomorrow', 'value': 1 },
	    { 'name': 'sign',   'src': 'ago|before', 'value': -1 },
	    { 'name': 'sign',   'src': 'from now|after|from|in|later', 'value': 1 },
	    { 'name': 'edge',   'src': 'first day|first|beginning', 'value': -2 },
	    { 'name': 'edge',   'src': 'last day', 'value': 1 },
	    { 'name': 'edge',   'src': 'end|last', 'value': 2 },
	    { 'name': 'shift',  'src': 'last', 'value': -1 },
	    { 'name': 'shift',  'src': 'the|this', 'value': 0 },
	    { 'name': 'shift',  'src': 'next', 'value': 1 }
	  ],
	  'parse': [
	    '(?:just)? now',
	    '{shift} {unit:5-7}',
	    "{months?} (?:{year}|'{yy})",
	    '{midday} {4?} {day|weekday}',
	    '{months},?(?:[-.\\/\\s]{year})?',
	    '{edge} of (?:day)? {day|weekday}',
	    '{0} {num}{1?} {weekday} {2} {months},? {year?}',
	    '{shift?} {day?} {weekday?} {timeMarker?} {midday}',
	    '{sign?} {3?} {half} {3?} {unit:3-4|unit:7} {sign?}',
	    '{0?} {edge} {weekday?} {2} {shift?} {unit:4-7?} {months?},? {year?}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{shift} {unit:5?} {weekday}',
	    '{0?} {date}{1?} {2?} {months?}',
	    '{weekday} {2?} {shift} {unit:5}',
	    '{0?} {num} {2?} {months}\\.?,? {year?}',
	    '{num?} {unit:4-5} {sign} {day|weekday}',
	    '{year}[-.\\/\\s]{months}[-.\\/\\s]{date}',
	    '{0|months} {date?}{1?} of {shift} {unit:6-7}',
	    '{0?} {num}{1?} {weekday} of {shift} {unit:6}',
	    "{date}[-.\\/\\s]{months}[-.\\/\\s](?:{year}|'?{yy})",
	    "{weekday?}\\.?,? {months}\\.?,? {date}{1?},? (?:{year}|'{yy})?"
	  ],
	  'timeFrontParse': [
	    '{sign} {num} {unit}',
	    '{num} {unit} {sign}',
	    '{4?} {day|weekday}'
	  ]
	};
	
	module.exports = EnglishLocaleBaseDefinition;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var forEachProperty = coreUtilityAliases.forEachProperty;
	
	function simpleMerge(target, source) {
	  forEachProperty(source, function(val, key) {
	    target[key] = val;
	  });
	  return target;
	}
	
	module.exports = simpleMerge;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	module.exports = {
	  hasOwn: Sugar.util.hasOwn,
	  getOwn: Sugar.util.getOwn,
	  setProperty: Sugar.util.setProperty,
	  classToString: Sugar.util.classToString,
	  defineProperty: Sugar.util.defineProperty,
	  forEachProperty: Sugar.util.forEachProperty,
	  mapNativeToChainable: Sugar.util.mapNativeToChainable
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var simpleMerge = __webpack_require__(40);
	
	function simpleClone(obj) {
	  return simpleMerge({}, obj);
	}
	
	module.exports = simpleClone;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getEnglishVariant = __webpack_require__(38);
	
	var AmericanEnglishDefinition = getEnglishVariant({
	  'mdy': true,
	  'firstDayOfWeek': 0,
	  'firstDayOfWeekYear': 1,
	  'short':  '{MM}/{dd}/{yyyy}',
	  'medium': '{Month} {d}, {yyyy}',
	  'long':   '{Month} {d}, {yyyy} {time}',
	  'full':   '{Weekday}, {Month} {d}, {yyyy} {time}',
	  'stamp':  '{Dow} {Mon} {d} {yyyy} {time}',
	  'time':   '{h}:{mm} {TT}'
	});
	
	module.exports = AmericanEnglishDefinition;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getEnglishVariant = __webpack_require__(38);
	
	var CanadianEnglishDefinition = getEnglishVariant({
	  'short':  '{yyyy}-{MM}-{dd}',
	  'medium': '{d} {Month}, {yyyy}',
	  'long':   '{d} {Month}, {yyyy} {H}:{mm}',
	  'full':   '{Weekday}, {d} {Month}, {yyyy} {time}',
	  'stamp':  '{Dow} {d} {Mon} {yyyy} {time}'
	});
	
	module.exports = CanadianEnglishDefinition;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LOCALE_ARRAY_FIELDS = __webpack_require__(46),
	    ISODefaults = __webpack_require__(47),
	    ParsingTokens = __webpack_require__(48),
	    CoreParsingFormats = __webpack_require__(49),
	    LocalizedParsingTokens = __webpack_require__(50),
	    map = __webpack_require__(51),
	    filter = __webpack_require__(52),
	    forEach = __webpack_require__(53),
	    isDefined = __webpack_require__(57),
	    commaSplit = __webpack_require__(58),
	    classChecks = __webpack_require__(60),
	    isUndefined = __webpack_require__(68),
	    mathAliases = __webpack_require__(69),
	    simpleMerge = __webpack_require__(40),
	    getOrdinalSuffix = __webpack_require__(70),
	    getRegNonCapturing = __webpack_require__(71),
	    coreUtilityAliases = __webpack_require__(41),
	    getArrayWithOffset = __webpack_require__(72),
	    iterateOverDateUnits = __webpack_require__(73),
	    arrayToRegAlternates = __webpack_require__(83),
	    fullwidthNumberHelpers = __webpack_require__(85),
	    getAdjustedUnitForNumber = __webpack_require__(88),
	    getParsingTokenWithSuffix = __webpack_require__(92);
	
	var getOwn = coreUtilityAliases.getOwn,
	    forEachProperty = coreUtilityAliases.forEachProperty,
	    fullWidthNumberMap = fullwidthNumberHelpers.fullWidthNumberMap,
	    fullWidthNumbers = fullwidthNumberHelpers.fullWidthNumbers,
	    pow = mathAliases.pow,
	    max = mathAliases.max,
	    ISO_FIRST_DAY_OF_WEEK = ISODefaults.ISO_FIRST_DAY_OF_WEEK,
	    ISO_FIRST_DAY_OF_WEEK_YEAR = ISODefaults.ISO_FIRST_DAY_OF_WEEK_YEAR,
	    isString = classChecks.isString,
	    isFunction = classChecks.isFunction;
	
	function getNewLocale(def) {
	
	  function Locale(def) {
	    this.init(def);
	  }
	
	  Locale.prototype = {
	
	    getMonthName: function(n, alternate) {
	      if (this.monthSuffix) {
	        return (n + 1) + this.monthSuffix;
	      }
	      return getArrayWithOffset(this.months, n, alternate, 12);
	    },
	
	    getWeekdayName: function(n, alternate) {
	      return getArrayWithOffset(this.weekdays, n, alternate, 7);
	    },
	
	    getTokenValue: function(field, str) {
	      var map = this[field + 'Map'], val;
	      if (map) {
	        val = map[str];
	      }
	      if (isUndefined(val)) {
	        val = this.getNumber(str);
	        if (field === 'month') {
	          // Months are the only numeric date field
	          // whose value is not the same as its number.
	          val -= 1;
	        }
	      }
	      return val;
	    },
	
	    getNumber: function(str) {
	      var num = this.numeralMap[str];
	      if (isDefined(num)) {
	        return num;
	      }
	      // The unary plus operator here show better performance and handles
	      // every format that parseFloat does with the exception of trailing
	      // characters, which are guaranteed not to be in our string at this point.
	      num = +str.replace(/,/, '.');
	      if (!isNaN(num)) {
	        return num;
	      }
	      num = this.getNumeralValue(str);
	      if (!isNaN(num)) {
	        this.numeralMap[str] = num;
	        return num;
	      }
	      return num;
	    },
	
	    getNumeralValue: function(str) {
	      var place = 1, num = 0, lastWasPlace, isPlace, numeral, digit, arr;
	      // Note that "numerals" that need to be converted through this method are
	      // all considered to be single characters in order to handle CJK. This
	      // method is by no means unique to CJK, but the complexity of handling
	      // inflections in non-CJK languages adds too much overhead for not enough
	      // value, so avoiding for now.
	      arr = str.split('');
	      for (var i = arr.length - 1; numeral = arr[i]; i--) {
	        digit = getOwn(this.numeralMap, numeral);
	        if (isUndefined(digit)) {
	          digit = getOwn(fullWidthNumberMap, numeral) || 0;
	        }
	        isPlace = digit > 0 && digit % 10 === 0;
	        if (isPlace) {
	          if (lastWasPlace) {
	            num += place;
	          }
	          if (i) {
	            place = digit;
	          } else {
	            num += digit;
	          }
	        } else {
	          num += digit * place;
	          place *= 10;
	        }
	        lastWasPlace = isPlace;
	      }
	      return num;
	    },
	
	    getOrdinal: function(n) {
	      var suffix = this.ordinalSuffix;
	      return suffix || getOrdinalSuffix(n);
	    },
	
	    getRelativeFormat: function(adu, type) {
	      return this.convertAdjustedToFormat(adu, type);
	    },
	
	    getDuration: function(ms) {
	      return this.convertAdjustedToFormat(getAdjustedUnitForNumber(max(0, ms)), 'duration');
	    },
	
	    getFirstDayOfWeek: function() {
	      var val = this.firstDayOfWeek;
	      return isDefined(val) ? val : ISO_FIRST_DAY_OF_WEEK;
	    },
	
	    getFirstDayOfWeekYear: function() {
	      return this.firstDayOfWeekYear || ISO_FIRST_DAY_OF_WEEK_YEAR;
	    },
	
	    convertAdjustedToFormat: function(adu, type) {
	      var sign, unit, mult,
	          num    = adu[0],
	          u      = adu[1],
	          ms     = adu[2],
	          format = this[type] || this.relative;
	      if (isFunction(format)) {
	        return format.call(this, num, u, ms, type);
	      }
	      mult = !this.plural || num === 1 ? 0 : 1;
	      unit = this.units[mult * 8 + u] || this.units[u];
	      sign = this[ms > 0 ? 'fromNow' : 'ago'];
	      return format.replace(/\{(.*?)\}/g, function(full, match) {
	        switch(match) {
	          case 'num': return num;
	          case 'unit': return unit;
	          case 'sign': return sign;
	        }
	      });
	    },
	
	    cacheFormat: function(dif, i) {
	      this.compiledFormats.splice(i, 1);
	      this.compiledFormats.unshift(dif);
	    },
	
	    addFormat: function(src, to) {
	      var loc = this;
	
	      function getTokenSrc(str) {
	        var suffix, src, val,
	            opt   = str.match(/\?$/),
	            nc    = str.match(/^(\d+)\??$/),
	            slice = str.match(/(\d)(?:-(\d))?/),
	            key   = str.replace(/[^a-z]+$/i, '');
	
	        // Allowing alias tokens such as {time}
	        if (val = getOwn(loc.parsingAliases, key)) {
	          src = replaceParsingTokens(val);
	          if (opt) {
	            src = getRegNonCapturing(src, true);
	          }
	          return src;
	        }
	
	        if (nc) {
	          src = loc.tokens[nc[1]];
	        } else if (val = getOwn(ParsingTokens, key)) {
	          src = val.src;
	        } else {
	          val = getOwn(loc.parsingTokens, key) || getOwn(loc, key);
	
	          // Both the "months" array and the "month" parsing token can be accessed
	          // by either {month} or {months}, falling back as necessary, however
	          // regardless of whether or not a fallback occurs, the final field to
	          // be passed to addRawFormat must be normalized as singular.
	          key = key.replace(/s$/, '');
	
	          if (!val) {
	            val = getOwn(loc.parsingTokens, key) || getOwn(loc, key + 's');
	          }
	
	          if (isString(val)) {
	            src = val;
	            suffix = loc[key + 'Suffix'];
	          } else {
	            if (slice) {
	              val = filter(val, function(m, i) {
	                var mod = i % (loc.units ? 8 : val.length);
	                return mod >= slice[1] && mod <= (slice[2] || slice[1]);
	              });
	            }
	            src = arrayToRegAlternates(val);
	          }
	        }
	        if (!src) {
	          return '';
	        }
	        if (nc) {
	          // Non-capturing tokens like {0}
	          src = getRegNonCapturing(src);
	        } else {
	          // Capturing group and add to parsed tokens
	          to.push(key);
	          src = '(' + src + ')';
	        }
	        if (suffix) {
	          // Date/time suffixes such as those in CJK
	          src = getParsingTokenWithSuffix(key, src, suffix);
	        }
	        if (opt) {
	          src += '?';
	        }
	        return src;
	      }
	
	      function replaceParsingTokens(str) {
	
	        // Make spaces optional
	        str = str.replace(/ /g, ' ?');
	
	        return str.replace(/\{([^,]+?)\}/g, function(match, token) {
	          var tokens = token.split('|'), src;
	          if (tokens.length > 1) {
	            src = getRegNonCapturing(map(tokens, getTokenSrc).join('|'));
	          } else {
	            src = getTokenSrc(token);
	          }
	          return src;
	        });
	      }
	
	      if (!to) {
	        to = [];
	        src = replaceParsingTokens(src);
	      }
	
	      loc.addRawFormat(src, to);
	    },
	
	    addRawFormat: function(format, to) {
	      this.compiledFormats.unshift({
	        reg: RegExp('^ *' + format + ' *$', 'i'),
	        to: to
	      });
	    },
	
	    init: function(def) {
	      var loc = this;
	
	      // -- Initialization helpers
	
	      function initFormats() {
	        loc.compiledFormats = [];
	        loc.parsingAliases = {};
	        loc.parsingTokens = {};
	      }
	
	      function initDefinition() {
	        simpleMerge(loc, def);
	      }
	
	      function initArrayFields() {
	        forEach(LOCALE_ARRAY_FIELDS, function(name) {
	          var val = loc[name];
	          if (isString(val)) {
	            loc[name] = commaSplit(val);
	          } else if (!val) {
	            loc[name] = [];
	          }
	        });
	      }
	
	      // -- Value array build helpers
	
	      function buildValueArray(name, mod, map, fn) {
	        var field = name, all = [], setMap;
	        if (!loc[field]) {
	          field += 's';
	        }
	        if (!map) {
	          map = {};
	          setMap = true;
	        }
	        forAllAlternates(field, function(alt, j, i) {
	          var idx = j * mod + i, val;
	          val = fn ? fn(i) : i;
	          map[alt] = val;
	          map[alt.toLowerCase()] = val;
	          all[idx] = alt;
	        });
	        loc[field] = all;
	        if (setMap) {
	          loc[name + 'Map'] = map;
	        }
	      }
	
	      function forAllAlternates(field, fn) {
	        forEach(loc[field], function(str, i) {
	          forEachAlternate(str, function(alt, j) {
	            fn(alt, j, i);
	          });
	        });
	      }
	
	      function forEachAlternate(str, fn) {
	        var arr = map(str.split('+'), function(split) {
	          return split.replace(/(.+):(.+)$/, function(full, base, suffixes) {
	            return map(suffixes.split('|'), function(suffix) {
	              return base + suffix;
	            }).join('|');
	          });
	        }).join('|');
	        forEach(arr.split('|'), fn);
	      }
	
	      function buildNumerals() {
	        var map = {};
	        buildValueArray('numeral', 10, map);
	        buildValueArray('article', 1, map, function() {
	          return 1;
	        });
	        buildValueArray('placeholder', 4, map, function(n) {
	          return pow(10, n + 1);
	        });
	        loc.numeralMap = map;
	      }
	
	      function buildTimeFormats() {
	        loc.parsingAliases['time'] = getTimeFormat();
	        loc.parsingAliases['tzOffset'] = getTZOffsetFormat();
	      }
	
	      function getTimeFormat() {
	        var src;
	        if (loc.ampmFront) {
	          // "ampmFront" exists mostly for CJK locales, which also presume that
	          // time suffixes exist, allowing this to be a simpler regex.
	          src = '{ampm?} {hour} (?:{minute} (?::?{second})?)?';
	        } else if(loc.ampm.length) {
	          src = '{hour}(?:[.:]{minute}(?:[.:]{second})? {ampm?}| {ampm})';
	        } else {
	          src = '{hour}(?:[.:]{minute}(?:[.:]{second})?)';
	        }
	        return src;
	      }
	
	      function getTZOffsetFormat() {
	        return '(?:{Z}|{GMT?}(?:{tzSign}{tzHour}(?::?{tzMinute}(?: \\([\\w\\s]+\\))?)?)?)?';
	      }
	
	      function buildParsingTokens() {
	        forEachProperty(LocalizedParsingTokens, function(token, name) {
	          var src, arr;
	          src = token.base ? ParsingTokens[token.base].src : token.src;
	          if (token.requiresNumerals || loc.numeralUnits) {
	            src += getNumeralSrc();
	          }
	          arr = loc[name + 's'];
	          if (arr && arr.length) {
	            src += '|' + arrayToRegAlternates(arr);
	          }
	          loc.parsingTokens[name] = src;
	        });
	      }
	
	      function getNumeralSrc() {
	        var all, src = '';
	        all = loc.numerals.concat(loc.placeholders).concat(loc.articles);
	        if (loc.allowsFullWidth) {
	          all = all.concat(fullWidthNumbers.split(''));
	        }
	        if (all.length) {
	          src = '|(?:' + arrayToRegAlternates(all) + ')+';
	        }
	        return src;
	      }
	
	      function buildTimeSuffixes() {
	        iterateOverDateUnits(function(unit, i) {
	          var token = loc.timeSuffixes[i];
	          if (token) {
	            loc[(unit.alias || unit.name) + 'Suffix'] = token;
	          }
	        });
	      }
	
	      function buildModifiers() {
	        forEach(loc.modifiers, function(modifier) {
	          var name = modifier.name, mapKey = name + 'Map', map;
	          map = loc[mapKey] || {};
	          forEachAlternate(modifier.src, function(alt, j) {
	            var token = getOwn(loc.parsingTokens, name), val = modifier.value;
	            map[alt] = val;
	            loc.parsingTokens[name] = token ? token + '|' + alt : alt;
	            if (modifier.name === 'sign' && j === 0) {
	              // Hooking in here to set the first "fromNow" or "ago" modifier
	              // directly on the locale, so that it can be reused in the
	              // relative format.
	              loc[val === 1 ? 'fromNow' : 'ago'] = alt;
	            }
	          });
	          loc[mapKey] = map;
	        });
	      }
	
	      // -- Format adding helpers
	
	      function addCoreFormats() {
	        forEach(CoreParsingFormats, function(df) {
	          var src = df.src;
	          if (df.mdy && loc.mdy) {
	            // Use the mm/dd/yyyy variant if it
	            // exists and the locale requires it
	            src = df.mdy;
	          }
	          if (df.time) {
	            // Core formats that allow time require the time
	            // reg on both sides, so add both versions here.
	            loc.addFormat(getFormatWithTime(src, true));
	            loc.addFormat(getFormatWithTime(src));
	          } else {
	            loc.addFormat(src);
	          }
	        });
	        loc.addFormat('{time}');
	      }
	
	      function addLocaleFormats() {
	        addFormatSet('parse');
	        addFormatSet('timeParse', true);
	        addFormatSet('timeFrontParse', true, true);
	      }
	
	      function addFormatSet(field, allowTime, timeFront) {
	        forEach(loc[field], function(format) {
	          if (allowTime) {
	            format = getFormatWithTime(format, timeFront);
	          }
	          loc.addFormat(format);
	        });
	      }
	
	      function getFormatWithTime(baseFormat, timeBefore) {
	        if (timeBefore) {
	          return getTimeBefore() + baseFormat;
	        }
	        return baseFormat + getTimeAfter();
	      }
	
	      function getTimeBefore() {
	        return getRegNonCapturing('{time}[,\\s\\u3000]', true);
	      }
	
	      function getTimeAfter() {
	        var markers = ',?[\\s\\u3000]', localized;
	        localized = arrayToRegAlternates(loc.timeMarkers);
	        if (localized) {
	          markers += '| (?:' + localized + ') ';
	        }
	        markers = getRegNonCapturing(markers, loc.timeMarkerOptional);
	        return getRegNonCapturing(markers + '{time}', true);
	      }
	
	      initFormats();
	      initDefinition();
	      initArrayFields();
	
	      buildValueArray('month', 12);
	      buildValueArray('weekday', 7);
	      buildValueArray('unit', 8);
	      buildValueArray('ampm', 2);
	
	      buildNumerals();
	      buildTimeFormats();
	      buildParsingTokens();
	      buildTimeSuffixes();
	      buildModifiers();
	
	      // The order of these formats is important. Order is reversed so formats
	      // that are initialized later will take precedence. Generally, this means
	      // that more specific formats should come later.
	      addCoreFormats();
	      addLocaleFormats();
	
	    }
	
	  };
	
	  return new Locale(def);
	}
	
	module.exports = getNewLocale;

/***/ },
/* 46 */
/***/ function(module, exports) {

	'use strict';
	
	var LOCALE_ARRAY_FIELDS = [
	  'months', 'weekdays', 'units', 'numerals', 'placeholders',
	  'articles', 'tokens', 'timeMarkers', 'ampm', 'timeSuffixes',
	  'parse', 'timeParse', 'timeFrontParse', 'modifiers'
	];
	
	module.exports = LOCALE_ARRAY_FIELDS;

/***/ },
/* 47 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  ISO_FIRST_DAY_OF_WEEK: 1,
	  ISO_FIRST_DAY_OF_WEEK_YEAR: 4
	};

/***/ },
/* 48 */
/***/ function(module, exports) {

	'use strict';
	
	var ParsingTokens = {
	  'yyyy': {
	    param: 'year',
	    src: '\\d{4}'
	  },
	  'MM': {
	    param: 'month',
	    src: '[01]?\\d'
	  },
	  'dd': {
	    param: 'date',
	    src: '[0123]?\\d'
	  },
	  'hh': {
	    param: 'hour',
	    src: '[0-2]?\\d'
	  },
	  'mm': {
	    param: 'minute',
	    src: '[0-5]\\d'
	  },
	  'ss': {
	    param: 'second',
	    src: '[0-5]\\d(?:[,.]\\d+)?'
	  },
	  'yy': {
	    param: 'year',
	    src: '\\d{2}'
	  },
	  'y': {
	    param: 'year',
	    src: '\\d'
	  },
	  'yearSign': {
	    src: '[+-]',
	    sign: true
	  },
	  'tzHour': {
	    src: '[0-1]\\d'
	  },
	  'tzMinute': {
	    src: '[0-5]\\d'
	  },
	  'tzSign': {
	    src: '[+−-]',
	    sign: true
	  },
	  'ihh': {
	    param: 'hour',
	    src: '[0-2]?\\d(?:[,.]\\d+)?'
	  },
	  'imm': {
	    param: 'minute',
	    src: '[0-5]\\d(?:[,.]\\d+)?'
	  },
	  'GMT': {
	    param: 'utc',
	    src: 'GMT',
	    val: 1
	  },
	  'Z': {
	    param: 'utc',
	    src: 'Z',
	    val: 1
	  },
	  'timestamp': {
	    src: '\\d+'
	  }
	};
	
	module.exports = ParsingTokens;

/***/ },
/* 49 */
/***/ function(module, exports) {

	'use strict';
	
	var CoreParsingFormats = [
	  {
	    // 12-1978
	    // 08-1978 (MDY)
	    src: '{MM}[-.\\/]{yyyy}'
	  },
	  {
	    // 12/08/1978
	    // 08/12/1978 (MDY)
	    time: true,
	    src: '{dd}[-.\\/]{MM}(?:[-.\\/]{yyyy|yy|y})?',
	    mdy: '{MM}[-.\\/]{dd}(?:[-.\\/]{yyyy|yy|y})?'
	  },
	  {
	    // 1975-08-25
	    time: true,
	    src: '{yyyy}[-.\\/]{MM}(?:[-.\\/]{dd})?'
	  },
	  {
	    // .NET JSON
	    src: '\\\\/Date\\({timestamp}(?:[+-]\\d{4,4})?\\)\\\\/'
	  },
	  {
	    // ISO-8601
	    src: '{yearSign?}{yyyy}(?:-?{MM}(?:-?{dd}(?:T{ihh}(?::?{imm}(?::?{ss})?)?)?)?)?{tzOffset?}'
	  }
	];
	
	module.exports = CoreParsingFormats;

/***/ },
/* 50 */
/***/ function(module, exports) {

	'use strict';
	
	var LocalizedParsingTokens = {
	  'year': {
	    base: 'yyyy',
	    requiresSuffix: true
	  },
	  'month': {
	    base: 'MM',
	    requiresSuffix: true
	  },
	  'date': {
	    base: 'dd',
	    requiresSuffix: true
	  },
	  'hour': {
	    base: 'hh',
	    requiresSuffixOr: ':'
	  },
	  'minute': {
	    base: 'mm'
	  },
	  'second': {
	    base: 'ss'
	  },
	  'num': {
	    src: '\\d+',
	    requiresNumerals: true
	  }
	};
	
	module.exports = LocalizedParsingTokens;

/***/ },
/* 51 */
/***/ function(module, exports) {

	'use strict';
	
	function map(arr, fn) {
	  // perf: Not using fixed array len here as it may be sparse.
	  var result = [];
	  for (var i = 0, len = arr.length; i < len; i++) {
	    if (i in arr) {
	      result.push(fn(arr[i], i));
	    }
	  }
	  return result;
	}
	
	module.exports = map;

/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';
	
	function filter(arr, fn) {
	  var result = [];
	  for (var i = 0, len = arr.length; i < len; i++) {
	    var el = arr[i];
	    if (i in arr && fn(el, i)) {
	      result.push(el);
	    }
	  }
	  return result;
	}
	
	module.exports = filter;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var iterateOverSparseArray = __webpack_require__(54);
	
	function forEach(arr, fn) {
	  for (var i = 0, len = arr.length; i < len; i++) {
	    if (!(i in arr)) {
	      return iterateOverSparseArray(arr, fn, i);
	    }
	    fn(arr[i], i);
	  }
	}
	
	module.exports = forEach;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getSparseArrayIndexes = __webpack_require__(55);
	
	function iterateOverSparseArray(arr, fn, fromIndex, loop) {
	  var indexes = getSparseArrayIndexes(arr, fromIndex, loop), index;
	  for (var i = 0, len = indexes.length; i < len; i++) {
	    index = indexes[i];
	    fn.call(arr, arr[index], index, arr);
	  }
	  return arr;
	}
	
	module.exports = iterateOverSparseArray;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isArrayIndex = __webpack_require__(56);
	
	function getSparseArrayIndexes(arr, fromIndex, loop, fromRight) {
	  var indexes = [], i;
	  for (i in arr) {
	    if (isArrayIndex(i) && (loop || (fromRight ? i <= fromIndex : i >= fromIndex))) {
	      indexes.push(+i);
	    }
	  }
	  indexes.sort(function(a, b) {
	    var aLoop = a > fromIndex;
	    var bLoop = b > fromIndex;
	    if (aLoop !== bLoop) {
	      return aLoop ? -1 : 1;
	    }
	    return a - b;
	  });
	  return indexes;
	}
	
	module.exports = getSparseArrayIndexes;

/***/ },
/* 56 */
/***/ function(module, exports) {

	'use strict';
	
	function isArrayIndex(n) {
	  return n >>> 0 == n && n != 0xFFFFFFFF;
	}
	
	module.exports = isArrayIndex;

/***/ },
/* 57 */
/***/ function(module, exports) {

	'use strict';
	
	function isDefined(o) {
	  return o !== undefined;
	}
	
	module.exports = isDefined;

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var CommonChars = __webpack_require__(59);
	
	var HALF_WIDTH_COMMA = CommonChars.HALF_WIDTH_COMMA;
	
	function commaSplit(str) {
	  return str.split(HALF_WIDTH_COMMA);
	}
	
	module.exports = commaSplit;

/***/ },
/* 59 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  HALF_WIDTH_ZERO: 0x30,
	  FULL_WIDTH_ZERO: 0xff10,
	  HALF_WIDTH_PERIOD: '.',
	  FULL_WIDTH_PERIOD: '．',
	  HALF_WIDTH_COMMA: ',',
	  OPEN_BRACE: '{',
	  CLOSE_BRACE: '}'
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var NATIVE_TYPES = __webpack_require__(61),
	    forEach = __webpack_require__(53),
	    isClass = __webpack_require__(62),
	    spaceSplit = __webpack_require__(63),
	    isPlainObject = __webpack_require__(64),
	    coreUtilityAliases = __webpack_require__(41);
	
	var classToString = coreUtilityAliases.classToString;
	
	var isSerializable,
	    isBoolean, isNumber, isString,
	    isDate, isRegExp, isFunction,
	    isArray, isSet, isMap, isError;
	
	function buildClassChecks() {
	
	  var knownTypes = {};
	
	  function addCoreTypes() {
	
	    var names = spaceSplit(NATIVE_TYPES);
	
	    isBoolean = buildPrimitiveClassCheck(names[0]);
	    isNumber  = buildPrimitiveClassCheck(names[1]);
	    isString  = buildPrimitiveClassCheck(names[2]);
	
	    isDate   = buildClassCheck(names[3]);
	    isRegExp = buildClassCheck(names[4]);
	
	    // Wanted to enhance performance here by using simply "typeof"
	    // but Firefox has two major issues that make this impossible,
	    // one fixed, the other not, so perform a full class check here.
	    //
	    // 1. Regexes can be typeof "function" in FF < 3
	    //    https://bugzilla.mozilla.org/show_bug.cgi?id=61911 (fixed)
	    //
	    // 2. HTMLEmbedElement and HTMLObjectElement are be typeof "function"
	    //    https://bugzilla.mozilla.org/show_bug.cgi?id=268945 (won't fix)
	    isFunction = buildClassCheck(names[5]);
	
	
	    isArray = Array.isArray || buildClassCheck(names[6]);
	    isError = buildClassCheck(names[7]);
	
	    isSet = buildClassCheck(names[8], typeof Set !== 'undefined' && Set);
	    isMap = buildClassCheck(names[9], typeof Map !== 'undefined' && Map);
	
	    // Add core types as known so that they can be checked by value below,
	    // notably excluding Functions and adding Arguments and Error.
	    addKnownType('Arguments');
	    addKnownType(names[0]);
	    addKnownType(names[1]);
	    addKnownType(names[2]);
	    addKnownType(names[3]);
	    addKnownType(names[4]);
	    addKnownType(names[6]);
	
	  }
	
	  function addArrayTypes() {
	    var types = 'Int8 Uint8 Uint8Clamped Int16 Uint16 Int32 Uint32 Float32 Float64';
	    forEach(spaceSplit(types), function(str) {
	      addKnownType(str + 'Array');
	    });
	  }
	
	  function addKnownType(className) {
	    var str = '[object '+ className +']';
	    knownTypes[str] = true;
	  }
	
	  function isKnownType(className) {
	    return knownTypes[className];
	  }
	
	  function buildClassCheck(className, globalObject) {
	    if (globalObject && isClass(new globalObject, 'Object')) {
	      return getConstructorClassCheck(globalObject);
	    } else {
	      return getToStringClassCheck(className);
	    }
	  }
	
	  function getConstructorClassCheck(obj) {
	    var ctorStr = String(obj);
	    return function(obj) {
	      return String(obj.constructor) === ctorStr;
	    };
	  }
	
	  function getToStringClassCheck(className) {
	    return function(obj, str) {
	      // perf: Returning up front on instanceof appears to be slower.
	      return isClass(obj, className, str);
	    };
	  }
	
	  function buildPrimitiveClassCheck(className) {
	    var type = className.toLowerCase();
	    return function(obj) {
	      var t = typeof obj;
	      return t === type || t === 'object' && isClass(obj, className);
	    };
	  }
	
	  addCoreTypes();
	  addArrayTypes();
	
	  isSerializable = function(obj, className) {
	    // Only known objects can be serialized. This notably excludes functions,
	    // host objects, Symbols (which are matched by reference), and instances
	    // of classes. The latter can arguably be matched by value, but
	    // distinguishing between these and host objects -- which should never be
	    // compared by value -- is very tricky so not dealing with it here.
	    className = className || classToString(obj);
	    return isKnownType(className) || isPlainObject(obj, className);
	  };
	
	}
	
	buildClassChecks();
	
	module.exports = {
	  isSerializable: isSerializable,
	  isBoolean: isBoolean,
	  isNumber: isNumber,
	  isString: isString,
	  isDate: isDate,
	  isRegExp: isRegExp,
	  isFunction: isFunction,
	  isArray: isArray,
	  isSet: isSet,
	  isMap: isMap,
	  isError: isError
	};

/***/ },
/* 61 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = 'Boolean Number String Date RegExp Function Array Error Set Map';

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var classToString = coreUtilityAliases.classToString;
	
	function isClass(obj, className, str) {
	  if (!str) {
	    str = classToString(obj);
	  }
	  return str === '[object '+ className +']';
	}
	
	module.exports = isClass;

/***/ },
/* 63 */
/***/ function(module, exports) {

	'use strict';
	
	function spaceSplit(str) {
	  return str.split(' ');
	}
	
	module.exports = spaceSplit;

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isClass = __webpack_require__(62),
	    isObjectType = __webpack_require__(65),
	    hasOwnEnumeratedProperties = __webpack_require__(66),
	    hasValidPlainObjectPrototype = __webpack_require__(67);
	
	function isPlainObject(obj, className) {
	  return isObjectType(obj) &&
	         isClass(obj, 'Object', className) &&
	         hasValidPlainObjectPrototype(obj) &&
	         hasOwnEnumeratedProperties(obj);
	}
	
	module.exports = isPlainObject;

/***/ },
/* 65 */
/***/ function(module, exports) {

	'use strict';
	
	function isObjectType(obj, type) {
	  return !!obj && (type || typeof obj) === 'object';
	}
	
	module.exports = isObjectType;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var hasOwn = coreUtilityAliases.hasOwn;
	
	function hasOwnEnumeratedProperties(obj) {
	  // Plain objects are generally defined as having enumerated properties
	  // all their own, however in early IE environments without defineProperty,
	  // there may also be enumerated methods in the prototype chain, so check
	  // for both of these cases.
	  var objectProto = Object.prototype;
	  for (var key in obj) {
	    var val = obj[key];
	    if (!hasOwn(obj, key) && val !== objectProto[key]) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = hasOwnEnumeratedProperties;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var hasOwn = coreUtilityAliases.hasOwn;
	
	function hasValidPlainObjectPrototype(obj) {
	  var hasToString = 'toString' in obj;
	  var hasConstructor = 'constructor' in obj;
	  // An object created with Object.create(null) has no methods in the
	  // prototype chain, so check if any are missing. The additional hasToString
	  // check is for false positives on some host objects in old IE which have
	  // toString but no constructor. If the object has an inherited constructor,
	  // then check if it is Object (the "isPrototypeOf" tapdance here is a more
	  // robust way of ensuring this if the global has been hijacked). Note that
	  // accessing the constructor directly (without "in" or "hasOwnProperty")
	  // will throw a permissions error in IE8 on cross-domain windows.
	  return (!hasConstructor && !hasToString) ||
	          (hasConstructor && !hasOwn(obj, 'constructor') &&
	           hasOwn(obj.constructor.prototype, 'isPrototypeOf'));
	}
	
	module.exports = hasValidPlainObjectPrototype;

/***/ },
/* 68 */
/***/ function(module, exports) {

	'use strict';
	
	function isUndefined(o) {
	  return o === undefined;
	}
	
	module.exports = isUndefined;

/***/ },
/* 69 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  abs: Math.abs,
	  pow: Math.pow,
	  min: Math.min,
	  max: Math.max,
	  ceil: Math.ceil,
	  floor: Math.floor,
	  round: Math.round
	};

/***/ },
/* 70 */
/***/ function(module, exports) {

	'use strict';
	
	function getOrdinalSuffix(num) {
	  if (num >= 11 && num <= 13) {
	    return 'th';
	  } else {
	    switch(num % 10) {
	      case 1:  return 'st';
	      case 2:  return 'nd';
	      case 3:  return 'rd';
	      default: return 'th';
	    }
	  }
	}
	
	module.exports = getOrdinalSuffix;

/***/ },
/* 71 */
/***/ function(module, exports) {

	'use strict';
	
	function getRegNonCapturing(src, opt) {
	  if (src.length > 1) {
	    src = '(?:' + src + ')';
	  }
	  if (opt) {
	    src += '?';
	  }
	  return src;
	}
	
	module.exports = getRegNonCapturing;

/***/ },
/* 72 */
/***/ function(module, exports) {

	'use strict';
	
	function getArrayWithOffset(arr, n, alternate, offset) {
	  var val;
	  if (alternate > 1) {
	    val = arr[n + (alternate - 1) * offset];
	  }
	  return val || arr[n];
	}
	
	module.exports = getArrayWithOffset;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnits = __webpack_require__(74),
	    DateUnitIndexes = __webpack_require__(82),
	    isUndefined = __webpack_require__(68);
	
	var YEAR_INDEX = DateUnitIndexes.YEAR_INDEX;
	
	function iterateOverDateUnits(fn, startIndex, endIndex) {
	  endIndex = endIndex || 0;
	  if (isUndefined(startIndex)) {
	    startIndex = YEAR_INDEX;
	  }
	  for (var index = startIndex; index >= endIndex; index--) {
	    if (fn(DateUnits[index], index) === false) {
	      break;
	    }
	  }
	}
	
	module.exports = iterateOverDateUnits;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getDaysInMonth = __webpack_require__(75);
	
	var DateUnits = [
	  {
	    name: 'millisecond',
	    method: 'Milliseconds',
	    multiplier: 1,
	    start: 0,
	    end: 999
	  },
	  {
	    name: 'second',
	    method: 'Seconds',
	    multiplier: 1000,
	    start: 0,
	    end: 59
	  },
	  {
	    name: 'minute',
	    method: 'Minutes',
	    multiplier: 60 * 1000,
	    start: 0,
	    end: 59
	  },
	  {
	    name: 'hour',
	    method: 'Hours',
	    multiplier: 60 * 60 * 1000,
	    start: 0,
	    end: 23
	  },
	  {
	    name: 'day',
	    alias: 'date',
	    method: 'Date',
	    ambiguous: true,
	    multiplier: 24 * 60 * 60 * 1000,
	    start: 1,
	    end: function(d) {
	      return getDaysInMonth(d);
	    }
	  },
	  {
	    name: 'week',
	    method: 'ISOWeek',
	    ambiguous: true,
	    multiplier: 7 * 24 * 60 * 60 * 1000
	  },
	  {
	    name: 'month',
	    method: 'Month',
	    ambiguous: true,
	    multiplier: 30.4375 * 24 * 60 * 60 * 1000,
	    start: 0,
	    end: 11
	  },
	  {
	    name: 'year',
	    method: 'FullYear',
	    ambiguous: true,
	    multiplier: 365.25 * 24 * 60 * 60 * 1000,
	    start: 0
	  }
	];
	
	module.exports = DateUnits;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getYear = __webpack_require__(76),
	    getMonth = __webpack_require__(81),
	    callDateGet = __webpack_require__(77);
	
	function getDaysInMonth(d) {
	  return 32 - callDateGet(new Date(getYear(d), getMonth(d), 32), 'Date');
	}
	
	module.exports = getDaysInMonth;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateGet = __webpack_require__(77);
	
	function getYear(d) {
	  return callDateGet(d, 'FullYear');
	}
	
	module.exports = getYear;

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utc = __webpack_require__(78);
	
	function callDateGet(d, method) {
	  return d['get' + (_utc(d) ? 'UTC' : '') + method]();
	}
	
	module.exports = callDateGet;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var privatePropertyAccessor = __webpack_require__(79);
	
	module.exports = privatePropertyAccessor('utc');

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var PRIVATE_PROP_PREFIX = __webpack_require__(80),
	    coreUtilityAliases = __webpack_require__(41);
	
	var setProperty = coreUtilityAliases.setProperty;
	
	function privatePropertyAccessor(key) {
	  var privateKey = PRIVATE_PROP_PREFIX + key;
	  return function(obj, val) {
	    if (arguments.length > 1) {
	      setProperty(obj, privateKey, val);
	      return obj;
	    }
	    return obj[privateKey];
	  };
	}
	
	module.exports = privatePropertyAccessor;

/***/ },
/* 80 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = '_sugar_';

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateGet = __webpack_require__(77);
	
	function getMonth(d) {
	  return callDateGet(d, 'Month');
	}
	
	module.exports = getMonth;

/***/ },
/* 82 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = {
	  HOURS_INDEX: 3,
	  DAY_INDEX: 4,
	  WEEK_INDEX: 5,
	  MONTH_INDEX: 6,
	  YEAR_INDEX: 7
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var map = __webpack_require__(51),
	    escapeRegExp = __webpack_require__(84);
	
	function arrayToRegAlternates(arr) {
	  var joined = arr.join('');
	  if (!arr || !arr.length) {
	    return '';
	  }
	  if (joined.length === arr.length) {
	    return '[' + joined + ']';
	  }
	  // map handles sparse arrays so no need to compact the array here.
	  return map(arr, escapeRegExp).join('|');
	}
	
	module.exports = arrayToRegAlternates;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60);
	
	var isString = classChecks.isString;
	
	function escapeRegExp(str) {
	  if (!isString(str)) str = String(str);
	  return str.replace(/([\\\/\'*+?|()\[\]{}.^$-])/g,'\\$1');
	}
	
	module.exports = escapeRegExp;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var CommonChars = __webpack_require__(59),
	    chr = __webpack_require__(86),
	    allCharsReg = __webpack_require__(87);
	
	var HALF_WIDTH_ZERO = CommonChars.HALF_WIDTH_ZERO,
	    FULL_WIDTH_ZERO = CommonChars.FULL_WIDTH_ZERO,
	    HALF_WIDTH_PERIOD = CommonChars.HALF_WIDTH_PERIOD,
	    FULL_WIDTH_PERIOD = CommonChars.FULL_WIDTH_PERIOD,
	    HALF_WIDTH_COMMA = CommonChars.HALF_WIDTH_COMMA;
	
	var fullWidthNumberReg, fullWidthNumberMap, fullWidthNumbers;
	
	function buildFullWidthNumber() {
	  var fwp = FULL_WIDTH_PERIOD, hwp = HALF_WIDTH_PERIOD, hwc = HALF_WIDTH_COMMA, fwn = '';
	  fullWidthNumberMap = {};
	  for (var i = 0, digit; i <= 9; i++) {
	    digit = chr(i + FULL_WIDTH_ZERO);
	    fwn += digit;
	    fullWidthNumberMap[digit] = chr(i + HALF_WIDTH_ZERO);
	  }
	  fullWidthNumberMap[hwc] = '';
	  fullWidthNumberMap[fwp] = hwp;
	  // Mapping this to itself to capture it easily
	  // in stringToNumber to detect decimals later.
	  fullWidthNumberMap[hwp] = hwp;
	  fullWidthNumberReg = allCharsReg(fwn + fwp + hwc + hwp);
	  fullWidthNumbers = fwn;
	}
	
	buildFullWidthNumber();
	
	module.exports = {
	  fullWidthNumberReg: fullWidthNumberReg,
	  fullWidthNumberMap: fullWidthNumberMap,
	  fullWidthNumbers: fullWidthNumbers
	};

/***/ },
/* 86 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = String.fromCharCode;

/***/ },
/* 87 */
/***/ function(module, exports) {

	'use strict';
	
	function allCharsReg(src) {
	  return RegExp('[' + src + ']', 'g');
	}
	
	module.exports = allCharsReg;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var trunc = __webpack_require__(89),
	    withPrecision = __webpack_require__(90),
	    getAdjustedUnit = __webpack_require__(91);
	
	function getAdjustedUnitForNumber(ms) {
	  return getAdjustedUnit(ms, function(unit) {
	    return trunc(withPrecision(ms / unit.multiplier, 1));
	  });
	}
	
	module.exports = getAdjustedUnitForNumber;

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var mathAliases = __webpack_require__(69);
	
	var ceil = mathAliases.ceil,
	    floor = mathAliases.floor;
	
	var trunc = Math.trunc || function(n) {
	  if (n === 0 || !isFinite(n)) return n;
	  return n < 0 ? ceil(n) : floor(n);
	};
	
	module.exports = trunc;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var mathAliases = __webpack_require__(69);
	
	var abs = mathAliases.abs,
	    pow = mathAliases.pow,
	    round = mathAliases.round;
	
	function withPrecision(val, precision, fn) {
	  var multiplier = pow(10, abs(precision || 0));
	  fn = fn || round;
	  if (precision < 0) multiplier = 1 / multiplier;
	  return fn(val * multiplier) / multiplier;
	}
	
	module.exports = withPrecision;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var mathAliases = __webpack_require__(69),
	    iterateOverDateUnits = __webpack_require__(73);
	
	var abs = mathAliases.abs;
	
	function getAdjustedUnit(ms, fn) {
	  var unitIndex = 0, value = 0;
	  iterateOverDateUnits(function(unit, i) {
	    value = abs(fn(unit));
	    if (value >= 1) {
	      unitIndex = i;
	      return false;
	    }
	  });
	  return [value, unitIndex, ms];
	}
	
	module.exports = getAdjustedUnit;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocalizedParsingTokens = __webpack_require__(50),
	    getRegNonCapturing = __webpack_require__(71);
	
	function getParsingTokenWithSuffix(field, src, suffix) {
	  var token = LocalizedParsingTokens[field];
	  if (token.requiresSuffix) {
	    src = getRegNonCapturing(src + getRegNonCapturing(suffix));
	  } else if (token.requiresSuffixOr) {
	    src += getRegNonCapturing(token.requiresSuffixOr + '|' + suffix);
	  } else {
	    src += getRegNonCapturing(suffix, true);
	  }
	  return src;
	}
	
	module.exports = getParsingTokenWithSuffix;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    createDate = __webpack_require__(94);
	
	__webpack_require__(136);
	
	Sugar.Date.defineStatic({
	
	  'create': function(d, options) {
	    return createDate(d, options);
	  }
	
	});
	
	module.exports = Sugar.Date.create;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getExtendedDate = __webpack_require__(95);
	
	function createDate(d, options, forceClone) {
	  return getExtendedDate(null, d, options, forceClone).date;
	}
	
	module.exports = createDate;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var MINUTES = __webpack_require__(96),
	    ParsingTokens = __webpack_require__(48),
	    LocaleHelpers = __webpack_require__(35),
	    DateUnitIndexes = __webpack_require__(82),
	    _utc = __webpack_require__(78),
	    trunc = __webpack_require__(89),
	    forEach = __webpack_require__(53),
	    tzOffset = __webpack_require__(97),
	    resetTime = __webpack_require__(98),
	    isDefined = __webpack_require__(57),
	    setWeekday = __webpack_require__(103),
	    updateDate = __webpack_require__(107),
	    getNewDate = __webpack_require__(108),
	    isUndefined = __webpack_require__(68),
	    classChecks = __webpack_require__(60),
	    advanceDate = __webpack_require__(128),
	    simpleClone = __webpack_require__(42),
	    isObjectType = __webpack_require__(65),
	    moveToEndOfUnit = __webpack_require__(129),
	    deleteDateParam = __webpack_require__(131),
	    coreUtilityAliases = __webpack_require__(41),
	    getParsingTokenValue = __webpack_require__(132),
	    moveToBeginningOfUnit = __webpack_require__(133),
	    iterateOverDateParams = __webpack_require__(124),
	    getYearFromAbbreviation = __webpack_require__(134),
	    iterateOverHigherDateParams = __webpack_require__(135);
	
	var isNumber = classChecks.isNumber,
	    isString = classChecks.isString,
	    isDate = classChecks.isDate,
	    hasOwn = coreUtilityAliases.hasOwn,
	    getOwn = coreUtilityAliases.getOwn,
	    English = LocaleHelpers.English,
	    localeManager = LocaleHelpers.localeManager,
	    DAY_INDEX = DateUnitIndexes.DAY_INDEX,
	    WEEK_INDEX = DateUnitIndexes.WEEK_INDEX,
	    MONTH_INDEX = DateUnitIndexes.MONTH_INDEX,
	    YEAR_INDEX = DateUnitIndexes.YEAR_INDEX;
	
	function getExtendedDate(contextDate, d, opt, forceClone) {
	
	  var date, set, loc, options, afterCallbacks, relative, weekdayDir;
	
	  afterCallbacks = [];
	  options = getDateOptions(opt);
	
	  function getDateOptions(opt) {
	    var options = isString(opt) ? { locale: opt } : opt || {};
	    options.prefer = +!!getOwn(options, 'future') - +!!getOwn(options, 'past');
	    return options;
	  }
	
	  function getFormatParams(match, dif) {
	    var set = getOwn(options, 'params') || {};
	    forEach(dif.to, function(field, i) {
	      var str = match[i + 1], token, val;
	      if (!str) return;
	      if (field === 'yy' || field === 'y') {
	        field = 'year';
	        val = getYearFromAbbreviation(str, date, getOwn(options, 'prefer'));
	      } else if (token = getOwn(ParsingTokens, field)) {
	        field = token.param || field;
	        val = getParsingTokenValue(token, str);
	      } else {
	        val = loc.getTokenValue(field, str);
	      }
	      set[field] = val;
	    });
	    return set;
	  }
	
	  // Clone date will set the utc flag, but it will
	  // be overriden later, so set option flags instead.
	  function cloneDateByFlag(d, clone) {
	    if (_utc(d) && !isDefined(getOwn(options, 'fromUTC'))) {
	      options.fromUTC = true;
	    }
	    if (_utc(d) && !isDefined(getOwn(options, 'setUTC'))) {
	      options.setUTC = true;
	    }
	    if (clone) {
	      d = new Date(d.getTime());
	    }
	    return d;
	  }
	
	  function afterDateSet(fn) {
	    afterCallbacks.push(fn);
	  }
	
	  function fireCallbacks() {
	    forEach(afterCallbacks, function(fn) {
	      fn.call();
	    });
	  }
	
	  function parseStringDate(str) {
	
	    str = str.toLowerCase();
	
	    // The act of getting the locale will initialize
	    // if it is missing and add the required formats.
	    loc = localeManager.get(getOwn(options, 'locale'));
	
	    for (var i = 0, dif, match; dif = loc.compiledFormats[i]; i++) {
	      match = str.match(dif.reg);
	      if (match) {
	
	        // Note that caching the format will modify the compiledFormats array
	        // which is not a good idea to do inside its for loop, however we
	        // know at this point that we have a matched format and that we will
	        // break out below, so simpler to do it here.
	        loc.cacheFormat(dif, i);
	
	        set = getFormatParams(match, dif);
	
	        if (isDefined(set.timestamp)) {
	          str = set.timestamp;
	          set = null;
	          break;
	        }
	
	        if (isDefined(set.ampm)) {
	          handleAmpm(set.ampm);
	        }
	
	        if (set.utc || isDefined(set.tzHour)) {
	          handleTimezoneOffset(set.tzHour, set.tzMinute, set.tzSign);
	        }
	
	        if (isDefined(set.shift) && isUndefined(set.unit)) {
	          // "next january", "next monday", etc
	          handleUnitlessShift();
	        }
	
	        if (isDefined(set.num) && isUndefined(set.unit)) {
	          // "the second of January", etc
	          handleUnitlessNum(set.num);
	        }
	
	        if (set.midday) {
	          // "noon" and "midnight"
	          handleMidday(set.midday);
	        }
	
	        if (isDefined(set.day)) {
	          // Relative day localizations such as "today" and "tomorrow".
	          handleRelativeDay(set.day);
	        }
	
	        if (isDefined(set.unit)) {
	          // "3 days ago", etc
	          handleRelativeUnit(set.unit);
	        }
	
	        if (set.edge) {
	          // "the end of January", etc
	          handleEdge(set.edge, set);
	        }
	
	        if (set.yearSign) {
	          set.year *= set.yearSign;
	        }
	
	        break;
	      }
	    }
	
	    if (!set) {
	      // Fall back to native parsing
	      date = new Date(str);
	      if (getOwn(options, 'fromUTC')) {
	        // Falling back to system date here which cannot be parsed as UTC,
	        // so if we're forcing UTC then simply add the offset.
	        date.setTime(date.getTime() + (tzOffset(date) * MINUTES));
	      }
	    } else if (relative) {
	      updateDate(date, set, false, 1);
	    } else {
	      if (_utc(date)) {
	        // UTC times can traverse into other days or even months,
	        // so preemtively reset the time here to prevent this.
	        resetTime(date);
	      }
	      updateDate(date, set, true, 0, getOwn(options, 'prefer'), weekdayDir);
	    }
	    fireCallbacks();
	    return date;
	  }
	
	  function handleAmpm(ampm) {
	    if (ampm === 1 && set.hour < 12) {
	      // If the time is 1pm-11pm advance the time by 12 hours.
	      set.hour += 12;
	    } else if (ampm === 0 && set.hour === 12) {
	      // If it is 12:00am then set the hour to 0.
	      set.hour = 0;
	    }
	  }
	
	  function handleTimezoneOffset(tzHour, tzMinute, tzSign) {
	    // Adjust for timezone offset
	    _utc(date, true);
	    var offset = (tzSign || 1) * ((tzHour || 0) * 60 + (tzMinute || 0));
	    if (offset) {
	      set.minute = (set.minute || 0) - offset;
	    }
	  }
	
	  function handleUnitlessShift() {
	    if (isDefined(set.month)) {
	      // "next January"
	      set.unit = YEAR_INDEX;
	    } else if (isDefined(set.weekday)) {
	      // "next Monday"
	      set.unit = WEEK_INDEX;
	    }
	  }
	
	  function handleUnitlessNum(num) {
	    if (isDefined(set.weekday)) {
	      // "The second Tuesday of March"
	      setOrdinalWeekday(num);
	    } else if (isDefined(set.month)) {
	      // "The second of March"
	      set.date = set.num;
	    }
	  }
	
	  function handleMidday(hour) {
	    set.hour = hour % 24;
	    if (hour > 23) {
	      // If the date has hours past 24, we need to prevent it from traversing
	      // into a new day as that would make it being part of a new week in
	      // ambiguous dates such as "Monday".
	      afterDateSet(function() {
	        advanceDate(date, 'date', trunc(hour / 24));
	      });
	    }
	  }
	
	  function handleRelativeDay() {
	    resetTime(date);
	    if (isUndefined(set.unit)) {
	      set.unit = DAY_INDEX;
	      set.num  = set.day;
	      delete set.day;
	    }
	  }
	
	  function handleRelativeUnit(unitIndex) {
	    var num = isDefined(set.num) ? set.num : 1;
	
	    // If a weekday is defined, there are 3 possible formats being applied:
	    //
	    // 1. "the day after monday": unit is days
	    // 2. "next monday": short for "next week monday", unit is weeks
	    // 3. "the 2nd monday of next month": unit is months
	    //
	    // In the first case, we need to set the weekday up front, as the day is
	    // relative to it. The second case also needs to be handled up front for
	    // formats like "next monday at midnight" which will have its weekday reset
	    // if not set up front. The last case will set up the params necessary to
	    // shift the weekday and allow separateAbsoluteUnits below to handle setting
	    // it after the date has been shifted.
	    if(isDefined(set.weekday)) {
	      if(unitIndex === MONTH_INDEX) {
	        setOrdinalWeekday(num);
	        num = 1;
	      } else {
	        updateDate(date, { weekday: set.weekday }, true);
	        delete set.weekday;
	      }
	    }
	
	    if (set.half) {
	      // Allow localized "half" as a standalone colloquialism. Purposely avoiding
	      // the locale number system to reduce complexity. The units "month" and
	      // "week" are purposely excluded in the English date formats below, as
	      // "half a week" and "half a month" are meaningless as exact dates.
	      num *= set.half;
	    }
	
	    if (isDefined(set.shift)) {
	      // Shift and unit, ie "next month", "last week", etc.
	      num *= set.shift;
	    } else if (set.sign) {
	      // Unit and sign, ie "months ago", "weeks from now", etc.
	      num *= set.sign;
	    }
	
	    if (isDefined(set.day)) {
	      // "the day after tomorrow"
	      num += set.day;
	      delete set.day;
	    }
	
	    // Formats like "the 15th of last month" or "6:30pm of next week"
	    // contain absolute units in addition to relative ones, so separate
	    // them here, remove them from the params, and set up a callback to
	    // set them after the relative ones have been set.
	    separateAbsoluteUnits(unitIndex);
	
	    // Finally shift the unit.
	    set[English.units[unitIndex]] = num;
	    relative = true;
	  }
	
	  function handleEdge(edge, params) {
	    var edgeIndex = params.unit, weekdayOfMonth;
	    if (!edgeIndex) {
	      // If we have "the end of January", then we need to find the unit index.
	      iterateOverHigherDateParams(params, function(unitName, val, unit, i) {
	        if (unitName === 'weekday' && isDefined(params.month)) {
	          // If both a month and weekday exist, then we have a format like
	          // "the last tuesday in November, 2012", where the "last" is still
	          // relative to the end of the month, so prevent the unit "weekday"
	          // from taking over.
	          return;
	        }
	        edgeIndex = i;
	      });
	    }
	    if (edgeIndex === MONTH_INDEX && isDefined(params.weekday)) {
	      // If a weekday in a month exists (as described above),
	      // then set it up to be set after the date has been shifted.
	      weekdayOfMonth = params.weekday;
	      delete params.weekday;
	    }
	    afterDateSet(function() {
	      var stopIndex;
	      // "edge" values that are at the very edge are "2" so the beginning of the
	      // year is -2 and the end of the year is 2. Conversely, the "last day" is
	      // actually 00:00am so it is 1. -1 is reserved but unused for now.
	      if (edge < 0) {
	        moveToBeginningOfUnit(date, edgeIndex, getOwn(options, 'locale'));
	      } else if (edge > 0) {
	        if (edge === 1) {
	          stopIndex = DAY_INDEX;
	          moveToBeginningOfUnit(date, DAY_INDEX);
	        }
	        moveToEndOfUnit(date, edgeIndex, getOwn(options, 'locale'), stopIndex);
	      }
	      if (isDefined(weekdayOfMonth)) {
	        setWeekday(date, weekdayOfMonth, -edge);
	        resetTime(date);
	      }
	    });
	    if (edgeIndex === MONTH_INDEX) {
	      params.specificity = DAY_INDEX;
	    } else {
	      params.specificity = edgeIndex - 1;
	    }
	  }
	
	  function setOrdinalWeekday(num) {
	    // If we have "the 2nd Tuesday of June", then pass the "weekdayDir"
	    // flag along to updateDate so that the date does not accidentally traverse
	    // into the previous month. This needs to be independent of the "prefer"
	    // flag because we are only ensuring that the weekday is in the future, not
	    // the entire date.
	    set.weekday = 7 * (num - 1) + set.weekday;
	    set.date = 1;
	    weekdayDir = 1;
	  }
	
	  function separateAbsoluteUnits(unitIndex) {
	    var params;
	
	    iterateOverDateParams(set, function(name, val, unit, i) {
	      // If there is a time unit set that is more specific than
	      // the matched unit we have a string like "5:30am in 2 minutes",
	      // which is meaningless, so invalidate the date...
	      if (i >= unitIndex) {
	        date.setTime(NaN);
	        return false;
	      } else if (i < unitIndex) {
	        // ...otherwise set the params to set the absolute date
	        // as a callback after the relative date has been set.
	        params = params || {};
	        params[name] = val;
	        deleteDateParam(set, name);
	      }
	    });
	    if (params) {
	      afterDateSet(function() {
	        updateDate(date, params, true, false, getOwn(options, 'prefer'), weekdayDir);
	      });
	      if (set.edge) {
	        // "the end of March of next year"
	        handleEdge(set.edge, params);
	        delete set.edge;
	      }
	    }
	  }
	
	  if (contextDate && d) {
	    // If a context date is passed ("get" and "unitsFromNow"),
	    // then use it as the starting point.
	    date = cloneDateByFlag(contextDate, true);
	  } else {
	    date = getNewDate();
	  }
	
	  _utc(date, getOwn(options, 'fromUTC'));
	
	  if (isString(d)) {
	    date = parseStringDate(d);
	  } else if (isDate(d)) {
	    date = cloneDateByFlag(d, hasOwn(options, 'clone') || forceClone);
	  } else if (isObjectType(d)) {
	    set = simpleClone(d);
	    updateDate(date, set, true);
	  } else if (isNumber(d) || d === null) {
	    date.setTime(d);
	  }
	  // A date created by parsing a string presumes that the format *itself* is
	  // UTC, but not that the date, once created, should be manipulated as such. In
	  // other words, if you are creating a date object from a server time
	  // "2012-11-15T12:00:00Z", in the majority of cases you are using it to create
	  // a date that will, after creation, be manipulated as local, so reset the utc
	  // flag here unless "setUTC" is also set.
	  _utc(date, !!getOwn(options, 'setUTC'));
	  return {
	    set: set,
	    date: date
	  };
	}
	
	module.exports = getExtendedDate;

/***/ },
/* 96 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = 60 * 1000;

/***/ },
/* 97 */
/***/ function(module, exports) {

	'use strict';
	
	function tzOffset(d) {
	  return d.getTimezoneOffset();
	}
	
	module.exports = tzOffset;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82),
	    setUnitAndLowerToEdge = __webpack_require__(99);
	
	var HOURS_INDEX = DateUnitIndexes.HOURS_INDEX;
	
	function resetTime(d) {
	  return setUnitAndLowerToEdge(d, HOURS_INDEX);
	}
	
	module.exports = resetTime;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isDefined = __webpack_require__(57),
	    classChecks = __webpack_require__(60),
	    callDateSet = __webpack_require__(100),
	    walkUnitDown = __webpack_require__(101);
	
	var isFunction = classChecks.isFunction;
	
	function setUnitAndLowerToEdge(d, startIndex, stopIndex, end) {
	  walkUnitDown(startIndex, function(unit, i) {
	    var val = end ? unit.end : unit.start;
	    if (isFunction(val)) {
	      val = val(d);
	    }
	    callDateSet(d, unit.method, val);
	    return !isDefined(stopIndex) || i > stopIndex;
	  });
	  return d;
	}
	
	module.exports = setUnitAndLowerToEdge;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utc = __webpack_require__(78),
	    callDateGet = __webpack_require__(77);
	
	function callDateSet(d, method, value, safe) {
	  // "Safe" denotes not setting the date if the value is the same as what is
	  // currently set. In theory this should be a noop, however it will cause
	  // timezone shifts when in the middle of a DST fallback. This is unavoidable
	  // as the notation itself is ambiguous (i.e. there are two "1:00ams" on
	  // November 1st, 2015 in northern hemisphere timezones that follow DST),
	  // however when advancing or rewinding dates this can throw off calculations
	  // so avoiding this unintentional shifting on an opt-in basis.
	  if (safe && value === callDateGet(d, method, value)) {
	    return;
	  }
	  d['set' + (_utc(d) ? 'UTC' : '') + method](value);
	}
	
	module.exports = callDateSet;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnits = __webpack_require__(74),
	    getLowerUnitIndex = __webpack_require__(102);
	
	function walkUnitDown(unitIndex, fn) {
	  while (unitIndex >= 0) {
	    if (fn(DateUnits[unitIndex], unitIndex) === false) {
	      break;
	    }
	    unitIndex = getLowerUnitIndex(unitIndex);
	  }
	}
	
	module.exports = walkUnitDown;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82);
	
	var HOURS_INDEX = DateUnitIndexes.HOURS_INDEX,
	    DAY_INDEX = DateUnitIndexes.DAY_INDEX,
	    WEEK_INDEX = DateUnitIndexes.WEEK_INDEX,
	    MONTH_INDEX = DateUnitIndexes.MONTH_INDEX;
	
	function getLowerUnitIndex(index) {
	  if (index === MONTH_INDEX) {
	    return DAY_INDEX;
	  } else if (index === WEEK_INDEX) {
	    return HOURS_INDEX;
	  }
	  return index - 1;
	}
	
	module.exports = getLowerUnitIndex;

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var setDate = __webpack_require__(104),
	    getDate = __webpack_require__(105),
	    getWeekday = __webpack_require__(106),
	    classChecks = __webpack_require__(60),
	    mathAliases = __webpack_require__(69);
	
	var isNumber = classChecks.isNumber,
	    abs = mathAliases.abs;
	
	function setWeekday(d, dow, dir) {
	  if (!isNumber(dow)) return;
	  var currentWeekday = getWeekday(d);
	  if (dir) {
	    // Allow a "direction" parameter to determine whether a weekday can
	    // be set beyond the current weekday in either direction.
	    var ndir = dir > 0 ? 1 : -1;
	    var offset = dow % 7 - currentWeekday;
	    if (offset && offset / abs(offset) !== ndir) {
	      dow += 7 * ndir;
	    }
	  }
	  setDate(d, getDate(d) + dow - currentWeekday);
	  return d.getTime();
	}
	
	module.exports = setWeekday;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateSet = __webpack_require__(100);
	
	function setDate(d, val) {
	  callDateSet(d, 'Date', val);
	}
	
	module.exports = setDate;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateGet = __webpack_require__(77);
	
	function getDate(d) {
	  return callDateGet(d, 'Date');
	}
	
	module.exports = getDate;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateGet = __webpack_require__(77);
	
	function getWeekday(d) {
	  return callDateGet(d, 'Day');
	}
	
	module.exports = getWeekday;

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnits = __webpack_require__(74),
	    DateUnitIndexes = __webpack_require__(82),
	    trunc = __webpack_require__(89),
	    setDate = __webpack_require__(104),
	    getDate = __webpack_require__(105),
	    getMonth = __webpack_require__(81),
	    getNewDate = __webpack_require__(108),
	    setWeekday = __webpack_require__(103),
	    mathAliases = __webpack_require__(69),
	    callDateGet = __webpack_require__(77),
	    classChecks = __webpack_require__(60),
	    resetLowerUnits = __webpack_require__(115),
	    getLowerUnitIndex = __webpack_require__(102),
	    getHigherUnitIndex = __webpack_require__(116),
	    callDateSetWithWeek = __webpack_require__(117),
	    iterateOverDateParams = __webpack_require__(124);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX,
	    WEEK_INDEX = DateUnitIndexes.WEEK_INDEX,
	    MONTH_INDEX = DateUnitIndexes.MONTH_INDEX,
	    YEAR_INDEX = DateUnitIndexes.YEAR_INDEX,
	    round = mathAliases.round,
	    isNumber = classChecks.isNumber;
	
	function updateDate(d, params, reset, advance, prefer, weekdayDir) {
	  var upperUnitIndex;
	
	  function setUpperUnit(unitName, unitIndex) {
	    if (prefer && !upperUnitIndex) {
	      if (unitName === 'weekday') {
	        upperUnitIndex = WEEK_INDEX;
	      } else {
	        upperUnitIndex = getHigherUnitIndex(unitIndex);
	      }
	    }
	  }
	
	  function setSpecificity(unitIndex) {
	    // Other functions may preemptively set the specificity before arriving
	    // here so concede to them if they have already set more specific units.
	    if (unitIndex > params.specificity) {
	      return;
	    }
	    params.specificity = unitIndex;
	  }
	
	  function canDisambiguate() {
	    if (!upperUnitIndex || upperUnitIndex > YEAR_INDEX) {
	      return;
	    }
	    switch(prefer) {
	      case -1: return d > getNewDate();
	      case  1: return d < getNewDate();
	    }
	  }
	
	  function disambiguateHigherUnit() {
	    var unit = DateUnits[upperUnitIndex];
	    advance = prefer;
	    setUnit(unit.name, 1, unit, upperUnitIndex);
	  }
	
	  function handleFraction(unit, unitIndex, fraction) {
	    if (unitIndex) {
	      var lowerUnit = DateUnits[getLowerUnitIndex(unitIndex)];
	      var val = round(unit.multiplier / lowerUnit.multiplier * fraction);
	      params[lowerUnit.name] = val;
	    }
	  }
	
	  function monthHasShifted(d, targetMonth) {
	    if (targetMonth < 0) {
	      targetMonth = targetMonth % 12 + 12;
	    }
	    return targetMonth % 12 !== getMonth(d);
	  }
	
	  function setUnit(unitName, value, unit, unitIndex) {
	    var method = unit.method, checkMonth, fraction;
	
	    setUpperUnit(unitName, unitIndex);
	    setSpecificity(unitIndex);
	
	    fraction = value % 1;
	    if (fraction) {
	      handleFraction(unit, unitIndex, fraction);
	      value = trunc(value);
	    }
	
	    if (unitName === 'weekday') {
	      if (!advance) {
	        // Weekdays are always considered absolute units so simply set them
	        // here even if it is an "advance" operation. This is to help avoid
	        // ambiguous meanings in "advance" as well as to neatly allow formats
	        // like "Wednesday of next week" without more complex logic.
	        setWeekday(d, value, weekdayDir);
	      }
	      return;
	    }
	    checkMonth = unitIndex === MONTH_INDEX && getDate(d) > 28;
	
	    // If we are advancing or rewinding, then we need we need to set the
	    // absolute time if the unit is "hours" or less. This is due to the fact
	    // that setting by method is ambiguous during DST shifts. For example,
	    // 1:00am on November 1st 2015 occurs twice in North American timezones
	    // with DST, the second time being after the clocks are rolled back at
	    // 2:00am. When springing forward this is automatically handled as there
	    // is no 2:00am so the date automatically jumps to 3:00am. However, when
	    // rolling back, setHours(2) will always choose the first "2am" even if
	    // the date is currently set to the second, causing unintended jumps.
	    // This ambiguity is unavoidable when setting dates as the notation is
	    // ambiguous. However when advancing, we clearly want the resulting date
	    // to be an acutal hour ahead, which can only be accomplished by setting
	    // the absolute time. Conversely, any unit higher than "hours" MUST use
	    // the internal set methods, as they are ambiguous as absolute units of
	    // time. Years may be 365 or 366 days depending on leap years, months are
	    // all over the place, and even days may be 23-25 hours depending on DST
	    // shifts. Finally, note that the kind of jumping described above will
	    // occur when calling ANY "set" method on the date and will occur even if
	    // the value being set is identical to the one currently set (i.e.
	    // setHours(2) on a date at 2am may not be a noop). This is precarious,
	    // so avoiding this situation in callDateSet by checking up front that
	    // the value is not the same before setting.
	    if (advance && !unit.ambiguous) {
	      d.setTime(d.getTime() + (value * advance * unit.multiplier));
	      return;
	    } else if (advance) {
	      if (unitIndex === WEEK_INDEX) {
	        value *= 7;
	        method = DateUnits[DAY_INDEX].method;
	      }
	      value = (value * advance) + callDateGet(d, method);
	    }
	    callDateSetWithWeek(d, method, value, advance);
	    if (checkMonth && monthHasShifted(d, value)) {
	      // As we are setting the units in reverse order, there is a chance that
	      // our date may accidentally traverse into a new month, such as setting
	      // { month: 1, date 15 } on January 31st. Check for this here and reset
	      // the date to the last day of the previous month if this has happened.
	      setDate(d, 0);
	    }
	  }
	
	  if (isNumber(params) && advance) {
	    // If param is a number and advancing, the number is in milliseconds.
	    params = { millisecond: params };
	  } else if (isNumber(params)) {
	    // Otherwise just set the timestamp and return.
	    d.setTime(params);
	    return d;
	  }
	
	  iterateOverDateParams(params, setUnit);
	
	  if (reset && params.specificity) {
	    resetLowerUnits(d, params.specificity);
	  }
	
	  // If past or future is preferred, then the process of "disambiguation" will
	  // ensure that an ambiguous time/date ("4pm", "thursday", "June", etc.) will
	  // be in the past or future. Weeks are only considered ambiguous if there is
	  // a weekday, i.e. "thursday" is an ambiguous week, but "the 4th" is an
	  // ambiguous month.
	  if (canDisambiguate()) {
	    disambiguateHigherUnit();
	  }
	  return d;
	}
	
	module.exports = updateDate;

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _dateOptions = __webpack_require__(109);
	
	function getNewDate() {
	  return _dateOptions('newDateInternal')();
	}
	
	module.exports = getNewDate;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DATE_OPTIONS = __webpack_require__(110),
	    namespaceAliases = __webpack_require__(112),
	    defineOptionsAccessor = __webpack_require__(113);
	
	var sugarDate = namespaceAliases.sugarDate;
	
	module.exports = defineOptionsAccessor(sugarDate, DATE_OPTIONS);

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var defaultNewDate = __webpack_require__(111);
	
	var DATE_OPTIONS = {
	  'newDateInternal': defaultNewDate
	};
	
	module.exports = DATE_OPTIONS;

/***/ },
/* 111 */
/***/ function(module, exports) {

	'use strict';
	
	function defaultNewDate() {
	  return new Date;
	}
	
	module.exports = defaultNewDate;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	module.exports = {
	  sugarObject: Sugar.Object,
	  sugarArray: Sugar.Array,
	  sugarDate: Sugar.Date,
	  sugarString: Sugar.String,
	  sugarNumber: Sugar.Number,
	  sugarFunction: Sugar.Function,
	  sugarRegExp: Sugar.RegExp
	};

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var simpleClone = __webpack_require__(42),
	    defineAccessor = __webpack_require__(114);
	
	function defineOptionsAccessor(namespace, defaults) {
	  var obj = simpleClone(defaults);
	
	  function getOption(name) {
	    return obj[name];
	  }
	
	  function setOption(name, val) {
	    if (val === null) {
	      val = defaults[name];
	    }
	    obj[name] = val;
	  }
	
	  defineAccessor(namespace, 'getOption', getOption);
	  defineAccessor(namespace, 'setOption', setOption);
	  return getOption;
	}
	
	module.exports = defineOptionsAccessor;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var setProperty = coreUtilityAliases.setProperty;
	
	function defineAccessor(namespace, name, fn) {
	  setProperty(namespace, name, fn);
	}
	
	module.exports = defineAccessor;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getLowerUnitIndex = __webpack_require__(102),
	    setUnitAndLowerToEdge = __webpack_require__(99);
	
	function resetLowerUnits(d, unitIndex) {
	  return setUnitAndLowerToEdge(d, getLowerUnitIndex(unitIndex));
	}
	
	module.exports = resetLowerUnits;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX,
	    MONTH_INDEX = DateUnitIndexes.MONTH_INDEX;
	
	function getHigherUnitIndex(index) {
	  return index === DAY_INDEX ? MONTH_INDEX : index + 1;
	}
	
	module.exports = getHigherUnitIndex;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateSet = __webpack_require__(100),
	    setISOWeekNumber = __webpack_require__(118);
	
	function callDateSetWithWeek(d, method, value, safe) {
	  if (method === 'ISOWeek') {
	    setISOWeekNumber(d, value);
	  } else {
	    callDateSet(d, method, value, safe);
	  }
	}
	
	module.exports = callDateSetWithWeek;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var ISODefaults = __webpack_require__(47),
	    getDate = __webpack_require__(105),
	    setDate = __webpack_require__(104),
	    setYear = __webpack_require__(119),
	    getYear = __webpack_require__(76),
	    getMonth = __webpack_require__(81),
	    setMonth = __webpack_require__(120),
	    cloneDate = __webpack_require__(121),
	    getWeekday = __webpack_require__(106),
	    setWeekday = __webpack_require__(103),
	    classChecks = __webpack_require__(60),
	    moveToFirstDayOfWeekYear = __webpack_require__(122);
	
	var isNumber = classChecks.isNumber,
	    ISO_FIRST_DAY_OF_WEEK = ISODefaults.ISO_FIRST_DAY_OF_WEEK,
	    ISO_FIRST_DAY_OF_WEEK_YEAR = ISODefaults.ISO_FIRST_DAY_OF_WEEK_YEAR;
	
	function setISOWeekNumber(d, num) {
	  if (isNumber(num)) {
	    // Intentionally avoiding updateDate here to prevent circular dependencies.
	    var isoWeek = cloneDate(d), dow = getWeekday(d);
	    moveToFirstDayOfWeekYear(isoWeek, ISO_FIRST_DAY_OF_WEEK, ISO_FIRST_DAY_OF_WEEK_YEAR);
	    setDate(isoWeek, getDate(isoWeek) + 7 * (num - 1));
	    setYear(d, getYear(isoWeek));
	    setMonth(d, getMonth(isoWeek));
	    setDate(d, getDate(isoWeek));
	    setWeekday(d, dow || 7);
	  }
	  return d.getTime();
	}
	
	module.exports = setISOWeekNumber;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateSet = __webpack_require__(100);
	
	function setYear(d, val) {
	  callDateSet(d, 'FullYear', val);
	}
	
	module.exports = setYear;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateSet = __webpack_require__(100);
	
	function setMonth(d, val) {
	  callDateSet(d, 'Month', val);
	}
	
	module.exports = setMonth;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utc = __webpack_require__(78);
	
	function cloneDate(d) {
	  // Rhino environments have a bug where new Date(d) truncates
	  // milliseconds so need to call getTime() here.
	  var clone = new Date(d.getTime());
	  _utc(clone, !!_utc(d));
	  return clone;
	}
	
	module.exports = cloneDate;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82),
	    setDate = __webpack_require__(104),
	    setUnitAndLowerToEdge = __webpack_require__(99),
	    moveToBeginningOfWeek = __webpack_require__(123);
	
	var MONTH_INDEX = DateUnitIndexes.MONTH_INDEX;
	
	function moveToFirstDayOfWeekYear(d, firstDayOfWeek, firstDayOfWeekYear) {
	  setUnitAndLowerToEdge(d, MONTH_INDEX);
	  setDate(d, firstDayOfWeekYear);
	  moveToBeginningOfWeek(d, firstDayOfWeek);
	}
	
	module.exports = moveToFirstDayOfWeekYear;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var setWeekday = __webpack_require__(103),
	    getWeekday = __webpack_require__(106),
	    mathAliases = __webpack_require__(69);
	
	var floor = mathAliases.floor;
	
	function moveToBeginningOfWeek(d, firstDayOfWeek) {
	  setWeekday(d, floor((getWeekday(d) - firstDayOfWeek) / 7) * 7 + firstDayOfWeek);
	  return d;
	}
	
	module.exports = moveToBeginningOfWeek;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82),
	    isDefined = __webpack_require__(57),
	    getDateParam = __webpack_require__(125),
	    iterateOverDateUnits = __webpack_require__(73);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX;
	
	function iterateOverDateParams(params, fn, startIndex, endIndex) {
	
	  function run(name, unit, i) {
	    var val = getDateParam(params, name);
	    if (isDefined(val)) {
	      fn(name, val, unit, i);
	    }
	  }
	
	  iterateOverDateUnits(function (unit, i) {
	    var result = run(unit.name, unit, i);
	    if (result !== false && i === DAY_INDEX) {
	      // Check for "weekday", which has a distinct meaning
	      // in the context of setting a date, but has the same
	      // meaning as "day" as a unit of time.
	      result = run('weekday', unit, i);
	    }
	    return result;
	  }, startIndex, endIndex);
	
	}
	
	module.exports = iterateOverDateParams;

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getDateParamKey = __webpack_require__(126),
	    coreUtilityAliases = __webpack_require__(41);
	
	var getOwn = coreUtilityAliases.getOwn;
	
	function getDateParam(params, key) {
	  return getOwn(params, getDateParamKey(params, key));
	}
	
	module.exports = getDateParam;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getOwnKey = __webpack_require__(127);
	
	function getDateParamKey(params, key) {
	  return getOwnKey(params, key) ||
	         getOwnKey(params, key + 's') ||
	         (key === 'day' && getOwnKey(params, 'date'));
	}
	
	module.exports = getDateParamKey;

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var hasOwn = coreUtilityAliases.hasOwn;
	
	function getOwnKey(obj, key) {
	  if (hasOwn(obj, key)) {
	    return key;
	  }
	}
	
	module.exports = getOwnKey;

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var updateDate = __webpack_require__(107);
	
	function advanceDate(d, unit, num, reset) {
	  var set = {};
	  set[unit] = num;
	  return updateDate(d, set, reset, 1);
	}
	
	module.exports = advanceDate;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    DateUnitIndexes = __webpack_require__(82),
	    moveToEndOfWeek = __webpack_require__(130),
	    getLowerUnitIndex = __webpack_require__(102),
	    setUnitAndLowerToEdge = __webpack_require__(99);
	
	var WEEK_INDEX = DateUnitIndexes.WEEK_INDEX,
	    localeManager = LocaleHelpers.localeManager;
	
	function moveToEndOfUnit(d, unitIndex, localeCode, stopIndex) {
	  if (unitIndex === WEEK_INDEX) {
	    moveToEndOfWeek(d, localeManager.get(localeCode).getFirstDayOfWeek());
	  }
	  return setUnitAndLowerToEdge(d, getLowerUnitIndex(unitIndex), stopIndex, true);
	}
	
	module.exports = moveToEndOfUnit;

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var setWeekday = __webpack_require__(103),
	    getWeekday = __webpack_require__(106),
	    mathAliases = __webpack_require__(69);
	
	var ceil = mathAliases.ceil;
	
	function moveToEndOfWeek(d, firstDayOfWeek) {
	  var target = firstDayOfWeek - 1;
	  setWeekday(d, ceil((getWeekday(d) - target) / 7) * 7 + target);
	  return d;
	}
	
	module.exports = moveToEndOfWeek;

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getDateParamKey = __webpack_require__(126);
	
	function deleteDateParam(params, key) {
	  delete params[getDateParamKey(params, key)];
	}
	
	module.exports = deleteDateParam;

/***/ },
/* 132 */
/***/ function(module, exports) {

	'use strict';
	
	function getParsingTokenValue(token, str) {
	  var val;
	  if (token.val) {
	    val = token.val;
	  } else if (token.sign) {
	    val = str === '+' ? 1 : -1;
	  } else if (token.bool) {
	    val = !!val;
	  } else {
	    val = +str.replace(/,/, '.');
	  }
	  if (token.param === 'month') {
	    val -= 1;
	  }
	  return val;
	}
	
	module.exports = getParsingTokenValue;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    DateUnitIndexes = __webpack_require__(82),
	    getLowerUnitIndex = __webpack_require__(102),
	    moveToBeginningOfWeek = __webpack_require__(123),
	    setUnitAndLowerToEdge = __webpack_require__(99);
	
	var WEEK_INDEX = DateUnitIndexes.WEEK_INDEX,
	    localeManager = LocaleHelpers.localeManager;
	
	function moveToBeginningOfUnit(d, unitIndex, localeCode) {
	  if (unitIndex === WEEK_INDEX) {
	    moveToBeginningOfWeek(d, localeManager.get(localeCode).getFirstDayOfWeek());
	  }
	  return setUnitAndLowerToEdge(d, getLowerUnitIndex(unitIndex));
	}
	
	module.exports = moveToBeginningOfUnit;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getYear = __webpack_require__(76),
	    mathAliases = __webpack_require__(69);
	
	var abs = mathAliases.abs;
	
	function getYearFromAbbreviation(str, d, prefer) {
	  // Following IETF here, adding 1900 or 2000 depending on the last two digits.
	  // Note that this makes no accordance for what should happen after 2050, but
	  // intentionally ignoring this for now. https://www.ietf.org/rfc/rfc2822.txt
	  var val = +str, delta;
	  val += val < 50 ? 2000 : 1900;
	  if (prefer) {
	    delta = val - getYear(d);
	    if (delta / abs(delta) !== prefer) {
	      val += prefer * 100;
	    }
	  }
	  return val;
	}
	
	module.exports = getYearFromAbbreviation;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82),
	    iterateOverDateParams = __webpack_require__(124);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX,
	    YEAR_INDEX = DateUnitIndexes.YEAR_INDEX;
	
	function iterateOverHigherDateParams(params, fn) {
	  iterateOverDateParams(params, fn, YEAR_INDEX, DAY_INDEX);
	}
	
	module.exports = iterateOverHigherDateParams;

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var setDateChainableConstructor = __webpack_require__(137);
	
	setDateChainableConstructor();

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var createDate = __webpack_require__(94),
	    namespaceAliases = __webpack_require__(112),
	    setChainableConstructor = __webpack_require__(138);
	
	var sugarDate = namespaceAliases.sugarDate;
	
	function setDateChainableConstructor() {
	  setChainableConstructor(sugarDate, createDate);
	}
	
	module.exports = setDateChainableConstructor;

/***/ },
/* 138 */
/***/ function(module, exports) {

	'use strict';
	
	function setChainableConstructor(sugarNamespace, createFn) {
	  sugarNamespace.prototype.constructor = function() {
	    return createFn.apply(this, arguments);
	  };
	}
	
	module.exports = setChainableConstructor;

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35),
	    getKeys = __webpack_require__(140);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Date.defineStatic({
	
	  'getAllLocaleCodes': function() {
	    return getKeys(localeManager.getAll());
	  }
	
	});
	
	module.exports = Sugar.Date.getAllLocaleCodes;

/***/ },
/* 140 */
/***/ function(module, exports) {

	'use strict';
	
	function getKeys(obj) {
	  return Object.keys(obj);
	}
	
	module.exports = getKeys;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Date.defineStatic({
	
	  'getAllLocales': function() {
	    return localeManager.getAll();
	  }
	
	});
	
	module.exports = Sugar.Date.getAllLocales;

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Date.defineStatic({
	
	  'getLocale': function(code) {
	    return localeManager.get(code, !code);
	  }
	
	});
	
	module.exports = Sugar.Date.getLocale;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Date.defineStatic({
	
	  'removeLocale': function(code) {
	    return localeManager.remove(code);
	  }
	
	});
	
	module.exports = Sugar.Date.removeLocale;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Date.defineStatic({
	
	  'setLocale': function(code) {
	    return localeManager.set(code);
	  }
	
	});
	
	module.exports = Sugar.Date.setLocale;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.day;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var buildNumberUnitMethods = __webpack_require__(147);
	
	buildNumberUnitMethods();

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnits = __webpack_require__(74),
	    createDate = __webpack_require__(94),
	    mathAliases = __webpack_require__(69),
	    advanceDate = __webpack_require__(128),
	    namespaceAliases = __webpack_require__(112),
	    defineInstanceSimilar = __webpack_require__(148);
	
	var sugarNumber = namespaceAliases.sugarNumber,
	    round = mathAliases.round;
	
	function buildNumberUnitMethods() {
	  defineInstanceSimilar(sugarNumber, DateUnits, function(methods, unit) {
	    var name = unit.name, base, after, before;
	    base = function(n) {
	      return round(n * unit.multiplier);
	    };
	    after = function(n, d, options) {
	      return advanceDate(createDate(d, options, true), name, n);
	    };
	    before = function(n, d, options) {
	      return advanceDate(createDate(d, options, true), name, -n);
	    };
	    methods[name] = base;
	    methods[name + 's'] = base;
	    methods[name + 'Before'] = before;
	    methods[name + 'sBefore'] = before;
	    methods[name + 'Ago'] = before;
	    methods[name + 'sAgo'] = before;
	    methods[name + 'After'] = after;
	    methods[name + 'sAfter'] = after;
	    methods[name + 'FromNow'] = after;
	    methods[name + 'sFromNow'] = after;
	  });
	}
	
	module.exports = buildNumberUnitMethods;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var methodDefineAliases = __webpack_require__(149),
	    collectSimilarMethods = __webpack_require__(151);
	
	var defineInstance = methodDefineAliases.defineInstance;
	
	function defineInstanceSimilar(sugarNamespace, set, fn, flags) {
	  defineInstance(sugarNamespace, collectSimilarMethods(set, fn), flags);
	}
	
	module.exports = defineInstanceSimilar;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var wrapNamespace = __webpack_require__(150);
	
	module.exports = {
	  alias: wrapNamespace('alias'),
	  defineStatic: wrapNamespace('defineStatic'),
	  defineInstance: wrapNamespace('defineInstance'),
	  defineStaticPolyfill: wrapNamespace('defineStaticPolyfill'),
	  defineInstancePolyfill: wrapNamespace('defineInstancePolyfill'),
	  defineInstanceAndStatic: wrapNamespace('defineInstanceAndStatic'),
	  defineInstanceWithArguments: wrapNamespace('defineInstanceWithArguments')
	};

/***/ },
/* 150 */
/***/ function(module, exports) {

	'use strict';
	
	function wrapNamespace(method) {
	  return function(sugarNamespace, arg1, arg2) {
	    sugarNamespace[method](arg1, arg2);
	  };
	}
	
	module.exports = wrapNamespace;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var forEach = __webpack_require__(53),
	    spaceSplit = __webpack_require__(63),
	    classChecks = __webpack_require__(60);
	
	var isString = classChecks.isString;
	
	function collectSimilarMethods(set, fn) {
	  var methods = {};
	  if (isString(set)) {
	    set = spaceSplit(set);
	  }
	  forEach(set, function(el, i) {
	    fn(methods, el, i);
	  });
	  return methods;
	}
	
	module.exports = collectSimilarMethods;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.dayAfter;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.dayAgo;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.dayBefore;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.dayFromNow;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.days;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.daysAfter;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.daysAgo;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.daysBefore;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.daysFromNow;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    LocaleHelpers = __webpack_require__(35);
	
	var localeManager = LocaleHelpers.localeManager;
	
	Sugar.Number.defineInstance({
	
	  'duration': function(n, localeCode) {
	    return localeManager.get(localeCode).getDuration(n);
	  }
	
	});
	
	module.exports = Sugar.Number.duration;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hour;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hourAfter;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hourAgo;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hourBefore;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hourFromNow;

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hours;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hoursAfter;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hoursAgo;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hoursBefore;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.hoursFromNow;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecond;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondAfter;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondAgo;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondBefore;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondFromNow;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.milliseconds;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondsAfter;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondsAgo;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondsBefore;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.millisecondsFromNow;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minute;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minuteAfter;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minuteAgo;

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minuteBefore;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minuteFromNow;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minutes;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minutesAfter;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minutesAgo;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minutesBefore;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.minutesFromNow;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.month;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthAfter;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthAgo;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthBefore;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthFromNow;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.months;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthsAfter;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthsAgo;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthsBefore;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.monthsFromNow;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.second;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondAfter;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondAgo;

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondBefore;

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondFromNow;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.seconds;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondsAfter;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondsAgo;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondsBefore;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.secondsFromNow;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.week;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weekAfter;

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weekAgo;

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weekBefore;

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weekFromNow;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weeks;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weeksAfter;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weeksAgo;

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weeksBefore;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.weeksFromNow;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.year;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearAfter;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearAgo;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearBefore;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearFromNow;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.years;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearsAfter;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearsAgo;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearsBefore;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(146);
	
	module.exports = Sugar.Number.yearsFromNow;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addDays;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var buildDateUnitMethods = __webpack_require__(234);
	
	buildDateUnitMethods();

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnits = __webpack_require__(74),
	    DateUnitIndexes = __webpack_require__(82),
	    forEach = __webpack_require__(53),
	    compareDate = __webpack_require__(235),
	    advanceDate = __webpack_require__(128),
	    moveToEndOfUnit = __webpack_require__(129),
	    simpleCapitalize = __webpack_require__(237),
	    namespaceAliases = __webpack_require__(112),
	    defineInstanceSimilar = __webpack_require__(148),
	    moveToBeginningOfUnit = __webpack_require__(133),
	    createDateWithContext = __webpack_require__(238),
	    getTimeDistanceForUnit = __webpack_require__(239);
	
	var sugarDate = namespaceAliases.sugarDate,
	    HOURS_INDEX = DateUnitIndexes.HOURS_INDEX,
	    DAY_INDEX = DateUnitIndexes.DAY_INDEX;
	
	function buildDateUnitMethods() {
	
	  defineInstanceSimilar(sugarDate, DateUnits, function(methods, unit, index) {
	    var name = unit.name, caps = simpleCapitalize(name);
	
	    if (index > DAY_INDEX) {
	      forEach(['Last','This','Next'], function(shift) {
	        methods['is' + shift + caps] = function(d, localeCode) {
	          return compareDate(d, shift + ' ' + name, 0, localeCode, { locale: 'en' });
	        };
	      });
	    }
	    if (index > HOURS_INDEX) {
	      methods['beginningOf' + caps] = function(d, localeCode) {
	        return moveToBeginningOfUnit(d, index, localeCode);
	      };
	      methods['endOf' + caps] = function(d, localeCode) {
	        return moveToEndOfUnit(d, index, localeCode);
	      };
	    }
	
	    methods['add' + caps + 's'] = function(d, num, reset) {
	      return advanceDate(d, name, num, reset);
	    };
	
	    var since = function(date, d, options) {
	      return getTimeDistanceForUnit(date, createDateWithContext(date, d, options, true), unit);
	    };
	    var until = function(date, d, options) {
	      return getTimeDistanceForUnit(createDateWithContext(date, d, options, true), date, unit);
	    };
	
	    methods[name + 'sAgo']   = methods[name + 'sUntil']   = until;
	    methods[name + 'sSince'] = methods[name + 'sFromNow'] = since;
	
	  });
	
	}
	
	module.exports = buildDateUnitMethods;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var MINUTES = __webpack_require__(96),
	    DateUnits = __webpack_require__(74),
	    DateUnitIndexes = __webpack_require__(82),
	    _utc = __webpack_require__(78),
	    tzOffset = __webpack_require__(97),
	    cloneDate = __webpack_require__(121),
	    isDefined = __webpack_require__(57),
	    advanceDate = __webpack_require__(128),
	    dateIsValid = __webpack_require__(236),
	    moveToEndOfUnit = __webpack_require__(129),
	    getExtendedDate = __webpack_require__(95),
	    moveToBeginningOfUnit = __webpack_require__(133);
	
	var MONTH_INDEX = DateUnitIndexes.MONTH_INDEX;
	
	function compareDate(date, d, margin, localeCode, options) {
	  var loMargin = 0, hiMargin = 0, timezoneShift, compareEdges, override, min, max, p, t;
	
	  function getTimezoneShift() {
	    // If there is any specificity in the date then we're implicitly not
	    // checking absolute time, so ignore timezone shifts.
	    if (p.set && p.set.specificity) {
	      return 0;
	    }
	    return (tzOffset(p.date) - tzOffset(date)) * MINUTES;
	  }
	
	  function addSpecificUnit() {
	    var unit = DateUnits[p.set.specificity];
	    return advanceDate(cloneDate(p.date), unit.name, 1).getTime() - 1;
	  }
	
	  if (_utc(date)) {
	    options = options || {};
	    options.fromUTC = true;
	    options.setUTC = true;
	  }
	
	  p = getExtendedDate(null, d, options, true);
	
	  if (margin > 0) {
	    loMargin = hiMargin = margin;
	    override = true;
	  }
	  if (!dateIsValid(p.date)) return false;
	  if (p.set && p.set.specificity) {
	    if (isDefined(p.set.edge) || isDefined(p.set.shift)) {
	      compareEdges = true;
	      moveToBeginningOfUnit(p.date, p.set.specificity, localeCode);
	    }
	    if (compareEdges || p.set.specificity === MONTH_INDEX) {
	      max = moveToEndOfUnit(cloneDate(p.date), p.set.specificity, localeCode).getTime();
	    } else {
	      max = addSpecificUnit();
	    }
	    if (!override && isDefined(p.set.sign) && p.set.specificity) {
	      // If the time is relative, there can occasionally be an disparity between
	      // the relative date and "now", which it is being compared to, so set an
	      // extra margin to account for this.
	      loMargin = 50;
	      hiMargin = -50;
	    }
	  }
	  t   = date.getTime();
	  min = p.date.getTime();
	  max = max || min;
	  timezoneShift = getTimezoneShift();
	  if (timezoneShift) {
	    min -= timezoneShift;
	    max -= timezoneShift;
	  }
	  return t >= (min - loMargin) && t <= (max + hiMargin);
	}
	
	module.exports = compareDate;

/***/ },
/* 236 */
/***/ function(module, exports) {

	'use strict';
	
	function dateIsValid(d) {
	  return !isNaN(d.getTime());
	}
	
	module.exports = dateIsValid;

/***/ },
/* 237 */
/***/ function(module, exports) {

	'use strict';
	
	function simpleCapitalize(str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	}
	
	module.exports = simpleCapitalize;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getExtendedDate = __webpack_require__(95);
	
	function createDateWithContext(contextDate, d, options, forceClone) {
	  return getExtendedDate(contextDate, d, options, forceClone).date;
	}
	
	module.exports = createDateWithContext;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var trunc = __webpack_require__(89),
	    cloneDate = __webpack_require__(121),
	    advanceDate = __webpack_require__(128);
	
	function getTimeDistanceForUnit(d1, d2, unit) {
	  var fwd = d2 > d1, num, tmp;
	  if (!fwd) {
	    tmp = d2;
	    d2  = d1;
	    d1  = tmp;
	  }
	  num = d2 - d1;
	  if (unit.multiplier > 1) {
	    num = trunc(num / unit.multiplier);
	  }
	  // For higher order with potential ambiguity, use the numeric calculation
	  // as a starting point, then iterate until we pass the target date.
	  if (unit.ambiguous) {
	    d1 = cloneDate(d1);
	    if (num) {
	      advanceDate(d1, unit.name, num);
	    }
	    while (d1 < d2) {
	      advanceDate(d1, unit.name, 1);
	      if (d1 > d2) {
	        break;
	      }
	      num += 1;
	    }
	  }
	  return fwd ? -num : num;
	}
	
	module.exports = getTimeDistanceForUnit;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addHours;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addMilliseconds;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addMinutes;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addMonths;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addSeconds;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addWeeks;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.addYears;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    advanceDateWithArgs = __webpack_require__(248);
	
	Sugar.Date.defineInstanceWithArguments({
	
	  'advance': function(d, args) {
	    return advanceDateWithArgs(d, args, 1);
	  }
	
	});
	
	module.exports = Sugar.Date.advance;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var updateDate = __webpack_require__(107),
	    collectDateArguments = __webpack_require__(249);
	
	function advanceDateWithArgs(d, args, dir) {
	  args = collectDateArguments(args, true);
	  return updateDate(d, args[0], args[1], dir);
	}
	
	module.exports = advanceDateWithArgs;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60),
	    simpleClone = __webpack_require__(42),
	    isObjectType = __webpack_require__(65),
	    getDateParamsFromString = __webpack_require__(250),
	    collectDateParamsFromArguments = __webpack_require__(251);
	
	var isNumber = classChecks.isNumber,
	    isString = classChecks.isString;
	
	function collectDateArguments(args, allowDuration) {
	  var arg1 = args[0], arg2 = args[1];
	  if (allowDuration && isString(arg1)) {
	    arg1 = getDateParamsFromString(arg1);
	  } else if (isNumber(arg1) && isNumber(arg2)) {
	    arg1 = collectDateParamsFromArguments(args);
	    arg2 = null;
	  } else {
	    if (isObjectType(arg1)) {
	      arg1 = simpleClone(arg1);
	    }
	  }
	  return [arg1, arg2];
	}
	
	module.exports = collectDateArguments;

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isUndefined = __webpack_require__(68);
	
	function getDateParamsFromString(str) {
	  var match, num, params = {};
	  match = str.match(/^(-?\d*[\d.]\d*)?\s?(\w+?)s?$/i);
	  if (match) {
	    if (isUndefined(num)) {
	      num = +match[1];
	      if (isNaN(num)) {
	        num = 1;
	      }
	    }
	    params[match[2].toLowerCase()] = num;
	  }
	  return params;
	}
	
	module.exports = getDateParamsFromString;

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnitIndexes = __webpack_require__(82),
	    isDefined = __webpack_require__(57),
	    walkUnitDown = __webpack_require__(101);
	
	var YEAR_INDEX = DateUnitIndexes.YEAR_INDEX;
	
	function collectDateParamsFromArguments(args) {
	  var params = {}, index = 0;
	  walkUnitDown(YEAR_INDEX, function(unit) {
	    var arg = args[index++];
	    if (isDefined(arg)) {
	      params[unit.name] = arg;
	    }
	  });
	  return params;
	}
	
	module.exports = collectDateParamsFromArguments;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.beginningOfDay;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    resetTime = __webpack_require__(98),
	    getWeekday = __webpack_require__(106),
	    setWeekday = __webpack_require__(103);
	
	Sugar.Date.defineInstance({
	
	  'beginningOfISOWeek': function(date) {
	    var day = getWeekday(date);
	    if (day === 0) {
	      day = -6;
	    } else if (day !== 1) {
	      day = 1;
	    }
	    setWeekday(date, day);
	    return resetTime(date);
	  }
	
	});
	
	module.exports = Sugar.Date.beginningOfISOWeek;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.beginningOfMonth;

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.beginningOfWeek;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.beginningOfYear;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    cloneDate = __webpack_require__(121);
	
	Sugar.Date.defineInstance({
	
	  'clone': function(date) {
	    return cloneDate(date);
	  }
	
	});
	
	module.exports = Sugar.Date.clone;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.daysAgo;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.daysFromNow;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    getDaysInMonth = __webpack_require__(75);
	
	Sugar.Date.defineInstance({
	
	  'daysInMonth': function(date) {
	    return getDaysInMonth(date);
	  }
	
	});
	
	module.exports = Sugar.Date.daysInMonth;

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.daysSince;

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.daysUntil;

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.endOfDay;

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    DateUnitIndexes = __webpack_require__(82),
	    getWeekday = __webpack_require__(106),
	    setWeekday = __webpack_require__(103),
	    moveToEndOfUnit = __webpack_require__(129);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX;
	
	Sugar.Date.defineInstance({
	
	  'endOfISOWeek': function(date) {
	    if (getWeekday(date) !== 0) {
	      setWeekday(date, 7);
	    }
	    return moveToEndOfUnit(date, DAY_INDEX);
	  }
	
	});
	
	module.exports = Sugar.Date.endOfISOWeek;

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.endOfMonth;

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.endOfWeek;

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.endOfYear;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    dateFormat = __webpack_require__(269);
	
	Sugar.Date.defineInstance({
	
	  'format': function(date, f, localeCode) {
	    return dateFormat(date, f, localeCode);
	  }
	
	});
	
	module.exports = Sugar.Date.format;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var CoreOutputFormats = __webpack_require__(270),
	    formattingTokens = __webpack_require__(271),
	    assertDateIsValid = __webpack_require__(286);
	
	var dateFormatMatcher = formattingTokens.dateFormatMatcher;
	
	function dateFormat(d, format, localeCode) {
	  assertDateIsValid(d);
	  format = CoreOutputFormats[format] || format || '{long}';
	  return dateFormatMatcher(format, d, localeCode);
	}
	
	module.exports = dateFormat;

/***/ },
/* 270 */
/***/ function(module, exports) {

	'use strict';
	
	var CoreOutputFormats = {
	  'ISO8601': '{yyyy}-{MM}-{dd}T{HH}:{mm}:{ss}.{SSS}{Z}',
	  'RFC1123': '{Dow}, {dd} {Mon} {yyyy} {HH}:{mm}:{ss} {ZZ}',
	  'RFC1036': '{Weekday}, {dd}-{Mon}-{yy} {HH}:{mm}:{ss} {ZZ}'
	};
	
	module.exports = CoreOutputFormats;

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    FormatTokensBase = __webpack_require__(272),
	    CoreOutputFormats = __webpack_require__(270),
	    forEach = __webpack_require__(53),
	    padNumber = __webpack_require__(275),
	    spaceSplit = __webpack_require__(63),
	    namespaceAliases = __webpack_require__(112),
	    coreUtilityAliases = __webpack_require__(41),
	    createFormatMatcher = __webpack_require__(282),
	    defineInstanceSimilar = __webpack_require__(148);
	
	var localeManager = LocaleHelpers.localeManager,
	    hasOwn = coreUtilityAliases.hasOwn,
	    getOwn = coreUtilityAliases.getOwn,
	    forEachProperty = coreUtilityAliases.forEachProperty,
	    sugarDate = namespaceAliases.sugarDate;
	
	var ldmlTokens, strfTokens;
	
	function buildDateFormatTokens() {
	
	  function addFormats(target, tokens, fn) {
	    if (tokens) {
	      forEach(spaceSplit(tokens), function(token) {
	        target[token] = fn;
	      });
	    }
	  }
	
	  function buildLowercase(get) {
	    return function(d, localeCode) {
	      return get(d, localeCode).toLowerCase();
	    };
	  }
	
	  function buildOrdinal(get) {
	    return function(d, localeCode) {
	      var n = get(d, localeCode);
	      return n + localeManager.get(localeCode).getOrdinal(n);
	    };
	  }
	
	  function buildPadded(get, padding) {
	    return function(d, localeCode) {
	      return padNumber(get(d, localeCode), padding);
	    };
	  }
	
	  function buildTwoDigits(get) {
	    return function(d, localeCode) {
	      return get(d, localeCode) % 100;
	    };
	  }
	
	  function buildAlias(alias) {
	    return function(d, localeCode) {
	      return dateFormatMatcher(alias, d, localeCode);
	    };
	  }
	
	  function buildAlternates(f) {
	    for (var n = 1; n <= 5; n++) {
	      buildAlternate(f, n);
	    }
	  }
	
	  function buildAlternate(f, n) {
	    var alternate = function(d, localeCode) {
	      return f.get(d, localeCode, n);
	    };
	    addFormats(ldmlTokens, f.ldml + n, alternate);
	    if (f.lowerToken) {
	      ldmlTokens[f.lowerToken + n] = buildLowercase(alternate);
	    }
	  }
	
	  function getIdentityFormat(name) {
	    return function(d, localeCode) {
	      var loc = localeManager.get(localeCode);
	      return dateFormatMatcher(loc[name], d, localeCode);
	    };
	  }
	
	  ldmlTokens = {};
	  strfTokens = {};
	
	  forEach(FormatTokensBase, function(f) {
	    var get = f.get, getPadded;
	    if (f.lowerToken) {
	      ldmlTokens[f.lowerToken] = buildLowercase(get);
	    }
	    if (f.ordinalToken) {
	      ldmlTokens[f.ordinalToken] = buildOrdinal(get, f);
	    }
	    if (f.ldmlPaddedToken) {
	      ldmlTokens[f.ldmlPaddedToken] = buildPadded(get, f.ldmlPaddedToken.length);
	    }
	    if (f.ldmlTwoDigitToken) {
	      ldmlTokens[f.ldmlTwoDigitToken] = buildPadded(buildTwoDigits(get), 2);
	    }
	    if (f.strfTwoDigitToken) {
	      strfTokens[f.strfTwoDigitToken] = buildPadded(buildTwoDigits(get), 2);
	    }
	    if (f.strfPadding) {
	      getPadded = buildPadded(get, f.strfPadding);
	    }
	    if (f.alias) {
	      get = buildAlias(f.alias);
	    }
	    if (f.allowAlternates) {
	      buildAlternates(f);
	    }
	    addFormats(ldmlTokens, f.ldml, get);
	    addFormats(strfTokens, f.strf, getPadded || get);
	  });
	
	  forEachProperty(CoreOutputFormats, function(src, name) {
	    addFormats(ldmlTokens, name, buildAlias(src));
	  });
	
	  defineInstanceSimilar(sugarDate, 'short medium long full', function(methods, name) {
	    var fn = getIdentityFormat(name);
	    addFormats(ldmlTokens, name, fn);
	    methods[name] = fn;
	  });
	
	  addFormats(ldmlTokens, 'time', getIdentityFormat('time'));
	  addFormats(ldmlTokens, 'stamp', getIdentityFormat('stamp'));
	}
	
	var dateFormatMatcher;
	
	function buildDateFormatMatcher() {
	
	  function getLdml(d, token, localeCode) {
	    return getOwn(ldmlTokens, token)(d, localeCode);
	  }
	
	  function getStrf(d, token, localeCode) {
	    return getOwn(strfTokens, token)(d, localeCode);
	  }
	
	  function checkDateToken(ldml, strf) {
	    return hasOwn(ldmlTokens, ldml) || hasOwn(strfTokens, strf);
	  }
	
	  // Format matcher for LDML or STRF tokens.
	  dateFormatMatcher = createFormatMatcher(getLdml, getStrf, checkDateToken);
	}
	
	buildDateFormatTokens();
	
	buildDateFormatMatcher();
	
	module.exports = {
	  ldmlTokens: ldmlTokens,
	  strfTokens: strfTokens,
	  dateFormatMatcher: dateFormatMatcher
	};

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var TIMEZONE_ABBREVIATION_REG = __webpack_require__(273),
	    LocaleHelpers = __webpack_require__(35),
	    DateUnitIndexes = __webpack_require__(82),
	    trunc = __webpack_require__(89),
	    getDate = __webpack_require__(105),
	    getYear = __webpack_require__(76),
	    getHours = __webpack_require__(274),
	    getMonth = __webpack_require__(81),
	    cloneDate = __webpack_require__(121),
	    padNumber = __webpack_require__(275),
	    getWeekday = __webpack_require__(106),
	    callDateGet = __webpack_require__(77),
	    mathAliases = __webpack_require__(69),
	    getWeekYear = __webpack_require__(277),
	    getUTCOffset = __webpack_require__(279),
	    getDaysSince = __webpack_require__(280),
	    getWeekNumber = __webpack_require__(278),
	    getMeridiemToken = __webpack_require__(281),
	    setUnitAndLowerToEdge = __webpack_require__(99);
	
	var localeManager = LocaleHelpers.localeManager,
	    MONTH_INDEX = DateUnitIndexes.MONTH_INDEX,
	    ceil = mathAliases.ceil;
	
	var FormatTokensBase = [
	  {
	    ldml: 'Dow',
	    strf: 'a',
	    lowerToken: 'dow',
	    get: function(d, localeCode) {
	      return localeManager.get(localeCode).getWeekdayName(getWeekday(d), 2);
	    }
	  },
	  {
	    ldml: 'Weekday',
	    strf: 'A',
	    lowerToken: 'weekday',
	    allowAlternates: true,
	    get: function(d, localeCode, alternate) {
	      return localeManager.get(localeCode).getWeekdayName(getWeekday(d), alternate);
	    }
	  },
	  {
	    ldml: 'Mon',
	    strf: 'b h',
	    lowerToken: 'mon',
	    get: function(d, localeCode) {
	      return localeManager.get(localeCode).getMonthName(getMonth(d), 2);
	    }
	  },
	  {
	    ldml: 'Month',
	    strf: 'B',
	    lowerToken: 'month',
	    allowAlternates: true,
	    get: function(d, localeCode, alternate) {
	      return localeManager.get(localeCode).getMonthName(getMonth(d), alternate);
	    }
	  },
	  {
	    strf: 'C',
	    get: function(d) {
	      return getYear(d).toString().slice(0, 2);
	    }
	  },
	  {
	    ldml: 'd date day',
	    strf: 'd',
	    strfPadding: 2,
	    ldmlPaddedToken: 'dd',
	    ordinalToken: 'do',
	    get: function(d) {
	      return getDate(d);
	    }
	  },
	  {
	    strf: 'e',
	    get: function(d) {
	      return padNumber(getDate(d), 2, false, 10, ' ');
	    }
	  },
	  {
	    ldml: 'H 24hr',
	    strf: 'H',
	    strfPadding: 2,
	    ldmlPaddedToken: 'HH',
	    get: function(d) {
	      return getHours(d);
	    }
	  },
	  {
	    ldml: 'h hours 12hr',
	    strf: 'I',
	    strfPadding: 2,
	    ldmlPaddedToken: 'hh',
	    get: function(d) {
	      return getHours(d) % 12 || 12;
	    }
	  },
	  {
	    ldml: 'D',
	    strf: 'j',
	    strfPadding: 3,
	    ldmlPaddedToken: 'DDD',
	    get: function(d) {
	      var s = setUnitAndLowerToEdge(cloneDate(d), MONTH_INDEX);
	      return getDaysSince(d, s) + 1;
	    }
	  },
	  {
	    ldml: 'M',
	    strf: 'm',
	    strfPadding: 2,
	    ordinalToken: 'Mo',
	    ldmlPaddedToken: 'MM',
	    get: function(d) {
	      return getMonth(d) + 1;
	    }
	  },
	  {
	    ldml: 'm minutes',
	    strf: 'M',
	    strfPadding: 2,
	    ldmlPaddedToken: 'mm',
	    get: function(d) {
	      return callDateGet(d, 'Minutes');
	    }
	  },
	  {
	    ldml: 'Q',
	    get: function(d) {
	      return ceil((getMonth(d) + 1) / 3);
	    }
	  },
	  {
	    ldml: 'TT',
	    strf: 'p',
	    get: function(d, localeCode) {
	      return getMeridiemToken(d, localeCode);
	    }
	  },
	  {
	    ldml: 'tt',
	    strf: 'P',
	    get: function(d, localeCode) {
	      return getMeridiemToken(d, localeCode).toLowerCase();
	    }
	  },
	  {
	    ldml: 'T',
	    lowerToken: 't',
	    get: function(d, localeCode) {
	      return getMeridiemToken(d, localeCode).charAt(0);
	    }
	  },
	  {
	    ldml: 's seconds',
	    strf: 'S',
	    strfPadding: 2,
	    ldmlPaddedToken: 'ss',
	    get: function(d) {
	      return callDateGet(d, 'Seconds');
	    }
	  },
	  {
	    ldml: 'S ms',
	    strfPadding: 3,
	    ldmlPaddedToken: 'SSS',
	    get: function(d) {
	      return callDateGet(d, 'Milliseconds');
	    }
	  },
	  {
	    ldml: 'e',
	    strf: 'u',
	    ordinalToken: 'eo',
	    get: function(d) {
	      return getWeekday(d) || 7;
	    }
	  },
	  {
	    strf: 'U',
	    strfPadding: 2,
	    get: function(d) {
	      // Sunday first, 0-53
	      return getWeekNumber(d, false, 0);
	    }
	  },
	  {
	    ldml: 'W',
	    strf: 'V',
	    strfPadding: 2,
	    ordinalToken: 'Wo',
	    ldmlPaddedToken: 'WW',
	    get: function(d) {
	      // Monday first, 1-53 (ISO8601)
	      return getWeekNumber(d, true);
	    }
	  },
	  {
	    strf: 'w',
	    get: function(d) {
	      return getWeekday(d);
	    }
	  },
	  {
	    ldml: 'w',
	    ordinalToken: 'wo',
	    ldmlPaddedToken: 'ww',
	    get: function(d, localeCode) {
	      // Locale dependent, 1-53
	      var loc = localeManager.get(localeCode),
	          dow = loc.getFirstDayOfWeek(localeCode),
	          doy = loc.getFirstDayOfWeekYear(localeCode);
	      return getWeekNumber(d, true, dow, doy);
	    }
	  },
	  {
	    strf: 'W',
	    strfPadding: 2,
	    get: function(d) {
	      // Monday first, 0-53
	      return getWeekNumber(d, false);
	    }
	  },
	  {
	    ldmlPaddedToken: 'gggg',
	    ldmlTwoDigitToken: 'gg',
	    get: function(d, localeCode) {
	      return getWeekYear(d, localeCode);
	    }
	  },
	  {
	    strf: 'G',
	    strfPadding: 4,
	    strfTwoDigitToken: 'g',
	    ldmlPaddedToken: 'GGGG',
	    ldmlTwoDigitToken: 'GG',
	    get: function(d, localeCode) {
	      return getWeekYear(d, localeCode, true);
	    }
	  },
	  {
	    ldml: 'year',
	    ldmlPaddedToken: 'yyyy',
	    ldmlTwoDigitToken: 'yy',
	    strf: 'Y',
	    strfPadding: 4,
	    strfTwoDigitToken: 'y',
	    get: function(d) {
	      return getYear(d);
	    }
	  },
	  {
	    ldml: 'ZZ',
	    strf: 'z',
	    get: function(d) {
	      return getUTCOffset(d);
	    }
	  },
	  {
	    ldml: 'X',
	    get: function(d) {
	      return trunc(d.getTime() / 1000);
	    }
	  },
	  {
	    ldml: 'x',
	    get: function(d) {
	      return d.getTime();
	    }
	  },
	  {
	    ldml: 'Z',
	    get: function(d) {
	      return getUTCOffset(d, true);
	    }
	  },
	  {
	    ldml: 'z',
	    strf: 'Z',
	    get: function(d) {
	      // Note that this is not accurate in all browsing environments!
	      // https://github.com/moment/moment/issues/162
	      // It will continue to be supported for Node and usage with the
	      // understanding that it may be blank.
	      var match = d.toString().match(TIMEZONE_ABBREVIATION_REG);
	      return match ? match[1]: '';
	    }
	  },
	  {
	    strf: 'D',
	    alias: '%m/%d/%y'
	  },
	  {
	    strf: 'F',
	    alias: '%Y-%m-%d'
	  },
	  {
	    strf: 'r',
	    alias: '%I:%M:%S %p'
	  },
	  {
	    strf: 'R',
	    alias: '%H:%M'
	  },
	  {
	    strf: 'T',
	    alias: '%H:%M:%S'
	  },
	  {
	    strf: 'x',
	    alias: '{short}'
	  },
	  {
	    strf: 'X',
	    alias: '{time}'
	  },
	  {
	    strf: 'c',
	    alias: '{stamp}'
	  }
	];
	
	module.exports = FormatTokensBase;

/***/ },
/* 273 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = /(\w{3})[()\s\d]*$/;

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var callDateGet = __webpack_require__(77);
	
	function getHours(d) {
	  return callDateGet(d, 'Hours');
	}
	
	module.exports = getHours;

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var mathAliases = __webpack_require__(69),
	    repeatString = __webpack_require__(276);
	
	var abs = mathAliases.abs;
	
	function padNumber(num, place, sign, base, replacement) {
	  var str = abs(num).toString(base || 10);
	  str = repeatString(replacement || '0', place - str.replace(/\.\d+/, '').length) + str;
	  if (sign || num < 0) {
	    str = (num < 0 ? '-' : '+') + str;
	  }
	  return str;
	}
	
	module.exports = padNumber;

/***/ },
/* 276 */
/***/ function(module, exports) {

	'use strict';
	
	function repeatString(str, num) {
	  var result = '';
	  str = str.toString();
	  while (num > 0) {
	    if (num & 1) {
	      result += str;
	    }
	    if (num >>= 1) {
	      str += str;
	    }
	  }
	  return result;
	}
	
	module.exports = repeatString;

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    getYear = __webpack_require__(76),
	    getMonth = __webpack_require__(81),
	    getWeekNumber = __webpack_require__(278);
	
	var localeManager = LocaleHelpers.localeManager;
	
	function getWeekYear(d, localeCode, iso) {
	  var year, month, firstDayOfWeek, firstDayOfWeekYear, week, loc;
	  year = getYear(d);
	  month = getMonth(d);
	  if (month === 0 || month === 11) {
	    if (!iso) {
	      loc = localeManager.get(localeCode);
	      firstDayOfWeek = loc.getFirstDayOfWeek(localeCode);
	      firstDayOfWeekYear = loc.getFirstDayOfWeekYear(localeCode);
	    }
	    week = getWeekNumber(d, false, firstDayOfWeek, firstDayOfWeekYear);
	    if (month === 0 && week === 0) {
	      year -= 1;
	    } else if (month === 11 && week === 1) {
	      year += 1;
	    }
	  }
	  return year;
	}
	
	module.exports = getWeekYear;

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var ISODefaults = __webpack_require__(47),
	    setDate = __webpack_require__(104),
	    getDate = __webpack_require__(105),
	    cloneDate = __webpack_require__(121),
	    isUndefined = __webpack_require__(68),
	    moveToEndOfWeek = __webpack_require__(130),
	    moveToBeginningOfWeek = __webpack_require__(123),
	    moveToFirstDayOfWeekYear = __webpack_require__(122);
	
	var ISO_FIRST_DAY_OF_WEEK = ISODefaults.ISO_FIRST_DAY_OF_WEEK,
	    ISO_FIRST_DAY_OF_WEEK_YEAR = ISODefaults.ISO_FIRST_DAY_OF_WEEK_YEAR;
	
	function getWeekNumber(d, allowPrevious, firstDayOfWeek, firstDayOfWeekYear) {
	  var isoWeek, n = 0;
	  if (isUndefined(firstDayOfWeek)) {
	    firstDayOfWeek = ISO_FIRST_DAY_OF_WEEK;
	  }
	  if (isUndefined(firstDayOfWeekYear)) {
	    firstDayOfWeekYear = ISO_FIRST_DAY_OF_WEEK_YEAR;
	  }
	  // Moving to the end of the week allows for forward year traversal, ie
	  // Dec 29 2014 is actually week 01 of 2015.
	  isoWeek = moveToEndOfWeek(cloneDate(d), firstDayOfWeek);
	  moveToFirstDayOfWeekYear(isoWeek, firstDayOfWeek, firstDayOfWeekYear);
	  if (allowPrevious && d < isoWeek) {
	    // If the date is still before the start of the year, then it should be
	    // the last week of the previous year, ie Jan 1 2016 is actually week 53
	    // of 2015, so move to the beginning of the week to traverse the year.
	    isoWeek = moveToBeginningOfWeek(cloneDate(d), firstDayOfWeek);
	    moveToFirstDayOfWeekYear(isoWeek, firstDayOfWeek, firstDayOfWeekYear);
	  }
	  while (isoWeek <= d) {
	    // Doing a very simple walk to get the week number.
	    setDate(isoWeek, getDate(isoWeek) + 7);
	    n++;
	  }
	  return n;
	}
	
	module.exports = getWeekNumber;

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utc = __webpack_require__(78),
	    trunc = __webpack_require__(89),
	    tzOffset = __webpack_require__(97),
	    padNumber = __webpack_require__(275),
	    mathAliases = __webpack_require__(69);
	
	var abs = mathAliases.abs;
	
	function getUTCOffset(d, iso) {
	  var offset = _utc(d) ? 0 : tzOffset(d), hours, mins, colon;
	  colon  = iso === true ? ':' : '';
	  if (!offset && iso) return 'Z';
	  hours = padNumber(trunc(-offset / 60), 2, true);
	  mins = padNumber(abs(offset % 60), 2);
	  return  hours + colon + mins;
	}
	
	module.exports = getUTCOffset;

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DateUnits = __webpack_require__(74),
	    DateUnitIndexes = __webpack_require__(82),
	    getTimeDistanceForUnit = __webpack_require__(239);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX;
	
	function getDaysSince(d1, d2) {
	  return getTimeDistanceForUnit(d1, d2, DateUnits[DAY_INDEX]);
	}
	
	module.exports = getDaysSince;

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    trunc = __webpack_require__(89),
	    getHours = __webpack_require__(274);
	
	var localeManager = LocaleHelpers.localeManager;
	
	function getMeridiemToken(d, localeCode) {
	  var hours = getHours(d);
	  return localeManager.get(localeCode).ampm[trunc(hours / 12)] || '';
	}
	
	module.exports = getMeridiemToken;

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var STRING_FORMAT_REG = __webpack_require__(283),
	    CommonChars = __webpack_require__(59),
	    memoizeFunction = __webpack_require__(284);
	
	var OPEN_BRACE = CommonChars.OPEN_BRACE,
	    CLOSE_BRACE = CommonChars.CLOSE_BRACE;
	
	function createFormatMatcher(bracketMatcher, percentMatcher, precheck) {
	
	  var reg = STRING_FORMAT_REG;
	  var compileMemoized = memoizeFunction(compile);
	
	  function getToken(format, match) {
	    var get, token, literal, fn;
	    var bKey = match[2];
	    var pLit = match[3];
	    var pKey = match[5];
	    if (match[4] && percentMatcher) {
	      token = pKey;
	      get = percentMatcher;
	    } else if (bKey) {
	      token = bKey;
	      get = bracketMatcher;
	    } else if (pLit && percentMatcher) {
	      literal = pLit;
	    } else {
	      literal = match[1] || match[0];
	    }
	    if (get) {
	      assertPassesPrecheck(precheck, bKey, pKey);
	      fn = function(obj, opt) {
	        return get(obj, token, opt);
	      };
	    }
	    format.push(fn || getLiteral(literal));
	  }
	
	  function getSubstring(format, str, start, end) {
	    if (end > start) {
	      var sub = str.slice(start, end);
	      assertNoUnmatched(sub, OPEN_BRACE);
	      assertNoUnmatched(sub, CLOSE_BRACE);
	      format.push(function() {
	        return sub;
	      });
	    }
	  }
	
	  function getLiteral(str) {
	    return function() {
	      return str;
	    };
	  }
	
	  function assertPassesPrecheck(precheck, bt, pt) {
	    if (precheck && !precheck(bt, pt)) {
	      throw new TypeError('Invalid token '+ (bt || pt) +' in format string');
	    }
	  }
	
	  function assertNoUnmatched(str, chr) {
	    if (str.indexOf(chr) !== -1) {
	      throw new TypeError('Unmatched '+ chr +' in format string');
	    }
	  }
	
	  function compile(str) {
	    var format = [], lastIndex = 0, match;
	    reg.lastIndex = 0;
	    while(match = reg.exec(str)) {
	      getSubstring(format, str, lastIndex, match.index);
	      getToken(format, match);
	      lastIndex = reg.lastIndex;
	    }
	    getSubstring(format, str, lastIndex, str.length);
	    return format;
	  }
	
	  return function(str, obj, opt) {
	    var format = compileMemoized(str), result = '';
	    for (var i = 0; i < format.length; i++) {
	      result += format[i](obj, opt);
	    }
	    return result;
	  };
	}
	
	module.exports = createFormatMatcher;

/***/ },
/* 283 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = /([{}])\1|\{([^}]*)\}|(%)%|(%(\w*))/g;

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var INTERNAL_MEMOIZE_LIMIT = __webpack_require__(285),
	    coreUtilityAliases = __webpack_require__(41);
	
	var hasOwn = coreUtilityAliases.hasOwn;
	
	function memoizeFunction(fn) {
	  var memo = {}, counter = 0;
	
	  return function(key) {
	    if (hasOwn(memo, key)) {
	      return memo[key];
	    }
	    if (counter === INTERNAL_MEMOIZE_LIMIT) {
	      memo = {};
	      counter = 0;
	    }
	    counter++;
	    return memo[key] = fn(key);
	  };
	}
	
	module.exports = memoizeFunction;

/***/ },
/* 285 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = 1000;

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var dateIsValid = __webpack_require__(236);
	
	function assertDateIsValid(d) {
	  if (!dateIsValid(d)) {
	    throw new TypeError('Date is not valid');
	  }
	}
	
	module.exports = assertDateIsValid;

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    createDateWithContext = __webpack_require__(238);
	
	Sugar.Date.defineInstance({
	
	  'get': function(date, d, options) {
	    return createDateWithContext(date, d, options);
	  }
	
	});
	
	module.exports = Sugar.Date.get;

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    getWeekNumber = __webpack_require__(278);
	
	Sugar.Date.defineInstance({
	
	  'getISOWeek': function(date) {
	    return getWeekNumber(date, true);
	  }
	
	});
	
	module.exports = Sugar.Date.getISOWeek;

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    getUTCOffset = __webpack_require__(279);
	
	Sugar.Date.defineInstance({
	
	  'getUTCOffset': function(date, iso) {
	    return getUTCOffset(date, iso);
	  }
	
	});
	
	module.exports = Sugar.Date.getUTCOffset;

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	Sugar.Date.defineInstance({
	
	  'getUTCWeekday': function(date) {
	    return date.getUTCDay();
	  }
	
	});
	
	module.exports = Sugar.Date.getUTCWeekday;

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    getWeekday = __webpack_require__(106);
	
	Sugar.Date.defineInstance({
	
	  'getWeekday': function(date) {
	    return getWeekday(date);
	  }
	
	});
	
	module.exports = Sugar.Date.getWeekday;

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.hoursAgo;

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.hoursFromNow;

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.hoursSince;

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.hoursUntil;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    fullCompareDate = __webpack_require__(297);
	
	Sugar.Date.defineInstance({
	
	  'is': function(date, d, margin) {
	    return fullCompareDate(date, d, margin);
	  }
	
	});
	
	module.exports = Sugar.Date.is;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    trim = __webpack_require__(298),
	    getMonth = __webpack_require__(81),
	    isDefined = __webpack_require__(57),
	    getNewDate = __webpack_require__(108),
	    compareDay = __webpack_require__(299),
	    getWeekday = __webpack_require__(106),
	    dateIsValid = __webpack_require__(236),
	    classChecks = __webpack_require__(60),
	    compareDate = __webpack_require__(235);
	
	var isString = classChecks.isString,
	    English = LocaleHelpers.English;
	
	function fullCompareDate(date, d, margin) {
	  var tmp;
	  if (!dateIsValid(date)) return;
	  if (isString(d)) {
	    d = trim(d).toLowerCase();
	    switch(true) {
	      case d === 'future':    return date.getTime() > getNewDate().getTime();
	      case d === 'past':      return date.getTime() < getNewDate().getTime();
	      case d === 'today':     return compareDay(date);
	      case d === 'tomorrow':  return compareDay(date,  1);
	      case d === 'yesterday': return compareDay(date, -1);
	      case d === 'weekday':   return getWeekday(date) > 0 && getWeekday(date) < 6;
	      case d === 'weekend':   return getWeekday(date) === 0 || getWeekday(date) === 6;
	
	      case (isDefined(tmp = English.weekdayMap[d])):
	        return getWeekday(date) === tmp;
	      case (isDefined(tmp = English.monthMap[d])):
	        return getMonth(date) === tmp;
	    }
	  }
	  return compareDate(date, d, margin);
	}
	
	module.exports = fullCompareDate;

/***/ },
/* 298 */
/***/ function(module, exports) {

	'use strict';
	
	function trim(str) {
	  return str.trim();
	}
	
	module.exports = trim;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var setDate = __webpack_require__(104),
	    getDate = __webpack_require__(105),
	    getYear = __webpack_require__(76),
	    getMonth = __webpack_require__(81),
	    getNewDate = __webpack_require__(108);
	
	function compareDay(d, shift) {
	  var comp = getNewDate();
	  if (shift) {
	    setDate(comp, getDate(comp) + shift);
	  }
	  return getYear(d) === getYear(comp) &&
	         getMonth(d) === getMonth(comp) &&
	         getDate(d) === getDate(comp);
	}
	
	module.exports = compareDay;

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    createDate = __webpack_require__(94);
	
	Sugar.Date.defineInstance({
	
	  'isAfter': function(date, d, margin) {
	    return date.getTime() > createDate(d).getTime() - (margin || 0);
	  }
	
	});
	
	module.exports = Sugar.Date.isAfter;

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    createDate = __webpack_require__(94);
	
	Sugar.Date.defineInstance({
	
	  'isBefore': function(date, d, margin) {
	    return date.getTime() < createDate(d).getTime() + (margin || 0);
	  }
	
	});
	
	module.exports = Sugar.Date.isBefore;

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    createDate = __webpack_require__(94),
	    mathAliases = __webpack_require__(69);
	
	var min = mathAliases.min,
	    max = mathAliases.max;
	
	Sugar.Date.defineInstance({
	
	  'isBetween': function(date, d1, d2, margin) {
	    var t  = date.getTime();
	    var t1 = createDate(d1).getTime();
	    var t2 = createDate(d2).getTime();
	    var lo = min(t1, t2);
	    var hi = max(t1, t2);
	    margin = margin || 0;
	    return (lo - margin <= t) && (hi + margin >= t);
	  }
	
	});
	
	module.exports = Sugar.Date.isBetween;

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isFriday;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var buildRelativeAliases = __webpack_require__(305);
	
	buildRelativeAliases();

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    spaceSplit = __webpack_require__(63),
	    fullCompareDate = __webpack_require__(297),
	    namespaceAliases = __webpack_require__(112),
	    defineInstanceSimilar = __webpack_require__(148);
	
	var English = LocaleHelpers.English,
	    sugarDate = namespaceAliases.sugarDate;
	
	function buildRelativeAliases() {
	  var special  = spaceSplit('Today Yesterday Tomorrow Weekday Weekend Future Past');
	  var weekdays = English.weekdays.slice(0, 7);
	  var months   = English.months.slice(0, 12);
	  var together = special.concat(weekdays).concat(months);
	  defineInstanceSimilar(sugarDate, together, function(methods, name) {
	    methods['is'+ name] = function(d) {
	      return fullCompareDate(d, name);
	    };
	  });
	}
	
	module.exports = buildRelativeAliases;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isFuture;

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isLastMonth;

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isLastWeek;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isLastYear;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    getYear = __webpack_require__(76);
	
	Sugar.Date.defineInstance({
	
	  'isLeapYear': function(date) {
	    var year = getYear(date);
	    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
	  }
	
	});
	
	module.exports = Sugar.Date.isLeapYear;

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isMonday;

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isNextMonth;

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isNextWeek;

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isNextYear;

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isPast;

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isSaturday;

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isSunday;

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isThisMonth;

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isThisWeek;

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.isThisYear;

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isThursday;

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isToday;

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isTomorrow;

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isTuesday;

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    isUTC = __webpack_require__(326);
	
	Sugar.Date.defineInstance({
	
	  'isUTC': function(date) {
	    return isUTC(date);
	  }
	
	});
	
	module.exports = Sugar.Date.isUTC;

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _utc = __webpack_require__(78),
	    tzOffset = __webpack_require__(97);
	
	function isUTC(d) {
	  return !!_utc(d) || tzOffset(d) === 0;
	}
	
	module.exports = isUTC;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    dateIsValid = __webpack_require__(236);
	
	Sugar.Date.defineInstance({
	
	  'isValid': function(date) {
	    return dateIsValid(date);
	  }
	
	});
	
	module.exports = Sugar.Date.isValid;

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isWednesday;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isWeekday;

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isWeekend;

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(304);
	
	module.exports = Sugar.Date.isYesterday;

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	Sugar.Date.defineInstance({
	
	  'iso': function(date) {
	    return date.toISOString();
	  }
	
	});
	
	module.exports = Sugar.Date.iso;

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.millisecondsAgo;

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.millisecondsFromNow;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.millisecondsSince;

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.millisecondsUntil;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.minutesAgo;

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.minutesFromNow;

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.minutesSince;

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.minutesUntil;

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.monthsAgo;

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.monthsFromNow;

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.monthsSince;

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.monthsUntil;

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    dateRelative = __webpack_require__(346);
	
	Sugar.Date.defineInstance({
	
	  'relative': function(date, localeCode, fn) {
	    return dateRelative(date, null, localeCode, fn);
	  }
	
	});
	
	module.exports = Sugar.Date.relative;

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var LocaleHelpers = __webpack_require__(35),
	    dateFormat = __webpack_require__(269),
	    classChecks = __webpack_require__(60),
	    assertDateIsValid = __webpack_require__(286),
	    getAdjustedUnitForDate = __webpack_require__(347);
	
	var isFunction = classChecks.isFunction,
	    localeManager = LocaleHelpers.localeManager;
	
	function dateRelative(d, dRelative, arg1, arg2) {
	  var adu, format, type, localeCode, fn;
	  assertDateIsValid(d);
	  if (isFunction(arg1)) {
	    fn = arg1;
	  } else {
	    localeCode = arg1;
	    fn = arg2;
	  }
	  adu = getAdjustedUnitForDate(d, dRelative);
	  if (fn) {
	    format = fn.apply(d, adu.concat(localeManager.get(localeCode)));
	    if (format) {
	      return dateFormat(d, format, localeCode);
	    }
	  }
	  // Adjust up if time is in ms, as this doesn't
	  // look very good for a standard relative date.
	  if (adu[1] === 0) {
	    adu[1] = 1;
	    adu[0] = 1;
	  }
	  if (dRelative) {
	    type = 'duration';
	  } else if (adu[2] > 0) {
	    type = 'future';
	  } else {
	    type = 'past';
	  }
	  return localeManager.get(localeCode).getRelativeFormat(adu, type);
	}
	
	module.exports = dateRelative;

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var getNewDate = __webpack_require__(108),
	    mathAliases = __webpack_require__(69),
	    getAdjustedUnit = __webpack_require__(91),
	    getTimeDistanceForUnit = __webpack_require__(239);
	
	var abs = mathAliases.abs;
	
	function getAdjustedUnitForDate(d, dRelative) {
	  var ms;
	  if (!dRelative) {
	    dRelative = getNewDate();
	    if (d > dRelative) {
	      // If our date is greater than the one that we got from getNewDate, it
	      // means that we are finding the unit for a date that is in the future
	      // relative to now. However, often the incoming date was created in
	      // the same cycle as our comparison, but our "now" date will have been
	      // created an instant after it, creating situations where "5 minutes from
	      // now" becomes "4 minutes from now" in the same tick. To prevent this,
	      // subtract a buffer of 10ms to compensate.
	      dRelative = new Date(dRelative.getTime() - 10);
	    }
	  }
	  ms = d - dRelative;
	  return getAdjustedUnit(ms, function(u) {
	    return abs(getTimeDistanceForUnit(d, dRelative, u));
	  });
	}
	
	module.exports = getAdjustedUnitForDate;

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    createDate = __webpack_require__(94),
	    dateRelative = __webpack_require__(346);
	
	Sugar.Date.defineInstance({
	
	  'relativeTo': function(date, d, localeCode) {
	    return dateRelative(date, createDate(d), localeCode);
	  }
	
	});
	
	module.exports = Sugar.Date.relativeTo;

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    DateUnitIndexes = __webpack_require__(82),
	    moveToBeginningOfUnit = __webpack_require__(133),
	    getUnitIndexForParamName = __webpack_require__(350);
	
	var DAY_INDEX = DateUnitIndexes.DAY_INDEX;
	
	Sugar.Date.defineInstance({
	
	  'reset': function(date, unit, localeCode) {
	    var unitIndex = unit ? getUnitIndexForParamName(unit) : DAY_INDEX;
	    moveToBeginningOfUnit(date, unitIndex, localeCode);
	    return date;
	  }
	
	});
	
	module.exports = Sugar.Date.reset;

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var iterateOverDateParams = __webpack_require__(124);
	
	function getUnitIndexForParamName(name) {
	  var params = {}, unitIndex;
	  params[name] = 1;
	  iterateOverDateParams(params, function(name, val, unit, i) {
	    unitIndex = i;
	    return false;
	  });
	  return unitIndex;
	}
	
	module.exports = getUnitIndexForParamName;

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    advanceDateWithArgs = __webpack_require__(248);
	
	Sugar.Date.defineInstanceWithArguments({
	
	  'rewind': function(d, args) {
	    return advanceDateWithArgs(d, args, -1);
	  }
	
	});
	
	module.exports = Sugar.Date.rewind;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.secondsAgo;

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.secondsFromNow;

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.secondsSince;

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.secondsUntil;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    updateDate = __webpack_require__(107),
	    collectDateArguments = __webpack_require__(249);
	
	Sugar.Date.defineInstanceWithArguments({
	
	  'set': function(d, args) {
	    args = collectDateArguments(args);
	    return updateDate(d, args[0], args[1]);
	  }
	
	});
	
	module.exports = Sugar.Date.set;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    setISOWeekNumber = __webpack_require__(118);
	
	Sugar.Date.defineInstance({
	
	  'setISOWeek': function(date, num) {
	    return setISOWeekNumber(date, num);
	  }
	
	});
	
	module.exports = Sugar.Date.setISOWeek;

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    _utc = __webpack_require__(78);
	
	Sugar.Date.defineInstance({
	
	  'setUTC': function(date, on) {
	    return _utc(date, on);
	  }
	
	});
	
	module.exports = Sugar.Date.setUTC;

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    setWeekday = __webpack_require__(103);
	
	Sugar.Date.defineInstance({
	
	  'setWeekday': function(date, dow) {
	    return setWeekday(date, dow);
	  }
	
	});
	
	module.exports = Sugar.Date.setWeekday;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.weeksAgo;

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.weeksFromNow;

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.weeksSince;

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.weeksUntil;

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.yearsAgo;

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.yearsFromNow;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.yearsSince;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34);
	
	__webpack_require__(233);
	
	module.exports = Sugar.Date.yearsUntil;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    _dateOptions = __webpack_require__(109);
	
	module.exports = Sugar.Date.getOption;

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    _dateOptions = __webpack_require__(109);
	
	module.exports = Sugar.Date.setOption;

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	// Static Methods
	__webpack_require__(371);
	
	// Prototype Methods
	__webpack_require__(385);
	__webpack_require__(388);
	__webpack_require__(389);
	__webpack_require__(390);
	__webpack_require__(402);
	__webpack_require__(403);
	__webpack_require__(404);
	__webpack_require__(405);
	__webpack_require__(406);
	__webpack_require__(407);
	__webpack_require__(408);
	__webpack_require__(409);
	__webpack_require__(410);
	__webpack_require__(412);
	__webpack_require__(413);
	__webpack_require__(414);
	__webpack_require__(415);
	__webpack_require__(416);
	
	module.exports = __webpack_require__(34);

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Sugar = __webpack_require__(34),
	    DateRangeConstructor = __webpack_require__(372);
	
	Sugar.Date.defineStatic({
	
	  'range': DateRangeConstructor
	
	});
	
	module.exports = Sugar.Date.range;

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    classChecks = __webpack_require__(60),
	    getDateForRange = __webpack_require__(376),
	    createDateRangeFromString = __webpack_require__(377);
	
	var isString = classChecks.isString;
	
	var DateRangeConstructor = function(start, end) {
	  if (arguments.length === 1 && isString(start)) {
	    return createDateRangeFromString(start);
	  }
	  return new Range(getDateForRange(start), getDateForRange(end));
	};
	
	module.exports = DateRangeConstructor;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var cloneRangeMember = __webpack_require__(374);
	
	function Range(start, end) {
	  this.start = cloneRangeMember(start);
	  this.end   = cloneRangeMember(end);
	}
	
	module.exports = Range;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60),
	    getRangeMemberPrimitiveValue = __webpack_require__(375);
	
	var isDate = classChecks.isDate;
	
	function cloneRangeMember(m) {
	  if (isDate(m)) {
	    return new Date(m.getTime());
	  } else {
	    return getRangeMemberPrimitiveValue(m);
	  }
	}
	
	module.exports = cloneRangeMember;

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60);
	
	var isDate = classChecks.isDate;
	
	function getRangeMemberPrimitiveValue(m) {
	  if (m == null) return m;
	  return isDate(m) ? m.getTime() : m.valueOf();
	}
	
	module.exports = getRangeMemberPrimitiveValue;

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60),
	    namespaceAliases = __webpack_require__(112);
	
	var isDate = classChecks.isDate,
	    sugarDate = namespaceAliases.sugarDate;
	
	function getDateForRange(d) {
	  if (isDate(d)) {
	    return d;
	  } else if (d == null) {
	    return new Date();
	  } else if (sugarDate.create) {
	    return sugarDate.create(d);
	  }
	  return new Date(d);
	}
	
	module.exports = getDateForRange;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    DurationTextFormats = __webpack_require__(378),
	    incrementDate = __webpack_require__(381),
	    getDateForRange = __webpack_require__(376),
	    namespaceAliases = __webpack_require__(112),
	    getDateIncrementObject = __webpack_require__(383);
	
	var sugarDate = namespaceAliases.sugarDate,
	    RANGE_REG_FROM_TO = DurationTextFormats.RANGE_REG_FROM_TO,
	    RANGE_REG_REAR_DURATION = DurationTextFormats.RANGE_REG_REAR_DURATION,
	    RANGE_REG_FRONT_DURATION = DurationTextFormats.RANGE_REG_FRONT_DURATION;
	
	function createDateRangeFromString(str) {
	  var match, datetime, duration, dio, start, end;
	  if (sugarDate.get && (match = str.match(RANGE_REG_FROM_TO))) {
	    start = getDateForRange(match[1].replace('from', 'at'));
	    end = sugarDate.get(start, match[2]);
	    return new Range(start, end);
	  }
	  if (match = str.match(RANGE_REG_FRONT_DURATION)) {
	    duration = match[1];
	    datetime = match[2];
	  }
	  if (match = str.match(RANGE_REG_REAR_DURATION)) {
	    datetime = match[1];
	    duration = match[2];
	  }
	  if (datetime && duration) {
	    start = getDateForRange(datetime);
	    dio = getDateIncrementObject(duration);
	    end = incrementDate(start, dio[0], dio[1]);
	  } else {
	    start = str;
	  }
	  return new Range(getDateForRange(start), getDateForRange(end));
	}
	
	module.exports = createDateRangeFromString;

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var FULL_CAPTURED_DURATION = __webpack_require__(379);
	
	module.exports = {
	  RANGE_REG_FROM_TO: /(?:from)?\s*(.+)\s+(?:to|until)\s+(.+)$/i,
	  RANGE_REG_REAR_DURATION: RegExp('(.+)\\s*for\\s*' + FULL_CAPTURED_DURATION, 'i'),
	  RANGE_REG_FRONT_DURATION: RegExp('(?:for)?\\s*'+ FULL_CAPTURED_DURATION +'\\s*(?:starting)?\\s*at\\s*(.+)', 'i')
	};

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DURATION_UNITS = __webpack_require__(380);
	
	module.exports = '((?:\\d+)?\\s*(?:' + DURATION_UNITS + '))s?';

/***/ },
/* 380 */
/***/ function(module, exports) {

	'use strict';
	
	module.exports = 'year|month|week|day|hour|minute|second|millisecond';

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var MULTIPLIERS = __webpack_require__(382),
	    callDateSet = __webpack_require__(100),
	    callDateGet = __webpack_require__(77);
	
	function incrementDate(src, amount, unit) {
	  var mult = MULTIPLIERS[unit], d;
	  if (mult) {
	    d = new Date(src.getTime() + (amount * mult));
	  } else {
	    d = new Date(src);
	    callDateSet(d, unit, callDateGet(src, unit) + amount);
	  }
	  return d;
	}
	
	module.exports = incrementDate;

/***/ },
/* 382 */
/***/ function(module, exports) {

	'use strict';
	
	var MULTIPLIERS = {
	  'Hours': 60 * 60 * 1000,
	  'Minutes': 60 * 1000,
	  'Seconds': 1000,
	  'Milliseconds': 1
	};
	
	module.exports = MULTIPLIERS;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DURATION_REG = __webpack_require__(384),
	    classChecks = __webpack_require__(60),
	    simpleCapitalize = __webpack_require__(237);
	
	var isNumber = classChecks.isNumber;
	
	function getDateIncrementObject(amt) {
	  var match, val, unit;
	  if (isNumber(amt)) {
	    return [amt, 'Milliseconds'];
	  }
	  match = amt.match(DURATION_REG);
	  val = +match[1] || 1;
	  unit = simpleCapitalize(match[2].toLowerCase());
	  if (unit.match(/hour|minute|second/i)) {
	    unit += 's';
	  } else if (unit === 'Year') {
	    unit = 'FullYear';
	  } else if (unit === 'Week') {
	    unit = 'Date';
	    val *= 7;
	  } else if (unit === 'Day') {
	    unit = 'Date';
	  }
	  return [val, unit];
	}
	
	module.exports = getDateIncrementObject;

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var DURATION_UNITS = __webpack_require__(380);
	
	module.exports = RegExp('(\\d+)?\\s*('+ DURATION_UNITS +')s?', 'i');

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    rangeClamp = __webpack_require__(386),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'clamp': function(obj) {
	    return rangeClamp(this, obj);
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "clamp" on Range.prototype.

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var cloneRangeMember = __webpack_require__(374);
	
	function rangeClamp(range, obj) {
	  var clamped,
	      start = range.start,
	      end = range.end,
	      min = end < start ? end : start,
	      max = start > end ? start : end;
	  if (obj < min) {
	    clamped = min;
	  } else if (obj > max) {
	    clamped = max;
	  } else {
	    clamped = obj;
	  }
	  return cloneRangeMember(clamped);
	}
	
	module.exports = rangeClamp;

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var coreUtilityAliases = __webpack_require__(41);
	
	var forEachProperty = coreUtilityAliases.forEachProperty;
	
	function defineOnPrototype(ctor, methods) {
	  var proto = ctor.prototype;
	  forEachProperty(methods, function(val, key) {
	    proto[key] = val;
	  });
	}
	
	module.exports = defineOnPrototype;

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'clone': function() {
	    return new Range(this.start, this.end);
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "clone" on Range.prototype.

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'contains': function(obj) {
	    if (obj == null) return false;
	    if (obj.start && obj.end) {
	      return obj.start >= this.start && obj.start <= this.end &&
	             obj.end   >= this.start && obj.end   <= this.end;
	    } else {
	      return obj >= this.start && obj <= this.end;
	    }
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "contains" on Range.prototype.

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "days" on Range.prototype.

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var buildDateRangeUnits = __webpack_require__(392);
	
	buildDateRangeUnits();

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var MULTIPLIERS = __webpack_require__(382),
	    DURATION_UNITS = __webpack_require__(380),
	    Range = __webpack_require__(373),
	    trunc = __webpack_require__(89),
	    forEach = __webpack_require__(53),
	    rangeEvery = __webpack_require__(393),
	    simpleCapitalize = __webpack_require__(237),
	    defineOnPrototype = __webpack_require__(387);
	
	function buildDateRangeUnits() {
	  var methods = {};
	  forEach(DURATION_UNITS.split('|'), function(unit, i) {
	    var name = unit + 's', mult, fn;
	    if (i < 4) {
	      fn = function() {
	        return rangeEvery(this, unit, true);
	      };
	    } else {
	      mult = MULTIPLIERS[simpleCapitalize(name)];
	      fn = function() {
	        return trunc((this.end - this.start) / mult);
	      };
	    }
	    methods[name] = fn;
	  });
	  defineOnPrototype(Range, methods);
	}
	
	module.exports = buildDateRangeUnits;

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60),
	    rangeIsValid = __webpack_require__(394),
	    incrementDate = __webpack_require__(381),
	    incrementNumber = __webpack_require__(397),
	    incrementString = __webpack_require__(398),
	    getGreaterPrecision = __webpack_require__(399),
	    getDateIncrementObject = __webpack_require__(383);
	
	var isNumber = classChecks.isNumber,
	    isString = classChecks.isString,
	    isDate = classChecks.isDate,
	    isFunction = classChecks.isFunction;
	
	function rangeEvery(range, step, countOnly, fn) {
	  var increment,
	      precision,
	      dio,
	      unit,
	      start   = range.start,
	      end     = range.end,
	      inverse = end < start,
	      current = start,
	      index   = 0,
	      result  = [];
	
	  if (!rangeIsValid(range)) {
	    return [];
	  }
	  if (isFunction(step)) {
	    fn = step;
	    step = null;
	  }
	  step = step || 1;
	  if (isNumber(start)) {
	    precision = getGreaterPrecision(start, step);
	    increment = function() {
	      return incrementNumber(current, step, precision);
	    };
	  } else if (isString(start)) {
	    increment = function() {
	      return incrementString(current, step);
	    };
	  } else if (isDate(start)) {
	    dio  = getDateIncrementObject(step);
	    step = dio[0];
	    unit = dio[1];
	    increment = function() {
	      return incrementDate(current, step, unit);
	    };
	  }
	  // Avoiding infinite loops
	  if (inverse && step > 0) {
	    step *= -1;
	  }
	  while(inverse ? current >= end : current <= end) {
	    if (!countOnly) {
	      result.push(current);
	    }
	    if (fn) {
	      fn(current, index, range);
	    }
	    current = increment();
	    index++;
	  }
	  return countOnly ? index - 1 : result;
	}
	
	module.exports = rangeEvery;

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var isValidRangeMember = __webpack_require__(395);
	
	function rangeIsValid(range) {
	  return isValidRangeMember(range.start) &&
	         isValidRangeMember(range.end) &&
	         typeof range.start === typeof range.end;
	}
	
	module.exports = rangeIsValid;

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var valueIsNotInfinite = __webpack_require__(396),
	    getRangeMemberPrimitiveValue = __webpack_require__(375);
	
	function isValidRangeMember(m) {
	  var val = getRangeMemberPrimitiveValue(m);
	  return (!!val || val === 0) && valueIsNotInfinite(m);
	}
	
	module.exports = isValidRangeMember;

/***/ },
/* 396 */
/***/ function(module, exports) {

	'use strict';
	
	function valueIsNotInfinite(m) {
	  return m !== -Infinity && m !== Infinity;
	}
	
	module.exports = valueIsNotInfinite;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var withPrecision = __webpack_require__(90);
	
	function incrementNumber(current, amount, precision) {
	  return withPrecision(current + amount, precision);
	}
	
	module.exports = incrementNumber;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var chr = __webpack_require__(86);
	
	function incrementString(current, amount) {
	  return chr(current.charCodeAt(0) + amount);
	}
	
	module.exports = incrementString;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var mathAliases = __webpack_require__(69),
	    getPrecision = __webpack_require__(400);
	
	var max = mathAliases.max;
	
	function getGreaterPrecision(n1, n2) {
	  return max(getPrecision(n1), getPrecision(n2));
	}
	
	module.exports = getGreaterPrecision;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var periodSplit = __webpack_require__(401);
	
	function getPrecision(n) {
	  var split = periodSplit(n.toString());
	  return split[1] ? split[1].length : 0;
	}
	
	module.exports = getPrecision;

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var CommonChars = __webpack_require__(59);
	
	var HALF_WIDTH_PERIOD = CommonChars.HALF_WIDTH_PERIOD;
	
	function periodSplit(str) {
	  return str.split(HALF_WIDTH_PERIOD);
	}
	
	module.exports = periodSplit;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    rangeEvery = __webpack_require__(393),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'every': function(amount, fn) {
	    return rangeEvery(this, amount, false, fn);
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "every" on Range.prototype.

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "hours" on Range.prototype.

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'intersect': function(range) {
	    if (range.start > this.end || range.end < this.start) {
	      return new Range(NaN, NaN);
	    }
	    return new Range(
	      this.start > range.start ? this.start : range.start,
	      this.end   < range.end   ? this.end   : range.end
	    );
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "intersect" on Range.prototype.

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    rangeIsValid = __webpack_require__(394),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'isValid': function() {
	    return rangeIsValid(this);
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "isValid" on Range.prototype.

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "milliseconds" on Range.prototype.

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "minutes" on Range.prototype.

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "months" on Range.prototype.

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "seconds" on Range.prototype.

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    mathAliases = __webpack_require__(69),
	    rangeIsValid = __webpack_require__(394),
	    defineOnPrototype = __webpack_require__(387),
	    getRangeMemberNumericValue = __webpack_require__(411);
	
	var abs = mathAliases.abs;
	
	defineOnPrototype(Range, {
	
	  'span': function() {
	    var n = getRangeMemberNumericValue(this.end) - getRangeMemberNumericValue(this.start);
	    return rangeIsValid(this) ? abs(n) + 1 : NaN;
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "span" on Range.prototype.

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var classChecks = __webpack_require__(60);
	
	var isString = classChecks.isString;
	
	function getRangeMemberNumericValue(m) {
	  return isString(m) ? m.charCodeAt(0) : m;
	}
	
	module.exports = getRangeMemberNumericValue;

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    rangeEvery = __webpack_require__(393),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'toArray': function() {
	    return rangeEvery(this);
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "toArray" on Range.prototype.

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    rangeIsValid = __webpack_require__(394),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'toString': function() {
	    return rangeIsValid(this) ? this.start + '..' + this.end : 'Invalid Range';
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "toString" on Range.prototype.

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var Range = __webpack_require__(373),
	    defineOnPrototype = __webpack_require__(387);
	
	defineOnPrototype(Range, {
	
	  'union': function(range) {
	    return new Range(
	      this.start < range.start ? this.start : range.start,
	      this.end   > range.end   ? this.end   : range.end
	    );
	  }
	
	});
	
	// This package does not export anything as it is
	// simply defining "union" on Range.prototype.

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "weeks" on Range.prototype.

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(391);
	
	// This package does not export anything as it is
	// simply defining "years" on Range.prototype.

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(418);
	__webpack_require__(419);
	__webpack_require__(420);
	__webpack_require__(421);
	__webpack_require__(422);
	__webpack_require__(423);
	__webpack_require__(424);
	__webpack_require__(425);
	__webpack_require__(426);
	__webpack_require__(427);
	__webpack_require__(428);
	__webpack_require__(429);
	__webpack_require__(430);
	__webpack_require__(431);
	__webpack_require__(432);
	__webpack_require__(433);
	__webpack_require__(434);
	
	module.exports = __webpack_require__(34);

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Catalan locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('ca')
	 *
	 */
	addLocale('ca', {
	  'plural': true,
	  'units': 'milisegon:|s,segon:|s,minut:|s,hor:a|es,di:a|es,setman:a|es,mes:|os,any:|s',
	  'months': 'gen:er|,febr:er|,mar:ç|,abr:il|,mai:g|,jun:y|,jul:iol|,ag:ost|,set:embre|,oct:ubre|,nov:embre|,des:embre|',
	  'weekdays': 'diumenge|dg,dilluns|dl,dimarts|dt,dimecres|dc,dijous|dj,divendres|dv,dissabte|ds',
	  'numerals': 'zero,un,dos,tres,quatre,cinc,sis,set,vuit,nou,deu',
	  'tokens': 'el,la,de',
	  'short':  '{dd}/{MM}/{yyyy}',
	  'medium': '{d} {month} {yyyy}',
	  'long':   '{d} {month} {yyyy} {time}',
	  'full':   '{weekday} {d} {month} {yyyy} {time}',
	  'stamp':  '{dow} {d} {mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{sign} {num} {unit}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'timeMarkers': 'a las',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': "abans d'ahir", 'value': -2 },
	    { 'name': 'day', 'src': 'ahir', 'value': -1 },
	    { 'name': 'day', 'src': 'avui', 'value': 0 },
	    { 'name': 'day', 'src': 'demà|dema', 'value': 1 },
	    { 'name': 'sign', 'src': 'fa', 'value': -1 },
	    { 'name': 'sign', 'src': 'en', 'value': 1 },
	    { 'name': 'shift', 'src': 'passat', 'value': -1 },
	    { 'name': 'shift', 'src': 'el proper|la propera', 'value': 1 }
	  ],
	  'parse': [
	    '{sign} {num} {unit}',
	    '{num} {unit} {sign}',
	    '{0?}{1?} {unit:5-7} {shift}',
	    '{0?}{1?} {shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift} {weekday}',
	    '{weekday} {shift}',
	    '{date?} {2?} {months}\\.? {2?} {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "ca" locale.

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Danish locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('da')
	 *
	 */
	addLocale('da', {
	  'plural': true,
	  'units': 'millisekund:|er,sekund:|er,minut:|ter,tim:e|er,dag:|e,ug:e|er|en,måned:|er|en+maaned:|er|en,år:||et+aar:||et',
	  'months': 'jan:uar|,feb:ruar|,mar:ts|,apr:il|,maj,jun:i|,jul:i|,aug:ust|,sep:tember|,okt:ober|,nov:ember|,dec:ember|',
	  'weekdays': 'søn:dag|+son:dag|,man:dag|,tir:sdag|,ons:dag|,tor:sdag|,fre:dag|,lør:dag|+lor:dag|',
	  'numerals': 'nul,en|et,to,tre,fire,fem,seks,syv,otte,ni,ti',
	  'tokens':   'den,for',
	  'articles': 'den',
	  'short':  '{dd}-{MM}-{yyyy}',
	  'medium': '{d}. {month} {yyyy}',
	  'long':   '{d}. {month} {yyyy} {time}',
	  'full':   '{weekday} d. {d}. {month} {yyyy} {time}',
	  'stamp':  '{dow} {d} {mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{num} {unit} {sign}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'forgårs|i forgårs|forgaars|i forgaars', 'value': -2 },
	    { 'name': 'day', 'src': 'i går|igår|i gaar|igaar', 'value': -1 },
	    { 'name': 'day', 'src': 'i dag|idag', 'value': 0 },
	    { 'name': 'day', 'src': 'i morgen|imorgen', 'value': 1 },
	    { 'name': 'day', 'src': 'over morgon|overmorgen|i over morgen|i overmorgen|iovermorgen', 'value': 2 },
	    { 'name': 'sign', 'src': 'siden', 'value': -1 },
	    { 'name': 'sign', 'src': 'om', 'value':  1 },
	    { 'name': 'shift', 'src': 'i sidste|sidste', 'value': -1 },
	    { 'name': 'shift', 'src': 'denne', 'value': 0 },
	    { 'name': 'shift', 'src': 'næste|naeste', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{num} {unit} {sign}',
	    '{sign} {num} {unit}',
	    '{1?} {num} {unit} {sign}',
	    '{shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{date} {months?}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift} {weekday}',
	    '{0?} {weekday?},? {date}\\.? {months?}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "da" locale.

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * German locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('de')
	 *
	 */
	addLocale('de', {
	  'plural': true,
	  'units': 'Millisekunde:|n,Sekunde:|n,Minute:|n,Stunde:|n,Tag:|en,Woche:|n,Monat:|en,Jahr:|en|e',
	  'months': 'Jan:uar|,Feb:ruar|,M:är|ärz|ar|arz,Apr:il|,Mai,Juni,Juli,Aug:ust|,Sept:ember|,Okt:ober|,Nov:ember|,Dez:ember|',
	  'weekdays': 'So:nntag|,Mo:ntag|,Di:enstag|,Mi:ttwoch|,Do:nnerstag|,Fr:eitag|,Sa:mstag|',
	  'numerals': 'null,ein:|e|er|en|em,zwei,drei,vier,fuenf,sechs,sieben,acht,neun,zehn',
	  'tokens': 'der',
	  'short': '{dd}.{MM}.{yyyy}',
	  'medium': '{d}. {Month} {yyyy}',
	  'long': '{d}. {Month} {yyyy} {time}',
	  'full': '{Weekday}, {d}. {Month} {yyyy} {time}',
	  'stamp': '{Dow} {d} {Mon} {yyyy} {time}',
	  'time': '{H}:{mm}',
	  'past': '{sign} {num} {unit}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'timeMarkers': 'um',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'vorgestern', 'value': -2 },
	    { 'name': 'day', 'src': 'gestern', 'value': -1 },
	    { 'name': 'day', 'src': 'heute', 'value': 0 },
	    { 'name': 'day', 'src': 'morgen', 'value': 1 },
	    { 'name': 'day', 'src': 'übermorgen|ubermorgen|uebermorgen', 'value': 2 },
	    { 'name': 'sign', 'src': 'vor:|her', 'value': -1 },
	    { 'name': 'sign', 'src': 'in', 'value': 1 },
	    { 'name': 'shift', 'src': 'letzte:|r|n|s', 'value': -1 },
	    { 'name': 'shift', 'src': 'nächste:|r|n|s+nachste:|r|n|s+naechste:|r|n|s+kommende:n|r', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{sign} {num} {unit}',
	    '{num} {unit} {sign}',
	    '{shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift?} {day|weekday}',
	    '{weekday?},? {date}\\.? {months?}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift} {weekday}',
	    '{weekday?},? {date}\\.? {months?}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "de" locale.

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Spanish locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('es')
	 *
	 */
	addLocale('es', {
	  'plural': true,
	  'units': 'milisegundo:|s,segundo:|s,minuto:|s,hora:|s,día|días|dia|dias,semana:|s,mes:|es,año|años|ano|anos',
	  'months': 'ene:ro|,feb:rero|,mar:zo|,abr:il|,may:o|,jun:io|,jul:io|,ago:sto|,sep:tiembre|,oct:ubre|,nov:iembre|,dic:iembre|',
	  'weekdays': 'dom:ingo|,lun:es|,mar:tes|,mié:rcoles|+mie:rcoles|,jue:ves|,vie:rnes|,sáb:ado|+sab:ado|',
	  'numerals': 'cero,uno,dos,tres,cuatro,cinco,seis,siete,ocho,nueve,diez',
	  'tokens': 'el,la,de',
	  'short':  '{dd}/{MM}/{yyyy}',
	  'medium': '{d} de {Month} de {yyyy}',
	  'long':   '{d} de {Month} de {yyyy} {time}',
	  'full':   '{weekday}, {d} de {month} de {yyyy} {time}',
	  'stamp':  '{dow} {d} {mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{sign} {num} {unit}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'timeMarkers': 'a las',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'anteayer', 'value': -2 },
	    { 'name': 'day', 'src': 'ayer', 'value': -1 },
	    { 'name': 'day', 'src': 'hoy', 'value': 0 },
	    { 'name': 'day', 'src': 'mañana|manana', 'value': 1 },
	    { 'name': 'sign', 'src': 'hace', 'value': -1 },
	    { 'name': 'sign', 'src': 'dentro de', 'value': 1 },
	    { 'name': 'shift', 'src': 'pasad:o|a', 'value': -1 },
	    { 'name': 'shift', 'src': 'próximo|próxima|proximo|proxima', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {2?} {year?}',
	    '{sign} {num} {unit}',
	    '{num} {unit} {sign}',
	    '{0?}{1?} {unit:5-7} {shift}',
	    '{0?}{1?} {shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift?} {day|weekday} {shift?}',
	    '{date} {2?} {months?}\\.? {2?} {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift?} {weekday} {shift?}',
	    '{date} {2?} {months?}\\.? {2?} {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "es" locale.

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Finnish locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('fi')
	 *
	 */
	addLocale('fi', {
	  'plural': true,
	  'units': 'millisekun:ti|tia|nin|teja|tina,sekun:ti|tia|nin|teja|tina,minuut:ti|tia|in|teja|tina,tun:ti|tia|nin|teja|tina,päiv:ä|ää|än|iä|änä,viik:ko|koa|on|olla|koja|kona,kuukau:si|tta|den+kuussa,vuo:si|tta|den|sia|tena|nna',
	  'months': 'tammi:kuuta||kuu,helmi:kuuta||kuu,maalis:kuuta||kuu,huhti:kuuta||kuu,touko:kuuta||kuu,kesä:kuuta||kuu,heinä:kuuta||kuu,elo:kuuta||kuu,syys:kuuta||kuu,loka:kuuta||kuu,marras:kuuta||kuu,joulu:kuuta||kuu',
	  'weekdays': 'su:nnuntai||nnuntaina,ma:anantai||anantaina,ti:istai||istaina,ke:skiviikko||skiviikkona,to:rstai||rstaina,pe:rjantai||rjantaina,la:uantai||uantaina',
	  'numerals': 'nolla,yksi|ensimmäinen,kaksi|toinen,kolm:e|as,neljä:|s,vii:si|des,kuu:si|des,seitsemä:n|s,kahdeksa:n|s,yhdeksä:n|s,kymmene:n|s',
	  'short': '{d}.{M}.{yyyy}',
	  'medium': '{d}. {month} {yyyy}',
	  'long': '{d}. {month} {yyyy} klo {time}',
	  'full': '{weekday} {d}. {month} {yyyy} klo {time}',
	  'stamp': '{dow} {d} {mon} {yyyy} {time}',
	  'time': '{H}.{mm}',
	  'timeMarkers': 'klo,kello',
	  'ordinalSuffix': '.',
	  'relative': function(num, unit, ms, format) {
	    var units = this['units'];
	    function numberWithUnit(mult) {
	      return num + ' ' + units[(8 * mult) + unit];
	    }
	    function baseUnit() {
	      return numberWithUnit(num === 1 ? 0 : 1);
	    }
	    switch(format) {
	      case 'duration':  return baseUnit();
	      case 'past':      return baseUnit() + ' sitten';
	      case 'future':    return numberWithUnit(2) + ' kuluttua';
	    }
	  },
	  'modifiers': [
	    { 'name': 'day',   'src': 'toissa päivänä', 'value': -2 },
	    { 'name': 'day',   'src': 'eilen|eilistä', 'value': -1 },
	    { 'name': 'day',   'src': 'tänään', 'value': 0 },
	    { 'name': 'day',   'src': 'huomenna|huomista', 'value': 1 },
	    { 'name': 'day',   'src': 'ylihuomenna|ylihuomista', 'value': 2 },
	    { 'name': 'sign',  'src': 'sitten|aiemmin', 'value': -1 },
	    { 'name': 'sign',  'src': 'päästä|kuluttua|myöhemmin', 'value': 1 },
	    { 'name': 'edge',  'src': 'lopussa', 'value': 2 },
	    { 'name': 'edge',  'src': 'ensimmäinen|ensimmäisenä', 'value': -2 },
	    { 'name': 'shift', 'src': 'edel:linen|lisenä', 'value': -1 },
	    { 'name': 'shift', 'src': 'viime', 'value': -1 },
	    { 'name': 'shift', 'src': 'tä:llä|ssä|nä|mä', 'value': 0 },
	    { 'name': 'shift', 'src': 'seuraava|seuraavana|tuleva|tulevana|ensi', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift?} {day|weekday}',
	    '{weekday?},? {date}\\.? {months?}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift?} {day|weekday}',
	    '{num?} {unit} {sign}',
	    '{weekday?},? {date}\\.? {months?}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "fi" locale.

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * French locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('fr')
	 *
	 */
	addLocale('fr', {
	  'plural': true,
	  'units': 'milliseconde:|s,seconde:|s,minute:|s,heure:|s,jour:|s,semaine:|s,mois,an:|s|née|nee',
	  'months': 'janv:ier|,févr:ier|+fevr:ier|,mars,avr:il|,mai,juin,juil:let|,août,sept:embre|,oct:obre|,nov:embre|,déc:embre|+dec:embre|',
	  'weekdays': 'dim:anche|,lun:di|,mar:di|,mer:credi|,jeu:di|,ven:dredi|,sam:edi|',
	  'numerals': 'zéro,un:|e,deux,trois,quatre,cinq,six,sept,huit,neuf,dix',
	  'tokens': "l'|la|le,er",
	  'short':  '{dd}/{MM}/{yyyy}',
	  'medium': '{d} {month} {yyyy}',
	  'long':   '{d} {month} {yyyy} {time}',
	  'full':   '{weekday} {d} {month} {yyyy} {time}',
	  'stamp':  '{dow} {d} {mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{sign} {num} {unit}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'timeMarkers': 'à',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'hier', 'value': -1 },
	    { 'name': 'day', 'src': "aujourd'hui", 'value': 0 },
	    { 'name': 'day', 'src': 'demain', 'value': 1 },
	    { 'name': 'sign', 'src': 'il y a', 'value': -1 },
	    { 'name': 'sign', 'src': "dans|d'ici", 'value': 1 },
	    { 'name': 'shift', 'src': 'derni:èr|er|ère|ere', 'value': -1 },
	    { 'name': 'shift', 'src': 'prochain:|e', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{sign} {num} {unit}',
	    '{0?} {unit:5-7} {shift}'
	  ],
	  'timeParse': [
	    '{day|weekday} {shift?}',
	    '{weekday?},? {0?} {date}{1?} {months}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{0?} {weekday} {shift}',
	    '{weekday?},? {0?} {date}{1?} {months}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "fr" locale.

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Italian locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('it')
	 *
	 */
	addLocale('it', {
	  'plural': true,
	  'units': 'millisecond:o|i,second:o|i,minut:o|i,or:a|e,giorn:o|i,settiman:a|e,mes:e|i,ann:o|i',
	  'months': 'gen:naio|,feb:braio|,mar:zo|,apr:ile|,mag:gio|,giu:gno|,lug:lio|,ago:sto|,set:tembre|,ott:obre|,nov:embre|,dic:embre|',
	  'weekdays': 'dom:enica|,lun:edì||edi,mar:tedì||tedi,mer:coledì||coledi,gio:vedì||vedi,ven:erdì||erdi,sab:ato|',
	  'numerals': "zero,un:|a|o|',due,tre,quattro,cinque,sei,sette,otto,nove,dieci",
	  'tokens': "l'|la|il",
	  'short': '{dd}/{MM}/{yyyy}',
	  'medium': '{d} {month} {yyyy}',
	  'long': '{d} {month} {yyyy} {time}',
	  'full': '{weekday}, {d} {month} {yyyy} {time}',
	  'stamp': '{dow} {d} {mon} {yyyy} {time}',
	  'time': '{H}:{mm}',
	  'past': '{num} {unit} {sign}',
	  'future': '{num} {unit} {sign}',
	  'duration': '{num} {unit}',
	  'timeMarkers': 'alle',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'ieri', 'value': -1 },
	    { 'name': 'day', 'src': 'oggi', 'value': 0 },
	    { 'name': 'day', 'src': 'domani', 'value': 1 },
	    { 'name': 'day', 'src': 'dopodomani', 'value': 2 },
	    { 'name': 'sign', 'src': 'fa', 'value': -1 },
	    { 'name': 'sign', 'src': 'da adesso', 'value': 1 },
	    { 'name': 'shift', 'src': 'scors:o|a', 'value': -1 },
	    { 'name': 'shift', 'src': 'prossim:o|a', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{num} {unit} {sign}',
	    '{0?} {unit:5-7} {shift}',
	    '{0?} {shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift?} {day|weekday}',
	    '{weekday?},? {date} {months?}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift?} {day|weekday}',
	    '{weekday?},? {date} {months?}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "it" locale.

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Japanese locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('ja')
	 *
	 */
	addLocale('ja', {
	  'ampmFront': true,
	  'numeralUnits': true,
	  'allowsFullWidth': true,
	  'timeMarkerOptional': true,
	  'firstDayOfWeek': 0,
	  'firstDayOfWeekYear': 1,
	  'units': 'ミリ秒,秒,分,時間,日,週間|週,ヶ月|ヵ月|月,年|年度',
	  'weekdays': '日:曜日||曜,月:曜日||曜,火:曜日||曜,水:曜日||曜,木:曜日||曜,金:曜日||曜,土:曜日||曜',
	  'numerals': '〇,一,二,三,四,五,六,七,八,九',
	  'placeholders': '十,百,千,万',
	  'timeSuffixes': ',秒,分,時,日,,月,年度?',
	  'short':  '{yyyy}/{MM}/{dd}',
	  'medium': '{yyyy}年{M}月{d}日',
	  'long':   '{yyyy}年{M}月{d}日{time}',
	  'full':   '{yyyy}年{M}月{d}日{time} {weekday}',
	  'stamp':  '{yyyy}年{M}月{d}日 {H}:{mm} {dow}',
	  'time':   '{tt}{h}時{mm}分',
	  'past':   '{num}{unit}{sign}',
	  'future': '{num}{unit}{sign}',
	  'duration': '{num}{unit}',
	  'ampm': '午前,午後',
	  'modifiers': [
	    { 'name': 'day', 'src': '一昨々日|前々々日', 'value': -3 },
	    { 'name': 'day', 'src': '一昨日|おととい|前々日', 'value': -2 },
	    { 'name': 'day', 'src': '昨日|前日', 'value': -1 },
	    { 'name': 'day', 'src': '今日|当日|本日', 'value': 0 },
	    { 'name': 'day', 'src': '明日|翌日|次日', 'value': 1 },
	    { 'name': 'day', 'src': '明後日|翌々日', 'value': 2 },
	    { 'name': 'day', 'src': '明々後日|翌々々日', 'value': 3 },
	    { 'name': 'sign', 'src': '前', 'value': -1 },
	    { 'name': 'sign', 'src': '後', 'value': 1 },
	    { 'name': 'edge', 'src': '始|初日|頭', 'value': -2 },
	    { 'name': 'edge', 'src': '末|尻', 'value': 2 },
	    { 'name': 'edge', 'src': '末日', 'value': 1 },
	    { 'name': 'shift', 'src': '一昨々|前々々', 'value': -3 },
	    { 'name': 'shift', 'src': '一昨|前々|先々', 'value': -2 },
	    { 'name': 'shift', 'src': '先|昨|去|前', 'value': -1 },
	    { 'name': 'shift', 'src': '今|本|当', 'value':  0 },
	    { 'name': 'shift', 'src': '来|明|翌|次', 'value':  1 },
	    { 'name': 'shift', 'src': '明後|翌々|次々|再来|さ来', 'value': 2 },
	    { 'name': 'shift', 'src': '明々後|翌々々', 'value':  3 }
	  ],
	  'parse': [
	    '{month}{edge}',
	    '{num}{unit}{sign}',
	    '{year?}{month}',
	    '{year}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{shift}{unit:5}{weekday?}',
	    '{shift}{unit:7}{month}{edge}',
	    '{shift}{unit:7}{month?}{date?}',
	    '{shift}{unit:6}{edge?}{date?}',
	    '{year?}{month?}{date}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "ja" locale.

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Korean locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('ko')
	 *
	 */
	addLocale('ko', {
	  'ampmFront': true,
	  'numeralUnits': true,
	  'units': '밀리초,초,분,시간,일,주,개월|달,년|해',
	  'weekdays': '일:요일|,월:요일|,화:요일|,수:요일|,목:요일|,금:요일|,토:요일|',
	  'numerals': '영|제로,일|한,이,삼,사,오,육,칠,팔,구,십',
	  'short':  '{yyyy}.{MM}.{dd}',
	  'medium': '{yyyy}년 {M}월 {d}일',
	  'long':   '{yyyy}년 {M}월 {d}일 {time}',
	  'full':   '{yyyy}년 {M}월 {d}일 {weekday} {time}',
	  'stamp':  '{yyyy}년 {M}월 {d}일 {H}:{mm} {dow}',
	  'time':   '{tt} {h}시 {mm}분',
	  'past':   '{num}{unit} {sign}',
	  'future': '{num}{unit} {sign}',
	  'duration': '{num}{unit}',
	  'timeSuffixes': ',초,분,시,일,,월,년',
	  'ampm': '오전,오후',
	  'modifiers': [
	    { 'name': 'day', 'src': '그저께', 'value': -2 },
	    { 'name': 'day', 'src': '어제', 'value': -1 },
	    { 'name': 'day', 'src': '오늘', 'value': 0 },
	    { 'name': 'day', 'src': '내일', 'value': 1 },
	    { 'name': 'day', 'src': '모레', 'value': 2 },
	    { 'name': 'sign', 'src': '전', 'value': -1 },
	    { 'name': 'sign', 'src': '후', 'value':  1 },
	    { 'name': 'shift', 'src': '지난|작', 'value': -1 },
	    { 'name': 'shift', 'src': '이번|올', 'value': 0 },
	    { 'name': 'shift', 'src': '다음|내', 'value': 1 }
	  ],
	  'parse': [
	    '{num}{unit} {sign}',
	    '{shift?} {unit:5-7}',
	    '{year?} {month}',
	    '{year}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{shift} {unit:5?} {weekday}',
	    '{year?} {month?} {date} {weekday?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "ko" locale.

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Dutch locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('nl')
	 *
	 */
	addLocale('nl', {
	  'plural': true,
	  'units': 'milliseconde:|n,seconde:|n,minu:ut|ten,uur,dag:|en,we:ek|ken,maand:|en,jaar',
	  'months': 'jan:uari|,feb:ruari|,maart|mrt,apr:il|,mei,jun:i|,jul:i|,aug:ustus|,sep:tember|,okt:ober|,nov:ember|,dec:ember|',
	  'weekdays': 'zondag|zo,maandag|ma,dinsdag|di,woensdag|wo|woe,donderdag|do,vrijdag|vr|vrij,zaterdag|za',
	  'numerals': 'nul,een,twee,drie,vier,vijf,zes,zeven,acht,negen,tien',
	  'short':  '{dd}-{MM}-{yyyy}',
	  'medium': '{d} {month} {yyyy}',
	  'long':   '{d} {Month} {yyyy} {time}',
	  'full':   '{weekday} {d} {Month} {yyyy} {time}',
	  'stamp':  '{dow} {d} {Mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{num} {unit} {sign}',
	  'future': '{num} {unit} {sign}',
	  'duration': '{num} {unit}',
	  'timeMarkers': "'s,om",
	  'modifiers': [
	    { 'name': 'day', 'src': 'gisteren', 'value': -1 },
	    { 'name': 'day', 'src': 'vandaag', 'value': 0 },
	    { 'name': 'day', 'src': 'morgen', 'value': 1 },
	    { 'name': 'day', 'src': 'overmorgen', 'value': 2 },
	    { 'name': 'sign', 'src': 'geleden', 'value': -1 },
	    { 'name': 'sign', 'src': 'vanaf nu', 'value': 1 },
	    { 'name': 'shift', 'src': 'laatste|vorige|afgelopen', 'value': -1 },
	    { 'name': 'shift', 'src': 'volgend:|e', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{num} {unit} {sign}',
	    '{0?} {unit:5-7} {shift}',
	    '{0?} {shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift?} {day|weekday}',
	    '{weekday?},? {date} {months?}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift?} {day|weekday}',
	    '{weekday?},? {date} {months?}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "nl" locale.

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Norwegian locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('no')
	 *
	 */
	addLocale('no', {
	  'plural': true,
	  'units': 'millisekund:|er,sekund:|er,minutt:|er,tim:e|er,dag:|er,uk:e|er|en,måned:|er|en+maaned:|er|en,år:||et+aar:||et',
	  'months': 'januar,februar,mars,april,mai,juni,juli,august,september,oktober,november,desember',
	  'weekdays': 'søndag|sondag,mandag,tirsdag,onsdag,torsdag,fredag,lørdag|lordag',
	  'numerals': 'en|et,to,tre,fire,fem,seks,sju|syv,åtte,ni,ti',
	  'tokens': 'den,for',
	  'articles': 'den',
	  'short':'d. {d}. {month} {yyyy}',
	  'long': 'den {d}. {month} {yyyy} {H}:{mm}',
	  'full': '{Weekday} den {d}. {month} {yyyy} {H}:{mm}:{ss}',
	  'past': '{num} {unit} {sign}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'forgårs|i forgårs|forgaars|i forgaars', 'value': -2 },
	    { 'name': 'day', 'src': 'i går|igår|i gaar|igaar', 'value': -1 },
	    { 'name': 'day', 'src': 'i dag|idag', 'value': 0 },
	    { 'name': 'day', 'src': 'i morgen|imorgen', 'value': 1 },
	    { 'name': 'day', 'src': 'overimorgen|overmorgen|over i morgen', 'value': 2 },
	    { 'name': 'sign', 'src': 'siden', 'value': -1 },
	    { 'name': 'sign', 'src': 'om', 'value':  1 },
	    { 'name': 'shift', 'src': 'i siste|siste', 'value': -1 },
	    { 'name': 'shift', 'src': 'denne', 'value': 0 },
	    { 'name': 'shift', 'src': 'neste', 'value': 1 }
	  ],
	  'parse': [
	    '{num} {unit} {sign}',
	    '{sign} {num} {unit}',
	    '{1?} {num} {unit} {sign}',
	    '{shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{date} {month}',
	    '{shift} {weekday}',
	    '{0?} {weekday?},? {date?} {month}\\.? {year}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "no" locale.

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Polish locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('pl')
	 *
	 */
	addLocale('pl', {
	  'plural': true,
	  'units': 'milisekund:a|y|,sekund:a|y|,minut:a|y|,godzin:a|y|,dzień|dni|dni,tydzień|tygodnie|tygodni,miesiąc|miesiące|miesięcy,rok|lata|lat',
	  'months': 'sty:cznia||czeń,lut:ego||y,mar:ca||zec,kwi:etnia||ecień,maj:a|,cze:rwca||rwiec,lip:ca||iec,sie:rpnia||rpień,wrz:eśnia||esień,paź:dziernika||dziernik,lis:topada||topad,gru:dnia||dzień',
	  'weekdays': 'nie:dziela||dzielę,pon:iedziałek|,wt:orek|,śr:oda||odę,czw:artek|,piątek|pt,sobota|sb|sobotę',
	  'numerals': 'zero,jeden|jedną,dwa|dwie,trzy,cztery,pięć,sześć,siedem,osiem,dziewięć,dziesięć',
	  'tokens': 'w|we,roku',
	  'short': '{dd}.{MM}.{yyyy}',
	  'medium': '{d} {month} {yyyy}',
	  'long':  '{d} {month} {yyyy} {time}',
	  'full' : '{weekday}, {d} {month} {yyyy} {time}',
	  'stamp': '{dow} {d} {mon} {yyyy} {time}',
	  'time': '{H}:{mm}',
	  'timeMarkers': 'o',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'przedwczoraj', 'value': -2 },
	    { 'name': 'day', 'src': 'wczoraj', 'value': -1 },
	    { 'name': 'day', 'src': 'dzisiaj|dziś', 'value': 0 },
	    { 'name': 'day', 'src': 'jutro', 'value': 1 },
	    { 'name': 'day', 'src': 'pojutrze', 'value': 2 },
	    { 'name': 'sign', 'src': 'temu|przed', 'value': -1 },
	    { 'name': 'sign', 'src': 'za', 'value': 1 },
	    { 'name': 'shift', 'src': 'zeszły|zeszła|ostatni|ostatnia', 'value': -1 },
	    { 'name': 'shift', 'src': 'następny|następna|następnego|przyszły|przyszła|przyszłego', 'value': 1 }
	  ],
	  'relative': function (num, unit, ms, format) {
	    // special cases for relative days
	    var DAY = 4;
	    if (unit === DAY) {
	      if (num === 1 && format === 'past')   return 'wczoraj';
	      if (num === 1 && format === 'future') return 'jutro';
	      if (num === 2 && format === 'past')   return 'przedwczoraj';
	      if (num === 2 && format === 'future') return 'pojutrze';
	    }
	
	    var mult;
	    var last  = +num.toFixed(0).slice(-1);
	    var last2 = +num.toFixed(0).slice(-2);
	    switch (true) {
	      case num === 1:                  mult = 0; break;
	      case last2 >= 12 && last2 <= 14: mult = 2; break;
	      case last  >=  2 && last  <=  4: mult = 1; break;
	      default:                         mult = 2;
	    }
	    var text = this['units'][(mult * 8) + unit];
	    var prefix = num + ' ';
	
	    // changing to accusative case for 'past' and 'future' formats
	    // (only singular feminine unit words are different in accusative, each of which ends with 'a')
	    if ((format === 'past' || format === 'future') && num === 1) {
	      text = text.replace(/a$/, 'ę');
	    }
	
	    text = prefix + text;
	    switch (format) {
	      case 'duration': return text;
	      case 'past':     return text + ' temu';
	      case 'future':   return 'za ' + text;
	    }
	  },
	  'parse': [
	    '{num} {unit} {sign}',
	    '{sign} {num} {unit}',
	    '{months} {year?}',
	    '{shift} {unit:5-7}',
	    '{0} {shift?} {weekday}'
	  ],
	  'timeFrontParse': [
	    '{day|weekday}',
	    '{date} {months} {year?} {1?}',
	    '{0?} {shift?} {weekday}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "pl" locale.

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Portuguese locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('pt')
	 *
	 */
	addLocale('pt', {
	  'plural': true,
	  'units': 'milisegundo:|s,segundo:|s,minuto:|s,hora:|s,dia:|s,semana:|s,mês|mêses|mes|meses,ano:|s',
	  'months': 'jan:eiro|,fev:ereiro|,mar:ço|,abr:il|,mai:o|,jun:ho|,jul:ho|,ago:sto|,set:embro|,out:ubro|,nov:embro|,dez:embro|',
	  'weekdays': 'dom:ingo|,seg:unda-feira|,ter:ça-feira|,qua:rta-feira|,qui:nta-feira|,sex:ta-feira|,sáb:ado||ado',
	  'numerals': 'zero,um:|a,dois|duas,três|tres,quatro,cinco,seis,sete,oito,nove,dez',
	  'tokens': 'a,de',
	  'short':  '{dd}/{MM}/{yyyy}',
	  'medium': '{d} de {Month} de {yyyy}',
	  'long':   '{d} de {Month} de {yyyy} {time}',
	  'full':   '{Weekday}, {d} de {Month} de {yyyy} {time}',
	  'stamp':  '{Dow} {d} {Mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{num} {unit} {sign}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'timeMarkers': 'às',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'anteontem', 'value': -2 },
	    { 'name': 'day', 'src': 'ontem', 'value': -1 },
	    { 'name': 'day', 'src': 'hoje', 'value': 0 },
	    { 'name': 'day', 'src': 'amanh:ã|a', 'value': 1 },
	    { 'name': 'sign', 'src': 'atrás|atras|há|ha', 'value': -1 },
	    { 'name': 'sign', 'src': 'daqui a', 'value': 1 },
	    { 'name': 'shift', 'src': 'passad:o|a', 'value': -1 },
	    { 'name': 'shift', 'src': 'próximo|próxima|proximo|proxima', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {1?} {year?}',
	    '{num} {unit} {sign}',
	    '{sign} {num} {unit}',
	    '{0?} {unit:5-7} {shift}',
	    '{0?} {shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{shift?} {day|weekday}',
	    '{0?} {shift} {weekday}',
	    '{date} {1?} {months?} {1?} {year?}'
	  ],
	  'timeFrontParse': [
	    '{shift?} {day|weekday}',
	    '{date} {1?} {months?} {1?} {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "pt" locale.

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Russian locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('ru')
	 *
	 */
	addLocale('ru', {
	  'firstDayOfWeekYear': 1,
	  'units': 'миллисекунд:а|у|ы|,секунд:а|у|ы|,минут:а|у|ы|,час:||а|ов,день|день|дня|дней,недел:я|ю|и|ь|е,месяц:||а|ев|е,год|год|года|лет|году',
	  'months': 'янв:аря||.|арь,фев:раля||р.|раль,мар:та||т,апр:еля||.|ель,мая|май,июн:я||ь,июл:я||ь,авг:уста||.|уст,сен:тября||т.|тябрь,окт:ября||.|ябрь,ноя:бря||брь,дек:абря||.|абрь',
	  'weekdays': 'воскресенье|вс,понедельник|пн,вторник|вт,среда|ср,четверг|чт,пятница|пт,суббота|сб',
	  'numerals': 'ноль,од:ин|ну,дв:а|е,три,четыре,пять,шесть,семь,восемь,девять,десять',
	  'tokens': 'в|на,г\\.?(?:ода)?',
	  'short':  '{dd}.{MM}.{yyyy}',
	  'medium': '{d} {month} {yyyy} г.',
	  'long':   '{d} {month} {yyyy} г., {time}',
	  'full':   '{weekday}, {d} {month} {yyyy} г., {time}',
	  'stamp':  '{dow} {d} {mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'timeMarkers': 'в',
	  'ampm': ' утра, вечера',
	  'modifiers': [
	    { 'name': 'day', 'src': 'позавчера', 'value': -2 },
	    { 'name': 'day', 'src': 'вчера', 'value': -1 },
	    { 'name': 'day', 'src': 'сегодня', 'value': 0 },
	    { 'name': 'day', 'src': 'завтра', 'value': 1 },
	    { 'name': 'day', 'src': 'послезавтра', 'value': 2 },
	    { 'name': 'sign', 'src': 'назад', 'value': -1 },
	    { 'name': 'sign', 'src': 'через', 'value': 1 },
	    { 'name': 'shift', 'src': 'прошл:ый|ой|ом', 'value': -1 },
	    { 'name': 'shift', 'src': 'следующ:ий|ей|ем', 'value': 1 }
	  ],
	  'relative': function(num, unit, ms, format) {
	    var numberWithUnit, last = num.toString().slice(-1), mult;
	    switch(true) {
	      case num >= 11 && num <= 15: mult = 3; break;
	      case last == 1: mult = 1; break;
	      case last >= 2 && last <= 4: mult = 2; break;
	      default: mult = 3;
	    }
	    numberWithUnit = num + ' ' + this['units'][(mult * 8) + unit];
	    switch(format) {
	      case 'duration':  return numberWithUnit;
	      case 'past':      return numberWithUnit + ' назад';
	      case 'future':    return 'через ' + numberWithUnit;
	    }
	  },
	  'parse': [
	    '{num} {unit} {sign}',
	    '{sign} {num} {unit}',
	    '{months} {year?}',
	    '{0?} {shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{0?} {shift} {weekday}',
	    '{date} {months?} {year?} {1?}'
	  ],
	  'timeFrontParse': [
	    '{0?} {shift} {weekday}',
	    '{date} {months?} {year?} {1?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "ru" locale.

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Swedish locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('sv')
	 *
	 */
	addLocale('sv', {
	  'plural': true,
	  'units': 'millisekund:|er,sekund:|er,minut:|er,timm:e|ar,dag:|ar,veck:a|or|an,månad:|er|en+manad:|er|en,år:||et+ar:||et',
	  'months': 'jan:uari|,feb:ruari|,mar:s|,apr:il|,maj,jun:i|,jul:i|,aug:usti|,sep:tember|,okt:ober|,nov:ember|,dec:ember|',
	  'weekdays': 'sön:dag|+son:dag|,mån:dag||dagen+man:dag||dagen,tis:dag|,ons:dag|,tor:sdag|,fre:dag|,lör:dag||dag',
	  'numerals': 'noll,en|ett,två|tva,tre,fyra,fem,sex,sju,åtta|atta,nio,tio',
	  'tokens': 'den,för|for',
	  'articles': 'den',
	  'short':  '{yyyy}-{MM}-{dd}',
	  'medium': '{d} {month} {yyyy}',
	  'long':   '{d} {month} {yyyy} {time}',
	  'full':   '{weekday} {d} {month} {yyyy} {time}',
	  'stamp':  '{dow} {d} {mon} {yyyy} {time}',
	  'time':   '{H}:{mm}',
	  'past':   '{num} {unit} {sign}',
	  'future': '{sign} {num} {unit}',
	  'duration': '{num} {unit}',
	  'ampm': 'am,pm',
	  'modifiers': [
	    { 'name': 'day', 'src': 'förrgår|i förrgår|iförrgår|forrgar|i forrgar|iforrgar', 'value': -2 },
	    { 'name': 'day', 'src': 'går|i går|igår|gar|i gar|igar', 'value': -1 },
	    { 'name': 'day', 'src': 'dag|i dag|idag', 'value': 0 },
	    { 'name': 'day', 'src': 'morgon|i morgon|imorgon', 'value': 1 },
	    { 'name': 'day', 'src': 'över morgon|övermorgon|i över morgon|i övermorgon|iövermorgon|over morgon|overmorgon|i over morgon|i overmorgon|iovermorgon', 'value': 2 },
	    { 'name': 'sign', 'src': 'sedan|sen', 'value': -1 },
	    { 'name': 'sign', 'src': 'om', 'value':  1 },
	    { 'name': 'shift', 'src': 'i förra|förra|i forra|forra', 'value': -1 },
	    { 'name': 'shift', 'src': 'denna', 'value': 0 },
	    { 'name': 'shift', 'src': 'nästa|nasta', 'value': 1 }
	  ],
	  'parse': [
	    '{months} {year?}',
	    '{num} {unit} {sign}',
	    '{sign} {num} {unit}',
	    '{1?} {num} {unit} {sign}',
	    '{shift} {unit:5-7}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{shift} {weekday}',
	    '{0?} {weekday?},? {date} {months?}\\.? {year?}'
	  ],
	  'timeFrontParse': [
	    '{day|weekday}',
	    '{shift} {weekday}',
	    '{0?} {weekday?},? {date} {months?}\\.? {year?}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "sv" locale.

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Simplified Chinese locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('zh-CN')
	 *
	 */
	addLocale('zh-CN', {
	  'ampmFront': true,
	  'numeralUnits': true,
	  'allowsFullWidth': true,
	  'timeMarkerOptional': true,
	  'units': '毫秒,秒钟,分钟,小时,天,个星期|周,个月,年',
	  'weekdays': '星期日|日|周日|星期天,星期一|一|周一,星期二|二|周二,星期三|三|周三,星期四|四|周四,星期五|五|周五,星期六|六|周六',
	  'numerals': '〇,一,二,三,四,五,六,七,八,九',
	  'placeholders': '十,百,千,万',
	  'short':  '{yyyy}-{MM}-{dd}',
	  'medium': '{yyyy}年{M}月{d}日',
	  'long':   '{yyyy}年{M}月{d}日{time}',
	  'full':   '{yyyy}年{M}月{d}日{weekday}{time}',
	  'stamp':  '{yyyy}年{M}月{d}日{H}:{mm}{dow}',
	  'time':   '{tt}{h}点{mm}分',
	  'past':   '{num}{unit}{sign}',
	  'future': '{num}{unit}{sign}',
	  'duration': '{num}{unit}',
	  'timeSuffixes': ',秒,分钟?,点|时,日|号,,月,年',
	  'ampm': '上午,下午',
	  'modifiers': [
	    { 'name': 'day', 'src': '大前天', 'value': -3 },
	    { 'name': 'day', 'src': '前天', 'value': -2 },
	    { 'name': 'day', 'src': '昨天', 'value': -1 },
	    { 'name': 'day', 'src': '今天', 'value': 0 },
	    { 'name': 'day', 'src': '明天', 'value': 1 },
	    { 'name': 'day', 'src': '后天', 'value': 2 },
	    { 'name': 'day', 'src': '大后天', 'value': 3 },
	    { 'name': 'sign', 'src': '前', 'value': -1 },
	    { 'name': 'sign', 'src': '后', 'value':  1 },
	    { 'name': 'shift', 'src': '上|去', 'value': -1 },
	    { 'name': 'shift', 'src': '这', 'value':  0 },
	    { 'name': 'shift', 'src': '下|明', 'value':  1 }
	  ],
	  'parse': [
	    '{num}{unit}{sign}',
	    '{shift}{unit:5-7}',
	    '{year?}{month}',
	    '{year}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{shift}{weekday}',
	    '{year?}{month?}{date}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "zh-CN" locale.

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var addLocale = __webpack_require__(33);
	
	/*
	 * Traditional Chinese locale definition.
	 * See the readme for customization and more information.
	 * To set this locale globally:
	 *
	 * Sugar.Date.setLocale('zh-TW')
	 *
	 */
	addLocale('zh-TW', {
	  'ampmFront': true,
	  'numeralUnits': true,
	  'allowsFullWidth': true,
	  'timeMarkerOptional': true,
	  'units': '毫秒,秒鐘,分鐘,小時,天,個星期|週,個月,年',
	  'weekdays': '星期日|日|週日|星期天,星期一|一|週一,星期二|二|週二,星期三|三|週三,星期四|四|週四,星期五|五|週五,星期六|六|週六',
	  'numerals': '〇,一,二,三,四,五,六,七,八,九',
	  'placeholders': '十,百,千,万',
	  'short':  '{yyyy}/{MM}/{dd}',
	  'medium': '{yyyy}年{M}月{d}日',
	  'long':   '{yyyy}年{M}月{d}日{time}',
	  'full':   '{yyyy}年{M}月{d}日{weekday}{time}',
	  'stamp':  '{yyyy}年{M}月{d}日{H}:{mm}{dow}',
	  'time':   '{tt}{h}點{mm}分',
	  'past':   '{num}{unit}{sign}',
	  'future': '{num}{unit}{sign}',
	  'duration': '{num}{unit}',
	  'timeSuffixes': ',秒,分鐘?,點|時,日|號,,月,年',
	  'ampm': '上午,下午',
	  'modifiers': [
	    { 'name': 'day', 'src': '大前天', 'value': -3 },
	    { 'name': 'day', 'src': '前天', 'value': -2 },
	    { 'name': 'day', 'src': '昨天', 'value': -1 },
	    { 'name': 'day', 'src': '今天', 'value': 0 },
	    { 'name': 'day', 'src': '明天', 'value': 1 },
	    { 'name': 'day', 'src': '後天', 'value': 2 },
	    { 'name': 'day', 'src': '大後天', 'value': 3 },
	    { 'name': 'sign', 'src': '前', 'value': -1 },
	    { 'name': 'sign', 'src': '後', 'value': 1 },
	    { 'name': 'shift', 'src': '上|去', 'value': -1 },
	    { 'name': 'shift', 'src': '這', 'value':  0 },
	    { 'name': 'shift', 'src': '下|明', 'value':  1 }
	  ],
	  'parse': [
	    '{num}{unit}{sign}',
	    '{shift}{unit:5-7}',
	    '{year?}{month}',
	    '{year}'
	  ],
	  'timeParse': [
	    '{day|weekday}',
	    '{shift}{weekday}',
	    '{year?}{month?}{date}'
	  ]
	});
	
	
	// This package does not export anything as it is
	// simply registering the "zh-TW" locale.

/***/ }
/******/ ])
});
;
//# sourceMappingURL=tablefilter.js.map